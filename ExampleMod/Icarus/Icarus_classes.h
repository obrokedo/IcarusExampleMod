// Class Icarus.AccoladeImpl
// Size: 0x28 (Inherited: 0x28)
#include "Icarus_struct.h"
#include "Engine_classes.h"
#include "Engine_struct.h"
#include "IcarusGenerated_struct.h"
#include "../../UnrealEngineModLoader/UE4/Ue4.hpp"
#include "../../UnrealEngineModLoader/UE4/CoreUObject_structs.hpp"
#include "../../UnrealEngineModLoader/UnrealEngineModLoader/GameInfo/GameInfo.h"
#include "../../UnrealEngineModLoader/UnrealEngineModLoader/Memory/mem.h"
struct UAccoladeImpl : UE4::UObject {

	bool RunAccolade(struct UWorld* WorldContext, struct FAccoladesRowHandle Accolade, int32_t& OutProgress); // Function Icarus.AccoladeImpl.RunAccolade // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1608960
};

// Class Icarus.AccoladesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAccoladesLibrary : UE4::URowLibrary {

	struct FAccoladesRowHandle StructToRowHandle(struct FAccoladesEnum EnumValue); // Function Icarus.AccoladesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1608d50
	struct UE4::FName StructToName(struct FAccoladesEnum EnumValue); // Function Icarus.AccoladesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1608c10
	int32_t StructToInt(struct FAccoladesEnum EnumValue); // Function Icarus.AccoladesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1608ad0
	struct FAccoladesEnum RowHandleToStruct(struct FAccoladesRowHandle RowHandle); // Function Icarus.AccoladesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16087e0
	void RemoveRowFromAccoladesTable(struct UE4::FName Name); // Function Icarus.AccoladesLibrary.RemoveRowFromAccoladesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16086e0
	void RefreshConstants(); // Function Icarus.AccoladesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16086a0
	int32_t NumRows(); // Function Icarus.AccoladesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607dd0
	bool NotEqual_EnumName(struct FAccoladesEnum A, struct UE4::FName B); // Function Icarus.AccoladesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607bf0
	bool NotEqual_EnumEnum(struct FAccoladesEnum A, struct FAccoladesEnum B); // Function Icarus.AccoladesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607a10
	struct FAccoladesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AccoladesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607870
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AccoladesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1607750
	struct FAccoladesRowHandle MakeLiteralAccolades(struct FAccoladesRowHandle RowHandle); // Function Icarus.AccoladesLibrary.MakeLiteralAccolades // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607530
	struct FAccoladesRowHandle MakeAccoladesFromIndex(int32_t Index); // Function Icarus.AccoladesLibrary.MakeAccoladesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16072f0
	struct FAccoladesEnum MakeAccoladesEnum(struct FAccoladesEnum Enum); // Function Icarus.AccoladesLibrary.MakeAccoladesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607270
	struct FAccoladesRowHandle MakeAccolades(struct UE4::FName RowName); // Function Icarus.AccoladesLibrary.MakeAccolades // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16071d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AccoladesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16070b0
	struct FAccoladesEnum IntToStruct(int32_t IntValue); // Function Icarus.AccoladesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1606df0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AccoladesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1606cd0
	void GetAccoladesStruct(struct FAccoladesRowHandle RowHandle, struct FAccoladeData& Accolades, enum class EValid& Paths); // Function Icarus.AccoladesLibrary.GetAccoladesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1606300
	bool EqualEqual_FAccoladesRowHandleFAccoladesRowHandle(struct FAccoladesRowHandle RowHandleA, struct FAccoladesRowHandle RowHandleB); // Function Icarus.AccoladesLibrary.EqualEqual_FAccoladesRowHandleFAccoladesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1605ec0
	bool EqualEqual_EnumEnum(struct FAccoladesEnum A, struct FAccoladesEnum B); // Function Icarus.AccoladesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1605ce0
	struct FAccoladesRowHandle CastToAccoladesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AccoladesLibrary.CastToAccoladesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16058f0
	void BreakAccoladesEnum(struct FAccoladesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AccoladesLibrary.BreakAccoladesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16055b0
	void AddRowToAccoladesTable(struct UE4::FName Name, struct FAccoladeData Data, struct FAccoladesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AccoladesLibrary.AddRowToAccoladesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16050d0
};

// Class Icarus.AccoladesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAccoladesTable : UIcarusDataTable {
};

// Class Icarus.AccoladeSubsystem
// Size: 0xb8 (Inherited: 0x30)
struct UAccoladeSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnAccoladeCompleted; // 0x30(0x10)
	struct FMulticastInlineDelegate OnAccoladeUpdated; // 0x40(0x10)
	struct TArray<struct FAccoladeCompletedState> CompletedAccolades; // 0x50(0x10)
	char pad_60[0x58]; // 0x60(0x58)

	void PostPlayerTrackerInitialized(); // Function Icarus.AccoladeSubsystem.PostPlayerTrackerInitialized // (Final|Native|Public) // @ game+0x1608680
	void OnTrackerUpdated(struct FPlayerTrackersRowHandle Tracker, int32_t OldValue, int32_t NewValue); // Function Icarus.AccoladeSubsystem.OnTrackerUpdated // (Final|Native|Public) // @ game+0x1608390
	void OnTalentUpdated(struct AIcarusPlayerCharacter* Player); // Function Icarus.AccoladeSubsystem.OnTalentUpdated // (Final|Native|Public) // @ game+0x1608300
	bool IsAccoladeCompleted(struct FAccoladesRowHandle& AccoladeRow); // Function Icarus.AccoladeSubsystem.IsAccoladeCompleted // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1606f10
	struct TArray<struct FAccoladesRowHandle> GetSortedIncompleteAccolades(); // Function Icarus.AccoladeSubsystem.GetSortedIncompleteAccolades // (Final|Native|Public|BlueprintCallable) // @ game+0x1606ab0
	struct TArray<struct FAccoladeCompletedState> GetCompletedAccoladesWithProspectID(struct FString ProspectID); // Function Icarus.AccoladeSubsystem.GetCompletedAccoladesWithProspectID // (Final|Native|Public|BlueprintCallable) // @ game+0x1606840
	struct TArray<struct FAccoladeCompletedState> GetCompletedAccolades(); // Function Icarus.AccoladeSubsystem.GetCompletedAccolades // (Final|Native|Public|BlueprintCallable) // @ game+0x1606720
	bool GetAccoladeProgress(struct FAccoladesRowHandle& AccoladeRow, int32_t& CurrentValue, int32_t& MaxValue, struct FDateTime& TimeCompleted); // Function Icarus.AccoladeSubsystem.GetAccoladeProgress // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1606140
	bool DeleteAccoladeSave(struct FPlayerCharacterID& PlayerCharacterID); // Function Icarus.AccoladeSubsystem.DeleteAccoladeSave // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1605c20
	void CheckAgainstCompletedAccolades(); // Function Icarus.AccoladeSubsystem.CheckAgainstCompletedAccolades // (Final|Native|Public) // @ game+0x1605b30
};

// Class Icarus.AccountFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAccountFlagsLibrary : URowLibrary {

	struct FAccountFlagsRowHandle StructToRowHandle(struct FAccountFlagsEnum EnumValue); // Function Icarus.AccountFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1608e00
	struct UE4::FName StructToName(struct FAccountFlagsEnum EnumValue); // Function Icarus.AccountFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1608cb0
	int32_t StructToInt(struct FAccountFlagsEnum EnumValue); // Function Icarus.AccountFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1608b70
	struct FAccountFlagsEnum RowHandleToStruct(struct FAccountFlagsRowHandle RowHandle); // Function Icarus.AccountFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16088a0
	void RemoveRowFromAccountFlagsTable(struct UE4::FName Name); // Function Icarus.AccountFlagsLibrary.RemoveRowFromAccountFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1608760
	void RefreshConstants(); // Function Icarus.AccountFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16086c0
	int32_t NumRows(); // Function Icarus.AccountFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607e00
	bool NotEqual_EnumName(struct FAccountFlagsEnum A, struct UE4::FName B); // Function Icarus.AccountFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607ce0
	bool NotEqual_EnumEnum(struct FAccountFlagsEnum A, struct FAccountFlagsEnum B); // Function Icarus.AccountFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607b00
	struct FAccountFlagsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AccountFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607900
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AccountFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16077e0
	struct FAccountFlagsRowHandle MakeLiteralAccountFlags(struct FAccountFlagsRowHandle RowHandle); // Function Icarus.AccountFlagsLibrary.MakeLiteralAccountFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607600
	struct FAccountFlagsRowHandle MakeAccountFlagsFromIndex(int32_t Index); // Function Icarus.AccountFlagsLibrary.MakeAccountFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16074a0
	struct FAccountFlagsEnum MakeAccountFlagsEnum(struct FAccountFlagsEnum Enum); // Function Icarus.AccountFlagsLibrary.MakeAccountFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607420
	struct FAccountFlagsRowHandle MakeAccountFlags(struct UE4::FName RowName); // Function Icarus.AccountFlagsLibrary.MakeAccountFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1607380
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AccountFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1607140
	struct FAccountFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.AccountFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1606e80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AccountFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1606d60
	void GetAccountFlagsStruct(struct FAccountFlagsRowHandle RowHandle, struct FAccountFlag& AccountFlags, enum class EValid& Paths); // Function Icarus.AccountFlagsLibrary.GetAccountFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1606480
	bool EqualEqual_FAccountFlagsRowHandleFAccountFlagsRowHandle(struct FAccountFlagsRowHandle RowHandleA, struct FAccountFlagsRowHandle RowHandleB); // Function Icarus.AccountFlagsLibrary.EqualEqual_FAccountFlagsRowHandleFAccountFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1606000
	bool EqualEqual_EnumEnum(struct FAccountFlagsEnum A, struct FAccountFlagsEnum B); // Function Icarus.AccountFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1605dd0
	struct FAccountFlagsRowHandle CastToAccountFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AccountFlagsLibrary.CastToAccountFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1605a10
	void BreakAccountFlagsEnum(struct FAccountFlagsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AccountFlagsLibrary.BreakAccountFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1605710
	void AddRowToAccountFlagsTable(struct UE4::FName Name, struct FAccountFlag Data, struct FAccountFlagsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AccountFlagsLibrary.AddRowToAccountFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1605290
};

// Class Icarus.AccountFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAccountFlagsTable : UIcarusDataTable {
};

// Class Icarus.TraitBehaviour
// Size: 0xc0 (Inherited: 0xb0)
struct UTraitBehaviour : UActorComponent {
	struct UTraitBehaviours* OwningComponent; // 0xb0(0x08)
	bool bBehaviourDelegatesBound; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	void OnTraitAnimNotify(struct FAnimNotifyEvent& Notify, struct AActor* AnimInstancePawn); // Function Icarus.TraitBehaviour.OnTraitAnimNotify // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x187c200
	void OnRep_OwningComponent(); // Function Icarus.TraitBehaviour.OnRep_OwningComponent // (Native|Event|Protected|BlueprintEvent) // @ game+0x16450c0
};

// Class Icarus.ActionableBehaviour
// Size: 0x2d0 (Inherited: 0xc0)
struct UActionableBehaviour : UTraitBehaviour {
	struct TArray<enum class EActionableEventType> ActionEventTypes; // 0xc0(0x10)
	struct FActionsRowHandle ActionRowHandle; // 0xd0(0x18)
	struct TMap<enum class EActionableEventType, struct FStaminaActionCostsRowHandle> StaminaCosts; // 0xe8(0x50)
	struct TArray<struct FActionStaminaCostEventPairing> ReplicatedStaminaCosts; // 0x138(0x10)
	struct FMulticastInlineDelegate OnCooldownElapsed; // 0x148(0x10)
	struct FModifierStatesRowHandle ModifierRowHandle; // 0x158(0x18)
	char pad_170[0x50]; // 0x170(0x50)
	struct UCharacterState* OwnerActorState; // 0x1c0(0x08)
	struct AActor* OwnerActor; // 0x1c8(0x08)
	char pad_1D0[0xf8]; // 0x1d0(0xf8)
	struct UIcarusAnimInstance* AnimatingMeshAnimInstance; // 0x2c8(0x08)

	void PerformActionFromMenu(struct AActor* InvokingActor); // Function Icarus.ActionableBehaviour.PerformActionFromMenu // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void PerformAction(struct AActor* InvokingActor, enum class EActionableEventType OnActionType, enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.PerformAction // (Native|Event|Public|BlueprintEvent) // @ game+0x1608570
	void OnUsedFromMenu(struct AActor* InvokingActor); // Function Icarus.ActionableBehaviour.OnUsedFromMenu // (Final|Native|Public) // @ game+0x16084e0
	void OnRep_ReplicatedStaminaCosts(); // Function Icarus.ActionableBehaviour.OnRep_ReplicatedStaminaCosts // (Final|Native|Public) // @ game+0x16082e0
	void OnActionNotify(struct UE4::FName NotifyName); // Function Icarus.ActionableBehaviour.OnActionNotify // (Final|Native|Private) // @ game+0x1608250
	void OnActionInsufficientStamina(enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.OnActionInsufficientStamina // (Native|Event|Public|BlueprintEvent) // @ game+0x16081d0
	void OnActionInsufficientDurability(enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.OnActionInsufficientDurability // (Native|Event|Public|BlueprintEvent) // @ game+0x1608150
	void OnActionHit(struct AActor* InvokingActor, struct UPrimitiveComponent* OverlappedComponent, struct FHitResult& SweepResult); // Function Icarus.ActionableBehaviour.OnActionHit // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1607fc0
	void OnActionAborted(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.OnActionAborted // (Native|Event|Public|BlueprintEvent) // @ game+0x1607f40
	void OnAction(struct AActor* InvokingActor, enum class EActionableEventType OnActionType, enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.OnAction // (Final|Native|Public) // @ game+0x1607e30
	void NetMulti_OnActionInsufficientStamina(enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.NetMulti_OnActionInsufficientStamina // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1607990
	void Multicast_NotifyCurrentActionAborted(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.Multicast_NotifyCurrentActionAborted // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x16076d0
	bool IsActionAborted(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.IsActionAborted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1606fc0
	bool HasCooldownElapsed(enum class EActionableEventType ActionType); // Function Icarus.ActionableBehaviour.HasCooldownElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1606c40
	struct FStaminaCost GetStaminaCostForEventType(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.GetStaminaCostForEventType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1606b30
	struct TArray<struct FRowHandle> GetGenericData(); // Function Icarus.ActionableBehaviour.GetGenericData // (Final|Native|Public|BlueprintCallable) // @ game+0x1606a30
	float GetCooldownSpeedMultiplier(); // Function Icarus.ActionableBehaviour.GetCooldownSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1606a00
	float GetCooldownDuration(); // Function Icarus.ActionableBehaviour.GetCooldownDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16069d0
	struct USkeletalMeshComponent* GetAnimatingMesh(); // Function Icarus.ActionableBehaviour.GetAnimatingMesh // (Native|Event|Public|BlueprintEvent) // @ game+0x16066f0
	bool GetActionData(struct FActionData& OutData); // Function Icarus.ActionableBehaviour.GetActionData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1606600
	struct UActionableComponent* GetActionableComponent(); // Function Icarus.ActionableBehaviour.GetActionableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16066c0
	void CheckCurrentActionAborted(struct UActorState* ActorStateIn, int32_t UID); // Function Icarus.ActionableBehaviour.CheckCurrentActionAborted // (Final|Native|Private) // @ game+0x1605b50
	void CancelStaminaActionForEventType(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.CancelStaminaActionForEventType // (Final|Native|Public|BlueprintCallable) // @ game+0x1605870
	bool BP_ShouldApplyEndStaminaCost(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.BP_ShouldApplyEndStaminaCost // (Native|Event|Public|BlueprintEvent) // @ game+0x16054a0
	void BeginActionCooldown(enum class EActionableEventType ActionableEvent); // Function Icarus.ActionableBehaviour.BeginActionCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x1605530
	void ActionComplete(enum class EActionableEventType ActionType); // Function Icarus.ActionableBehaviour.ActionComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x1605050
	void AbortAction(enum class EActionableEventType EventType, bool bApplyEndActionStaminaCost); // Function Icarus.ActionableBehaviour.AbortAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1604f80
};

// Class Icarus.TraitComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTraitComponent : UActorComponent {
	struct FMulticastSparseDelegate DynamicDataUpdated; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FRowHandle DataRowHandle; // 0xb4(0x18)
	char pad_CC[0x4]; // 0xcc(0x04)

	void OnRep_DataRowHandle(); // Function Icarus.TraitComponent.OnRep_DataRowHandle // (Final|Native|Protected) // @ game+0x187c380
	void OnDataSet(); // Function Icarus.TraitComponent.OnDataSet // (Native|Event|Protected|BlueprintEvent) // @ game+0x16450c0
	void OnAnimNotify(struct FAnimNotifyEvent& Notify, struct AActor* AnimInstancePawn); // Function Icarus.TraitComponent.OnAnimNotify // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x187c200
	struct UTraitComponent* GetTraitClassFromData(struct FRowHandle ItemDataRow); // Function Icarus.TraitComponent.GetTraitClassFromData // (Native|Public) // @ game+0x187aea0
	struct AIcarusItem* GetOwnerIcarusItem(); // Function Icarus.TraitComponent.GetOwnerIcarusItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x187abd0
	struct AIcarusActor* GetOwnerIcarusActor(); // Function Icarus.TraitComponent.GetOwnerIcarusActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x187aba0
};

// Class Icarus.TraitBehaviours
// Size: 0xe8 (Inherited: 0xd0)
struct UTraitBehaviours : UTraitComponent {
	struct FMulticastSparseDelegate OnTraitAnimNotify; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct TArray<struct UTraitBehaviour*> OwnedBehaviours; // 0xd8(0x10)

	void RegisterBehaviour(struct UTraitBehaviour* Behaviour); // Function Icarus.TraitBehaviours.RegisterBehaviour // (Native|Event|Public|BlueprintEvent) // @ game+0x17fa690
	struct UTraitBehaviour* GetFirstBehaviourOfType(struct UTraitBehaviour* Class); // Function Icarus.TraitBehaviours.GetFirstBehaviourOfType // (Final|Native|Public|BlueprintCallable) // @ game+0x187ab00
	struct TArray<struct UTraitBehaviour*> GetBehaviours(); // Function Icarus.TraitBehaviours.GetBehaviours // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x187aa70
	void CreateBehaviours(); // Function Icarus.TraitBehaviours.CreateBehaviours // (Native|Event|Protected|BlueprintEvent) // @ game+0x1613bb0
	struct UTraitBehaviour* CreateBehaviour(struct UTraitBehaviour* BehaviourClass); // Function Icarus.TraitBehaviours.CreateBehaviour // (Final|Native|Protected|BlueprintCallable) // @ game+0x187a570
};

// Class Icarus.ActionableComponent
// Size: 0x158 (Inherited: 0xe8)
struct UActionableComponent : UTraitBehaviours {
	struct FMulticastSparseDelegate OnAction; // 0xe8(0x01)
	struct FMulticastSparseDelegate OnUsedFromMenu; // 0xe9(0x01)
	struct FMulticastSparseDelegate OnActionHit; // 0xea(0x01)
	struct FMulticastSparseDelegate OnAssociatedItemUpdated; // 0xeb(0x01)
	char pad_EC[0x54]; // 0xec(0x54)
	int32_t AssociatedItemInventoryId; // 0x140(0x04)
	int32_t AssociatedItemInventorySlot; // 0x144(0x04)
	int32_t DynamicState; // 0x148(0x04)
	int32_t GunCurrentMagSize; // 0x14c(0x04)
	int32_t CurrentAmmoType; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)

	void UseFromMenu(struct AActor* InvokingActor); // Function Icarus.ActionableComponent.UseFromMenu // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x160f0d0
	void SetNewAssociatedItem(int32_t NewAssociatedItemInventoryId, int32_t NewAssocaitedItemSlot); // Function Icarus.ActionableComponent.SetNewAssociatedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x160eb80
	void SetGunCurrentMagSize(int32_t NewGunCurrentMagSize); // Function Icarus.ActionableComponent.SetGunCurrentMagSize // (Final|Native|Public|BlueprintCallable) // @ game+0x160eaa0
	void SetDynamicState(int32_t NewDynamicState); // Function Icarus.ActionableComponent.SetDynamicState // (Final|Native|Public|BlueprintCallable) // @ game+0x160ea10
	void SetCurrentAmmoType(int32_t NewCurrentAmmoType); // Function Icarus.ActionableComponent.SetCurrentAmmoType // (Final|Native|Public|BlueprintCallable) // @ game+0x160e930
	void SetAssociatedItemInventorySlot(int32_t NewAssociatedItemInventorySlot); // Function Icarus.ActionableComponent.SetAssociatedItemInventorySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x160e800
	void SetAssociatedItemInventoryId(int32_t NewAssociatedItemInventoryId); // Function Icarus.ActionableComponent.SetAssociatedItemInventoryId // (Final|Native|Public|BlueprintCallable) // @ game+0x160e6d0
	void Server_OwningClientActionableHitNamed(struct AActor* InvokingActor, struct AActor* OverlappedComponentOwner, struct UE4::FName OverlappedComponentName, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Server_OwningClientActionableHitNamed // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x160e540
	void Server_OwningClientActionableHit(struct AActor* InvokingActor, struct UPrimitiveComponent* OverlappedComponent, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Server_OwningClientActionableHit // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x160e3c0
	void OnRep_CurrentAmmoType(); // Function Icarus.ActionableComponent.OnRep_CurrentAmmoType // (Final|Native|Public) // @ game+0x160e0e0
	void OnHeldTimerExpired(struct AActor* InvokingActor, enum class EActionableEventType ActionType, bool bClientPrediction); // Function Icarus.ActionableComponent.OnHeldTimerExpired // (Final|Native|Public) // @ game+0x160dfc0
	void Multicast_ActionableHitNamed(struct AActor* InvokingActor, struct AActor* OverlappedComponentOwner, struct UE4::FName OverlappedComponentName, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Multicast_ActionableHitNamed // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x160d7d0
	void Multicast_ActionableHit(struct AActor* InvokingActor, struct UPrimitiveComponent* OverlappedComponent, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Multicast_ActionableHit // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x160d650
	struct UActionableBehaviour* GetBehaviourForActionType(enum class EActionableEventType& EventType); // Function Icarus.ActionableComponent.GetBehaviourForActionType // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x160cd50
	bool GetActionData(struct FActionsRowHandle ActionRowHandle, struct FActionData& OutData); // Function Icarus.ActionableComponent.GetActionData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x160c610
	bool GetActionableData(struct FActionableData& OutData); // Function Icarus.ActionableComponent.GetActionableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x160c7d0
	void Action(struct AActor* InvokingActor, enum class EActionableEventType ActionType, enum class EActionableTrigger ActionTrigger, bool bClientPrediction); // Function Icarus.ActionableComponent.Action // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x160b650
};

// Class Icarus.ActionableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UActionableLibrary : URowLibrary {

	struct FActionableRowHandle StructToRowHandle(struct FActionableEnum EnumValue); // Function Icarus.ActionableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160ef70
	struct UE4::FName StructToName(struct FActionableEnum EnumValue); // Function Icarus.ActionableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160ee30
	int32_t StructToInt(struct FActionableEnum EnumValue); // Function Icarus.ActionableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160ecf0
	struct FActionableEnum RowHandleToStruct(struct FActionableRowHandle RowHandle); // Function Icarus.ActionableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160e240
	void RemoveRowFromActionableTable(struct UE4::FName Name); // Function Icarus.ActionableLibrary.RemoveRowFromActionableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160e140
	void RefreshConstants(); // Function Icarus.ActionableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x160e100
	int32_t NumRows(); // Function Icarus.ActionableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160df60
	bool NotEqual_EnumName(struct FActionableEnum A, struct UE4::FName B); // Function Icarus.ActionableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160dd80
	bool NotEqual_EnumEnum(struct FActionableEnum A, struct FActionableEnum B); // Function Icarus.ActionableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160dba0
	struct FActionableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ActionableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160da80
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ActionableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x160d960
	struct FActionableRowHandle MakeLiteralActionable(struct FActionableRowHandle RowHandle); // Function Icarus.ActionableLibrary.MakeLiteralActionable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d4b0
	struct FActionableRowHandle MakeActionableFromIndex(int32_t Index); // Function Icarus.ActionableLibrary.MakeActionableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d270
	struct FActionableEnum MakeActionableEnum(struct FActionableEnum Enum); // Function Icarus.ActionableLibrary.MakeActionableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d1f0
	struct FActionableRowHandle MakeActionable(struct UE4::FName RowName); // Function Icarus.ActionableLibrary.MakeActionable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d150
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ActionableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x160d030
	struct FActionableEnum IntToStruct(int32_t IntValue); // Function Icarus.ActionableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160cf10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ActionableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x160cdf0
	void GetActionableStruct(struct FActionableRowHandle RowHandle, struct FActionableData& Actionable, enum class EValid& Paths); // Function Icarus.ActionableLibrary.GetActionableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160c9c0
	bool EqualEqual_FActionableRowHandleFActionableRowHandle(struct FActionableRowHandle RowHandleA, struct FActionableRowHandle RowHandleB); // Function Icarus.ActionableLibrary.EqualEqual_FActionableRowHandleFActionableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160c390
	bool EqualEqual_EnumEnum(struct FActionableEnum A, struct FActionableEnum B); // Function Icarus.ActionableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160c1b0
	struct FActionableRowHandle CastToActionableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ActionableLibrary.CastToActionableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160bf70
	void BreakActionableEnum(struct FActionableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ActionableLibrary.BreakActionableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x160bcb0
	void AddRowToActionableTable(struct UE4::FName Name, struct FActionableData Data, struct FActionableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ActionableLibrary.AddRowToActionableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160b7a0
};

// Class Icarus.ActionableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UActionableTable : UIcarusDataTable {
};

// Class Icarus.ActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UActionsLibrary : URowLibrary {

	struct FActionsRowHandle StructToRowHandle(struct FActionsEnum EnumValue); // Function Icarus.ActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160f020
	struct UE4::FName StructToName(struct FActionsEnum EnumValue); // Function Icarus.ActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160eed0
	int32_t StructToInt(struct FActionsEnum EnumValue); // Function Icarus.ActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160ed90
	struct FActionsEnum RowHandleToStruct(struct FActionsRowHandle RowHandle); // Function Icarus.ActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160e300
	void RemoveRowFromActionsTable(struct UE4::FName Name); // Function Icarus.ActionsLibrary.RemoveRowFromActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160e1c0
	void RefreshConstants(); // Function Icarus.ActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x160e120
	int32_t NumRows(); // Function Icarus.ActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160df90
	bool NotEqual_EnumName(struct FActionsEnum A, struct UE4::FName B); // Function Icarus.ActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160de70
	bool NotEqual_EnumEnum(struct FActionsEnum A, struct FActionsEnum B); // Function Icarus.ActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160dc90
	struct FActionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160db10
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x160d9f0
	struct FActionsRowHandle MakeLiteralActions(struct FActionsRowHandle RowHandle); // Function Icarus.ActionsLibrary.MakeLiteralActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d580
	struct FActionsRowHandle MakeActionsFromIndex(int32_t Index); // Function Icarus.ActionsLibrary.MakeActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d420
	struct FActionsEnum MakeActionsEnum(struct FActionsEnum Enum); // Function Icarus.ActionsLibrary.MakeActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d3a0
	struct FActionsRowHandle MakeActions(struct UE4::FName RowName); // Function Icarus.ActionsLibrary.MakeActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160d300
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x160d0c0
	struct FActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.ActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160cfa0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x160ce80
	void GetActionsStruct(struct FActionsRowHandle RowHandle, struct FActionData& Actions, enum class EValid& Paths); // Function Icarus.ActionsLibrary.GetActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160cbd0
	bool EqualEqual_FActionsRowHandleFActionsRowHandle(struct FActionsRowHandle RowHandleA, struct FActionsRowHandle RowHandleB); // Function Icarus.ActionsLibrary.EqualEqual_FActionsRowHandleFActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160c4d0
	bool EqualEqual_EnumEnum(struct FActionsEnum A, struct FActionsEnum B); // Function Icarus.ActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160c2a0
	struct FActionsRowHandle CastToActionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ActionsLibrary.CastToActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160c090
	void BreakActionsEnum(struct FActionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ActionsLibrary.BreakActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x160be10
	void AddRowToActionsTable(struct UE4::FName Name, struct FActionData Data, struct FActionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ActionsLibrary.AddRowToActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160baf0
};

// Class Icarus.ActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UActionsTable : UIcarusDataTable {
};

// Class Icarus.ActorState
// Size: 0x228 (Inherited: 0xb0)
struct UActorState : UActorComponent {
	struct FIcarusDamagePacket LastDamagePacket; // 0xb0(0xc8)
	bool bKeepRecentDamageEvents; // 0x178(0x01)
	char pad_179[0x3]; // 0x179(0x03)
	float RecentDamageLifetime; // 0x17c(0x04)
	struct TArray<struct FIcarusDamagePacket> RecentDamagePackets; // 0x180(0x10)
	char pad_190[0x10]; // 0x190(0x10)
	struct FMulticastInlineDelegate OnActorStateReady; // 0x1a0(0x10)
	struct FMulticastSparseDelegate OnActorDeath; // 0x1b0(0x01)
	struct FMulticastSparseDelegate OnAliveStateChanged; // 0x1b1(0x01)
	struct FMulticastSparseDelegate OnDamaged; // 0x1b2(0x01)
	struct FMulticastSparseDelegate OnHealthUpdated; // 0x1b3(0x01)
	struct FMulticastSparseDelegate OnShelterUpdated; // 0x1b4(0x01)
	struct FMulticastSparseDelegate BiomeUpdated; // 0x1b5(0x01)
	struct FMulticastSparseDelegate OnActorDamaged; // 0x1b6(0x01)
	char pad_1B7[0x1]; // 0x1b7(0x01)
	int32_t Health; // 0x1b8(0x04)
	int32_t MaxHealth; // 0x1bc(0x04)
	float Shelter; // 0x1c0(0x04)
	int32_t ExternalTemperature; // 0x1c4(0x04)
	int32_t ModifiedExternalTemperature; // 0x1c8(0x04)
	int32_t ModifiedInternalTemperature; // 0x1cc(0x04)
	struct FBiomesRowHandle CurrentBiome; // 0x1d0(0x18)
	enum class EAliveState CurrentAliveState; // 0x1e8(0x01)
	char pad_1E9[0x7]; // 0x1e9(0x07)
	struct UIcarusStatContainer* OwnerStatContainer; // 0x1f0(0x08)
	char pad_1F8[0xc]; // 0x1f8(0x0c)
	struct FBiomesRowHandle BiomeOverride; // 0x204(0x18)
	bool BlockBiomeUpdate; // 0x21c(0x01)
	char pad_21D[0x7]; // 0x21d(0x07)
	bool bHasHealthRegen; // 0x224(0x01)
	char pad_225[0x3]; // 0x225(0x03)

	void WeatherTimeTick(float Delta); // Function Icarus.ActorState.WeatherTimeTick // (Final|Native|Private) // @ game+0x1614350
	void TakeDamage(struct FIcarusDamagePacket DamagePacket); // Function Icarus.ActorState.TakeDamage // (Final|Native|Public) // @ game+0x16141a0
	void StatContainerUpdated(); // Function Icarus.ActorState.StatContainerUpdated // (Native|Public) // @ game+0x1613f90
	void SetShelter(float Amount); // Function Icarus.ActorState.SetShelter // (Final|Native|Public|BlueprintCallable) // @ game+0x1613f10
	void SetHealth(int32_t Amount); // Function Icarus.ActorState.SetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1613e80
	void SetBlockBiomeUpdate(bool bLock); // Function Icarus.ActorState.SetBlockBiomeUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1613df0
	void SetBiomeOverride(struct FBiomesRowHandle Biome); // Function Icarus.ActorState.SetBiomeOverride // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1613d40
	void SetBiome(struct FBiomesRowHandle Biome); // Function Icarus.ActorState.SetBiome // (Final|Native|Public) // @ game+0x1613c90
	void Respawn(); // Function Icarus.ActorState.Respawn // (Native|Public|BlueprintCallable) // @ game+0x1613bb0
	void RequestClientsideBiomeUpdate(); // Function Icarus.ActorState.RequestClientsideBiomeUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1613b90
	void RequestBiomeUpdate(); // Function Icarus.ActorState.RequestBiomeUpdate // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1613b90
	void RegenTick(float DeltaTime); // Function Icarus.ActorState.RegenTick // (Native|Public) // @ game+0x1613a80
	void RecalculateHealthRegenRate(); // Function Icarus.ActorState.RecalculateHealthRegenRate // (Final|Native|Protected) // @ game+0x1613a40
	void RecalculateCurrentHealth(); // Function Icarus.ActorState.RecalculateCurrentHealth // (Final|Native|Protected) // @ game+0x1613a20
	void OnRep_Health(); // Function Icarus.ActorState.OnRep_Health // (Final|Native|Protected) // @ game+0x1613a00
	void OnRep_CurrentBiome(); // Function Icarus.ActorState.OnRep_CurrentBiome // (Final|Native|Protected) // @ game+0x16139e0
	void OnRep_CurrentAliveState(); // Function Icarus.ActorState.OnRep_CurrentAliveState // (Final|Native|Protected) // @ game+0x16139c0
	void OnCurrentBiomeUpdated(struct FBiomesRowHandle& NewBiome); // Function Icarus.ActorState.OnCurrentBiomeUpdated // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1613910
	void Multicast_OnDamaged(int32_t InDamage, struct FDamageEvent DamageEvent, struct AController* Instigator, struct AActor* DamageCauser); // Function Icarus.ActorState.Multicast_OnDamaged // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1613480
	void Kill(); // Function Icarus.ActorState.Kill // (Final|Native|Public|BlueprintCallable) // @ game+0x16131e0
	bool IsAlive(); // Function Icarus.ActorState.IsAlive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1613120
	void InternalTick(float DeltaTime); // Function Icarus.ActorState.InternalTick // (Native|Protected) // @ game+0x1613090
	float GetTotalRecentDamage(float Duration); // Function Icarus.ActorState.GetTotalRecentDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1612ed0
	float GetShelter(); // Function Icarus.ActorState.GetShelter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1612ea0
	float GetRecentDamageCausedByController(struct AController* DamageInstigator, float Duration); // Function Icarus.ActorState.GetRecentDamageCausedByController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1612dd0
	float GetRecentDamageCausedByActor(struct AActor* DamageCauser, float Duration); // Function Icarus.ActorState.GetRecentDamageCausedByActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1612d00
	int32_t GetMaxHealth(); // Function Icarus.ActorState.GetMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1612cd0
	int32_t GetHealth(); // Function Icarus.ActorState.GetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1612ca0
	int32_t GetEnvironmentalTemperature(); // Function Icarus.ActorState.GetEnvironmentalTemperature // (Final|Native|Public) // @ game+0x1612c70
	struct FBoxSphereBounds GetBoundsForTemperatureEffect(); // Function Icarus.ActorState.GetBoundsForTemperatureEffect // (Native|Public|HasDefaults|Const) // @ game+0x1612c20
	int32_t ConsumeNextUID(); // Function Icarus.ActorState.ConsumeNextUID // (Final|Native|Public) // @ game+0x1612830
	bool CanRegenerateHealth(); // Function Icarus.ActorState.CanRegenerateHealth // (Native|Public|Const) // @ game+0x16126e0
	void AddHealth(int32_t Amount); // Function Icarus.ActorState.AddHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1612270
};

// Class Icarus.IcarusStateRecorderComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UIcarusStateRecorderComponent : UActorComponent {
	bool bBeginRecordingImmediately; // 0xb0(0x01)
	bool bRetainOnDestroy; // 0xb1(0x01)
	enum class EStateRecorderOwnerResolvePolicy OwnerResolvePolicy; // 0xb2(0x01)
	char pad_B3[0x1]; // 0xb3(0x01)
	struct UE4::FName ActorClassName; // 0xb4(0x08)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct FString ActorPathName; // 0xc0(0x10)
	bool bIsRecordingGameState; // 0xd0(0x01)
	bool bHasRecordedValidState; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)

	void OnResolvedOwnerEndPlay(struct AActor* ResolvedOwner, enum class EEndPlayReason EndPlayReason); // Function Icarus.IcarusStateRecorderComponent.OnResolvedOwnerEndPlay // (Final|Native|Public) // @ game+0x17705a0
	void EndRecording(); // Function Icarus.IcarusStateRecorderComponent.EndRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x176fcb0
	void BeginRecording(); // Function Icarus.IcarusStateRecorderComponent.BeginRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x176fc70
};

// Class Icarus.ActorStateRecorderComponent
// Size: 0x160 (Inherited: 0xd8)
struct UActorStateRecorderComponent : UIcarusStateRecorderComponent {
	bool bSaveModifiers; // 0xd8(0x01)
	char pad_D9[0x3]; // 0xd9(0x03)
	int32_t ActorStateRecorderVersion; // 0xdc(0x04)
	struct FTransform ActorTransform; // 0xe0(0x30)
	struct TArray<struct FInventorySaveData> SavedInventories; // 0x110(0x10)
	struct FFLODActorComponentSaveData FLODComponentData; // 0x120(0x1c)
	int32_t IcarusActorGUID; // 0x13c(0x04)
	struct UE4::FName ObjectFName; // 0x140(0x08)
	struct TArray<struct FModifierStateSaveData> Modifiers; // 0x148(0x10)
	char pad_158[0x8]; // 0x158(0x08)
};

// Class Icarus.AfflictionChanceLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAfflictionChanceLibrary : URowLibrary {

	struct FAfflictionChanceRowHandle StructToRowHandle(struct FAfflictionChanceEnum EnumValue); // Function Icarus.AfflictionChanceLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16140f0
	struct UE4::FName StructToName(struct FAfflictionChanceEnum EnumValue); // Function Icarus.AfflictionChanceLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1614050
	int32_t StructToInt(struct FAfflictionChanceEnum EnumValue); // Function Icarus.AfflictionChanceLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613fb0
	struct FAfflictionChanceEnum RowHandleToStruct(struct FAfflictionChanceRowHandle RowHandle); // Function Icarus.AfflictionChanceLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613bd0
	void RemoveRowFromAfflictionChanceTable(struct UE4::FName Name); // Function Icarus.AfflictionChanceLibrary.RemoveRowFromAfflictionChanceTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1613b10
	void RefreshConstants(); // Function Icarus.AfflictionChanceLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1613a60
	int32_t NumRows(); // Function Icarus.AfflictionChanceLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16138e0
	bool NotEqual_EnumName(struct FAfflictionChanceEnum A, struct UE4::FName B); // Function Icarus.AfflictionChanceLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16137f0
	bool NotEqual_EnumEnum(struct FAfflictionChanceEnum A, struct FAfflictionChanceEnum B); // Function Icarus.AfflictionChanceLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613700
	struct FAfflictionChanceEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AfflictionChanceLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613670
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AfflictionChanceLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16135e0
	struct FAfflictionChanceRowHandle MakeLiteralAfflictionChance(struct FAfflictionChanceRowHandle RowHandle); // Function Icarus.AfflictionChanceLibrary.MakeLiteralAfflictionChance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16133b0
	struct FAfflictionChanceRowHandle MakeAfflictionChanceFromIndex(int32_t Index); // Function Icarus.AfflictionChanceLibrary.MakeAfflictionChanceFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613320
	struct FAfflictionChanceEnum MakeAfflictionChanceEnum(struct FAfflictionChanceEnum Enum); // Function Icarus.AfflictionChanceLibrary.MakeAfflictionChanceEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16132a0
	struct FAfflictionChanceRowHandle MakeAfflictionChance(struct UE4::FName RowName); // Function Icarus.AfflictionChanceLibrary.MakeAfflictionChance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613200
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AfflictionChanceLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1613150
	struct FAfflictionChanceEnum IntToStruct(int32_t IntValue); // Function Icarus.AfflictionChanceLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1613000
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AfflictionChanceLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1612f70
	void GetAfflictionChanceStruct(struct FAfflictionChanceRowHandle RowHandle, struct FAfflictionChance& AfflictionChance, enum class EValid& Paths); // Function Icarus.AfflictionChanceLibrary.GetAfflictionChanceStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612a90
	bool EqualEqual_FAfflictionChanceRowHandleFAfflictionChanceRowHandle(struct FAfflictionChanceRowHandle RowHandleA, struct FAfflictionChanceRowHandle RowHandleB); // Function Icarus.AfflictionChanceLibrary.EqualEqual_FAfflictionChanceRowHandleFAfflictionChanceRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1612950
	bool EqualEqual_EnumEnum(struct FAfflictionChanceEnum A, struct FAfflictionChanceEnum B); // Function Icarus.AfflictionChanceLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1612860
	struct FAfflictionChanceRowHandle CastToAfflictionChanceRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AfflictionChanceLibrary.CastToAfflictionChanceRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612710
	void BreakAfflictionChanceEnum(struct FAfflictionChanceEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AfflictionChanceLibrary.BreakAfflictionChanceEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1612580
	void AddRowToAfflictionChanceTable(struct UE4::FName Name, struct FAfflictionChance Data, struct FAfflictionChanceRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AfflictionChanceLibrary.AddRowToAfflictionChanceTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612300
};

// Class Icarus.AfflictionChanceTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAfflictionChanceTable : UIcarusDataTable {
};

// Class Icarus.AIAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIAudioDataLibrary : URowLibrary {

	struct FAIAudioDataRowHandle StructToRowHandle(struct FAIAudioDataEnum EnumValue); // Function Icarus.AIAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619b40
	struct UE4::FName StructToName(struct FAIAudioDataEnum EnumValue); // Function Icarus.AIAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619960
	int32_t StructToInt(struct FAIAudioDataEnum EnumValue); // Function Icarus.AIAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619780
	struct FAIAudioDataEnum RowHandleToStruct(struct FAIAudioDataRowHandle RowHandle); // Function Icarus.AIAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619540
	void RemoveRowFromAIAudioDataTable(struct UE4::FName Name); // Function Icarus.AIAudioDataLibrary.RemoveRowFromAIAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16193c0
	void RefreshConstants(); // Function Icarus.AIAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1619360
	int32_t NumRows(); // Function Icarus.AIAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16192d0
	bool NotEqual_EnumName(struct FAIAudioDataEnum A, struct UE4::FName B); // Function Icarus.AIAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619000
	bool NotEqual_EnumEnum(struct FAIAudioDataEnum A, struct FAIAudioDataEnum B); // Function Icarus.AIAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618d30
	struct FAIAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AIAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618b80
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AIAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16189d0
	struct FAIAudioDataRowHandle MakeLiteralAIAudioData(struct FAIAudioDataRowHandle RowHandle); // Function Icarus.AIAudioDataLibrary.MakeLiteralAIAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618760
	struct FAIAudioDataRowHandle MakeAIAudioDataFromIndex(int32_t Index); // Function Icarus.AIAudioDataLibrary.MakeAIAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618370
	struct FAIAudioDataEnum MakeAIAudioDataEnum(struct FAIAudioDataEnum Enum); // Function Icarus.AIAudioDataLibrary.MakeAIAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16182f0
	struct FAIAudioDataRowHandle MakeAIAudioData(struct UE4::FName RowName); // Function Icarus.AIAudioDataLibrary.MakeAIAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618250
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AIAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16180a0
	struct FAIAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.AIAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617ef0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AIAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1617d40
	void GetAIAudioDataStruct(struct FAIAudioDataRowHandle RowHandle, struct FAIAudioData& AIAudioData, enum class EValid& Paths); // Function Icarus.AIAudioDataLibrary.GetAIAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16177f0
	bool EqualEqual_FAIAudioDataRowHandleFAIAudioDataRowHandle(struct FAIAudioDataRowHandle RowHandleA, struct FAIAudioDataRowHandle RowHandleB); // Function Icarus.AIAudioDataLibrary.EqualEqual_FAIAudioDataRowHandleFAIAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617430
	bool EqualEqual_EnumEnum(struct FAIAudioDataEnum A, struct FAIAudioDataEnum B); // Function Icarus.AIAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617160
	struct FAIAudioDataRowHandle CastToAIAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AIAudioDataLibrary.CastToAIAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616e00
	void BreakAIAudioDataEnum(struct FAIAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AIAudioDataLibrary.BreakAIAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16169e0
	void AddRowToAIAudioDataTable(struct UE4::FName Name, struct FAIAudioData Data, struct FAIAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AIAudioDataLibrary.AddRowToAIAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616240
};

// Class Icarus.AIAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIAudioDataTable : UIcarusDataTable {
};

// Class Icarus.AICreatureTypeLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAICreatureTypeLibrary : URowLibrary {

	struct FAICreatureTypeRowHandle StructToRowHandle(struct FAICreatureTypeEnum EnumValue); // Function Icarus.AICreatureTypeLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619bf0
	struct UE4::FName StructToName(struct FAICreatureTypeEnum EnumValue); // Function Icarus.AICreatureTypeLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619a00
	int32_t StructToInt(struct FAICreatureTypeEnum EnumValue); // Function Icarus.AICreatureTypeLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619820
	struct FAICreatureTypeEnum RowHandleToStruct(struct FAICreatureTypeRowHandle RowHandle); // Function Icarus.AICreatureTypeLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619600
	void RemoveRowFromAICreatureTypeTable(struct UE4::FName Name); // Function Icarus.AICreatureTypeLibrary.RemoveRowFromAICreatureTypeTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1619440
	void RefreshConstants(); // Function Icarus.AICreatureTypeLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1619380
	int32_t NumRows(); // Function Icarus.AICreatureTypeLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619300
	bool NotEqual_EnumName(struct FAICreatureTypeEnum A, struct UE4::FName B); // Function Icarus.AICreatureTypeLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16190f0
	bool NotEqual_EnumEnum(struct FAICreatureTypeEnum A, struct FAICreatureTypeEnum B); // Function Icarus.AICreatureTypeLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618e20
	struct FAICreatureTypeEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AICreatureTypeLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618c10
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AICreatureTypeLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1618a60
	struct FAICreatureTypeRowHandle MakeLiteralAICreatureType(struct FAICreatureTypeRowHandle RowHandle); // Function Icarus.AICreatureTypeLibrary.MakeLiteralAICreatureType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618830
	struct FAICreatureTypeRowHandle MakeAICreatureTypeFromIndex(int32_t Index); // Function Icarus.AICreatureTypeLibrary.MakeAICreatureTypeFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618520
	struct FAICreatureTypeEnum MakeAICreatureTypeEnum(struct FAICreatureTypeEnum Enum); // Function Icarus.AICreatureTypeLibrary.MakeAICreatureTypeEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16184a0
	struct FAICreatureTypeRowHandle MakeAICreatureType(struct UE4::FName RowName); // Function Icarus.AICreatureTypeLibrary.MakeAICreatureType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618400
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AICreatureTypeLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1618130
	struct FAICreatureTypeEnum IntToStruct(int32_t IntValue); // Function Icarus.AICreatureTypeLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617f80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AICreatureTypeLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1617dd0
	void GetAICreatureTypeStruct(struct FAICreatureTypeRowHandle RowHandle, struct FAICreatureType& AICreatureType, enum class EValid& Paths); // Function Icarus.AICreatureTypeLibrary.GetAICreatureTypeStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617990
	bool EqualEqual_FAICreatureTypeRowHandleFAICreatureTypeRowHandle(struct FAICreatureTypeRowHandle RowHandleA, struct FAICreatureTypeRowHandle RowHandleB); // Function Icarus.AICreatureTypeLibrary.EqualEqual_FAICreatureTypeRowHandleFAICreatureTypeRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617570
	bool EqualEqual_EnumEnum(struct FAICreatureTypeEnum A, struct FAICreatureTypeEnum B); // Function Icarus.AICreatureTypeLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617250
	struct FAICreatureTypeRowHandle CastToAICreatureTypeRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AICreatureTypeLibrary.CastToAICreatureTypeRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616f20
	void BreakAICreatureTypeEnum(struct FAICreatureTypeEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AICreatureTypeLibrary.BreakAICreatureTypeEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1616b40
	void AddRowToAICreatureTypeTable(struct UE4::FName Name, struct FAICreatureType Data, struct FAICreatureTypeRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AICreatureTypeLibrary.AddRowToAICreatureTypeTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616420
};

// Class Icarus.AICreatureTypeTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAICreatureTypeTable : UIcarusDataTable {
};

// Class Icarus.AIDescriptorsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIDescriptorsLibrary : URowLibrary {

	struct FAIDescriptorsRowHandle StructToRowHandle(struct FAIDescriptorsEnum EnumValue); // Function Icarus.AIDescriptorsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619ca0
	struct UE4::FName StructToName(struct FAIDescriptorsEnum EnumValue); // Function Icarus.AIDescriptorsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619aa0
	int32_t StructToInt(struct FAIDescriptorsEnum EnumValue); // Function Icarus.AIDescriptorsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16198c0
	struct FAIDescriptorsEnum RowHandleToStruct(struct FAIDescriptorsRowHandle RowHandle); // Function Icarus.AIDescriptorsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16196c0
	void RemoveRowFromAIDescriptorsTable(struct UE4::FName Name); // Function Icarus.AIDescriptorsLibrary.RemoveRowFromAIDescriptorsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16194c0
	void RefreshConstants(); // Function Icarus.AIDescriptorsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16193a0
	int32_t NumRows(); // Function Icarus.AIDescriptorsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1619330
	bool NotEqual_EnumName(struct FAIDescriptorsEnum A, struct UE4::FName B); // Function Icarus.AIDescriptorsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16191e0
	bool NotEqual_EnumEnum(struct FAIDescriptorsEnum A, struct FAIDescriptorsEnum B); // Function Icarus.AIDescriptorsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618f10
	struct FAIDescriptorsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AIDescriptorsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618ca0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AIDescriptorsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1618af0
	struct FAIDescriptorsRowHandle MakeLiteralAIDescriptors(struct FAIDescriptorsRowHandle RowHandle); // Function Icarus.AIDescriptorsLibrary.MakeLiteralAIDescriptors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618900
	struct FAIDescriptorsRowHandle MakeAIDescriptorsFromIndex(int32_t Index); // Function Icarus.AIDescriptorsLibrary.MakeAIDescriptorsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16186d0
	struct FAIDescriptorsEnum MakeAIDescriptorsEnum(struct FAIDescriptorsEnum Enum); // Function Icarus.AIDescriptorsLibrary.MakeAIDescriptorsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618650
	struct FAIDescriptorsRowHandle MakeAIDescriptors(struct UE4::FName RowName); // Function Icarus.AIDescriptorsLibrary.MakeAIDescriptors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16185b0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AIDescriptorsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16181c0
	struct FAIDescriptorsEnum IntToStruct(int32_t IntValue); // Function Icarus.AIDescriptorsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1618010
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AIDescriptorsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1617e60
	void GetAIDescriptorsStruct(struct FAIDescriptorsRowHandle RowHandle, struct FAIDescriptor& AIDescriptors, enum class EValid& Paths); // Function Icarus.AIDescriptorsLibrary.GetAIDescriptorsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617b80
	bool EqualEqual_FAIDescriptorsRowHandleFAIDescriptorsRowHandle(struct FAIDescriptorsRowHandle RowHandleA, struct FAIDescriptorsRowHandle RowHandleB); // Function Icarus.AIDescriptorsLibrary.EqualEqual_FAIDescriptorsRowHandleFAIDescriptorsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16176b0
	bool EqualEqual_EnumEnum(struct FAIDescriptorsEnum A, struct FAIDescriptorsEnum B); // Function Icarus.AIDescriptorsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1617340
	struct FAIDescriptorsRowHandle CastToAIDescriptorsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AIDescriptorsLibrary.CastToAIDescriptorsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617040
	void BreakAIDescriptorsEnum(struct FAIDescriptorsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AIDescriptorsLibrary.BreakAIDescriptorsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1616ca0
	void AddRowToAIDescriptorsTable(struct UE4::FName Name, struct FAIDescriptor Data, struct FAIDescriptorsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AIDescriptorsLibrary.AddRowToAIDescriptorsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616700
};

// Class Icarus.AIDescriptorsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIDescriptorsTable : UIcarusDataTable {
};

// Class Icarus.AIGrowthLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIGrowthLibrary : URowLibrary {

	struct FAIGrowthRowHandle StructToRowHandle(struct FAIGrowthEnum EnumValue); // Function Icarus.AIGrowthLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fee0
	struct UE4::FName StructToName(struct FAIGrowthEnum EnumValue); // Function Icarus.AIGrowthLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fd00
	int32_t StructToInt(struct FAIGrowthEnum EnumValue); // Function Icarus.AIGrowthLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fb20
	struct FAIGrowthEnum RowHandleToStruct(struct FAIGrowthRowHandle RowHandle); // Function Icarus.AIGrowthLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f8e0
	void RemoveRowFromAIGrowthTable(struct UE4::FName Name); // Function Icarus.AIGrowthLibrary.RemoveRowFromAIGrowthTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161f760
	void RefreshConstants(); // Function Icarus.AIGrowthLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x161f700
	int32_t NumRows(); // Function Icarus.AIGrowthLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f670
	bool NotEqual_EnumName(struct FAIGrowthEnum A, struct UE4::FName B); // Function Icarus.AIGrowthLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f3a0
	bool NotEqual_EnumEnum(struct FAIGrowthEnum A, struct FAIGrowthEnum B); // Function Icarus.AIGrowthLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f0d0
	struct FAIGrowthEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AIGrowthLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161ef20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AIGrowthLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x161ed70
	struct FAIGrowthRowHandle MakeLiteralAIGrowth(struct FAIGrowthRowHandle RowHandle); // Function Icarus.AIGrowthLibrary.MakeLiteralAIGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161eb00
	struct FAIGrowthRowHandle MakeAIGrowthFromIndex(int32_t Index); // Function Icarus.AIGrowthLibrary.MakeAIGrowthFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e710
	struct FAIGrowthEnum MakeAIGrowthEnum(struct FAIGrowthEnum Enum); // Function Icarus.AIGrowthLibrary.MakeAIGrowthEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e690
	struct FAIGrowthRowHandle MakeAIGrowth(struct UE4::FName RowName); // Function Icarus.AIGrowthLibrary.MakeAIGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e5f0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AIGrowthLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x161e440
	struct FAIGrowthEnum IntToStruct(int32_t IntValue); // Function Icarus.AIGrowthLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e290
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AIGrowthLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x161e0e0
	void GetAIGrowthStruct(struct FAIGrowthRowHandle RowHandle, struct FAIGrowth& AIGrowth, enum class EValid& Paths); // Function Icarus.AIGrowthLibrary.GetAIGrowthStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161db60
	bool EqualEqual_FAIGrowthRowHandleFAIGrowthRowHandle(struct FAIGrowthRowHandle RowHandleA, struct FAIGrowthRowHandle RowHandleB); // Function Icarus.AIGrowthLibrary.EqualEqual_FAIGrowthRowHandleFAIGrowthRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161d7a0
	bool EqualEqual_EnumEnum(struct FAIGrowthEnum A, struct FAIGrowthEnum B); // Function Icarus.AIGrowthLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161d4d0
	struct FAIGrowthRowHandle CastToAIGrowthRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AIGrowthLibrary.CastToAIGrowthRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161d170
	void BreakAIGrowthEnum(struct FAIGrowthEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AIGrowthLibrary.BreakAIGrowthEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x161cd50
	void AddRowToAIGrowthTable(struct UE4::FName Name, struct FAIGrowth Data, struct FAIGrowthRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AIGrowthLibrary.AddRowToAIGrowthTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161c490
};

// Class Icarus.AIGrowthTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIGrowthTable : UIcarusDataTable {
};

// Class Icarus.AIRelationshipsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIRelationshipsLibrary : URowLibrary {

	struct FAIRelationshipsRowHandle StructToRowHandle(struct FAIRelationshipsEnum EnumValue); // Function Icarus.AIRelationshipsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161ff90
	struct UE4::FName StructToName(struct FAIRelationshipsEnum EnumValue); // Function Icarus.AIRelationshipsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fda0
	int32_t StructToInt(struct FAIRelationshipsEnum EnumValue); // Function Icarus.AIRelationshipsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fbc0
	struct FAIRelationshipsEnum RowHandleToStruct(struct FAIRelationshipsRowHandle RowHandle); // Function Icarus.AIRelationshipsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f9a0
	void RemoveRowFromAIRelationshipsTable(struct UE4::FName Name); // Function Icarus.AIRelationshipsLibrary.RemoveRowFromAIRelationshipsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161f7e0
	void RefreshConstants(); // Function Icarus.AIRelationshipsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x161f720
	int32_t NumRows(); // Function Icarus.AIRelationshipsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f6a0
	bool NotEqual_EnumName(struct FAIRelationshipsEnum A, struct UE4::FName B); // Function Icarus.AIRelationshipsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f490
	bool NotEqual_EnumEnum(struct FAIRelationshipsEnum A, struct FAIRelationshipsEnum B); // Function Icarus.AIRelationshipsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f1c0
	struct FAIRelationshipsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AIRelationshipsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161efb0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AIRelationshipsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x161ee00
	struct FAIRelationshipsRowHandle MakeLiteralAIRelationships(struct FAIRelationshipsRowHandle RowHandle); // Function Icarus.AIRelationshipsLibrary.MakeLiteralAIRelationships // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161ebd0
	struct FAIRelationshipsRowHandle MakeAIRelationshipsFromIndex(int32_t Index); // Function Icarus.AIRelationshipsLibrary.MakeAIRelationshipsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e8c0
	struct FAIRelationshipsEnum MakeAIRelationshipsEnum(struct FAIRelationshipsEnum Enum); // Function Icarus.AIRelationshipsLibrary.MakeAIRelationshipsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e840
	struct FAIRelationshipsRowHandle MakeAIRelationships(struct UE4::FName RowName); // Function Icarus.AIRelationshipsLibrary.MakeAIRelationships // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e7a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AIRelationshipsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x161e4d0
	struct FAIRelationshipsEnum IntToStruct(int32_t IntValue); // Function Icarus.AIRelationshipsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e320
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AIRelationshipsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x161e170
	void GetAIRelationshipsStruct(struct FAIRelationshipsRowHandle RowHandle, struct FAIRelationshipData& AIRelationships, enum class EValid& Paths); // Function Icarus.AIRelationshipsLibrary.GetAIRelationshipsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161dd80
	bool EqualEqual_FAIRelationshipsRowHandleFAIRelationshipsRowHandle(struct FAIRelationshipsRowHandle RowHandleA, struct FAIRelationshipsRowHandle RowHandleB); // Function Icarus.AIRelationshipsLibrary.EqualEqual_FAIRelationshipsRowHandleFAIRelationshipsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161d8e0
	bool EqualEqual_EnumEnum(struct FAIRelationshipsEnum A, struct FAIRelationshipsEnum B); // Function Icarus.AIRelationshipsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161d5c0
	struct FAIRelationshipsRowHandle CastToAIRelationshipsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AIRelationshipsLibrary.CastToAIRelationshipsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161d290
	void BreakAIRelationshipsEnum(struct FAIRelationshipsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AIRelationshipsLibrary.BreakAIRelationshipsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x161ceb0
	void AddRowToAIRelationshipsTable(struct UE4::FName Name, struct FAIRelationshipData Data, struct FAIRelationshipsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AIRelationshipsLibrary.AddRowToAIRelationshipsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161c830
};

// Class Icarus.AIRelationshipsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIRelationshipsTable : UIcarusDataTable {
};

// Class Icarus.AISetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISetupLibrary : URowLibrary {

	struct FAISetupRowHandle StructToRowHandle(struct FAISetupEnum EnumValue); // Function Icarus.AISetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620040
	struct UE4::FName StructToName(struct FAISetupEnum EnumValue); // Function Icarus.AISetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fe40
	int32_t StructToInt(struct FAISetupEnum EnumValue); // Function Icarus.AISetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fc60
	struct FAISetupEnum RowHandleToStruct(struct FAISetupRowHandle RowHandle); // Function Icarus.AISetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fa60
	void RemoveRowFromAISetupTable(struct UE4::FName Name); // Function Icarus.AISetupLibrary.RemoveRowFromAISetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161f860
	void RefreshConstants(); // Function Icarus.AISetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x161f740
	int32_t NumRows(); // Function Icarus.AISetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f6d0
	bool NotEqual_EnumName(struct FAISetupEnum A, struct UE4::FName B); // Function Icarus.AISetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f580
	bool NotEqual_EnumEnum(struct FAISetupEnum A, struct FAISetupEnum B); // Function Icarus.AISetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f2b0
	struct FAISetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AISetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f040
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AISetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x161ee90
	struct FAISetupRowHandle MakeLiteralAISetup(struct FAISetupRowHandle RowHandle); // Function Icarus.AISetupLibrary.MakeLiteralAISetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161eca0
	struct FAISetupRowHandle MakeAISetupFromIndex(int32_t Index); // Function Icarus.AISetupLibrary.MakeAISetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161ea70
	struct FAISetupEnum MakeAISetupEnum(struct FAISetupEnum Enum); // Function Icarus.AISetupLibrary.MakeAISetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e9f0
	struct FAISetupRowHandle MakeAISetup(struct UE4::FName RowName); // Function Icarus.AISetupLibrary.MakeAISetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e950
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AISetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x161e560
	struct FAISetupEnum IntToStruct(int32_t IntValue); // Function Icarus.AISetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161e3b0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AISetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x161e200
	void GetAISetupStruct(struct FAISetupRowHandle RowHandle, struct FAISetup& AISetup, enum class EValid& Paths); // Function Icarus.AISetupLibrary.GetAISetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161df40
	bool EqualEqual_FAISetupRowHandleFAISetupRowHandle(struct FAISetupRowHandle RowHandleA, struct FAISetupRowHandle RowHandleB); // Function Icarus.AISetupLibrary.EqualEqual_FAISetupRowHandleFAISetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161da20
	bool EqualEqual_EnumEnum(struct FAISetupEnum A, struct FAISetupEnum B); // Function Icarus.AISetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161d6b0
	struct FAISetupRowHandle CastToAISetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AISetupLibrary.CastToAISetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161d3b0
	void BreakAISetupEnum(struct FAISetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AISetupLibrary.BreakAISetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x161d010
	void AddRowToAISetupTable(struct UE4::FName Name, struct FAISetup Data, struct FAISetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AISetupLibrary.AddRowToAISetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161cb70
};

// Class Icarus.AISetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISetupTable : UIcarusDataTable {
};

// Class Icarus.AISpawnBehaviour
// Size: 0xc0 (Inherited: 0x28)
struct UAISpawnBehaviour : UObject {
	struct FAutonomousSpawnData SpawnData; // 0x28(0x60)
	struct FAutonomousSpawnsRowHandle SpawnsRowHandle; // 0x88(0x18)
	struct FMulticastInlineDelegate SpawnComplete; // 0xa0(0x10)
	struct TArray<struct AActor*> SpawnedAI; // 0xb0(0x10)

	bool TrySpawnAI(struct UObject* WorldContextObject); // Function Icarus.AISpawnBehaviour.TrySpawnAI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16260b0
	void TryCleanupIrrelevantAI(); // Function Icarus.AISpawnBehaviour.TryCleanupIrrelevantAI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1626090
	bool SpawnAI(struct UObject* WorldContextObject, struct FTransform& SpawnTransform, struct AActor*& SpawnedAI, int32_t Level); // Function Icarus.AISpawnBehaviour.SpawnAI // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1625ac0
	void OnSpawnedActorDeath(struct UActorState* ActorState); // Function Icarus.AISpawnBehaviour.OnSpawnedActorDeath // (Final|Native|Protected) // @ game+0x1625740
	void InitialiseSpawnBehaviour(struct FAutonomousSpawnsRowHandle& InSpawnData); // Function Icarus.AISpawnBehaviour.InitialiseSpawnBehaviour // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1624570
	void CleanupAI(struct AActor* AI); // Function Icarus.AISpawnBehaviour.CleanupAI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16238a0
};

// Class Icarus.AISpawnConfigLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISpawnConfigLibrary : URowLibrary {

	struct FAISpawnConfigRowHandle StructToRowHandle(struct FAISpawnConfigEnum EnumValue); // Function Icarus.AISpawnConfigLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625f30
	struct UE4::FName StructToName(struct FAISpawnConfigEnum EnumValue); // Function Icarus.AISpawnConfigLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625df0
	int32_t StructToInt(struct FAISpawnConfigEnum EnumValue); // Function Icarus.AISpawnConfigLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625cb0
	struct FAISpawnConfigEnum RowHandleToStruct(struct FAISpawnConfigRowHandle RowHandle); // Function Icarus.AISpawnConfigLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625940
	void RemoveRowFromAISpawnConfigTable(struct UE4::FName Name); // Function Icarus.AISpawnConfigLibrary.RemoveRowFromAISpawnConfigTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1625840
	void RefreshConstants(); // Function Icarus.AISpawnConfigLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1625800
	int32_t NumRows(); // Function Icarus.AISpawnConfigLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625580
	bool NotEqual_EnumName(struct FAISpawnConfigEnum A, struct UE4::FName B); // Function Icarus.AISpawnConfigLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16253a0
	bool NotEqual_EnumEnum(struct FAISpawnConfigEnum A, struct FAISpawnConfigEnum B); // Function Icarus.AISpawnConfigLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16251c0
	struct FAISpawnConfigEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AISpawnConfigLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16250a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AISpawnConfigLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1624f80
	struct FAISpawnConfigRowHandle MakeLiteralAISpawnConfig(struct FAISpawnConfigRowHandle RowHandle); // Function Icarus.AISpawnConfigLibrary.MakeLiteralAISpawnConfig // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624de0
	struct FAISpawnConfigRowHandle MakeAISpawnConfigFromIndex(int32_t Index); // Function Icarus.AISpawnConfigLibrary.MakeAISpawnConfigFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624ba0
	struct FAISpawnConfigEnum MakeAISpawnConfigEnum(struct FAISpawnConfigEnum Enum); // Function Icarus.AISpawnConfigLibrary.MakeAISpawnConfigEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624b20
	struct FAISpawnConfigRowHandle MakeAISpawnConfig(struct UE4::FName RowName); // Function Icarus.AISpawnConfigLibrary.MakeAISpawnConfig // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624a80
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AISpawnConfigLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1624960
	struct FAISpawnConfigEnum IntToStruct(int32_t IntValue); // Function Icarus.AISpawnConfigLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624740
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AISpawnConfigLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1624620
	void GetAISpawnConfigStruct(struct FAISpawnConfigRowHandle RowHandle, struct FAISpawnConfigData& AISpawnConfig, enum class EValid& Paths); // Function Icarus.AISpawnConfigLibrary.GetAISpawnConfigStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1623df0
	bool EqualEqual_FAISpawnConfigRowHandleFAISpawnConfigRowHandle(struct FAISpawnConfigRowHandle RowHandleA, struct FAISpawnConfigRowHandle RowHandleB); // Function Icarus.AISpawnConfigLibrary.EqualEqual_FAISpawnConfigRowHandleFAISpawnConfigRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1623b30
	bool EqualEqual_EnumEnum(struct FAISpawnConfigEnum A, struct FAISpawnConfigEnum B); // Function Icarus.AISpawnConfigLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1623950
	struct FAISpawnConfigRowHandle CastToAISpawnConfigRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AISpawnConfigLibrary.CastToAISpawnConfigRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1623660
	void BreakAISpawnConfigEnum(struct FAISpawnConfigEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AISpawnConfigLibrary.BreakAISpawnConfigEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16233a0
	void AddRowToAISpawnConfigTable(struct UE4::FName Name, struct FAISpawnConfigData Data, struct FAISpawnConfigRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AISpawnConfigLibrary.AddRowToAISpawnConfigTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1622e50
};

// Class Icarus.AISpawnConfigTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISpawnConfigTable : UIcarusDataTable {
};

// Class Icarus.AISpawner
// Size: 0x450 (Inherited: 0x220)
struct AAISpawner : AActor {
	struct TArray<struct FTileSpawnData> WorldSpawnData; // 0x220(0x10)
	struct UEnvQuery* Template; // 0x230(0x08)
	int32_t NumberOfCachedSpawnPoints; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FMulticastInlineDelegate GenerationComplete; // 0x240(0x10)
	int32_t SelectedTile; // 0x250(0x04)
	struct FAISpawnConfigRowHandle SpawnConfig; // 0x254(0x18)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct TArray<struct UIcarusAISpawnFilter*> SpawnRules; // 0x270(0x10)
	struct UIcarusStatContainer* StatContainer; // 0x280(0x08)
	struct FWorldData WorldData; // 0x288(0x148)
	struct TMap<struct FAISetupRowHandle, float> LastAISetupSpawnTime; // 0x3d0(0x50)
	char pad_420[0x10]; // 0x420(0x10)
	struct TArray<struct UAISpawnBehaviour*> ActiveAutonomousSpawners; // 0x430(0x10)
	struct AIcarusEQSTestingPawn* TestingPawn; // 0x440(0x08)
	char pad_448[0x8]; // 0x448(0x08)

	void WorldStatsSet(); // Function Icarus.AISpawner.WorldStatsSet // (Final|Native|Private) // @ game+0x1626150
	void VisualiseTilePosition(); // Function Icarus.AISpawner.VisualiseTilePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x1626130
	void SpawnPointGenerationComplete(); // Function Icarus.AISpawner.SpawnPointGenerationComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x1625c90
	void SetupNPC(struct AIcarusNPCGOAPCharacter* SpawnedNPC); // Function Icarus.AISpawner.SetupNPC // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x88b940
	void SetDebugSpawnBlockers(bool bEnabled); // Function Icarus.AISpawner.SetDebugSpawnBlockers // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool PerformNextTileEQS(); // Function Icarus.AISpawner.PerformNextTileEQS // (Final|Native|Private) // @ game+0x16257d0
	void OnProspectDataSet(); // Function Icarus.AISpawner.OnProspectDataSet // (Native|Event|Protected|BlueprintEvent) // @ game+0x1625720
	void OnNPCKilled(struct UActorState* ActorState); // Function Icarus.AISpawner.OnNPCKilled // (Native|Event|Protected|BlueprintEvent) // @ game+0x1625690
	void OnEQSQueryCompleted(struct TArray<struct FVector>& EQSResults); // Function Icarus.AISpawner.OnEQSQueryCompleted // (Final|Native|Private|HasOutParms) // @ game+0x16255e0
	bool IsSpawnPointValid(struct FVector& InLocation, struct FAISetupEnum& InAISetup); // Function Icarus.AISpawner.IsSpawnPointValid // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1624860
	void InitialiseBehavioursForSpawnConfig(struct FAISpawnConfigData& SpawnConfig); // Function Icarus.AISpawner.InitialiseBehavioursForSpawnConfig // (Final|Native|Protected|HasOutParms) // @ game+0x1624430
	int32_t GetTotalNumNPCsUndergoingLatentDeath(); // Function Icarus.AISpawner.GetTotalNumNPCsUndergoingLatentDeath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1624410
	int32_t GetNumLatentDeathsForAISetup(struct FAISetupRowHandle AISetup); // Function Icarus.AISpawner.GetNumLatentDeathsForAISetup // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624350
	float GetLastAISetupSpawnTime(struct FAISetupRowHandle AISetup); // Function Icarus.AISpawner.GetLastAISetupSpawnTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1624290
	float GetLastAISetupDeathTime(struct FAISetupRowHandle AISetup); // Function Icarus.AISpawner.GetLastAISetupDeathTime // (Final|Native|Public|BlueprintCallable) // @ game+0x16241d0
	bool GetDebugSpawnBlockers(); // Function Icarus.AISpawner.GetDebugSpawnBlockers // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void GenerateSingleTileSpawnPoints(); // Function Icarus.AISpawner.GenerateSingleTileSpawnPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x1623dd0
	void GenerateCachedSpawnPoints(); // Function Icarus.AISpawner.GenerateCachedSpawnPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x1623db0
	void ClearLatentNPCDeaths(); // Function Icarus.AISpawner.ClearLatentNPCDeaths // (Final|Native|Private) // @ game+0x1623930
};

// Class Icarus.AISpawnRulesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISpawnRulesLibrary : URowLibrary {

	struct FAISpawnRulesRowHandle StructToRowHandle(struct FAISpawnRulesEnum EnumValue); // Function Icarus.AISpawnRulesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625fe0
	struct UE4::FName StructToName(struct FAISpawnRulesEnum EnumValue); // Function Icarus.AISpawnRulesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625e90
	int32_t StructToInt(struct FAISpawnRulesEnum EnumValue); // Function Icarus.AISpawnRulesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625d50
	struct FAISpawnRulesEnum RowHandleToStruct(struct FAISpawnRulesRowHandle RowHandle); // Function Icarus.AISpawnRulesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625a00
	void RemoveRowFromAISpawnRulesTable(struct UE4::FName Name); // Function Icarus.AISpawnRulesLibrary.RemoveRowFromAISpawnRulesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16258c0
	void RefreshConstants(); // Function Icarus.AISpawnRulesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1625820
	int32_t NumRows(); // Function Icarus.AISpawnRulesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16255b0
	bool NotEqual_EnumName(struct FAISpawnRulesEnum A, struct UE4::FName B); // Function Icarus.AISpawnRulesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625490
	bool NotEqual_EnumEnum(struct FAISpawnRulesEnum A, struct FAISpawnRulesEnum B); // Function Icarus.AISpawnRulesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16252b0
	struct FAISpawnRulesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AISpawnRulesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625130
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AISpawnRulesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1625010
	struct FAISpawnRulesRowHandle MakeLiteralAISpawnRules(struct FAISpawnRulesRowHandle RowHandle); // Function Icarus.AISpawnRulesLibrary.MakeLiteralAISpawnRules // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624eb0
	struct FAISpawnRulesRowHandle MakeAISpawnRulesFromIndex(int32_t Index); // Function Icarus.AISpawnRulesLibrary.MakeAISpawnRulesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624d50
	struct FAISpawnRulesEnum MakeAISpawnRulesEnum(struct FAISpawnRulesEnum Enum); // Function Icarus.AISpawnRulesLibrary.MakeAISpawnRulesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624cd0
	struct FAISpawnRulesRowHandle MakeAISpawnRules(struct UE4::FName RowName); // Function Icarus.AISpawnRulesLibrary.MakeAISpawnRules // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1624c30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AISpawnRulesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16249f0
	struct FAISpawnRulesEnum IntToStruct(int32_t IntValue); // Function Icarus.AISpawnRulesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16247d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AISpawnRulesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16246b0
	void GetAISpawnRulesStruct(struct FAISpawnRulesRowHandle RowHandle, struct FAISpawnRuleData& AISpawnRules, enum class EValid& Paths); // Function Icarus.AISpawnRulesLibrary.GetAISpawnRulesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1623fe0
	bool EqualEqual_FAISpawnRulesRowHandleFAISpawnRulesRowHandle(struct FAISpawnRulesRowHandle RowHandleA, struct FAISpawnRulesRowHandle RowHandleB); // Function Icarus.AISpawnRulesLibrary.EqualEqual_FAISpawnRulesRowHandleFAISpawnRulesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1623c70
	bool EqualEqual_EnumEnum(struct FAISpawnRulesEnum A, struct FAISpawnRulesEnum B); // Function Icarus.AISpawnRulesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1623a40
	struct FAISpawnRulesRowHandle CastToAISpawnRulesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AISpawnRulesLibrary.CastToAISpawnRulesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1623780
	void BreakAISpawnRulesEnum(struct FAISpawnRulesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AISpawnRulesLibrary.BreakAISpawnRulesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1623500
	void AddRowToAISpawnRulesTable(struct UE4::FName Name, struct FAISpawnRuleData Data, struct FAISpawnRulesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AISpawnRulesLibrary.AddRowToAISpawnRulesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1623090
};

// Class Icarus.AISpawnRulesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISpawnRulesTable : UIcarusDataTable {
};

// Class Icarus.AISpawnZonesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISpawnZonesLibrary : URowLibrary {

	struct FAISpawnZonesRowHandle StructToRowHandle(struct FAISpawnZonesEnum EnumValue); // Function Icarus.AISpawnZonesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162bb80
	struct UE4::FName StructToName(struct FAISpawnZonesEnum EnumValue); // Function Icarus.AISpawnZonesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ba40
	int32_t StructToInt(struct FAISpawnZonesEnum EnumValue); // Function Icarus.AISpawnZonesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b900
	struct FAISpawnZonesEnum RowHandleToStruct(struct FAISpawnZonesRowHandle RowHandle); // Function Icarus.AISpawnZonesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b700
	void RemoveRowFromAISpawnZonesTable(struct UE4::FName Name); // Function Icarus.AISpawnZonesLibrary.RemoveRowFromAISpawnZonesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x162b600
	void RefreshConstants(); // Function Icarus.AISpawnZonesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x162b5c0
	int32_t NumRows(); // Function Icarus.AISpawnZonesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b4e0
	bool NotEqual_EnumName(struct FAISpawnZonesEnum A, struct UE4::FName B); // Function Icarus.AISpawnZonesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b300
	bool NotEqual_EnumEnum(struct FAISpawnZonesEnum A, struct FAISpawnZonesEnum B); // Function Icarus.AISpawnZonesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b120
	struct FAISpawnZonesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AISpawnZonesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b000
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AISpawnZonesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x162aee0
	struct FAISpawnZonesRowHandle MakeLiteralAISpawnZones(struct FAISpawnZonesRowHandle RowHandle); // Function Icarus.AISpawnZonesLibrary.MakeLiteralAISpawnZones // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ad40
	struct FAISpawnZonesRowHandle MakeAISpawnZonesFromIndex(int32_t Index); // Function Icarus.AISpawnZonesLibrary.MakeAISpawnZonesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ab00
	struct FAISpawnZonesEnum MakeAISpawnZonesEnum(struct FAISpawnZonesEnum Enum); // Function Icarus.AISpawnZonesLibrary.MakeAISpawnZonesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162aa80
	struct FAISpawnZonesRowHandle MakeAISpawnZones(struct UE4::FName RowName); // Function Icarus.AISpawnZonesLibrary.MakeAISpawnZones // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162a9e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AISpawnZonesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x162a8c0
	struct FAISpawnZonesEnum IntToStruct(int32_t IntValue); // Function Icarus.AISpawnZonesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162a4d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AISpawnZonesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x162a3b0
	void GetAISpawnZonesStruct(struct FAISpawnZonesRowHandle RowHandle, struct FAISpawnZones& AISpawnZones, enum class EValid& Paths); // Function Icarus.AISpawnZonesLibrary.GetAISpawnZonesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1629db0
	bool EqualEqual_FAISpawnZonesRowHandleFAISpawnZonesRowHandle(struct FAISpawnZonesRowHandle RowHandleA, struct FAISpawnZonesRowHandle RowHandleB); // Function Icarus.AISpawnZonesLibrary.EqualEqual_FAISpawnZonesRowHandleFAISpawnZonesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1629b30
	bool EqualEqual_EnumEnum(struct FAISpawnZonesEnum A, struct FAISpawnZonesEnum B); // Function Icarus.AISpawnZonesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1629950
	struct FAISpawnZonesRowHandle CastToAISpawnZonesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AISpawnZonesLibrary.CastToAISpawnZonesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1629710
	void BreakAISpawnZonesEnum(struct FAISpawnZonesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AISpawnZonesLibrary.BreakAISpawnZonesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1629450
	void AddRowToAISpawnZonesTable(struct UE4::FName Name, struct FAISpawnZones Data, struct FAISpawnZonesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AISpawnZonesLibrary.AddRowToAISpawnZonesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1628dd0
};

// Class Icarus.AISpawnZonesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISpawnZonesTable : UIcarusDataTable {
};

// Class Icarus.AITargetable
// Size: 0x28 (Inherited: 0x28)
struct UAITargetable : UInterface {

	bool IsHidden(); // Function Icarus.AITargetable.IsHidden // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a720
	bool IsCriticalHitDisabled(); // Function Icarus.AITargetable.IsCriticalHitDisabled // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a6f0
	bool IsActorAlive(); // Function Icarus.AITargetable.IsActorAlive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a5f0
	struct FVector GetTargetLocation(); // Function Icarus.AITargetable.GetTargetLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a2e0
	int32_t GetTargetAlertness(); // Function Icarus.AITargetable.GetTargetAlertness // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a2b0
	struct FAIRelationshipsRowHandle GetRelationshipData(); // Function Icarus.AITargetable.GetRelationshipData // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a270
	struct TArray<struct FCriticalHitLocation> GetCriticalHitBones(); // Function Icarus.AITargetable.GetCriticalHitBones // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x162a1f0
};

// Class Icarus.AITargetableFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAITargetableFunctionLibrary : UBlueprintFunctionLibrary {

	void IsHostileTowards(struct AActor* SelfTargetable, struct AActor* OtherActorTargetable, enum class ERelationshipType& OutRelationshipSwitch, enum class ERelationshipType& OutRelationshipType); // Function Icarus.AITargetableFunctionLibrary.IsHostileTowards // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162a750
	bool IsActorTargetable(struct AActor* Actor, bool bOnlyAliveActors); // Function Icarus.AITargetableFunctionLibrary.IsActorTargetable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x162a620
	enum class EStealthAttackType GetTargetStealth(struct AActor* TargetableActor); // Function Icarus.AITargetableFunctionLibrary.GetTargetStealth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162a320
};

// Class Icarus.VocalisationComponent
// Size: 0x110 (Inherited: 0xb0)
struct UVocalisationComponent : UActorComponent {
	struct UFMODAudioComponent* AudioComponent; // 0xb0(0x08)
	char pad_B8[0x58]; // 0xb8(0x58)

	enum class EVocalisationPlayResult TryPlayVocalisation(struct FVocalisationsRowHandle Vocalisation); // Function Icarus.VocalisationComponent.TryPlayVocalisation // (Final|Native|Public|BlueprintCallable) // @ game+0x1899820
	void OnEventStopped(); // Function Icarus.VocalisationComponent.OnEventStopped // (Final|Native|Protected) // @ game+0x1899160
	void Initialise(struct USceneComponent* TargetComponent, struct UE4::FName TargetSocket); // Function Icarus.VocalisationComponent.Initialise // (Native|Public|BlueprintCallable) // @ game+0x1898070
	float GetVocalisationLength(struct FVocalisationsRowHandle Vocalisation); // Function Icarus.VocalisationComponent.GetVocalisationLength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1897c90
	float GetCurrentVocalisationLength(); // Function Icarus.VocalisationComponent.GetCurrentVocalisationLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18979c0
};

// Class Icarus.AIVocalisationComponent
// Size: 0x120 (Inherited: 0x110)
struct UAIVocalisationComponent : UVocalisationComponent {
	char pad_110[0x10]; // 0x110(0x10)

	void SetAIState(enum class EAIAudioState State); // Function Icarus.AIVocalisationComponent.SetAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x162b880
	void PlayAIVocalisation(enum class EAIVocalisationType Type); // Function Icarus.AIVocalisationComponent.PlayAIVocalisation // (Final|Native|Public|BlueprintCallable) // @ game+0x162b540
};

// Class Icarus.AmmoTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAmmoTypesLibrary : URowLibrary {

	struct FAmmoTypesRowHandle StructToRowHandle(struct FAmmoTypesEnum EnumValue); // Function Icarus.AmmoTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162bc30
	struct UE4::FName StructToName(struct FAmmoTypesEnum EnumValue); // Function Icarus.AmmoTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162bae0
	int32_t StructToInt(struct FAmmoTypesEnum EnumValue); // Function Icarus.AmmoTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b9a0
	struct FAmmoTypesEnum RowHandleToStruct(struct FAmmoTypesRowHandle RowHandle); // Function Icarus.AmmoTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b7c0
	void RemoveRowFromAmmoTypesTable(struct UE4::FName Name); // Function Icarus.AmmoTypesLibrary.RemoveRowFromAmmoTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x162b680
	void RefreshConstants(); // Function Icarus.AmmoTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x162b5e0
	int32_t NumRows(); // Function Icarus.AmmoTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b510
	bool NotEqual_EnumName(struct FAmmoTypesEnum A, struct UE4::FName B); // Function Icarus.AmmoTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b3f0
	bool NotEqual_EnumEnum(struct FAmmoTypesEnum A, struct FAmmoTypesEnum B); // Function Icarus.AmmoTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b210
	struct FAmmoTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AmmoTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162b090
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AmmoTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x162af70
	struct FAmmoTypesRowHandle MakeLiteralAmmoTypes(struct FAmmoTypesRowHandle RowHandle); // Function Icarus.AmmoTypesLibrary.MakeLiteralAmmoTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ae10
	struct FAmmoTypesRowHandle MakeAmmoTypesFromIndex(int32_t Index); // Function Icarus.AmmoTypesLibrary.MakeAmmoTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162acb0
	struct FAmmoTypesEnum MakeAmmoTypesEnum(struct FAmmoTypesEnum Enum); // Function Icarus.AmmoTypesLibrary.MakeAmmoTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ac30
	struct FAmmoTypesRowHandle MakeAmmoTypes(struct UE4::FName RowName); // Function Icarus.AmmoTypesLibrary.MakeAmmoTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ab90
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AmmoTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x162a950
	struct FAmmoTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.AmmoTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162a560
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AmmoTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x162a440
	void GetAmmoTypesStruct(struct FAmmoTypesRowHandle RowHandle, struct FAmmoTypeData& AmmoTypes, enum class EValid& Paths); // Function Icarus.AmmoTypesLibrary.GetAmmoTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1629fe0
	bool EqualEqual_FAmmoTypesRowHandleFAmmoTypesRowHandle(struct FAmmoTypesRowHandle RowHandleA, struct FAmmoTypesRowHandle RowHandleB); // Function Icarus.AmmoTypesLibrary.EqualEqual_FAmmoTypesRowHandleFAmmoTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1629c70
	bool EqualEqual_EnumEnum(struct FAmmoTypesEnum A, struct FAmmoTypesEnum B); // Function Icarus.AmmoTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1629a40
	struct FAmmoTypesRowHandle CastToAmmoTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AmmoTypesLibrary.CastToAmmoTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1629830
	void BreakAmmoTypesEnum(struct FAmmoTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AmmoTypesLibrary.BreakAmmoTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16295b0
	void AddRowToAmmoTypesTable(struct UE4::FName Name, struct FAmmoTypeData Data, struct FAmmoTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AmmoTypesLibrary.AddRowToAmmoTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1629150
};

// Class Icarus.AmmoTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAmmoTypesTable : UIcarusDataTable {
};

// Class Icarus.AnimNotify_IcarusPlaySound
// Size: 0x58 (Inherited: 0x38)
struct UAnimNotify_IcarusPlaySound : UAnimNotify {
	struct UFMODEvent* FMODEvent; // 0x38(0x08)
	bool bFollow; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct UE4::FName AttachSocket; // 0x44(0x08)
	bool bUseListenerRotation; // 0x4c(0x01)
	bool bUseOcclusion; // 0x4d(0x01)
	char pad_4E[0x2]; // 0x4e(0x02)
	struct UE4::FName OcclusionTrace; // 0x50(0x08)
};

// Class Icarus.AnimNotify_PlaySoundPlayer
// Size: 0x50 (Inherited: 0x38)
struct UAnimNotify_PlaySoundPlayer : UAnimNotify {
	struct UFMODEvent* FMODEvent; // 0x38(0x08)
	bool bUseItemAnimData; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct UE4::FName ItemAnimName; // 0x44(0x08)
	int32_t ItemAnimIndex; // 0x4c(0x04)

	struct UFMODEvent* GetFMODEvent(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.AnimNotify_PlaySoundPlayer.GetFMODEvent // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x162ffb0
};

// Class Icarus.AnimNotifyState_IcarusPlaySoundContinuous
// Size: 0x58 (Inherited: 0x30)
struct UAnimNotifyState_IcarusPlaySoundContinuous : UAnimNotifyState {
	struct UFMODEvent* FMODEvent; // 0x30(0x08)
	struct UE4::FName AttachSocket; // 0x38(0x08)
	bool bUseListenerRotation; // 0x40(0x01)
	bool bUseOcclusion; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	struct UE4::FName OcclusionTrace; // 0x44(0x08)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct UFMODAudioComponent* AudioComponent; // 0x50(0x08)
};

// Class Icarus.ArmourComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UArmourComponent : UTraitComponent {

	bool GetArmourData(struct FArmourData& OutData); // Function Icarus.ArmourComponent.GetArmourData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x162f8c0
};

// Class Icarus.ArmourLibrary
// Size: 0x28 (Inherited: 0x28)
struct UArmourLibrary : URowLibrary {

	struct FArmourRowHandle StructToRowHandle(struct FArmourEnum EnumValue); // Function Icarus.ArmourLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631e50
	struct UE4::FName StructToName(struct FArmourEnum EnumValue); // Function Icarus.ArmourLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631c70
	int32_t StructToInt(struct FArmourEnum EnumValue); // Function Icarus.ArmourLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631a90
	struct FArmourEnum RowHandleToStruct(struct FArmourRowHandle RowHandle); // Function Icarus.ArmourLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631850
	void RemoveRowFromArmourTable(struct UE4::FName Name); // Function Icarus.ArmourLibrary.RemoveRowFromArmourTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16317d0
	void RefreshConstants(); // Function Icarus.ArmourLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1631670
	int32_t NumRows(); // Function Icarus.ArmourLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16315e0
	bool NotEqual_EnumName(struct FArmourEnum A, struct UE4::FName B); // Function Icarus.ArmourLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631310
	bool NotEqual_EnumEnum(struct FArmourEnum A, struct FArmourEnum B); // Function Icarus.ArmourLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631040
	struct FArmourEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ArmourLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630e90
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ArmourLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1630ce0
	struct FArmourRowHandle MakeLiteralArmour(struct FArmourRowHandle RowHandle); // Function Icarus.ArmourLibrary.MakeLiteralArmour // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630a70
	struct FArmourRowHandle MakeArmourFromIndex(int32_t Index); // Function Icarus.ArmourLibrary.MakeArmourFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630680
	struct FArmourEnum MakeArmourEnum(struct FArmourEnum Enum); // Function Icarus.ArmourLibrary.MakeArmourEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630600
	struct FArmourRowHandle MakeArmour(struct UE4::FName RowName); // Function Icarus.ArmourLibrary.MakeArmour // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630560
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ArmourLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16303b0
	struct FArmourEnum IntToStruct(int32_t IntValue); // Function Icarus.ArmourLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630200
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ArmourLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1630050
	void GetArmourStruct(struct FArmourRowHandle RowHandle, struct FArmourData& Armour, enum class EValid& Paths); // Function Icarus.ArmourLibrary.GetArmourStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162fe10
	bool EqualEqual_FArmourRowHandleFArmourRowHandle(struct FArmourRowHandle RowHandleA, struct FArmourRowHandle RowHandleB); // Function Icarus.ArmourLibrary.EqualEqual_FArmourRowHandleFArmourRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162f500
	bool EqualEqual_EnumEnum(struct FArmourEnum A, struct FArmourEnum B); // Function Icarus.ArmourLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162f230
	struct FArmourRowHandle CastToArmourRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ArmourLibrary.CastToArmourRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162eed0
	void BreakArmourEnum(struct FArmourEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ArmourLibrary.BreakArmourEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x162eab0
	void AddRowToArmourTable(struct UE4::FName Name, struct FArmourData Data, struct FArmourRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ArmourLibrary.AddRowToArmourTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162e8d0
};

// Class Icarus.ArmourSetBonusLibrary
// Size: 0x28 (Inherited: 0x28)
struct UArmourSetBonusLibrary : URowLibrary {

	struct FArmourSetBonusRowHandle StructToRowHandle(struct FArmourSetBonusEnum EnumValue); // Function Icarus.ArmourSetBonusLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631f00
	struct UE4::FName StructToName(struct FArmourSetBonusEnum EnumValue); // Function Icarus.ArmourSetBonusLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631d10
	int32_t StructToInt(struct FArmourSetBonusEnum EnumValue); // Function Icarus.ArmourSetBonusLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631b30
	struct FArmourSetBonusEnum RowHandleToStruct(struct FArmourSetBonusRowHandle RowHandle); // Function Icarus.ArmourSetBonusLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631910
	void RemoveRowFromArmourSetBonusTable(struct UE4::FName Name); // Function Icarus.ArmourSetBonusLibrary.RemoveRowFromArmourSetBonusTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16316d0
	void RefreshConstants(); // Function Icarus.ArmourSetBonusLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1631690
	int32_t NumRows(); // Function Icarus.ArmourSetBonusLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631610
	bool NotEqual_EnumName(struct FArmourSetBonusEnum A, struct UE4::FName B); // Function Icarus.ArmourSetBonusLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631400
	bool NotEqual_EnumEnum(struct FArmourSetBonusEnum A, struct FArmourSetBonusEnum B); // Function Icarus.ArmourSetBonusLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631130
	struct FArmourSetBonusEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ArmourSetBonusLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630f20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ArmourSetBonusLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1630d70
	struct FArmourSetBonusRowHandle MakeLiteralArmourSetBonus(struct FArmourSetBonusRowHandle RowHandle); // Function Icarus.ArmourSetBonusLibrary.MakeLiteralArmourSetBonus // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630b40
	struct FArmourSetBonusRowHandle MakeArmourSetBonusFromIndex(int32_t Index); // Function Icarus.ArmourSetBonusLibrary.MakeArmourSetBonusFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630830
	struct FArmourSetBonusEnum MakeArmourSetBonusEnum(struct FArmourSetBonusEnum Enum); // Function Icarus.ArmourSetBonusLibrary.MakeArmourSetBonusEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16307b0
	struct FArmourSetBonusRowHandle MakeArmourSetBonus(struct UE4::FName RowName); // Function Icarus.ArmourSetBonusLibrary.MakeArmourSetBonus // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630710
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ArmourSetBonusLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1630440
	struct FArmourSetBonusEnum IntToStruct(int32_t IntValue); // Function Icarus.ArmourSetBonusLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630290
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ArmourSetBonusLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16300e0
	void GetArmourSetBonusStruct(struct FArmourSetBonusRowHandle RowHandle, struct FArmourSetBonus& ArmourSetBonus, enum class EValid& Paths); // Function Icarus.ArmourSetBonusLibrary.GetArmourSetBonusStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162fa30
	bool EqualEqual_FArmourSetBonusRowHandleFArmourSetBonusRowHandle(struct FArmourSetBonusRowHandle RowHandleA, struct FArmourSetBonusRowHandle RowHandleB); // Function Icarus.ArmourSetBonusLibrary.EqualEqual_FArmourSetBonusRowHandleFArmourSetBonusRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162f640
	bool EqualEqual_EnumEnum(struct FArmourSetBonusEnum A, struct FArmourSetBonusEnum B); // Function Icarus.ArmourSetBonusLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162f320
	struct FArmourSetBonusRowHandle CastToArmourSetBonusRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ArmourSetBonusLibrary.CastToArmourSetBonusRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162eff0
	void BreakArmourSetBonusEnum(struct FArmourSetBonusEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ArmourSetBonusLibrary.BreakArmourSetBonusEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x162ec10
	void AddRowToArmourSetBonusTable(struct UE4::FName Name, struct FArmourSetBonus Data, struct FArmourSetBonusRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ArmourSetBonusLibrary.AddRowToArmourSetBonusTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162e310
};

// Class Icarus.ArmourSetBonusTable
// Size: 0xb8 (Inherited: 0xb8)
struct UArmourSetBonusTable : UIcarusDataTable {
};

// Class Icarus.ArmourSetsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UArmourSetsLibrary : URowLibrary {

	struct FArmourSetsRowHandle StructToRowHandle(struct FArmourSetsEnum EnumValue); // Function Icarus.ArmourSetsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631fb0
	struct UE4::FName StructToName(struct FArmourSetsEnum EnumValue); // Function Icarus.ArmourSetsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631db0
	int32_t StructToInt(struct FArmourSetsEnum EnumValue); // Function Icarus.ArmourSetsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631bd0
	struct FArmourSetsEnum RowHandleToStruct(struct FArmourSetsRowHandle RowHandle); // Function Icarus.ArmourSetsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16319d0
	void RemoveRowFromArmourSetsTable(struct UE4::FName Name); // Function Icarus.ArmourSetsLibrary.RemoveRowFromArmourSetsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1631750
	void RefreshConstants(); // Function Icarus.ArmourSetsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16316b0
	int32_t NumRows(); // Function Icarus.ArmourSetsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631640
	bool NotEqual_EnumName(struct FArmourSetsEnum A, struct UE4::FName B); // Function Icarus.ArmourSetsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16314f0
	bool NotEqual_EnumEnum(struct FArmourSetsEnum A, struct FArmourSetsEnum B); // Function Icarus.ArmourSetsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1631220
	struct FArmourSetsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ArmourSetsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630fb0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ArmourSetsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1630e00
	struct FArmourSetsRowHandle MakeLiteralArmourSets(struct FArmourSetsRowHandle RowHandle); // Function Icarus.ArmourSetsLibrary.MakeLiteralArmourSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630c10
	struct FArmourSetsRowHandle MakeArmourSetsFromIndex(int32_t Index); // Function Icarus.ArmourSetsLibrary.MakeArmourSetsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16309e0
	struct FArmourSetsEnum MakeArmourSetsEnum(struct FArmourSetsEnum Enum); // Function Icarus.ArmourSetsLibrary.MakeArmourSetsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630960
	struct FArmourSetsRowHandle MakeArmourSets(struct UE4::FName RowName); // Function Icarus.ArmourSetsLibrary.MakeArmourSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16308c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ArmourSetsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16304d0
	struct FArmourSetsEnum IntToStruct(int32_t IntValue); // Function Icarus.ArmourSetsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1630320
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ArmourSetsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1630170
	void GetArmourSetsStruct(struct FArmourSetsRowHandle RowHandle, struct FArmourSet& ArmourSets, enum class EValid& Paths); // Function Icarus.ArmourSetsLibrary.GetArmourSetsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162fc80
	bool EqualEqual_FArmourSetsRowHandleFArmourSetsRowHandle(struct FArmourSetsRowHandle RowHandleA, struct FArmourSetsRowHandle RowHandleB); // Function Icarus.ArmourSetsLibrary.EqualEqual_FArmourSetsRowHandleFArmourSetsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162f780
	bool EqualEqual_EnumEnum(struct FArmourSetsEnum A, struct FArmourSetsEnum B); // Function Icarus.ArmourSetsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162f410
	struct FArmourSetsRowHandle CastToArmourSetsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ArmourSetsLibrary.CastToArmourSetsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162f110
	void BreakArmourSetsEnum(struct FArmourSetsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ArmourSetsLibrary.BreakArmourSetsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x162ed70
	void AddRowToArmourSetsTable(struct UE4::FName Name, struct FArmourSet Data, struct FArmourSetsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ArmourSetsLibrary.AddRowToArmourSetsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162e660
};

// Class Icarus.ArmourSetsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UArmourSetsTable : UIcarusDataTable {
};

// Class Icarus.ArmourTable
// Size: 0xb8 (Inherited: 0xb8)
struct UArmourTable : UIcarusDataTable {
};

// Class Icarus.AssetReferencesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAssetReferencesLibrary : URowLibrary {

	struct FAssetReferencesRowHandle StructToRowHandle(struct FAssetReferencesEnum EnumValue); // Function Icarus.AssetReferencesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1637e90
	struct UE4::FName StructToName(struct FAssetReferencesEnum EnumValue); // Function Icarus.AssetReferencesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1637df0
	int32_t StructToInt(struct FAssetReferencesEnum EnumValue); // Function Icarus.AssetReferencesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1637d50
	struct FAssetReferencesEnum RowHandleToStruct(struct FAssetReferencesRowHandle RowHandle); // Function Icarus.AssetReferencesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1637af0
	void RemoveRowFromAssetReferencesTable(struct UE4::FName Name); // Function Icarus.AssetReferencesLibrary.RemoveRowFromAssetReferencesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1637a70
	void RefreshConstants(); // Function Icarus.AssetReferencesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1637860
	int32_t NumRows(); // Function Icarus.AssetReferencesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16374b0
	bool NotEqual_EnumName(struct FAssetReferencesEnum A, struct UE4::FName B); // Function Icarus.AssetReferencesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16373c0
	bool NotEqual_EnumEnum(struct FAssetReferencesEnum A, struct FAssetReferencesEnum B); // Function Icarus.AssetReferencesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16372d0
	struct FAssetReferencesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AssetReferencesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1637240
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AssetReferencesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16371b0
	struct FAssetReferencesRowHandle MakeLiteralAssetReferences(struct FAssetReferencesRowHandle RowHandle); // Function Icarus.AssetReferencesLibrary.MakeLiteralAssetReferences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16370e0
	struct FAssetReferencesRowHandle MakeAssetReferencesFromIndex(int32_t Index); // Function Icarus.AssetReferencesLibrary.MakeAssetReferencesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1637050
	struct FAssetReferencesEnum MakeAssetReferencesEnum(struct FAssetReferencesEnum Enum); // Function Icarus.AssetReferencesLibrary.MakeAssetReferencesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1636fd0
	struct FAssetReferencesRowHandle MakeAssetReferences(struct UE4::FName RowName); // Function Icarus.AssetReferencesLibrary.MakeAssetReferences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1636f30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AssetReferencesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1636ea0
	struct FAssetReferencesEnum IntToStruct(int32_t IntValue); // Function Icarus.AssetReferencesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1636e10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AssetReferencesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1636d80
	void GetAssetReferencesStruct(struct FAssetReferencesRowHandle RowHandle, struct FAssetReferenceData& AssetReferences, enum class EValid& Paths); // Function Icarus.AssetReferencesLibrary.GetAssetReferencesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16367e0
	bool EqualEqual_FAssetReferencesRowHandleFAssetReferencesRowHandle(struct FAssetReferencesRowHandle RowHandleA, struct FAssetReferencesRowHandle RowHandleB); // Function Icarus.AssetReferencesLibrary.EqualEqual_FAssetReferencesRowHandleFAssetReferencesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16366a0
	bool EqualEqual_EnumEnum(struct FAssetReferencesEnum A, struct FAssetReferencesEnum B); // Function Icarus.AssetReferencesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16365b0
	struct FAssetReferencesRowHandle CastToAssetReferencesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AssetReferencesLibrary.CastToAssetReferencesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1636490
	void BreakAssetReferencesEnum(struct FAssetReferencesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AssetReferencesLibrary.BreakAssetReferencesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1636330
	void AddRowToAssetReferencesTable(struct UE4::FName Name, struct FAssetReferenceData Data, struct FAssetReferencesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AssetReferencesLibrary.AddRowToAssetReferencesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1636140
};

// Class Icarus.AssetReferencesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAssetReferencesTable : UIcarusDataTable {
};

// Class Icarus.AtmosphereController
// Size: 0x220 (Inherited: 0x220)
struct AAtmosphereController : AInfo {
};

// Class Icarus.AudioContextComponent
// Size: 0x160 (Inherited: 0xb0)
struct UAudioContextComponent : UActorComponent {
	float MaxUpdateDistance; // 0xb0(0x04)
	float OcclusionShelterContextThreshold; // 0xb4(0x04)
	struct FMulticastInlineDelegate OnEnteredCave; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnExitedCave; // 0xc8(0x10)
	char pad_D8[0x1]; // 0xd8(0x01)
	enum class EAudioShelterState ShelterState; // 0xd9(0x01)
	char pad_DA[0x16]; // 0xda(0x16)
	struct UAudioOcclusionComponent* OcclusionComponent; // 0xf0(0x08)
	struct TArray<struct FAudioContextSubscriber> Subscribers; // 0xf8(0x10)
	struct TMap<struct AActor*, struct FAudioContextCaveColliderSet> CaveOverlaps; // 0x108(0x50)
	char pad_158[0x8]; // 0x158(0x08)

	void UnsubscribeAudioComponentFromUpdates(struct UFMODAudioComponent* AudioComponent); // Function Icarus.AudioContextComponent.UnsubscribeAudioComponentFromUpdates // (Final|Native|Public|BlueprintCallable) // @ game+0x16381c0
	void SubscribeAudioComponentToUpdates(struct UFMODAudioComponent* AudioComponent, bool bUsesOcclusionParameter, struct UE4::FName OcclusionTraceName, bool bUsesWaterImmersionParameter); // Function Icarus.AudioContextComponent.SubscribeAudioComponentToUpdates // (Final|Native|Public|BlueprintCallable) // @ game+0x1637f40
	void SetCaveOverlapOnceByLocation(struct FVector Location); // Function Icarus.AudioContextComponent.SetCaveOverlapOnceByLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1637c30
	void RemoveCaveOverlap(struct AActor* Cave, struct UPrimitiveComponent* Collider); // Function Icarus.AudioContextComponent.RemoveCaveOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x16379a0
	enum class EAudioShelterState GetShelterState(); // Function Icarus.AudioContextComponent.GetShelterState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1636c70
	enum class EOcclusionShelterContextFMODParam GetOcclusionShelterContextFMODParam(float OcclusionValue); // Function Icarus.AudioContextComponent.GetOcclusionShelterContextFMODParam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1636bb0
	float GetListenerCaveSpaceCorrelation(); // Function Icarus.AudioContextComponent.GetListenerCaveSpaceCorrelation // (Final|Native|Public|BlueprintCallable) // @ game+0x1636b80
	float GetCurrentWaterImmersion(); // Function Icarus.AudioContextComponent.GetCurrentWaterImmersion // (Native|Public|BlueprintCallable) // @ game+0x1636b40
	float GetCurrentOcclusion(struct UE4::FName TracePointName); // Function Icarus.AudioContextComponent.GetCurrentOcclusion // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x1636aa0
	enum class ECaveContextFMODParam GetCaveContextFMODParam(); // Function Icarus.AudioContextComponent.GetCaveContextFMODParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1636a70
	void AddCaveOverlap(struct AActor* Cave, struct UPrimitiveComponent* Collider); // Function Icarus.AudioContextComponent.AddCaveOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x1636070
};

// Class Icarus.AudioContextCreatureComponent
// Size: 0x168 (Inherited: 0x160)
struct UAudioContextCreatureComponent : UAudioContextComponent {
	struct UCreatureAudioComponent* CreatureAudio; // 0x160(0x08)
};

// Class Icarus.AudioContextPlayerComponent
// Size: 0x170 (Inherited: 0x160)
struct UAudioContextPlayerComponent : UAudioContextComponent {
	float ShelterStateLowThreshold; // 0x160(0x04)
	float ShelterStateHighThreshold; // 0x164(0x04)
	struct UPlayerMovementAudioComponent* PlayerMovementAudioComponent; // 0x168(0x08)

	void ServerSetNewShelter(enum class EAudioShelterState NewShelterState); // Function Icarus.AudioContextPlayerComponent.ServerSetNewShelter // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1637bb0
	void OnShelterUpdated(float NewShelter); // Function Icarus.AudioContextPlayerComponent.OnShelterUpdated // (Final|Native|Private) // @ game+0x16377e0
};

// Class Icarus.AudioOccluderInterface
// Size: 0x28 (Inherited: 0x28)
struct UAudioOccluderInterface : UInterface {

	float GetOcclusionValue(); // Function Icarus.AudioOccluderInterface.GetOcclusionValue // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1636c40
};

// Class Icarus.AudioOcclusionComponent
// Size: 0x270 (Inherited: 0x200)
struct UAudioOcclusionComponent : USceneComponent {
	bool bDebug; // 0x1f8(0x01)
	char pad_201[0x6f]; // 0x201(0x6f)

	struct TArray<struct FAudioOcclusionTracePoint> GetTracePoints(struct FVector& ListenerLocation); // Function Icarus.AudioOcclusionComponent.GetTracePoints // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1636ca0
};

// Class Icarus.AudioOcclusionSocketTraceComponent
// Size: 0x280 (Inherited: 0x270)
struct UAudioOcclusionSocketTraceComponent : UAudioOcclusionComponent {
	struct TArray<struct FAudioOcclusionSocketTracePoint> TracePointDefinitions; // 0x268(0x10)

	void SetTracePointTargets(struct USceneComponent* TargetComponent); // Function Icarus.AudioOcclusionSocketTraceComponent.SetTracePointTargets // (Final|Native|Protected|BlueprintCallable) // @ game+0x1637cc0
};

// Class Icarus.AudioOcclusionCharacterComponent
// Size: 0x280 (Inherited: 0x280)
struct UAudioOcclusionCharacterComponent : UAudioOcclusionSocketTraceComponent {
};

// Class Icarus.AudioOcclusionDropshipComponent
// Size: 0x270 (Inherited: 0x270)
struct UAudioOcclusionDropshipComponent : UAudioOcclusionComponent {
};

// Class Icarus.AudioSettingsSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UAudioSettingsSubsystem : UGameInstanceSubsystem {

	void OnSFXVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnSFXVolumeChanged // (Final|Native|Public) // @ game+0x1637760
	void OnMusicVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnMusicVolumeChanged // (Final|Native|Public) // @ game+0x16376e0
	void OnMasterVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnMasterVolumeChanged // (Final|Native|Public) // @ game+0x1637660
	void OnDialogueVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnDialogueVolumeChanged // (Final|Native|Public) // @ game+0x16375e0
	void OnCharacterVoiceVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnCharacterVoiceVolumeChanged // (Final|Native|Public) // @ game+0x1637560
	void OnAmbientVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnAmbientVolumeChanged // (Final|Native|Public) // @ game+0x16374e0
};

// Class Icarus.AudioSplineComponent
// Size: 0x570 (Inherited: 0x540)
struct UAudioSplineComponent : USplineComponent {
	struct UFMODEvent* Event; // 0x538(0x08)
	float UpdateFrequencyInListenerRange; // 0x540(0x04)
	float UpdateFrequencyOutsideListenerRange; // 0x544(0x04)
	float InterpSpeed; // 0x548(0x04)
	struct UFMODAudioComponent* AudioComponent; // 0x550(0x08)
	char pad_55C[0x14]; // 0x55c(0x14)
};

// Class Icarus.AuraManagerComponent
// Size: 0x230 (Inherited: 0xb0)
struct UAuraManagerComponent : UActorComponent {
	struct TSet<struct AActor*> AllPlayers; // 0xb0(0x50)
	struct TSet<struct AActor*> AllNPCs; // 0x100(0x50)
	struct TMap<struct AActor*, struct FAuraInstances> AuraInstances; // 0x150(0x50)
	struct FGameplayTagQuery PlayerTagQuery; // 0x1a0(0x48)
	struct FGameplayTagQuery NPCTagQuery; // 0x1e8(0x48)

	void UnregisterModifiableObject(struct AActor* Modifiable); // Function Icarus.AuraManagerComponent.UnregisterModifiableObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1638130
	void TickModifier(struct UModifierStateComponent* ModifierComp); // Function Icarus.AuraManagerComponent.TickModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x16380a0
	void RemoveAura(struct UModifierStateComponent* ModifierComp); // Function Icarus.AuraManagerComponent.RemoveAura // (Final|Native|Public|BlueprintCallable) // @ game+0x1637910
	void RegisterModifiableObject(struct AActor* Modifiable); // Function Icarus.AuraManagerComponent.RegisterModifiableObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1637880
	struct TArray<struct FFindAuraResult> GetAurasAtLocation(struct FVector Location); // Function Icarus.AuraManagerComponent.GetAurasAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1636980
	void AddAura(struct UModifierStateComponent* ModifierComp); // Function Icarus.AuraManagerComponent.AddAura // (Final|Native|Public|BlueprintCallable) // @ game+0x1635fe0
};

// Class Icarus.AutonomousSpawnsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAutonomousSpawnsLibrary : URowLibrary {

	struct FAutonomousSpawnsRowHandle StructToRowHandle(struct FAutonomousSpawnsEnum EnumValue); // Function Icarus.AutonomousSpawnsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1644ab0
	struct UE4::FName StructToName(struct FAutonomousSpawnsEnum EnumValue); // Function Icarus.AutonomousSpawnsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1644a10
	int32_t StructToInt(struct FAutonomousSpawnsEnum EnumValue); // Function Icarus.AutonomousSpawnsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1644970
	struct FAutonomousSpawnsEnum RowHandleToStruct(struct FAutonomousSpawnsRowHandle RowHandle); // Function Icarus.AutonomousSpawnsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16448b0
	void RemoveRowFromAutonomousSpawnsTable(struct UE4::FName Name); // Function Icarus.AutonomousSpawnsLibrary.RemoveRowFromAutonomousSpawnsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16433a0
	void RefreshConstants(); // Function Icarus.AutonomousSpawnsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16432f0
	int32_t NumRows(); // Function Icarus.AutonomousSpawnsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d820
	bool NotEqual_EnumName(struct FAutonomousSpawnsEnum A, struct UE4::FName B); // Function Icarus.AutonomousSpawnsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d730
	bool NotEqual_EnumEnum(struct FAutonomousSpawnsEnum A, struct FAutonomousSpawnsEnum B); // Function Icarus.AutonomousSpawnsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d640
	struct FAutonomousSpawnsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.AutonomousSpawnsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d5b0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.AutonomousSpawnsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x163d520
	struct FAutonomousSpawnsRowHandle MakeLiteralAutonomousSpawns(struct FAutonomousSpawnsRowHandle RowHandle); // Function Icarus.AutonomousSpawnsLibrary.MakeLiteralAutonomousSpawns // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d450
	struct FAutonomousSpawnsRowHandle MakeAutonomousSpawnsFromIndex(int32_t Index); // Function Icarus.AutonomousSpawnsLibrary.MakeAutonomousSpawnsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d3c0
	struct FAutonomousSpawnsEnum MakeAutonomousSpawnsEnum(struct FAutonomousSpawnsEnum Enum); // Function Icarus.AutonomousSpawnsLibrary.MakeAutonomousSpawnsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d340
	struct FAutonomousSpawnsRowHandle MakeAutonomousSpawns(struct UE4::FName RowName); // Function Icarus.AutonomousSpawnsLibrary.MakeAutonomousSpawns // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d2a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.AutonomousSpawnsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x163d100
	struct FAutonomousSpawnsEnum IntToStruct(int32_t IntValue); // Function Icarus.AutonomousSpawnsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163d070
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.AutonomousSpawnsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x163cfe0
	void GetAutonomousSpawnsStruct(struct FAutonomousSpawnsRowHandle RowHandle, struct FAutonomousSpawnData& AutonomousSpawns, enum class EValid& Paths); // Function Icarus.AutonomousSpawnsLibrary.GetAutonomousSpawnsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163cc60
	bool EqualEqual_FAutonomousSpawnsRowHandleFAutonomousSpawnsRowHandle(struct FAutonomousSpawnsRowHandle RowHandleA, struct FAutonomousSpawnsRowHandle RowHandleB); // Function Icarus.AutonomousSpawnsLibrary.EqualEqual_FAutonomousSpawnsRowHandleFAutonomousSpawnsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cb20
	bool EqualEqual_EnumEnum(struct FAutonomousSpawnsEnum A, struct FAutonomousSpawnsEnum B); // Function Icarus.AutonomousSpawnsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163ca30
	struct FAutonomousSpawnsRowHandle CastToAutonomousSpawnsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.AutonomousSpawnsLibrary.CastToAutonomousSpawnsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163c910
	void BreakAutonomousSpawnsEnum(struct FAutonomousSpawnsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.AutonomousSpawnsLibrary.BreakAutonomousSpawnsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x163c6b0
	void AddRowToAutonomousSpawnsTable(struct UE4::FName Name, struct FAutonomousSpawnData Data, struct FAutonomousSpawnsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.AutonomousSpawnsLibrary.AddRowToAutonomousSpawnsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163c430
};

// Class Icarus.AutonomousSpawnsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAutonomousSpawnsTable : UIcarusDataTable {
};

// Class Icarus.BackendProxyComponent
// Size: 0x4c0 (Inherited: 0xb0)
struct UBackendProxyComponent : UActorComponent {
	struct FMulticastSparseDelegate MetaResourcesUpdated; // 0xb0(0x01)
	struct FMulticastSparseDelegate MetaInventoryUpdated; // 0xb1(0x01)
	struct FMulticastSparseDelegate MetaInventorySlotUpdated; // 0xb2(0x01)
	struct FMulticastSparseDelegate WorkshopPurchaseResult; // 0xb3(0x01)
	struct FMulticastSparseDelegate DropshipsUpdated; // 0xb4(0x01)
	struct FMulticastSparseDelegate DropshipCreationResult; // 0xb5(0x01)
	struct FMulticastSparseDelegate DropshipModificationResult; // 0xb6(0x01)
	struct FMulticastSparseDelegate DropshipDeletionResult; // 0xb7(0x01)
	struct FMulticastSparseDelegate PreparedLoadoutUpdated; // 0xb8(0x01)
	struct FMulticastSparseDelegate CharacterLoadoutUpdated; // 0xb9(0x01)
	struct FMulticastSparseDelegate LoadoutInventoryUpdated; // 0xba(0x01)
	struct FMulticastSparseDelegate LoadoutInventorySlotUpdated; // 0xbb(0x01)
	struct FMulticastSparseDelegate LoadoutPackaged; // 0xbc(0x01)
	struct FMulticastSparseDelegate CreditsUpdated; // 0xbd(0x01)
	struct FMulticastSparseDelegate ProspectsUpdated; // 0xbe(0x01)
	struct FMulticastSparseDelegate ClaimedProspectResult; // 0xbf(0x01)
	struct FMulticastSparseDelegate SettleProspectResult; // 0xc0(0x01)
	struct FMulticastSparseDelegate NotificationsUpdated; // 0xc1(0x01)
	struct FMulticastSparseDelegate TalentUnlocked; // 0xc2(0x01)
	struct FMulticastSparseDelegate TrackedStatisticsUpdateResult; // 0xc3(0x01)
	struct FMulticastSparseDelegate FactionMissionUpdateResult; // 0xc4(0x01)
	struct FMulticastSparseDelegate BackToHabResult; // 0xc5(0x01)
	char pad_C6[0x52]; // 0xc6(0x52)
	struct FMulticastSparseDelegate GetCharacterProfileResult; // 0x118(0x01)
	struct FMulticastSparseDelegate GetUserProfileResult; // 0x119(0x01)
	struct FMulticastSparseDelegate PackageLoadoutResult; // 0x11a(0x01)
	struct FMulticastSparseDelegate WorkshopResearchResult; // 0x11b(0x01)
	struct FMulticastSparseDelegate WorkshopReplicationResult; // 0x11c(0x01)
	struct FMulticastSparseDelegate GetCharacterLoadoutResult; // 0x11d(0x01)
	struct FMulticastSparseDelegate UpdateCharacterProgressResult; // 0x11e(0x01)
	struct FMulticastSparseDelegate UpdateCharacterProspectLocationResult; // 0x11f(0x01)
	struct FMulticastSparseDelegate SyncCharacterTalentsResult; // 0x120(0x01)
	struct FMulticastSparseDelegate SyncAccountTalentsResult; // 0x121(0x01)
	struct FMulticastSparseDelegate ExchangeCurrencyResult; // 0x122(0x01)
	char pad_123[0x5]; // 0x123(0x05)
	struct UGetMetaResourceCallbackProxyGen* MetaResourcesCallback; // 0x128(0x08)
	struct UGetMetaInventoryCallbackProxyGen* MetaInventoryCallback; // 0x130(0x08)
	struct UGetLoadoutInventoryCallbackProxyGen* LoadoutInventoryCallback; // 0x138(0x08)
	struct UMoveMetaInventoryItemCallbackProxyGen* ShiftMetaItemCallbackProxy; // 0x140(0x08)
	struct URemoveMetaItemCallbackProxyGen* RemoveMetaItemCallbackProxy; // 0x148(0x08)
	struct UGetDropshipsCallbackProxyGen* GetDropshipsCallbackProxy; // 0x150(0x08)
	struct UCreateDropshipCallbackProxyGen* CreateDropshipsCallbackProxy; // 0x158(0x08)
	struct UModifyDropshipCallbackProxyGen* ModifyDropshipsCallbackProxy; // 0x160(0x08)
	struct UDeleteDropshipCallbackProxyGen* DeleteDropshipsCallbackProxy; // 0x168(0x08)
	struct USelectDropshipCallbackProxyGen* SelectDropshipCallbackProxy; // 0x170(0x08)
	struct URemoveSelectedDropshipCallbackProxyGen* RemoveSelectedDropshipCallbackProxy; // 0x178(0x08)
	struct USelectEnvirosuitCallbackProxyGen* SelectEnvirosuitCallbackProxy; // 0x180(0x08)
	struct URemoveEnvirosuitCallbackProxyGen* RemoveEnvirosuitCallbackProxy; // 0x188(0x08)
	struct UPackageLoadoutCallbackProxyGen* PackageLoadoutCallbackProxy; // 0x190(0x08)
	struct UUnpackageLoadoutCallbackProxyGen* UnpackageLoadoutCallbackProxy; // 0x198(0x08)
	struct UGetCharacterLoadoutCallbackProxyGen* CharacterLoadoutCallbackProxy; // 0x1a0(0x08)
	struct UGetPreparedLoadoutCallbackProxyGen* PreparedLoadoutCallbackProxy; // 0x1a8(0x08)
	struct UGetCreditsCallbackProxyGen* GetCreditsCallbackProxy; // 0x1b0(0x08)
	struct UGetAllProspectsCallbackProxyGen* GetAllProspectsCallbackProxy; // 0x1b8(0x08)
	struct UClaimProspectCallbackProxyGen* ClaimProspectCallbackProxy; // 0x1c0(0x08)
	struct USettleProspectCallbackProxyGen* SettleProspectCallbackProxy; // 0x1c8(0x08)
	struct UGetNotificationsCallbackProxyGen* GetNotificationsCallbackProxy; // 0x1d0(0x08)
	struct UClaimNotificationAttachmentsCallbackProxyGen* ClaimNotificationAttachmentsCallbackProxy; // 0x1d8(0x08)
	struct UDeleteNotificationCallbackProxyGen* DeleteNotificationCallbackProxy; // 0x1e0(0x08)
	struct UReadNotificationCallbackProxyGen* ReadNotificationCallbackProxy; // 0x1e8(0x08)
	struct UUpdateCharacterProgressCallbackProxyGen* UpdateCharacterProgressProxy; // 0x1f0(0x08)
	struct UUpdateCharacterProspectLocationCallbackProxyGen* UpdateCharacterProspectLocationProxy; // 0x1f8(0x08)
	struct UUpdateTrackedStatsCallbackProxyGen* UpdateTrackedStatsCallbackProxy; // 0x200(0x08)
	struct UUpdateFactionMissionProgressCallbackProxyGen* UpdateFactionMissionProgressCallbackProxy; // 0x208(0x08)
	struct USyncCharacterTalentsCallbackProxyGen* SyncCharacterTalentsCallbackProxy; // 0x210(0x08)
	struct USyncAccountTalentsCallbackProxyGen* SyncAccountTalentsCallbackProxy; // 0x218(0x08)
	struct UGetCharacterProfileCallbackProxyGen* GetCharacterProfileCallbackProxy; // 0x220(0x08)
	struct UGetUserProfileCallbackProxyGen* GetUserProfileCallbackProxy; // 0x228(0x08)
	struct UBackToHabCallbackProxyGen* BackToHabCallbackProxy; // 0x230(0x08)
	struct UUnlockWorkshopItemCallbackProxyGen* UnlockWorkshopItemCallbackProxy; // 0x238(0x08)
	struct UReplicateWorkshopItemCallbackProxyGen* ReplicateWorkshopItemCallbackProxy; // 0x240(0x08)
	struct UExchangeCurrencyCallbackProxyGen* ExchangeCurrencyCallbackProxy; // 0x248(0x08)
	struct UTalentRefundCallbackProxyGen* TalentRefundCallbackProxy; // 0x250(0x08)
	struct TMap<enum class ERateLimitedRequests, int32_t> RequestTimers; // 0x258(0x50)
	float CurrentTime; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct TArray<struct FMetaResource> MetaResources; // 0x2b0(0x10)
	int32_t Credits; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct TArray<struct FMetaItem> MetaInventory; // 0x2c8(0x10)
	struct TArray<struct FMetaItem> LoadoutInventory; // 0x2d8(0x10)
	struct TArray<struct FDropship> Dropships; // 0x2e8(0x10)
	int32_t PreparedDropship; // 0x2f8(0x04)
	int32_t PreparedDropshipID; // 0x2fc(0x04)
	struct FMetaItem PreparedEnvirosuit; // 0x300(0x40)
	struct FCharacterLoadout CharacterLoadout; // 0x340(0x138)
	bool PreparedLoadout; // 0x478(0x01)
	char pad_479[0x7]; // 0x479(0x07)
	struct TArray<struct FProspectInfo> Prospects; // 0x480(0x10)
	struct TArray<struct FNotification> Notifications; // 0x490(0x10)
	struct FPendingInventorySwap PendingInventorySwap; // 0x4a0(0x20)

	void UpdateSelectedDropship(); // Function Icarus.BackendProxyComponent.UpdateSelectedDropship // (Final|Native|Public) // @ game+0x16454a0
	void TriggerWorkshopPurchaseResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerWorkshopPurchaseResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1645410
	void TriggerTalentUnlocked(struct FTalentsRowHandle Talent, int32_t Rank, bool Success); // Function Icarus.BackendProxyComponent.TriggerTalentUnlocked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x16452a0
	void TriggerProspectSettleResult(bool Success, struct FProspectInfo ProspectInfo); // Function Icarus.BackendProxyComponent.TriggerProspectSettleResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x16450e0
	void TriggerLoadoutPackage(); // Function Icarus.BackendProxyComponent.TriggerLoadoutPackage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x16450c0
	void TriggerDropshipModificationResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerDropshipModificationResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1645030
	void TriggerDropshipDeletionResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerDropshipDeletionResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1644fa0
	void TriggerDropshipCreationResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerDropshipCreationResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1644f10
	void TriggerClaimProspectResult(bool Success, struct FProspectInfo ProspectInfo); // Function Icarus.BackendProxyComponent.TriggerClaimProspectResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1644b60
	void RetrieveCharacterLoadout(); // Function Icarus.BackendProxyComponent.RetrieveCharacterLoadout // (Final|Native|Public|BlueprintCallable) // @ game+0x1644890
	void Request_WorkshopPurchaseWorkshopPack(int32_t Index); // Function Icarus.BackendProxyComponent.Request_WorkshopPurchaseWorkshopPack // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644800
	void Request_WorkshopPacks(); // Function Icarus.BackendProxyComponent.Request_WorkshopPacks // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x16447e0
	void Request_UpdateTrackedStats(); // Function Icarus.BackendProxyComponent.Request_UpdateTrackedStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16447c0
	void Request_UpdateFactionMissionProgress(struct FFactionMissionsRowHandle Mission, int32_t Progress); // Function Icarus.BackendProxyComponent.Request_UpdateFactionMissionProgress // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16446e0
	void Request_UpdateCharacterProspectLocation(enum class EProspectLocation Location); // Function Icarus.BackendProxyComponent.Request_UpdateCharacterProspectLocation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644660
	void Request_UpdateCharacterProgress(); // Function Icarus.BackendProxyComponent.Request_UpdateCharacterProgress // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644640
	void Request_UnpackageLoadout(); // Function Icarus.BackendProxyComponent.Request_UnpackageLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644620
	void Request_UnlockWorkshopItem(struct FTalentsRowHandle TalentsRowHandle); // Function Icarus.BackendProxyComponent.Request_UnlockWorkshopItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644570
	void Request_TalentRefund(struct FTalentsRowHandle Talent, int32_t CharacterSlot); // Function Icarus.BackendProxyComponent.Request_TalentRefund // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644490
	void Request_SyncCharacterTalents(); // Function Icarus.BackendProxyComponent.Request_SyncCharacterTalents // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644470
	void Request_SyncAccountTalents(); // Function Icarus.BackendProxyComponent.Request_SyncAccountTalents // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644450
	void Request_ShiftInventoryItem(struct UInventory* SourceInventory, struct UInventory* DestinationInventory, int32_t SourceSlot, int32_t DestinationSlot, int32_t Amount); // Function Icarus.BackendProxyComponent.Request_ShiftInventoryItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16442c0
	void Request_SettleProspect(struct FString ProspectID, bool SettleProspect); // Function Icarus.BackendProxyComponent.Request_SettleProspect // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16441d0
	void Request_ReplicateWorkshopItem(struct FTalentsRowHandle TalentsRowHandle); // Function Icarus.BackendProxyComponent.Request_ReplicateWorkshopItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644120
	void Request_RemovePreparedEnvirosuit(); // Function Icarus.BackendProxyComponent.Request_RemovePreparedEnvirosuit // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1644100
	void Request_RemovePreparedDropship(); // Function Icarus.BackendProxyComponent.Request_RemovePreparedDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16440e0
	void Request_RemoveMetaItem(struct UInventory* SourceInventory, int32_t SourceSlot, int32_t Amount); // Function Icarus.BackendProxyComponent.Request_RemoveMetaItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643fe0
	void Request_ReadNotification(struct FString NotificationID); // Function Icarus.BackendProxyComponent.Request_ReadNotification // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643f30
	void Request_PrepareEnvirosuit(struct UInventory* Inventory, int32_t Slot); // Function Icarus.BackendProxyComponent.Request_PrepareEnvirosuit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643e40
	void Request_PrepareDropship(int32_t Index); // Function Icarus.BackendProxyComponent.Request_PrepareDropship // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643db0
	void Request_PreparedLoadout(); // Function Icarus.BackendProxyComponent.Request_PreparedLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643f10
	void Request_PackageLoadout_WithCharacter(struct FOnlineProfileCharacter OnlineProfileCharacter); // Function Icarus.BackendProxyComponent.Request_PackageLoadout_WithCharacter // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643c30
	void Request_PackageLoadout(); // Function Icarus.BackendProxyComponent.Request_PackageLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643c10
	void Request_ModifyDropship(int32_t Index, struct FDropshipModification Dropship); // Function Icarus.BackendProxyComponent.Request_ModifyDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643ae0
	void Request_MetaResources(); // Function Icarus.BackendProxyComponent.Request_MetaResources // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643ac0
	void Request_MetaInventory(); // Function Icarus.BackendProxyComponent.Request_MetaInventory // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643aa0
	void Request_LoadoutInventory(); // Function Icarus.BackendProxyComponent.Request_LoadoutInventory // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643a80
	void Request_LeaveProspectByDropship(); // Function Icarus.BackendProxyComponent.Request_LeaveProspectByDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643a60
	void Request_GetUserProfile(); // Function Icarus.BackendProxyComponent.Request_GetUserProfile // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643a40
	void Request_GetNotifications(bool RequestCompleteList); // Function Icarus.BackendProxyComponent.Request_GetNotifications // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x16439b0
	void Request_GetCharacterProfile(int32_t CharSlot); // Function Icarus.BackendProxyComponent.Request_GetCharacterProfile // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643920
	void Request_ExchangeCurrency(struct FCurrencyConversionsRowHandle Conversion, int32_t Iterations); // Function Icarus.BackendProxyComponent.Request_ExchangeCurrency // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643830
	void Request_Dropships(); // Function Icarus.BackendProxyComponent.Request_Dropships // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643810
	void Request_DeleteNotification(struct FString NotificationID); // Function Icarus.BackendProxyComponent.Request_DeleteNotification // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643760
	void Request_DeleteDropship(int32_t Index); // Function Icarus.BackendProxyComponent.Request_DeleteDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16436d0
	void Request_Credits(); // Function Icarus.BackendProxyComponent.Request_Credits // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x16436b0
	void Request_CreateDropship(); // Function Icarus.BackendProxyComponent.Request_CreateDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643690
	void Request_ClaimProspect(struct FProspectInfo ProspectInfo); // Function Icarus.BackendProxyComponent.Request_ClaimProspect // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643510
	void Request_ClaimNotificationAttachements(struct FString NotificationID); // Function Icarus.BackendProxyComponent.Request_ClaimNotificationAttachements // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643460
	void Request_CharacterLoadout(); // Function Icarus.BackendProxyComponent.Request_CharacterLoadout // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1643440
	void Request_AvailableProspects(); // Function Icarus.BackendProxyComponent.Request_AvailableProspects // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1643420
	void RemoveDropship(int32_t DropshipID); // Function Icarus.BackendProxyComponent.RemoveDropship // (Final|Native|Public) // @ game+0x1643310
	bool RateLimitCheck(enum class ERateLimitedRequests RequestType); // Function Icarus.BackendProxyComponent.RateLimitCheck // (Final|Native|Public) // @ game+0x1643260
	void ProcessSwapInventoryDelta(struct FInventoryDelta& InventoryDelta); // Function Icarus.BackendProxyComponent.ProcessSwapInventoryDelta // (Final|Native|Public|HasOutParms) // @ game+0x1643150
	void ProcessResourceDelta(struct TArray<struct FMetaResource> ResourcesDelta); // Function Icarus.BackendProxyComponent.ProcessResourceDelta // (Final|Native|Public) // @ game+0x1642fd0
	void ProcessInventoryDelta(struct FInventoryDelta& InventoryDelta); // Function Icarus.BackendProxyComponent.ProcessInventoryDelta // (Final|Native|Public|HasOutParms) // @ game+0x1642ec0
	void ProcessDropshipDelta(struct FDropshipDelta DropshipDelta); // Function Icarus.BackendProxyComponent.ProcessDropshipDelta // (Final|Native|Public) // @ game+0x1642980
	void PrepareEnvirosuit(struct UInventory* Inventory, int32_t InventorySlot); // Function Icarus.BackendProxyComponent.PrepareEnvirosuit // (Final|Native|Public|BlueprintCallable) // @ game+0x16428b0
	void PrepareDropship(int32_t Index); // Function Icarus.BackendProxyComponent.PrepareDropship // (Final|Native|Public|BlueprintCallable) // @ game+0x1642820
	void OnUpdateCharacterProspectLocationSuccess(struct FResUpdateCharacterProspectLocation& Response); // Function Icarus.BackendProxyComponent.OnUpdateCharacterProspectLocationSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1642790
	void OnUpdateCharacterProspectLocationFailure(struct FResUpdateCharacterProspectLocation& Response); // Function Icarus.BackendProxyComponent.OnUpdateCharacterProspectLocationFailure // (Final|Native|Public|HasOutParms) // @ game+0x1642700
	void OnUpdateCharacterProgressSuccess(struct FResUpdateCharacterProgress& Response); // Function Icarus.BackendProxyComponent.OnUpdateCharacterProgressSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1642670
	void OnUpdateCharacterProgressFailure(struct FResUpdateCharacterProgress& Response); // Function Icarus.BackendProxyComponent.OnUpdateCharacterProgressFailure // (Final|Native|Public|HasOutParms) // @ game+0x16425e0
	void OnUnpackageLoadoutRequestSuccess(struct FResUnpackageLoadout& Response); // Function Icarus.BackendProxyComponent.OnUnpackageLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1642540
	void OnUnpackageLoadoutRequestFailure(struct FResUnpackageLoadout& Response); // Function Icarus.BackendProxyComponent.OnUnpackageLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x16424a0
	void OnUnlockWorkshopItemSuccess(struct FResUnlockWorkshopItem& Response); // Function Icarus.BackendProxyComponent.OnUnlockWorkshopItemSuccess // (Final|Native|Public|HasOutParms) // @ game+0x16423b0
	void OnUnlockWorkshopItemFailure(struct FResUnlockWorkshopItem& Response); // Function Icarus.BackendProxyComponent.OnUnlockWorkshopItemFailure // (Final|Native|Public|HasOutParms) // @ game+0x16422c0
	void OnTrackedStatsUpdatedSuccess(struct FResUpdateTrackedStats& Response); // Function Icarus.BackendProxyComponent.OnTrackedStatsUpdatedSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1642230
	void OnTrackedStatsUpdatedFailure(struct FResUpdateTrackedStats& Response); // Function Icarus.BackendProxyComponent.OnTrackedStatsUpdatedFailure // (Final|Native|Public|HasOutParms) // @ game+0x16421a0
	void OnTalentRefundSuccess(struct FResTalentRefund& Response); // Function Icarus.BackendProxyComponent.OnTalentRefundSuccess // (Final|Native|Public|HasOutParms) // @ game+0x16420b0
	void OnTalentRefundFailure(struct FResTalentRefund& Response); // Function Icarus.BackendProxyComponent.OnTalentRefundFailure // (Final|Native|Public|HasOutParms) // @ game+0x1641fc0
	void OnSyncCharacterTalentsSuccess(struct FResSyncCharacterTalents& Response); // Function Icarus.BackendProxyComponent.OnSyncCharacterTalentsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641ee0
	void OnSyncCharacterTalentsFailure(struct FResSyncCharacterTalents& Response); // Function Icarus.BackendProxyComponent.OnSyncCharacterTalentsFailure // (Final|Native|Public|HasOutParms) // @ game+0x1641e00
	void OnSyncAccountTalentsSuccess(struct FResSyncAccountTalents& Response); // Function Icarus.BackendProxyComponent.OnSyncAccountTalentsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641d20
	void OnSyncAccountTalentsFailure(struct FResSyncAccountTalents& Response); // Function Icarus.BackendProxyComponent.OnSyncAccountTalentsFailure // (Final|Native|Public|HasOutParms) // @ game+0x1641c40
	void OnShiftMetaItemRequestSuccess(struct FResMoveMetaInventoryItem& Response); // Function Icarus.BackendProxyComponent.OnShiftMetaItemRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641b60
	void OnShiftMetaItemRequestFailure(struct FResMoveMetaInventoryItem& Response); // Function Icarus.BackendProxyComponent.OnShiftMetaItemRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x1641a80
	void OnSettleProspectSuccess(struct FResSettleProspect& Response); // Function Icarus.BackendProxyComponent.OnSettleProspectSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641900
	void OnSettleProspectFailure(struct FResSettleProspect& Response); // Function Icarus.BackendProxyComponent.OnSettleProspectFailure // (Final|Native|Public|HasOutParms) // @ game+0x1641780
	void OnReplicateWorkshopItemSuccess(struct FResReplicateWorkshopItem& Response); // Function Icarus.BackendProxyComponent.OnReplicateWorkshopItemSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641620
	void OnReplicateWorkshopItemFailure(struct FResReplicateWorkshopItem& Response); // Function Icarus.BackendProxyComponent.OnReplicateWorkshopItemFailure // (Final|Native|Public|HasOutParms) // @ game+0x16414c0
	void OnRep_WorkshopPacks(); // Function Icarus.BackendProxyComponent.OnRep_WorkshopPacks // (Final|Native|Public) // @ game+0xe3ae30
	void OnRep_PreparedLoadout(); // Function Icarus.BackendProxyComponent.OnRep_PreparedLoadout // (Final|Native|Public) // @ game+0x16414a0
	void OnRep_PreparedEnvirosuit(); // Function Icarus.BackendProxyComponent.OnRep_PreparedEnvirosuit // (Final|Native|Public) // @ game+0x16414a0
	void OnRep_PreparedDropship(); // Function Icarus.BackendProxyComponent.OnRep_PreparedDropship // (Final|Native|Public) // @ game+0x16414a0
	void OnRep_Notifications(); // Function Icarus.BackendProxyComponent.OnRep_Notifications // (Final|Native|Public) // @ game+0x1641480
	void OnRep_MetaResources(); // Function Icarus.BackendProxyComponent.OnRep_MetaResources // (Final|Native|Public) // @ game+0x1641460
	void OnRep_MetaInventory(); // Function Icarus.BackendProxyComponent.OnRep_MetaInventory // (Final|Native|Public) // @ game+0x1641440
	void OnRep_LoadoutInventory(); // Function Icarus.BackendProxyComponent.OnRep_LoadoutInventory // (Final|Native|Public) // @ game+0x1641420
	void OnRep_Dropships(); // Function Icarus.BackendProxyComponent.OnRep_Dropships // (Final|Native|Public) // @ game+0x1641400
	void OnRep_Credits(); // Function Icarus.BackendProxyComponent.OnRep_Credits // (Final|Native|Public) // @ game+0x16413e0
	void OnRep_CharacterLoadout(); // Function Icarus.BackendProxyComponent.OnRep_CharacterLoadout // (Final|Native|Public) // @ game+0x16413c0
	void OnRep_AvailableProspects(); // Function Icarus.BackendProxyComponent.OnRep_AvailableProspects // (Final|Native|Public) // @ game+0x16413a0
	void OnRemovePreparedEnvirosuitRequestSuccess(struct FResRemoveEnvirosuit& Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedEnvirosuitRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641220
	void OnRemovePreparedEnvirosuitRequestFailure(struct FResRemoveEnvirosuit& Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedEnvirosuitRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x16410a0
	void OnRemovePreparedDropshipRequestSuccess(struct FResRemoveSelectedDropship& Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedDropshipRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1641000
	void OnRemovePreparedDropshipRequestFailure(struct FResRemoveSelectedDropship& Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedDropshipRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x1640f60
	void OnRemoveMetaItemRequestSuccess(struct FResRemoveMetaInventoryItem& Response); // Function Icarus.BackendProxyComponent.OnRemoveMetaItemRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640e40
	void OnRemoveMetaItemRequestFailure(struct FResRemoveMetaInventoryItem& Response); // Function Icarus.BackendProxyComponent.OnRemoveMetaItemRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x1640d20
	void OnReadNotificationSuccess(struct FResReadNotification& Response); // Function Icarus.BackendProxyComponent.OnReadNotificationSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640c70
	void OnReadNotificationFailure(struct FResReadNotification& Response); // Function Icarus.BackendProxyComponent.OnReadNotificationFailure // (Final|Native|Public|HasOutParms) // @ game+0x1640bc0
	void OnPrepareEnvirosuitRequestSuccess(struct FResSelectEnvirosuit& Response); // Function Icarus.BackendProxyComponent.OnPrepareEnvirosuitRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640840
	void OnPrepareEnvirosuitRequestFailure(struct FResSelectEnvirosuit& Response); // Function Icarus.BackendProxyComponent.OnPrepareEnvirosuitRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x16406c0
	void OnPrepareDropshipRequestSuccess(struct FResSelectDropship& Response); // Function Icarus.BackendProxyComponent.OnPrepareDropshipRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640620
	void OnPrepareDropshipRequestFailure(struct FResSelectDropship& Response); // Function Icarus.BackendProxyComponent.OnPrepareDropshipRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x1640580
	void OnPreparedLoadoutRequestSuccess(struct FResPreparedLoadout& Response); // Function Icarus.BackendProxyComponent.OnPreparedLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640ac0
	void OnPreparedLoadoutRequestFailure(struct FResPreparedLoadout& Response); // Function Icarus.BackendProxyComponent.OnPreparedLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x16409c0
	void OnPackageLoadoutRequestFailure(struct FResPackageLoadout& Response); // Function Icarus.BackendProxyComponent.OnPackageLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x16403d0
	void OnOnPackageLoadoutRequestSuccess(struct FResPackageLoadout& Response); // Function Icarus.BackendProxyComponent.OnOnPackageLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640220
	void OnModifyDropshipsRequestSuccess(struct FResModifyDropship& Response); // Function Icarus.BackendProxyComponent.OnModifyDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x1640070
	void OnModifyDropshipsRequestFailure(struct FResModifyDropship& Response); // Function Icarus.BackendProxyComponent.OnModifyDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163fec0
	void OnMetaResourcesRequestSuccess(struct FResGetMetaResources& Response); // Function Icarus.BackendProxyComponent.OnMetaResourcesRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163fde0
	void OnMetaResourcesRequestFailure(struct FResGetMetaResources& Response); // Function Icarus.BackendProxyComponent.OnMetaResourcesRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163fd00
	void OnLoadoutInventoryRequest(struct FResLoadoutInventory& Response); // Function Icarus.BackendProxyComponent.OnLoadoutInventoryRequest // (Final|Native|Public|HasOutParms) // @ game+0x163fbf0
	void OnInventoryRequestSuccess(struct FResGetMetaInventory& Response); // Function Icarus.BackendProxyComponent.OnInventoryRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163fad0
	void OnInventoryRequestFailure(struct FResGetMetaInventory& Response); // Function Icarus.BackendProxyComponent.OnInventoryRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163f9b0
	void OnGetUserProfileSuccess(struct FResGetUserProfile& Response); // Function Icarus.BackendProxyComponent.OnGetUserProfileSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163f860
	void OnGetUserProfileFailure(struct FResGetUserProfile& Response); // Function Icarus.BackendProxyComponent.OnGetUserProfileFailure // (Final|Native|Public|HasOutParms) // @ game+0x163f710
	void OnGetNotificationsSuccess(struct FResGetNotifications& Response); // Function Icarus.BackendProxyComponent.OnGetNotificationsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163f5c0
	void OnGetNotificationsFailure(struct FResGetNotifications& Response); // Function Icarus.BackendProxyComponent.OnGetNotificationsFailure // (Final|Native|Public|HasOutParms) // @ game+0x163f470
	void OnGetDropshipsRequestSuccess(struct FResGetDropships& Response); // Function Icarus.BackendProxyComponent.OnGetDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163f2d0
	void OnGetDropshipsRequestFailure(struct FResGetDropships& Response); // Function Icarus.BackendProxyComponent.OnGetDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163f130
	void OnGetCreditsRequestSuccess(struct FResGetCredits& Response); // Function Icarus.BackendProxyComponent.OnGetCreditsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163f090
	void OnGetCreditsRequestFailure(struct FResGetCredits& Response); // Function Icarus.BackendProxyComponent.OnGetCreditsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163eff0
	void OnGetCharacterProfileSuccess(struct FResGetCharacterProfile& Response); // Function Icarus.BackendProxyComponent.OnGetCharacterProfileSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163ee60
	void OnGetCharacterProfileFailure(struct FResGetCharacterProfile& Response); // Function Icarus.BackendProxyComponent.OnGetCharacterProfileFailure // (Final|Native|Public|HasOutParms) // @ game+0x163ecd0
	void OnGetAllProspectsSuccess(struct FResGetAllProspects& Response); // Function Icarus.BackendProxyComponent.OnGetAllProspectsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163ebb0
	void OnGetAllProspectsFailure(struct FResGetAllProspects& Response); // Function Icarus.BackendProxyComponent.OnGetAllProspectsFailure // (Final|Native|Public|HasOutParms) // @ game+0x163ea90
	void OnFactionMissionUpdateSuccess(struct FResUpdateFactionMissionProgress& Response); // Function Icarus.BackendProxyComponent.OnFactionMissionUpdateSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163ea00
	void OnFactionMissionUpdateFailure(struct FResUpdateFactionMissionProgress& Response); // Function Icarus.BackendProxyComponent.OnFactionMissionUpdateFailure // (Final|Native|Public|HasOutParms) // @ game+0x163e970
	void OnExchangeCurrencySuccess(struct FResExchangeCurrency& Response); // Function Icarus.BackendProxyComponent.OnExchangeCurrencySuccess // (Final|Native|Public|HasOutParms) // @ game+0x163e890
	void OnExchangeCurrencyFailure(struct FResExchangeCurrency& Response); // Function Icarus.BackendProxyComponent.OnExchangeCurrencyFailure // (Final|Native|Public|HasOutParms) // @ game+0x163e7b0
	void OnDeleteNotificationSuccess(struct FResDeleteNotification& Response); // Function Icarus.BackendProxyComponent.OnDeleteNotificationSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163e700
	void OnDeleteNotificationFailure(struct FResDeleteNotification& Response); // Function Icarus.BackendProxyComponent.OnDeleteNotificationFailure // (Final|Native|Public|HasOutParms) // @ game+0x163e650
	void OnDeleteDropshipsRequestSuccess(struct FResDeleteDropship& Response); // Function Icarus.BackendProxyComponent.OnDeleteDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163e530
	void OnDeleteDropshipsRequestFailure(struct FResDeleteDropship& Response); // Function Icarus.BackendProxyComponent.OnDeleteDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163e410
	void OnCreateDropshipsRequestSuccess(struct FResCreateDropship& Response); // Function Icarus.BackendProxyComponent.OnCreateDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163e260
	void OnCreateDropshipsRequestFailure(struct FResCreateDropship& Response); // Function Icarus.BackendProxyComponent.OnCreateDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163e0b0
	void OnClaimProspectSuccess(struct FResClaimProspect& Response); // Function Icarus.BackendProxyComponent.OnClaimProspectSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163df30
	void OnClaimProspectFailure(struct FResClaimProspect& Response); // Function Icarus.BackendProxyComponent.OnClaimProspectFailure // (Final|Native|Public|HasOutParms) // @ game+0x163ddb0
	void OnClaimNotificationAttachmentsSuccess(struct FResClaimNotificationAttachments& Response); // Function Icarus.BackendProxyComponent.OnClaimNotificationAttachmentsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163dc40
	void OnClaimNotificationAttachmentsFailure(struct FResClaimNotificationAttachments& Response); // Function Icarus.BackendProxyComponent.OnClaimNotificationAttachmentsFailure // (Final|Native|Public|HasOutParms) // @ game+0x163dad0
	void OnCharacterLoadoutRequestSuccess(struct FResGetCharacterLoadout& Response); // Function Icarus.BackendProxyComponent.OnCharacterLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163da20
	void OnCharacterLoadoutRequestFailure(struct FResGetCharacterLoadout& Response); // Function Icarus.BackendProxyComponent.OnCharacterLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163d970
	void OnBackToHabSuccess(struct FResBackToHab& Response); // Function Icarus.BackendProxyComponent.OnBackToHabSuccess // (Final|Native|Public|HasOutParms) // @ game+0x163d8e0
	void OnBackToHabFailure(struct FResBackToHab& Response); // Function Icarus.BackendProxyComponent.OnBackToHabFailure // (Final|Native|Public|HasOutParms) // @ game+0x163d850
	void LoadoutInventoryRequestFailure(struct FResLoadoutInventory& Response); // Function Icarus.BackendProxyComponent.LoadoutInventoryRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x163d190
	struct TArray<struct FProspectInfo> GetProspects(); // Function Icarus.BackendProxyComponent.GetProspects // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cfa0
	struct TArray<struct FNotification> GetNotifications(); // Function Icarus.BackendProxyComponent.GetNotifications // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cf60
	struct TArray<struct FMetaResource> GetMetaResources(); // Function Icarus.BackendProxyComponent.GetMetaResources // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cf20
	struct TArray<struct FMetaItem> GetMetaInventory(); // Function Icarus.BackendProxyComponent.GetMetaInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cee0
	struct TArray<struct FMetaItem> GetLoadoutInventory(); // Function Icarus.BackendProxyComponent.GetLoadoutInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cea0
	struct TArray<struct FDropship> GetDropships(); // Function Icarus.BackendProxyComponent.GetDropships // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163ce60
	int32_t GetCredits(); // Function Icarus.BackendProxyComponent.GetCredits // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163ce30
	struct FCharacterLoadout GetCharacterLoadout(); // Function Icarus.BackendProxyComponent.GetCharacterLoadout // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x163cdf0
	bool CanPerformCurrencyConversion(struct FCurrencyConversionsRowHandle Conversion, int32_t Iterations); // Function Icarus.BackendProxyComponent.CanPerformCurrencyConversion // (Final|Native|Public|BlueprintCallable) // @ game+0x163c810
};

// Class Icarus.BallisticComponent
// Size: 0x3f0 (Inherited: 0xd0)
struct UBallisticComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnFireProjectile; // 0xd0(0x01)
	bool bHasBeenFired; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
	struct UIcarusProjectileComponent* ProjectileMovementComponent; // 0xd8(0x08)
	struct USphereComponent* CollisionComponent; // 0xe0(0x08)
	struct FMulticastSparseDelegate OnProjectileHit; // 0xe8(0x01)
	bool bIsProjectileActive; // 0xe9(0x01)
	char pad_EA[0x6]; // 0xea(0x06)
	struct FBallisticData CachedBallisticData; // 0xf0(0x1d8)
	struct AActor* FiringActor; // 0x2c8(0x08)
	char pad_2D0[0x120]; // 0x2d0(0x120)

	void SetProjectileActive(bool Active); // Function Icarus.BallisticComponent.SetProjectileActive // (Final|Native|Public|BlueprintCallable) // @ game+0x164b450
	void ProjectileHit(struct FHitResult& Hit); // Function Icarus.BallisticComponent.ProjectileHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x164ad50
	void ProjectileBounce(struct FHitResult& Hit, struct FVector& ImpactVelocity); // Function Icarus.BallisticComponent.ProjectileBounce // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x164ac20
	void OnRep_bIsProjectileActive(); // Function Icarus.BallisticComponent.OnRep_bIsProjectileActive // (Final|Native|Protected) // @ game+0x164ac00
	void OnProjectileDeactivated(); // Function Icarus.BallisticComponent.OnProjectileDeactivated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1613bb0
	void OnProjectileActivated(); // Function Icarus.BallisticComponent.OnProjectileActivated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1613f90
	struct FStatContainer GetDamageStatContainer(); // Function Icarus.BallisticComponent.GetDamageStatContainer // (Final|Native|Public) // @ game+0x1649bf0
	int32_t GetDamageStat(struct FStatsEnum InStat); // Function Icarus.BallisticComponent.GetDamageStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1649b40
	bool GetBallisticData(struct FBallisticData& OutData); // Function Icarus.BallisticComponent.GetBallisticData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16496c0
	void FireProjectile_Internal(struct FVector Impulse, struct FVector InstigatorVelocity, struct FProjectileFireParams AdvancedParameters, struct AActor* FiredBy); // Function Icarus.BallisticComponent.FireProjectile_Internal // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1649550
	void FireProjectile(struct FVector Impulse, struct FVector InstigatorVelocity, struct FProjectileFireParams AdvancedParameters, struct AActor* Instigator); // Function Icarus.BallisticComponent.FireProjectile // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x16493e0
	bool CleanupBallistic(); // Function Icarus.BallisticComponent.CleanupBallistic // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1613120
	void CheckWithinCullDistance(); // Function Icarus.BallisticComponent.CheckWithinCullDistance // (Final|Native|Protected) // @ game+0x1648d60
};

// Class Icarus.BallisticLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBallisticLibrary : URowLibrary {

	struct FBallisticRowHandle StructToRowHandle(struct FBallisticEnum EnumValue); // Function Icarus.BallisticLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b760
	struct UE4::FName StructToName(struct FBallisticEnum EnumValue); // Function Icarus.BallisticLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b620
	int32_t StructToInt(struct FBallisticEnum EnumValue); // Function Icarus.BallisticLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b4e0
	struct FBallisticEnum RowHandleToStruct(struct FBallisticRowHandle RowHandle); // Function Icarus.BallisticLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b200
	void RemoveRowFromBallisticTable(struct UE4::FName Name); // Function Icarus.BallisticLibrary.RemoveRowFromBallisticTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x164ae70
	void RefreshConstants(); // Function Icarus.BallisticLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x164ae30
	int32_t NumRows(); // Function Icarus.BallisticLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164aba0
	bool NotEqual_EnumName(struct FBallisticEnum A, struct UE4::FName B); // Function Icarus.BallisticLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a9c0
	bool NotEqual_EnumEnum(struct FBallisticEnum A, struct FBallisticEnum B); // Function Icarus.BallisticLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a7e0
	struct FBallisticEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BallisticLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a6c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BallisticLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x164a5a0
	struct FBallisticRowHandle MakeLiteralBallistic(struct FBallisticRowHandle RowHandle); // Function Icarus.BallisticLibrary.MakeLiteralBallistic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a400
	struct FBallisticRowHandle MakeBallisticFromIndex(int32_t Index); // Function Icarus.BallisticLibrary.MakeBallisticFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a130
	struct FBallisticEnum MakeBallisticEnum(struct FBallisticEnum Enum); // Function Icarus.BallisticLibrary.MakeBallisticEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a0b0
	struct FBallisticRowHandle MakeBallistic(struct UE4::FName RowName); // Function Icarus.BallisticLibrary.MakeBallistic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a010
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BallisticLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1649ef0
	struct FBallisticEnum IntToStruct(int32_t IntValue); // Function Icarus.BallisticLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1649dd0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BallisticLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1649cb0
	void GetBallisticStruct(struct FBallisticRowHandle RowHandle, struct FBallisticData& Ballistic, enum class EValid& Paths); // Function Icarus.BallisticLibrary.GetBallisticStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1649820
	bool EqualEqual_FBallisticRowHandleFBallisticRowHandle(struct FBallisticRowHandle RowHandleA, struct FBallisticRowHandle RowHandleB); // Function Icarus.BallisticLibrary.EqualEqual_FBallisticRowHandleFBallisticRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16490d0
	bool EqualEqual_EnumEnum(struct FBallisticEnum A, struct FBallisticEnum B); // Function Icarus.BallisticLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1648ef0
	struct FBallisticRowHandle CastToBallisticRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BallisticLibrary.CastToBallisticRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1648b20
	void BreakBallisticEnum(struct FBallisticEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BallisticLibrary.BreakBallisticEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1648700
	void AddRowToBallisticTable(struct UE4::FName Name, struct FBallisticData Data, struct FBallisticRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BallisticLibrary.AddRowToBallisticTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16482d0
};

// Class Icarus.BallisticPoolManager
// Size: 0x100 (Inherited: 0xb0)
struct UBallisticPoolManager : UActorComponent {
	char pad_B0[0x50]; // 0xb0(0x50)

	struct AIcarusItem* RequestProjectile(struct FItemData& ProjectileData, struct FTransform& SpawnTransform, struct AActor* Owner); // Function Icarus.BallisticPoolManager.RequestProjectile // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x164af70
	void DestroyProjectile(struct AIcarusItem* InProjectile, bool bSkipPoolRemoval); // Function Icarus.BallisticPoolManager.DestroyProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x1648e20
	bool DeactivateProjectile(struct AIcarusItem* InProjectile); // Function Icarus.BallisticPoolManager.DeactivateProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x1648d80
};

// Class Icarus.BallisticTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBallisticTable : UIcarusDataTable {
};

// Class Icarus.StatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatsLibrary : URowLibrary {

	struct FStatsRowHandle StructToRowHandle(struct FStatsEnum EnumValue); // Function Icarus.StatsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852da0
	struct UE4::FName StructToName(struct FStatsEnum EnumValue); // Function Icarus.StatsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852c60
	int32_t StructToInt(struct FStatsEnum EnumValue); // Function Icarus.StatsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852b20
	struct FStatsEnum RowHandleToStruct(struct FStatsRowHandle RowHandle); // Function Icarus.StatsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852830
	void RemoveRowFromStatsTable(struct UE4::FName Name); // Function Icarus.StatsLibrary.RemoveRowFromStatsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1852640
	void RefreshConstants(); // Function Icarus.StatsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1852600
	int32_t NumRows(); // Function Icarus.StatsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18522c0
	bool NotEqual_EnumName(struct FStatsEnum A, struct UE4::FName B); // Function Icarus.StatsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18520e0
	bool NotEqual_EnumEnum(struct FStatsEnum A, struct FStatsEnum B); // Function Icarus.StatsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851f00
	struct FStatsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.StatsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851de0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.StatsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1851cc0
	struct FStatsRowHandle MakeStatsFromIndex(int32_t Index); // Function Icarus.StatsLibrary.MakeStatsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851910
	struct FStatsEnum MakeStatsEnum(struct FStatsEnum Enum); // Function Icarus.StatsLibrary.MakeStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851890
	struct FStatsRowHandle MakeStats(struct UE4::FName RowName); // Function Icarus.StatsLibrary.MakeStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18517f0
	struct FStatsRowHandle MakeLiteralStats(struct FStatsRowHandle RowHandle); // Function Icarus.StatsLibrary.MakeLiteralStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851650
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.StatsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1851530
	struct FStatsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851410
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.StatsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18512f0
	void GetStatsStruct(struct FStatsRowHandle RowHandle, struct FIcarusStatDescription& Stats, enum class EValid& Paths); // Function Icarus.StatsLibrary.GetStatsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1850c20
	bool EqualEqual_FStatsRowHandleFStatsRowHandle(struct FStatsRowHandle RowHandleA, struct FStatsRowHandle RowHandleB); // Function Icarus.StatsLibrary.EqualEqual_FStatsRowHandleFStatsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1850320
	bool EqualEqual_EnumEnum(struct FStatsEnum A, struct FStatsEnum B); // Function Icarus.StatsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1850140
	struct FStatsRowHandle CastToStatsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.StatsLibrary.CastToStatsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184fd50
	void BreakStatsEnum(struct FStatsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.StatsLibrary.BreakStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x184fa90
	void AddRowToStatsTable(struct UE4::FName Name, struct FIcarusStatDescription Data, struct FStatsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.StatsLibrary.AddRowToStatsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184f6e0
};

// Class Icarus.BaseStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBaseStatsLibrary : UStatsLibrary {

	struct FBaseStatsEnum MakeBaseStatsEnum(struct FBaseStatsEnum Enum); // Function Icarus.BaseStatsLibrary.MakeBaseStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a1c0
	bool Filter(int32_t Index); // Function Icarus.BaseStatsLibrary.Filter // (Final|Native|Static|Public) // @ game+0x1649350
	void BreakBaseStatsEnum(struct FBaseStatsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BaseStatsLibrary.BreakBaseStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1648860
};

// Class Icarus.BedRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UBedRecorderInterface : UInterface {

	void SetPlayerUIDArray(struct TArray<struct FString>& PlayerUIDArray); // Function Icarus.BedRecorderInterface.SetPlayerUIDArray // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x164b380
	struct TArray<struct FString> GetPlayerUIDArray(); // Function Icarus.BedRecorderInterface.GetPlayerUIDArray // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1649c30
};

// Class Icarus.ItemStateRecorderComponent
// Size: 0x1c0 (Inherited: 0x160)
struct UItemStateRecorderComponent : UActorStateRecorderComponent {
	struct UE4::FName StaticItemDataRowName; // 0x158(0x08)
	struct FString DatabaseGUID; // 0x160(0x10)
	struct TArray<struct FItemRecordDynamicData> DynamicData; // 0x170(0x10)
	struct TArray<struct FItemRecordStatData> Stats; // 0x180(0x10)
	enum class EIcarusItemContext SpawnedContext; // 0x190(0x01)
	struct FIcarusItemConstructionParameters ConstructionParameters; // 0x198(0x28)
};

// Class Icarus.DeployableRecorderComponent
// Size: 0x1e0 (Inherited: 0x1c0)
struct UDeployableRecorderComponent : UItemStateRecorderComponent {
	struct FDeployableRecord DeployableRecord; // 0x1c0(0x20)
};

// Class Icarus.BedRecorderComponent
// Size: 0x1f0 (Inherited: 0x1e0)
struct UBedRecorderComponent : UDeployableRecorderComponent {
	struct TArray<struct FString> PlayerUIDArrayRecord; // 0x1e0(0x10)
};

// Class Icarus.BiomeAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBiomeAudioDataLibrary : URowLibrary {

	struct FBiomeAudioDataRowHandle StructToRowHandle(struct FBiomeAudioDataEnum EnumValue); // Function Icarus.BiomeAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b810
	struct UE4::FName StructToName(struct FBiomeAudioDataEnum EnumValue); // Function Icarus.BiomeAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b6c0
	int32_t StructToInt(struct FBiomeAudioDataEnum EnumValue); // Function Icarus.BiomeAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b580
	struct FBiomeAudioDataEnum RowHandleToStruct(struct FBiomeAudioDataRowHandle RowHandle); // Function Icarus.BiomeAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b2c0
	void RemoveRowFromBiomeAudioDataTable(struct UE4::FName Name); // Function Icarus.BiomeAudioDataLibrary.RemoveRowFromBiomeAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x164aef0
	void RefreshConstants(); // Function Icarus.BiomeAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x164ae50
	int32_t NumRows(); // Function Icarus.BiomeAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164abd0
	bool NotEqual_EnumName(struct FBiomeAudioDataEnum A, struct UE4::FName B); // Function Icarus.BiomeAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164aab0
	bool NotEqual_EnumEnum(struct FBiomeAudioDataEnum A, struct FBiomeAudioDataEnum B); // Function Icarus.BiomeAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a8d0
	struct FBiomeAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BiomeAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a750
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BiomeAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x164a630
	struct FBiomeAudioDataRowHandle MakeLiteralBiomeAudioData(struct FBiomeAudioDataRowHandle RowHandle); // Function Icarus.BiomeAudioDataLibrary.MakeLiteralBiomeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a4d0
	struct FBiomeAudioDataRowHandle MakeBiomeAudioDataFromIndex(int32_t Index); // Function Icarus.BiomeAudioDataLibrary.MakeBiomeAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a370
	struct FBiomeAudioDataEnum MakeBiomeAudioDataEnum(struct FBiomeAudioDataEnum Enum); // Function Icarus.BiomeAudioDataLibrary.MakeBiomeAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a2f0
	struct FBiomeAudioDataRowHandle MakeBiomeAudioData(struct UE4::FName RowName); // Function Icarus.BiomeAudioDataLibrary.MakeBiomeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a250
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BiomeAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1649f80
	struct FBiomeAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.BiomeAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1649e60
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BiomeAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1649d40
	void GetBiomeAudioDataStruct(struct FBiomeAudioDataRowHandle RowHandle, struct FBiomeAudioData& BiomeAudioData, enum class EValid& Paths); // Function Icarus.BiomeAudioDataLibrary.GetBiomeAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16499a0
	bool EqualEqual_FBiomeAudioDataRowHandleFBiomeAudioDataRowHandle(struct FBiomeAudioDataRowHandle RowHandleA, struct FBiomeAudioDataRowHandle RowHandleB); // Function Icarus.BiomeAudioDataLibrary.EqualEqual_FBiomeAudioDataRowHandleFBiomeAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1649210
	bool EqualEqual_EnumEnum(struct FBiomeAudioDataEnum A, struct FBiomeAudioDataEnum B); // Function Icarus.BiomeAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1648fe0
	struct FBiomeAudioDataRowHandle CastToBiomeAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BiomeAudioDataLibrary.CastToBiomeAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1648c40
	void BreakBiomeAudioDataEnum(struct FBiomeAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BiomeAudioDataLibrary.BreakBiomeAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16489c0
	void AddRowToBiomeAudioDataTable(struct UE4::FName Name, struct FBiomeAudioData Data, struct FBiomeAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BiomeAudioDataLibrary.AddRowToBiomeAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16484a0
};

// Class Icarus.BiomeAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBiomeAudioDataTable : UIcarusDataTable {
};

// Class Icarus.BiomesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBiomesLibrary : URowLibrary {

	struct FBiomesRowHandle StructToRowHandle(struct FBiomesEnum EnumValue); // Function Icarus.BiomesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652ca0
	struct UE4::FName StructToName(struct FBiomesEnum EnumValue); // Function Icarus.BiomesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652ac0
	int32_t StructToInt(struct FBiomesEnum EnumValue); // Function Icarus.BiomesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16528e0
	struct FBiomesEnum RowHandleToStruct(struct FBiomesRowHandle RowHandle); // Function Icarus.BiomesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16526a0
	void RemoveRowFromBiomesTable(struct UE4::FName Name); // Function Icarus.BiomesLibrary.RemoveRowFromBiomesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1652520
	void RefreshConstants(); // Function Icarus.BiomesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16524c0
	int32_t NumRows(); // Function Icarus.BiomesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652430
	bool NotEqual_EnumName(struct FBiomesEnum A, struct UE4::FName B); // Function Icarus.BiomesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652160
	bool NotEqual_EnumEnum(struct FBiomesEnum A, struct FBiomesEnum B); // Function Icarus.BiomesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651e90
	struct FBiomesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BiomesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651ce0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BiomesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1651b30
	struct FBiomesRowHandle MakeLiteralBiomes(struct FBiomesRowHandle RowHandle); // Function Icarus.BiomesLibrary.MakeLiteralBiomes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16518c0
	struct FBiomesRowHandle MakeBiomesRowFromColor(struct FColor& InColor); // Function Icarus.BiomesLibrary.MakeBiomesRowFromColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x16514c0
	struct FBiomesRowHandle MakeBiomesFromIndex(int32_t Index); // Function Icarus.BiomesLibrary.MakeBiomesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651430
	struct FBiomesEnum MakeBiomesEnum(struct FBiomesEnum Enum); // Function Icarus.BiomesLibrary.MakeBiomesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16513b0
	struct FBiomesRowHandle MakeBiomes(struct UE4::FName RowName); // Function Icarus.BiomesLibrary.MakeBiomes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651310
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BiomesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1651160
	struct FBiomesEnum IntToStruct(int32_t IntValue); // Function Icarus.BiomesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650fb0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BiomesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1650e00
	void GetBiomesStruct(struct FBiomesRowHandle RowHandle, struct FIcarusBiome& Biomes, enum class EValid& Paths); // Function Icarus.BiomesLibrary.GetBiomesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650900
	bool EqualEqual_FBiomesRowHandleFBiomesRowHandle(struct FBiomesRowHandle RowHandleA, struct FBiomesRowHandle RowHandleB); // Function Icarus.BiomesLibrary.EqualEqual_FBiomesRowHandleFBiomesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650540
	bool EqualEqual_EnumEnum(struct FBiomesEnum A, struct FBiomesEnum B); // Function Icarus.BiomesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650270
	struct FBiomesRowHandle CastToBiomesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BiomesLibrary.CastToBiomesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164ff10
	void BreakBiomesEnum(struct FBiomesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BiomesLibrary.BreakBiomesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x164faf0
	void AddRowToBiomesTable(struct UE4::FName Name, struct FIcarusBiome Data, struct FBiomesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BiomesLibrary.AddRowToBiomesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164f250
};

// Class Icarus.BiomesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBiomesTable : UIcarusDataTable {
};

// Class Icarus.BlockerSpawnerRecorderComponent
// Size: 0x180 (Inherited: 0x160)
struct UBlockerSpawnerRecorderComponent : UActorStateRecorderComponent {
	bool bHasSpawned; // 0x158(0x01)
	struct FPersistentBlockerRecord PersistentBlockerRecord; // 0x160(0x20)
};

// Class Icarus.TalentControllerComponent
// Size: 0xf8 (Inherited: 0xb0)
struct UTalentControllerComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FMulticastInlineDelegate OnModelViewChangedEvent; // 0xb8(0x10)
	struct UTalentModelInterface* Model; // 0xc8(0x08)
	struct UTalentViewInterface* View; // 0xd0(0x08)
	char pad_D8[0x20]; // 0xd8(0x20)

	void TriggerModelStateRefresh(); // Function Icarus.TalentControllerComponent.TriggerModelStateRefresh // (Final|Native|Protected) // @ game+0x185ec20
	void Setup(); // Function Icarus.TalentControllerComponent.Setup // (Native|Public) // @ game+0x185ea10
	void OnSessionFlagsUpdated(); // Function Icarus.TalentControllerComponent.OnSessionFlagsUpdated // (Final|Native|Protected) // @ game+0x185e390
	void OnModelViewChanged(struct UTalentModelInterface* InModel, struct UTalentViewInterface* InView); // Function Icarus.TalentControllerComponent.OnModelViewChanged // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnLevelUp(); // Function Icarus.TalentControllerComponent.OnLevelUp // (Final|Native|Protected) // @ game+0x185e3b0
	void OnCharacterFlagsUpdated(); // Function Icarus.TalentControllerComponent.OnCharacterFlagsUpdated // (Final|Native|Protected) // @ game+0x185e390
	void OnAccountFlagsUpdated(); // Function Icarus.TalentControllerComponent.OnAccountFlagsUpdated // (Final|Native|Protected) // @ game+0x185e390
	void NativeModelStateChanged(struct UTalentModelInterface_Const* InModel); // Function Icarus.TalentControllerComponent.NativeModelStateChanged // (Final|Native|Public) // @ game+0x185e0f0
};

// Class Icarus.BlueprintTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UBlueprintTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.TalentModelInterface_Const
// Size: 0xe8 (Inherited: 0x28)
struct UTalentModelInterface_Const : UObject {
	struct FMulticastInlineDelegate OnModelStateChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnModelTalentStateChanged; // 0x38(0x10)
	char pad_48[0xa0]; // 0x48(0xa0)

	void OnModelViewChanged(struct UTalentModelInterface* InModel, struct UTalentViewInterface* InView); // Function Icarus.TalentModelInterface_Const.OnModelViewChanged // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	bool IsTalentUnlocked(struct FTalentsRowHandle& Talent); // Function Icarus.TalentModelInterface_Const.IsTalentUnlocked // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185dc10
	int32_t GetTotalTalentsForTree(struct FTalentTreesRowHandle& TalentTree); // Function Icarus.TalentModelInterface_Const.GetTotalTalentsForTree // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d8b0
	int32_t GetTotalPoints(); // Function Icarus.TalentModelInterface_Const.GetTotalPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d880
	struct TArray<struct FTalentTreesRowHandle> GetTalentTreesForArchetype(struct FTalentArchetypesRowHandle Archetype); // Function Icarus.TalentModelInterface_Const.GetTalentTreesForArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d5e0
	struct TArray<struct FTalentTreesRowHandle> GetTalentTrees(); // Function Icarus.TalentModelInterface_Const.GetTalentTrees // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d540
	bool GetTalentState(struct FTalentsRowHandle& Talent, struct FTalentModelData& OutData); // Function Icarus.TalentModelInterface_Const.GetTalentState // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d350
	struct TArray<struct FTalentsRowHandle> GetTalents(); // Function Icarus.TalentModelInterface_Const.GetTalents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d6e0
	int32_t GetTalentRank(struct FTalentsRowHandle& Talent); // Function Icarus.TalentModelInterface_Const.GetTalentRank // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d1d0
	int32_t GetSpentPointsForTree(struct FTalentTreesRowHandle& TalentTree); // Function Icarus.TalentModelInterface_Const.GetSpentPointsForTree // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cf70
	int32_t GetSpentPoints(); // Function Icarus.TalentModelInterface_Const.GetSpentPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cf40
	int32_t GetPointsForLevel(int32_t InLevel); // Function Icarus.TalentModelInterface_Const.GetPointsForLevel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cdd0
	struct FTalentModelsRowHandle GetModelRowHandle(); // Function Icarus.TalentModelInterface_Const.GetModelRowHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cc80
	struct FTalentModelsRowHandle GetModelData(); // Function Icarus.TalentModelInterface_Const.GetModelData // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cc40
	int32_t GetLevel(); // Function Icarus.TalentModelInterface_Const.GetLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cb10
	struct TScriptInterface<ITalentControllerInterface> GetController(); // Function Icarus.TalentModelInterface_Const.GetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cad0
	int32_t GetAvailablePoints(); // Function Icarus.TalentModelInterface_Const.GetAvailablePoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185caa0
	struct TArray<struct FTalentArchetypesRowHandle> GetArchetypes(); // Function Icarus.TalentModelInterface_Const.GetArchetypes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185ca00
	bool DoesModelContainTalent(struct FTalentsRowHandle& Talent); // Function Icarus.TalentModelInterface_Const.DoesModelContainTalent // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185c630
	bool CanUnlockTalent(struct FTalentsRowHandle& Talent, int32_t Rank); // Function Icarus.TalentModelInterface_Const.CanUnlockTalent // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x185c410
};

// Class Icarus.TalentModelInterface
// Size: 0xe8 (Inherited: 0xe8)
struct UTalentModelInterface : UTalentModelInterface_Const {

	void SetLevel(int32_t InLevel); // Function Icarus.TalentModelInterface.SetLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x185e740
	void SetController(struct TScriptInterface<ITalentControllerInterface>& InController); // Function Icarus.TalentModelInterface.SetController // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x185e610
	void ResetTalents(); // Function Icarus.TalentModelInterface.ResetTalents // (Final|Native|Public|BlueprintCallable) // @ game+0x185e530
};

// Class Icarus.BlueprintTalentModel
// Size: 0xe8 (Inherited: 0xe8)
struct UBlueprintTalentModel : UTalentModelInterface {
};

// Class Icarus.BlueprintUnlocksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBlueprintUnlocksLibrary : URowLibrary {

	struct FBlueprintUnlocksRowHandle StructToRowHandle(struct FBlueprintUnlocksEnum EnumValue); // Function Icarus.BlueprintUnlocksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652d50
	struct UE4::FName StructToName(struct FBlueprintUnlocksEnum EnumValue); // Function Icarus.BlueprintUnlocksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652b60
	int32_t StructToInt(struct FBlueprintUnlocksEnum EnumValue); // Function Icarus.BlueprintUnlocksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652980
	struct FBlueprintUnlocksEnum RowHandleToStruct(struct FBlueprintUnlocksRowHandle RowHandle); // Function Icarus.BlueprintUnlocksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652760
	void RemoveRowFromBlueprintUnlocksTable(struct UE4::FName Name); // Function Icarus.BlueprintUnlocksLibrary.RemoveRowFromBlueprintUnlocksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16525a0
	void RefreshConstants(); // Function Icarus.BlueprintUnlocksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16524e0
	int32_t NumRows(); // Function Icarus.BlueprintUnlocksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652460
	bool NotEqual_EnumName(struct FBlueprintUnlocksEnum A, struct UE4::FName B); // Function Icarus.BlueprintUnlocksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652250
	bool NotEqual_EnumEnum(struct FBlueprintUnlocksEnum A, struct FBlueprintUnlocksEnum B); // Function Icarus.BlueprintUnlocksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651f80
	struct FBlueprintUnlocksEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BlueprintUnlocksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651d70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BlueprintUnlocksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1651bc0
	struct FBlueprintUnlocksRowHandle MakeLiteralBlueprintUnlocks(struct FBlueprintUnlocksRowHandle RowHandle); // Function Icarus.BlueprintUnlocksLibrary.MakeLiteralBlueprintUnlocks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651990
	struct FBlueprintUnlocksRowHandle MakeBlueprintUnlocksFromIndex(int32_t Index); // Function Icarus.BlueprintUnlocksLibrary.MakeBlueprintUnlocksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651680
	struct FBlueprintUnlocksEnum MakeBlueprintUnlocksEnum(struct FBlueprintUnlocksEnum Enum); // Function Icarus.BlueprintUnlocksLibrary.MakeBlueprintUnlocksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651600
	struct FBlueprintUnlocksRowHandle MakeBlueprintUnlocks(struct UE4::FName RowName); // Function Icarus.BlueprintUnlocksLibrary.MakeBlueprintUnlocks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651560
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BlueprintUnlocksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16511f0
	struct FBlueprintUnlocksEnum IntToStruct(int32_t IntValue); // Function Icarus.BlueprintUnlocksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651040
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BlueprintUnlocksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1650e90
	void GetBlueprintUnlocksStruct(struct FBlueprintUnlocksRowHandle RowHandle, struct FBlueprintUnlock& BlueprintUnlocks, enum class EValid& Paths); // Function Icarus.BlueprintUnlocksLibrary.GetBlueprintUnlocksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650ab0
	bool EqualEqual_FBlueprintUnlocksRowHandleFBlueprintUnlocksRowHandle(struct FBlueprintUnlocksRowHandle RowHandleA, struct FBlueprintUnlocksRowHandle RowHandleB); // Function Icarus.BlueprintUnlocksLibrary.EqualEqual_FBlueprintUnlocksRowHandleFBlueprintUnlocksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650680
	bool EqualEqual_EnumEnum(struct FBlueprintUnlocksEnum A, struct FBlueprintUnlocksEnum B); // Function Icarus.BlueprintUnlocksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650360
	struct FBlueprintUnlocksRowHandle CastToBlueprintUnlocksRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BlueprintUnlocksLibrary.CastToBlueprintUnlocksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650030
	void BreakBlueprintUnlocksEnum(struct FBlueprintUnlocksEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BlueprintUnlocksLibrary.BreakBlueprintUnlocksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x164fc50
	void AddRowToBlueprintUnlocksTable(struct UE4::FName Name, struct FBlueprintUnlock Data, struct FBlueprintUnlocksRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BlueprintUnlocksLibrary.AddRowToBlueprintUnlocksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164f4e0
};

// Class Icarus.BlueprintUnlocksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBlueprintUnlocksTable : UIcarusDataTable {
};

// Class Icarus.BTComposite_SelectPseudoRandom
// Size: 0xb0 (Inherited: 0x90)
struct UBTComposite_SelectPseudoRandom : UBTCompositeNode {
	bool bAlreadyRan; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct TArray<int32_t> PossibleChildren; // 0x98(0x10)
	int32_t LastChild; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Icarus.BTComposite_SelectRandom
// Size: 0x98 (Inherited: 0x90)
struct UBTComposite_SelectRandom : UBTCompositeNode {
	bool bAlreadyRan; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Icarus.BTComposite_SequenceLoop
// Size: 0xa0 (Inherited: 0x90)
struct UBTComposite_SequenceLoop : UBTComposite_Sequence {
	int32_t LoopCount; // 0x90(0x04)
	int32_t LoopDeviation; // 0x94(0x04)
	int32_t CurrentLoopCount; // 0x98(0x04)
	int32_t ActiveLoopCount; // 0x9c(0x04)
};

// Class Icarus.BTD_CustomTagCooldown
// Size: 0x90 (Inherited: 0x68)
struct UBTD_CustomTagCooldown : UBTDecorator {
	struct FGameplayTag CooldownTag; // 0x68(0x08)
	struct FStatsEnum ActionsPerMinuteStat; // 0x70(0x10)
	float DefaultCooldownDuration; // 0x80(0x04)
	bool bAddToExistingDuration; // 0x84(0x01)
	bool bActivatesCooldown; // 0x85(0x01)
	char pad_86[0xa]; // 0x86(0x0a)
};

// Class Icarus.BTT_ExecuteFunction
// Size: 0xe0 (Inherited: 0x98)
struct UBTT_ExecuteFunction : UBTTask_BlackboardBase {
	struct FFunctionContext FunctionContext; // 0x98(0x18)
	struct FBlackboardKeySelector Target; // 0xb0(0x28)
	bool bReturnSuccessIfInvalid; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
};

// Class Icarus.BTTask_IcarusMoveTo
// Size: 0xe0 (Inherited: 0xb0)
struct UBTTask_IcarusMoveTo : UBTTask_MoveTo {
	bool bUseBlackboardDefinedAcceptanceRadius; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct FBlackboardKeySelector AcceptableRadiusKey; // 0xb8(0x28)
};

// Class Icarus.BuildableAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBuildableAudioDataLibrary : URowLibrary {

	struct FBuildableAudioDataRowHandle StructToRowHandle(struct FBuildableAudioDataEnum EnumValue); // Function Icarus.BuildableAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652e00
	struct UE4::FName StructToName(struct FBuildableAudioDataEnum EnumValue); // Function Icarus.BuildableAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652c00
	int32_t StructToInt(struct FBuildableAudioDataEnum EnumValue); // Function Icarus.BuildableAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652a20
	struct FBuildableAudioDataEnum RowHandleToStruct(struct FBuildableAudioDataRowHandle RowHandle); // Function Icarus.BuildableAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652820
	void RemoveRowFromBuildableAudioDataTable(struct UE4::FName Name); // Function Icarus.BuildableAudioDataLibrary.RemoveRowFromBuildableAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1652620
	void RefreshConstants(); // Function Icarus.BuildableAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1652500
	int32_t NumRows(); // Function Icarus.BuildableAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652490
	bool NotEqual_EnumName(struct FBuildableAudioDataEnum A, struct UE4::FName B); // Function Icarus.BuildableAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652340
	bool NotEqual_EnumEnum(struct FBuildableAudioDataEnum A, struct FBuildableAudioDataEnum B); // Function Icarus.BuildableAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1652070
	struct FBuildableAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BuildableAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651e00
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BuildableAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1651c50
	struct FBuildableAudioDataRowHandle MakeLiteralBuildableAudioData(struct FBuildableAudioDataRowHandle RowHandle); // Function Icarus.BuildableAudioDataLibrary.MakeLiteralBuildableAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651a60
	struct FBuildableAudioDataRowHandle MakeBuildableAudioDataFromIndex(int32_t Index); // Function Icarus.BuildableAudioDataLibrary.MakeBuildableAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651830
	struct FBuildableAudioDataEnum MakeBuildableAudioDataEnum(struct FBuildableAudioDataEnum Enum); // Function Icarus.BuildableAudioDataLibrary.MakeBuildableAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16517b0
	struct FBuildableAudioDataRowHandle MakeBuildableAudioData(struct UE4::FName RowName); // Function Icarus.BuildableAudioDataLibrary.MakeBuildableAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651710
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BuildableAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1651280
	struct FBuildableAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.BuildableAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16510d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BuildableAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1650f20
	void GetBuildableAudioDataStruct(struct FBuildableAudioDataRowHandle RowHandle, struct FBuildableAudioData& BuildableAudioData, enum class EValid& Paths); // Function Icarus.BuildableAudioDataLibrary.GetBuildableAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650c80
	bool EqualEqual_FBuildableAudioDataRowHandleFBuildableAudioDataRowHandle(struct FBuildableAudioDataRowHandle RowHandleA, struct FBuildableAudioDataRowHandle RowHandleB); // Function Icarus.BuildableAudioDataLibrary.EqualEqual_FBuildableAudioDataRowHandleFBuildableAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16507c0
	bool EqualEqual_EnumEnum(struct FBuildableAudioDataEnum A, struct FBuildableAudioDataEnum B); // Function Icarus.BuildableAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650450
	struct FBuildableAudioDataRowHandle CastToBuildableAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BuildableAudioDataLibrary.CastToBuildableAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650150
	void BreakBuildableAudioDataEnum(struct FBuildableAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BuildableAudioDataLibrary.BreakBuildableAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x164fdb0
	void AddRowToBuildableAudioDataTable(struct UE4::FName Name, struct FBuildableAudioData Data, struct FBuildableAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BuildableAudioDataLibrary.AddRowToBuildableAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164f810
};

// Class Icarus.BuildableAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBuildableAudioDataTable : UIcarusDataTable {
};

// Class Icarus.BuildableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UBuildableComponent : UTraitComponent {
	struct AIcarusActor* ClassToBuild; // 0xd0(0x08)
	int32_t Variation; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	void SetVariation(int32_t NewVariation); // Function Icarus.BuildableComponent.SetVariation // (Final|Native|Public|BlueprintCallable) // @ game+0x16595a0
	bool GetBuildableData(struct FBuildableData& OutData); // Function Icarus.BuildableComponent.GetBuildableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1657d90
};

// Class Icarus.BuildableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBuildableLibrary : URowLibrary {

	struct FBuildableRowHandle StructToRowHandle(struct FBuildableEnum EnumValue); // Function Icarus.BuildableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16598d0
	struct UE4::FName StructToName(struct FBuildableEnum EnumValue); // Function Icarus.BuildableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659790
	int32_t StructToInt(struct FBuildableEnum EnumValue); // Function Icarus.BuildableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659650
	struct FBuildableEnum RowHandleToStruct(struct FBuildableRowHandle RowHandle); // Function Icarus.BuildableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659420
	void RemoveRowFromBuildableTable(struct UE4::FName Name); // Function Icarus.BuildableLibrary.RemoveRowFromBuildableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1659320
	void RefreshConstants(); // Function Icarus.BuildableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16592e0
	int32_t NumRows(); // Function Icarus.BuildableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659280
	bool NotEqual_EnumName(struct FBuildableEnum A, struct UE4::FName B); // Function Icarus.BuildableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658f90
	bool NotEqual_EnumEnum(struct FBuildableEnum A, struct FBuildableEnum B); // Function Icarus.BuildableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658db0
	struct FBuildableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BuildableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658c90
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BuildableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1658b70
	struct FBuildableRowHandle MakeLiteralBuildable(struct FBuildableRowHandle RowHandle); // Function Icarus.BuildableLibrary.MakeLiteralBuildable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16589d0
	struct FBuildableRowHandle MakeBuildableFromIndex(int32_t Index); // Function Icarus.BuildableLibrary.MakeBuildableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658790
	struct FBuildableEnum MakeBuildableEnum(struct FBuildableEnum Enum); // Function Icarus.BuildableLibrary.MakeBuildableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658710
	struct FBuildableRowHandle MakeBuildable(struct UE4::FName RowName); // Function Icarus.BuildableLibrary.MakeBuildable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658670
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BuildableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1658550
	struct FBuildableEnum IntToStruct(int32_t IntValue); // Function Icarus.BuildableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658430
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BuildableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1658310
	void GetBuildableStruct(struct FBuildableRowHandle RowHandle, struct FBuildableData& Buildable, enum class EValid& Paths); // Function Icarus.BuildableLibrary.GetBuildableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1657f70
	bool EqualEqual_FBuildableRowHandleFBuildableRowHandle(struct FBuildableRowHandle RowHandleA, struct FBuildableRowHandle RowHandleB); // Function Icarus.BuildableLibrary.EqualEqual_FBuildableRowHandleFBuildableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657b10
	bool EqualEqual_EnumEnum(struct FBuildableEnum A, struct FBuildableEnum B); // Function Icarus.BuildableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657930
	struct FBuildableRowHandle CastToBuildableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BuildableLibrary.CastToBuildableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16576c0
	void BreakBuildableEnum(struct FBuildableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BuildableLibrary.BreakBuildableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1657400
	void AddRowToBuildableTable(struct UE4::FName Name, struct FBuildableData Data, struct FBuildableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BuildableLibrary.AddRowToBuildableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1656e50
};

// Class Icarus.BuildableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBuildableTable : UIcarusDataTable {
};

// Class Icarus.IcarusActor
// Size: 0x2b0 (Inherited: 0x220)
struct AIcarusActor : AActor {
	char pad_220[0x20]; // 0x220(0x20)
	struct UIcarusStatContainer* StatContainer; // 0x240(0x08)
	struct UActorState* ActorState; // 0x248(0x08)
	enum class EProgressState ProgressState; // 0x250(0x01)
	struct FMulticastSparseDelegate OnActorPreDestroy; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
	struct UTerrainAnchorComponent* TerrainAnchor; // 0x258(0x08)
	struct UTerrainAnchorComponent* TerrainAnchorClass; // 0x260(0x08)
	char pad_268[0x8]; // 0x268(0x08)
	struct FGameplayTagContainer GameplayTags; // 0x270(0x20)
	char pad_290[0x8]; // 0x290(0x08)
	struct UIcarusStateRecorderComponent* RecorderClass; // 0x298(0x08)
	bool bSaveModifiersToDatabase; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct UIcarusStateRecorderComponent* Recorder; // 0x2a8(0x08)

	void SetRecorderShouldRetainOnDestroy(bool bShouldRetain); // Function Icarus.IcarusActor.SetRecorderShouldRetainOnDestroy // (Final|Native|Public|BlueprintCallable) // @ game+0x1724190
	void SetIcarusUID(int32_t ForcedUID); // Function Icarus.IcarusActor.SetIcarusUID // (Native|Public|BlueprintCallable) // @ game+0x1724070
	void RepairObject(); // Function Icarus.IcarusActor.RepairObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x88b920
	void RecorderEndRecording(); // Function Icarus.IcarusActor.RecorderEndRecording // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x1723b10
	void RecorderBeginRecording(); // Function Icarus.IcarusActor.RecorderBeginRecording // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x1723af0
	void RaiseTheCurtain(); // Function Icarus.IcarusActor.RaiseTheCurtain // (Native|Event|Public|BlueprintEvent) // @ game+0x9108f0
	void OnTerrainAnchorStateChanged(); // Function Icarus.IcarusActor.OnTerrainAnchorStateChanged // (Native|Event|Public|BlueprintEvent) // @ game+0x1625720
	void OnDatabaseLoadComplete(); // Function Icarus.IcarusActor.OnDatabaseLoadComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x17238d0
	void IcarusBeginPlay(); // Function Icarus.IcarusActor.IcarusBeginPlay // (Native|Event|Public|BlueprintEvent) // @ game+0x1723300
	bool HasRecorder(); // Function Icarus.IcarusActor.HasRecorder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17232d0
	int32_t GetIcarusUID(); // Function Icarus.IcarusActor.GetIcarusUID // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1722760
	void ClaimUniqueIcarusUIDFromLibrary(int32_t SuggestedUID); // Function Icarus.IcarusActor.ClaimUniqueIcarusUIDFromLibrary // (Final|Native|Public|BlueprintCallable) // @ game+0x1722130
};

// Class Icarus.IcarusItem
// Size: 0x3f0 (Inherited: 0x2b0)
struct AIcarusItem : AIcarusActor {
	struct UInventory* ItemInventory; // 0x2b0(0x08)
	int32_t ItemInventoryLocation; // 0x2b8(0x04)
	bool HasLink; // 0x2bc(0x01)
	struct FMulticastSparseDelegate PickedUp; // 0x2bd(0x01)
	char pad_2BE[0x2]; // 0x2be(0x02)
	struct TArray<struct UTraitComponent*> TraitComponents; // 0x2c0(0x10)
	struct FItemData ItemData; // 0x2d0(0xa0)
	struct FIcarusItemConstructionParameters ConstructionParameters; // 0x370(0x28)
	enum class EIcarusItemContext SpawnedContext; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	struct FItemTemplateRowHandle OverrideInstanceItemTemplate; // 0x39c(0x18)
	char pad_3B4[0x4]; // 0x3b4(0x04)
	struct USmoothSync* SmoothSyncComponent; // 0x3b8(0x08)
	struct FTransform ConstructionTransfrom; // 0x3c0(0x30)

	bool WorldPickup(struct UItemableComponent* ItemIn, struct AActor* Interactor, struct FHitResult& HitResult); // Function Icarus.IcarusItem.WorldPickup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x174bd00
	void StackUpdated(); // Function Icarus.IcarusItem.StackUpdated // (Final|Native|Private) // @ game+0x174b890
	void SetItemVisible(bool bVisible); // Function Icarus.IcarusItem.SetItemVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xef85e0
	bool ServerSetupTraitComponents(); // Function Icarus.IcarusItem.ServerSetupTraitComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x174b720
	void ServerSetItemData(struct FItemData& InItemData); // Function Icarus.IcarusItem.ServerSetItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x174b580
	bool ServerLoadItemData(struct FItemTemplateRowHandle ItemTemplate); // Function Icarus.IcarusItem.ServerLoadItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x174b4c0
	void SerializeItemData(struct FItemData& OutItemData); // Function Icarus.IcarusItem.SerializeItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x174b320
	void ResetDecaySpoilTime(); // Function Icarus.IcarusItem.ResetDecaySpoilTime // (Final|Native|Public|BlueprintCallable) // @ game+0x174b2e0
	void ReconstructItem(struct FIcarusItemConstructionParameters& NewConstructionParameters); // Function Icarus.IcarusItem.ReconstructItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x174b210
	void OverwriteInventoryItemDynamicProperty(enum class EDynamicItemProperties Property, int32_t Value); // Function Icarus.IcarusItem.OverwriteInventoryItemDynamicProperty // (Final|Native|Private) // @ game+0x174aff0
	void OnWorldPickup(struct UItemableComponent* ItemIn, struct AActor* Interactor, struct FHitResult& HitResult); // Function Icarus.IcarusItem.OnWorldPickup // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x174ae60
	void OnRep_ItemData(); // Function Icarus.IcarusItem.OnRep_ItemData // (Final|Native|Protected) // @ game+0x174ae40
	void OnRep_ConstructionParameters(); // Function Icarus.IcarusItem.OnRep_ConstructionParameters // (Native|Protected) // @ game+0x88bb80
	bool OnPickedUp(); // Function Icarus.IcarusItem.OnPickedUp // (Final|Native|Public|BlueprintCallable) // @ game+0x174ae10
	void OnItemDataChanged(); // Function Icarus.IcarusItem.OnItemDataChanged // (Native|Event|Protected|BlueprintEvent) // @ game+0x88bba0
	void OnDynamicDataUpdated(); // Function Icarus.IcarusItem.OnDynamicDataUpdated // (Final|Native|Private) // @ game+0x174ac30
	bool OnDropped(); // Function Icarus.IcarusItem.OnDropped // (Final|Native|Public|BlueprintCallable) // @ game+0x174ac10
	void ItemContainerDataUpdated(); // Function Icarus.IcarusItem.ItemContainerDataUpdated // (Final|Native|Private) // @ game+0x174abb0
	bool HasInventoryItemLink(); // Function Icarus.IcarusItem.HasInventoryItemLink // (Final|Native|Public|BlueprintCallable) // @ game+0x174a940
	struct FItemData GetSerialisedItemData(); // Function Icarus.IcarusItem.GetSerialisedItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x174a870
	struct UMeshComponent* GetRootMeshComponent(); // Function Icarus.IcarusItem.GetRootMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x174a840
	struct AIcarusPlayerCharacter* GetOwningIcarusPlayerCharacter(); // Function Icarus.IcarusItem.GetOwningIcarusPlayerCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x174a810
	struct TArray<struct FItemDynamicData> GetMutableItemDynamicData(); // Function Icarus.IcarusItem.GetMutableItemDynamicData // (Final|Native|Public) // @ game+0x174a7d0
	struct FItemData GetItemData(); // Function Icarus.IcarusItem.GetItemData // (Final|Native|Public|Const) // @ game+0x174a470
	void FillableUpdated(); // Function Icarus.IcarusItem.FillableUpdated // (Final|Native|Private) // @ game+0x1749990
	void EstablishLink(struct UInventory* Inventory, int32_t Location); // Function Icarus.IcarusItem.EstablishLink // (Final|Native|Public|BlueprintCallable) // @ game+0x1749740
	void DurabilityUpdated(); // Function Icarus.IcarusItem.DurabilityUpdated // (Final|Native|Private) // @ game+0x1749720
	void DestroyLinkedInventoryItem(); // Function Icarus.IcarusItem.DestroyLinkedInventoryItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1749700
	void DestroyLink(); // Function Icarus.IcarusItem.DestroyLink // (Final|Native|Public|BlueprintCallable) // @ game+0x17496e0
	void DeserializeItemData(struct FItemData& InItemData); // Function Icarus.IcarusItem.DeserializeItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1749540
	void DecayableDataUpdated(); // Function Icarus.IcarusItem.DecayableDataUpdated // (Final|Native|Private) // @ game+0x1749520
	void ActionableUpdated(); // Function Icarus.IcarusItem.ActionableUpdated // (Final|Native|Private) // @ game+0x17492c0
};

// Class Icarus.BuildingBase
// Size: 0x420 (Inherited: 0x3f0)
struct ABuildingBase : AIcarusItem {
	struct UIcarusNavigationDirtier* NavigationDirtier; // 0x3f0(0x08)
	struct FMulticastInlineDelegate OnBuildingDestroyed; // 0x3f8(0x10)
	struct FMulticastInlineDelegate OnBuildingReplaced; // 0x408(0x10)
	char pad_418[0x8]; // 0x418(0x08)

	void StartDestruction(struct AIcarusPlayerController* TriggeringPlayer, enum class EBuildingDestroyReason DestroyReason); // Function Icarus.BuildingBase.StartDestruction // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void NotifyBuildingReplaced(struct ABuildingBase* NewBuilding); // Function Icarus.BuildingBase.NotifyBuildingReplaced // (Final|Native|Protected|BlueprintCallable) // @ game+0x16591f0
	void NotifyBuildingDestroyed(enum class EBuildingDestroyReason Reason); // Function Icarus.BuildingBase.NotifyBuildingDestroyed // (Final|Native|Protected|BlueprintCallable) // @ game+0x1659170
	bool IsBuildingOutside(); // Function Icarus.BuildingBase.IsBuildingOutside // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool IsBuildingDestroyed(); // Function Icarus.BuildingBase.IsBuildingDestroyed // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct ABuildingGridBase* GetParentGrid(); // Function Icarus.BuildingBase.GetParentGrid // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct USceneComponent* GetCenterComponent(); // Function Icarus.BuildingBase.GetCenterComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct UDestructibleComponent* CreateDestructibleMeshComponent(); // Function Icarus.BuildingBase.CreateDestructibleMeshComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x1657900
	void CalculateStabilityState(); // Function Icarus.BuildingBase.CalculateStabilityState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.BuildingGridBase
// Size: 0x2c8 (Inherited: 0x2b0)
struct ABuildingGridBase : AIcarusActor {
	struct TArray<struct ABuildingBase*> BuildingsRequiringNavUpdate; // 0x2b0(0x10)
	char pad_2C0[0x8]; // 0x2c0(0x08)

	bool TryAddNewBuildingFromWorldSpace(struct FTransform WorldSpaceTransform, struct ABuildingBase* DesiredClass, bool bAlternateRotation, struct FItemData Item, struct ABuildingBase*& Building); // Function Icarus.BuildingGridBase.TryAddNewBuildingFromWorldSpace // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void StartDirtyingBuildingNavigation(); // Function Icarus.BuildingGridBase.StartDirtyingBuildingNavigation // (Final|Native|Public|BlueprintCallable) // @ game+0x1659630
	void SetQueued(bool bQueued); // Function Icarus.BuildingGridBase.SetQueued // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetAutomaticResumingDestructionEnabled(bool bEnabled); // Function Icarus.BuildingGridBase.SetAutomaticResumingDestructionEnabled // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct FSerializedGrid SerializeForSaveGame(); // Function Icarus.BuildingGridBase.SerializeForSaveGame // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void LoadGridAndBuildingsFromRecord(struct UBuildingGridRecorderComponent* RecorderComponent); // Function Icarus.BuildingGridBase.LoadGridAndBuildingsFromRecord // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	bool GetIsQueued(); // Function Icarus.BuildingGridBase.GetIsQueued // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void GetGridBuildingDataForRecord(struct UBuildingGridRecorderComponent* RecorderComponent); // Function Icarus.BuildingGridBase.GetGridBuildingDataForRecord // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void AddChildBuildingToDestroy(struct ABuildingBase* BuildingToDestroy); // Function Icarus.BuildingGridBase.AddChildBuildingToDestroy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.BuildingGridRecorderComponent
// Size: 0x1b0 (Inherited: 0x160)
struct UBuildingGridRecorderComponent : UActorStateRecorderComponent {
	struct FBuildingGridSaveData BuildingGridRecord; // 0x160(0x50)

	void AddBuildingToGrid(struct FTransform& GridTransform, struct FName& BuildableRowName, struct FName& BuildingItemName, struct FItemData& BuildingItemData, struct FBuildingInfo BuildingInfo); // Function Icarus.BuildingGridRecorderComponent.AddBuildingToGrid // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x16569d0
};

// Class Icarus.BuildingStabilityLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBuildingStabilityLibrary : URowLibrary {

	struct FBuildingStabilityRowHandle StructToRowHandle(struct FBuildingStabilityEnum EnumValue); // Function Icarus.BuildingStabilityLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659980
	struct UE4::FName StructToName(struct FBuildingStabilityEnum EnumValue); // Function Icarus.BuildingStabilityLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659830
	int32_t StructToInt(struct FBuildingStabilityEnum EnumValue); // Function Icarus.BuildingStabilityLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16596f0
	struct FBuildingStabilityEnum RowHandleToStruct(struct FBuildingStabilityRowHandle RowHandle); // Function Icarus.BuildingStabilityLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16594e0
	void RemoveRowFromBuildingStabilityTable(struct UE4::FName Name); // Function Icarus.BuildingStabilityLibrary.RemoveRowFromBuildingStabilityTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16593a0
	void RefreshConstants(); // Function Icarus.BuildingStabilityLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1659300
	int32_t NumRows(); // Function Icarus.BuildingStabilityLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16592b0
	bool NotEqual_EnumName(struct FBuildingStabilityEnum A, struct UE4::FName B); // Function Icarus.BuildingStabilityLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1659080
	bool NotEqual_EnumEnum(struct FBuildingStabilityEnum A, struct FBuildingStabilityEnum B); // Function Icarus.BuildingStabilityLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658ea0
	struct FBuildingStabilityEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BuildingStabilityLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658d20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BuildingStabilityLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1658c00
	struct FBuildingStabilityRowHandle MakeLiteralBuildingStability(struct FBuildingStabilityRowHandle RowHandle); // Function Icarus.BuildingStabilityLibrary.MakeLiteralBuildingStability // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658aa0
	struct FBuildingStabilityRowHandle MakeBuildingStabilityFromIndex(int32_t Index); // Function Icarus.BuildingStabilityLibrary.MakeBuildingStabilityFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658940
	struct FBuildingStabilityEnum MakeBuildingStabilityEnum(struct FBuildingStabilityEnum Enum); // Function Icarus.BuildingStabilityLibrary.MakeBuildingStabilityEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16588c0
	struct FBuildingStabilityRowHandle MakeBuildingStability(struct UE4::FName RowName); // Function Icarus.BuildingStabilityLibrary.MakeBuildingStability // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1658820
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BuildingStabilityLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16585e0
	struct FBuildingStabilityEnum IntToStruct(int32_t IntValue); // Function Icarus.BuildingStabilityLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16584c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BuildingStabilityLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16583a0
	void GetBuildingStabilityStruct(struct FBuildingStabilityRowHandle RowHandle, struct FBuildingStability& BuildingStability, enum class EValid& Paths); // Function Icarus.BuildingStabilityLibrary.GetBuildingStabilityStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1658150
	bool EqualEqual_FBuildingStabilityRowHandleFBuildingStabilityRowHandle(struct FBuildingStabilityRowHandle RowHandleA, struct FBuildingStabilityRowHandle RowHandleB); // Function Icarus.BuildingStabilityLibrary.EqualEqual_FBuildingStabilityRowHandleFBuildingStabilityRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657c50
	bool EqualEqual_EnumEnum(struct FBuildingStabilityEnum A, struct FBuildingStabilityEnum B); // Function Icarus.BuildingStabilityLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657a20
	struct FBuildingStabilityRowHandle CastToBuildingStabilityRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BuildingStabilityLibrary.CastToBuildingStabilityRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16577e0
	void BreakBuildingStabilityEnum(struct FBuildingStabilityEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BuildingStabilityLibrary.BreakBuildingStabilityEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1657560
	void AddRowToBuildingStabilityTable(struct UE4::FName Name, struct FBuildingStability Data, struct FBuildingStabilityRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BuildingStabilityLibrary.AddRowToBuildingStabilityTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1657170
};

// Class Icarus.BuildingStabilityTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBuildingStabilityTable : UIcarusDataTable {
};

// Class Icarus.BuildingSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UBuildingSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnBuildingPiecePlacedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnBuildingPieceRemovedNotify; // 0x40(0x10)

	void BroadcastBuildingPieceRemovedDelegate(struct AIcarusPlayerCharacter* Player, struct ABuildingBase* Building); // Function Icarus.BuildingSubsystem.BroadcastBuildingPieceRemovedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d660
	void BroadcastBuildingPiecePlacedDelegate(struct AIcarusPlayerCharacter* Player, struct ABuildingBase* Building); // Function Icarus.BuildingSubsystem.BroadcastBuildingPiecePlacedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d580
};

// Class Icarus.BuildingTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBuildingTypesLibrary : URowLibrary {

	struct FBuildingTypesRowHandle StructToRowHandle(struct FBuildingTypesEnum EnumValue); // Function Icarus.BuildingTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165ef70
	struct UE4::FName StructToName(struct FBuildingTypesEnum EnumValue); // Function Icarus.BuildingTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165eed0
	int32_t StructToInt(struct FBuildingTypesEnum EnumValue); // Function Icarus.BuildingTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165ee30
	struct FBuildingTypesEnum RowHandleToStruct(struct FBuildingTypesRowHandle RowHandle); // Function Icarus.BuildingTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e840
	void RemoveRowFromBuildingTypesTable(struct UE4::FName Name); // Function Icarus.BuildingTypesLibrary.RemoveRowFromBuildingTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x165e7c0
	void RefreshConstants(); // Function Icarus.BuildingTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x165e7a0
	int32_t NumRows(); // Function Icarus.BuildingTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e770
	bool NotEqual_EnumName(struct FBuildingTypesEnum A, struct UE4::FName B); // Function Icarus.BuildingTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e680
	bool NotEqual_EnumEnum(struct FBuildingTypesEnum A, struct FBuildingTypesEnum B); // Function Icarus.BuildingTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e590
	struct FBuildingTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.BuildingTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e500
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.BuildingTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x165e470
	struct FBuildingTypesRowHandle MakeLiteralBuildingTypes(struct FBuildingTypesRowHandle RowHandle); // Function Icarus.BuildingTypesLibrary.MakeLiteralBuildingTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e3a0
	struct FBuildingTypesRowHandle MakeBuildingTypesFromIndex(int32_t Index); // Function Icarus.BuildingTypesLibrary.MakeBuildingTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e310
	struct FBuildingTypesEnum MakeBuildingTypesEnum(struct FBuildingTypesEnum Enum); // Function Icarus.BuildingTypesLibrary.MakeBuildingTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e290
	struct FBuildingTypesRowHandle MakeBuildingTypes(struct UE4::FName RowName); // Function Icarus.BuildingTypesLibrary.MakeBuildingTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e1f0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.BuildingTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x165e160
	struct FBuildingTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.BuildingTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165e0d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.BuildingTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x165e040
	void GetBuildingTypesStruct(struct FBuildingTypesRowHandle RowHandle, struct FIcarusBuildingType& BuildingTypes, enum class EValid& Paths); // Function Icarus.BuildingTypesLibrary.GetBuildingTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165dc90
	bool EqualEqual_FBuildingTypesRowHandleFBuildingTypesRowHandle(struct FBuildingTypesRowHandle RowHandleA, struct FBuildingTypesRowHandle RowHandleB); // Function Icarus.BuildingTypesLibrary.EqualEqual_FBuildingTypesRowHandleFBuildingTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165db20
	bool EqualEqual_EnumEnum(struct FBuildingTypesEnum A, struct FBuildingTypesEnum B); // Function Icarus.BuildingTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165da30
	struct FBuildingTypesRowHandle CastToBuildingTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.BuildingTypesLibrary.CastToBuildingTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165d740
	void BreakBuildingTypesEnum(struct FBuildingTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.BuildingTypesLibrary.BreakBuildingTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x165d420
	void AddRowToBuildingTypesTable(struct UE4::FName Name, struct FIcarusBuildingType Data, struct FBuildingTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.BuildingTypesLibrary.AddRowToBuildingTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165d110
};

// Class Icarus.BuildingTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBuildingTypesTable : UIcarusDataTable {
};

// Class Icarus.FloatableComponent
// Size: 0xe8 (Inherited: 0xd0)
struct UFloatableComponent : UTraitComponent {
	struct TArray<struct UPrimitiveComponent*> OverlappedComponents; // 0xd0(0x10)
	struct FMulticastSparseDelegate OnFloatableUpdated; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)

	void UpdateOverlappedState(); // Function Icarus.FloatableComponent.UpdateOverlappedState // (Native|Event|Public|BlueprintEvent) // @ game+0x16e42d0
	void RemoveOverlap(struct UPrimitiveComponent* Component); // Function Icarus.FloatableComponent.RemoveOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x16e3840
	bool GetFloatableData(struct FFloatableData& OutData); // Function Icarus.FloatableComponent.GetFloatableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16e22d0
	void FloatableUpdated(bool bNewFloating); // Function Icarus.FloatableComponent.FloatableUpdated // (Native|Public|BlueprintCallable) // @ game+0x1645030
	void CheckOverlapArray(); // Function Icarus.FloatableComponent.CheckOverlapArray // (Final|Native|Public|BlueprintCallable) // @ game+0x16e1aa0
	void AddOverlap(struct UPrimitiveComponent* Component); // Function Icarus.FloatableComponent.AddOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x16e10d0
};

// Class Icarus.BuoyancyBehaviour
// Size: 0x118 (Inherited: 0xe8)
struct UBuoyancyBehaviour : UFloatableComponent {
	struct FVector VelocityDamper; // 0xe8(0x0c)
	bool bBuoyancyEnabled; // 0xf4(0x01)
	bool bAutoGenerateFloatingPoints; // 0xf5(0x01)
	char pad_F6[0x2]; // 0xf6(0x02)
	float FloatingPointRadius; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct TArray<struct FVector> FloatingPoints; // 0x100(0x10)
	char pad_110[0x8]; // 0x110(0x08)

	void GenerateFloatingPoints(); // Function Icarus.BuoyancyBehaviour.GenerateFloatingPoints // (Native|Event|Public|BlueprintEvent) // @ game+0x1613f90
	float FindWaterHeight(); // Function Icarus.BuoyancyBehaviour.FindWaterHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x165dc60
};

// Class Icarus.BW3ObjectiveRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UBW3ObjectiveRecorderInterface : UInterface {

	void SetObjectiveState(int32_t State); // Function Icarus.BW3ObjectiveRecorderInterface.SetObjectiveState // (Native|Event|Public|BlueprintEvent) // @ game+0x165ecf0
	void GetObjectiveState(int32_t& State); // Function Icarus.BW3ObjectiveRecorderInterface.GetObjectiveState // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x165dee0
};

// Class Icarus.BW3ObjectiveRecorderComponent
// Size: 0xe0 (Inherited: 0xd8)
struct UBW3ObjectiveRecorderComponent : UIcarusStateRecorderComponent {
	int32_t SavedState; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class Icarus.CaveInterface
// Size: 0x28 (Inherited: 0x28)
struct UCaveInterface : UInterface {

	float GetSpelunkingDepthFromLocation(struct FVector Location); // Function Icarus.CaveInterface.GetSpelunkingDepthFromLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x165df70
	float GetCurrentSpelunkingDepth(); // Function Icarus.CaveInterface.GetCurrentSpelunkingDepth // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x165deb0
};

// Class Icarus.Cave
// Size: 0x220 (Inherited: 0x220)
struct ACave : AActor {
};

// Class Icarus.CaveEntranceRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UCaveEntranceRecorderInterface : UInterface {

	void SetVoxelBlockerSaveData(struct TArray<struct FVoxelMinedSphere>& VoxelBlockerSaveData); // Function Icarus.CaveEntranceRecorderInterface.SetVoxelBlockerSaveData // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x165ed80
	struct AVoxelResource* GetVoxelActor(); // Function Icarus.CaveEntranceRecorderInterface.GetVoxelActor // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x165e010
};

// Class Icarus.CaveEntranceRecorderComponent
// Size: 0x190 (Inherited: 0x160)
struct UCaveEntranceRecorderComponent : UActorStateRecorderComponent {
	struct FVoxelSaveData VoxelBlockerSaveData; // 0x158(0x30)
};

// Class Icarus.CaveTemplateAsset
// Size: 0x120 (Inherited: 0x30)
struct UCaveTemplateAsset : UDataAsset {
	struct TArray<struct FCaveMesh> Meshes; // 0x30(0x10)
	struct TArray<struct FCaveVoid> Voids; // 0x40(0x10)
	struct TArray<struct FCaveVolume> Volumes; // 0x50(0x10)
	struct TArray<struct FCaveEntrance> Entrances; // 0x60(0x10)
	struct TArray<struct FCaveLake> Lakes; // 0x70(0x10)
	struct TArray<struct FCaveFoliage> Foliage; // 0x80(0x10)
	struct TArray<struct FCaveLight> CaveLights; // 0x90(0x10)
	struct TArray<struct FCaveEntranceActor> EntranceActors; // 0xa0(0x10)
	struct TArray<struct FCaveExoticVoxel> ExoticVoxels; // 0xb0(0x10)
	struct TArray<struct FCaveDeepMiningOreDeposit> DeepMiningOreDeposit; // 0xc0(0x10)
	struct TMap<struct AActor*, struct FCaveSpawnConfig> CaveActorSpawnMap; // 0xd0(0x50)
};

// Class Icarus.CaveTemplateFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCaveTemplateFunctionLibrary : UBlueprintFunctionLibrary {

	void SetLightUseTemperature(struct ULightComponent* Light, bool bUseTemperature); // Function Icarus.CaveTemplateFunctionLibrary.SetLightUseTemperature // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x165ec30
	void SetLightMaxDrawDistance(struct ULightComponent* Light, float MaxDrawDistance); // Function Icarus.CaveTemplateFunctionLibrary.SetLightMaxDrawDistance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x165eb70
	struct TArray<struct FCaveFoliage> SerializeCaveFoliage(struct AInstancedFoliageActor* InFoliageActor, struct FTransform& Origin, struct TArray<struct AActor*> WorldMeshes); // Function Icarus.CaveTemplateFunctionLibrary.SerializeCaveFoliage // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x165e900
	bool DeserializeCaveFoliage(struct AActor* CaveTemplateActor, struct TArray<struct FCaveFoliage>& CaveFoliageData, bool bAttachToMeshes, struct TArray<struct AActor*>& MeshActorArray); // Function Icarus.CaveTemplateFunctionLibrary.DeserializeCaveFoliage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165d860
};

// Class Icarus.ChallengesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UChallengesLibrary : URowLibrary {

	struct FChallengesRowHandle StructToRowHandle(struct FChallengesEnum EnumValue); // Function Icarus.ChallengesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16648d0
	struct UE4::FName StructToName(struct FChallengesEnum EnumValue); // Function Icarus.ChallengesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16646f0
	int32_t StructToInt(struct FChallengesEnum EnumValue); // Function Icarus.ChallengesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664510
	struct FChallengesEnum RowHandleToStruct(struct FChallengesRowHandle RowHandle); // Function Icarus.ChallengesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16642d0
	void RemoveRowFromChallengesTable(struct UE4::FName Name); // Function Icarus.ChallengesLibrary.RemoveRowFromChallengesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1664150
	void RefreshConstants(); // Function Icarus.ChallengesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16640f0
	int32_t NumRows(); // Function Icarus.ChallengesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664060
	bool NotEqual_EnumName(struct FChallengesEnum A, struct UE4::FName B); // Function Icarus.ChallengesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663d90
	bool NotEqual_EnumEnum(struct FChallengesEnum A, struct FChallengesEnum B); // Function Icarus.ChallengesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663ac0
	struct FChallengesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ChallengesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663910
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ChallengesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1663760
	struct FChallengesRowHandle MakeLiteralChallenges(struct FChallengesRowHandle RowHandle); // Function Icarus.ChallengesLibrary.MakeLiteralChallenges // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16634f0
	struct FChallengesRowHandle MakeChallengesFromIndex(int32_t Index); // Function Icarus.ChallengesLibrary.MakeChallengesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663100
	struct FChallengesEnum MakeChallengesEnum(struct FChallengesEnum Enum); // Function Icarus.ChallengesLibrary.MakeChallengesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663080
	struct FChallengesRowHandle MakeChallenges(struct UE4::FName RowName); // Function Icarus.ChallengesLibrary.MakeChallenges // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662fe0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ChallengesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1662e30
	struct FChallengesEnum IntToStruct(int32_t IntValue); // Function Icarus.ChallengesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662c80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ChallengesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1662ad0
	void GetChallengesStruct(struct FChallengesRowHandle RowHandle, struct FChallenge& Challenges, enum class EValid& Paths); // Function Icarus.ChallengesLibrary.GetChallengesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16625f0
	bool EqualEqual_FChallengesRowHandleFChallengesRowHandle(struct FChallengesRowHandle RowHandleA, struct FChallengesRowHandle RowHandleB); // Function Icarus.ChallengesLibrary.EqualEqual_FChallengesRowHandleFChallengesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662230
	bool EqualEqual_EnumEnum(struct FChallengesEnum A, struct FChallengesEnum B); // Function Icarus.ChallengesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661f60
	struct FChallengesRowHandle CastToChallengesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ChallengesLibrary.CastToChallengesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661c00
	void BreakChallengesEnum(struct FChallengesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ChallengesLibrary.BreakChallengesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16617e0
	void AddRowToChallengesTable(struct UE4::FName Name, struct FChallenge Data, struct FChallengesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ChallengesLibrary.AddRowToChallengesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661100
};

// Class Icarus.ChallengesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UChallengesTable : UIcarusDataTable {
};

// Class Icarus.CharacterCreationDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterCreationDataLibrary : URowLibrary {

	struct FCharacterCreationDataRowHandle StructToRowHandle(struct FCharacterCreationDataEnum EnumValue); // Function Icarus.CharacterCreationDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664980
	struct UE4::FName StructToName(struct FCharacterCreationDataEnum EnumValue); // Function Icarus.CharacterCreationDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664790
	int32_t StructToInt(struct FCharacterCreationDataEnum EnumValue); // Function Icarus.CharacterCreationDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16645b0
	struct FCharacterCreationDataEnum RowHandleToStruct(struct FCharacterCreationDataRowHandle RowHandle); // Function Icarus.CharacterCreationDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664390
	void RemoveRowFromCharacterCreationDataTable(struct UE4::FName Name); // Function Icarus.CharacterCreationDataLibrary.RemoveRowFromCharacterCreationDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16641d0
	void RefreshConstants(); // Function Icarus.CharacterCreationDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1664110
	int32_t NumRows(); // Function Icarus.CharacterCreationDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664090
	bool NotEqual_EnumName(struct FCharacterCreationDataEnum A, struct UE4::FName B); // Function Icarus.CharacterCreationDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663e80
	bool NotEqual_EnumEnum(struct FCharacterCreationDataEnum A, struct FCharacterCreationDataEnum B); // Function Icarus.CharacterCreationDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663bb0
	struct FCharacterCreationDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterCreationDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16639a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterCreationDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16637f0
	struct FCharacterCreationDataRowHandle MakeLiteralCharacterCreationData(struct FCharacterCreationDataRowHandle RowHandle); // Function Icarus.CharacterCreationDataLibrary.MakeLiteralCharacterCreationData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16635c0
	struct FCharacterCreationDataRowHandle MakeCharacterCreationDataFromIndex(int32_t Index); // Function Icarus.CharacterCreationDataLibrary.MakeCharacterCreationDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16632b0
	struct FCharacterCreationDataEnum MakeCharacterCreationDataEnum(struct FCharacterCreationDataEnum Enum); // Function Icarus.CharacterCreationDataLibrary.MakeCharacterCreationDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663230
	struct FCharacterCreationDataRowHandle MakeCharacterCreationData(struct UE4::FName RowName); // Function Icarus.CharacterCreationDataLibrary.MakeCharacterCreationData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663190
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterCreationDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1662ec0
	struct FCharacterCreationDataEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterCreationDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662d10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterCreationDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1662b60
	void GetCharacterCreationDataStruct(struct FCharacterCreationDataRowHandle RowHandle, struct FCharacterCreationData& CharacterCreationData, enum class EValid& Paths); // Function Icarus.CharacterCreationDataLibrary.GetCharacterCreationDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1662770
	bool EqualEqual_FCharacterCreationDataRowHandleFCharacterCreationDataRowHandle(struct FCharacterCreationDataRowHandle RowHandleA, struct FCharacterCreationDataRowHandle RowHandleB); // Function Icarus.CharacterCreationDataLibrary.EqualEqual_FCharacterCreationDataRowHandleFCharacterCreationDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662370
	bool EqualEqual_EnumEnum(struct FCharacterCreationDataEnum A, struct FCharacterCreationDataEnum B); // Function Icarus.CharacterCreationDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662050
	struct FCharacterCreationDataRowHandle CastToCharacterCreationDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterCreationDataLibrary.CastToCharacterCreationDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661d20
	void BreakCharacterCreationDataEnum(struct FCharacterCreationDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterCreationDataLibrary.BreakCharacterCreationDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1661940
	void AddRowToCharacterCreationDataTable(struct UE4::FName Name, struct FCharacterCreationData Data, struct FCharacterCreationDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterCreationDataLibrary.AddRowToCharacterCreationDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661390
};

// Class Icarus.CharacterCreationDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterCreationDataTable : UIcarusDataTable {
};

// Class Icarus.CharacterFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterFlagsLibrary : URowLibrary {

	struct FCharacterFlagsRowHandle StructToRowHandle(struct FCharacterFlagsEnum EnumValue); // Function Icarus.CharacterFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664a30
	struct UE4::FName StructToName(struct FCharacterFlagsEnum EnumValue); // Function Icarus.CharacterFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664830
	int32_t StructToInt(struct FCharacterFlagsEnum EnumValue); // Function Icarus.CharacterFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664650
	struct FCharacterFlagsEnum RowHandleToStruct(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.CharacterFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1664450
	void RemoveRowFromCharacterFlagsTable(struct UE4::FName Name); // Function Icarus.CharacterFlagsLibrary.RemoveRowFromCharacterFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1664250
	void RefreshConstants(); // Function Icarus.CharacterFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1664130
	int32_t NumRows(); // Function Icarus.CharacterFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16640c0
	bool NotEqual_EnumName(struct FCharacterFlagsEnum A, struct UE4::FName B); // Function Icarus.CharacterFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663f70
	bool NotEqual_EnumEnum(struct FCharacterFlagsEnum A, struct FCharacterFlagsEnum B); // Function Icarus.CharacterFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663ca0
	struct FCharacterFlagsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663a30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1663880
	struct FCharacterFlagsRowHandle MakeLiteralCharacterFlags(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.CharacterFlagsLibrary.MakeLiteralCharacterFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663690
	struct FCharacterFlagsRowHandle MakeCharacterFlagsFromIndex(int32_t Index); // Function Icarus.CharacterFlagsLibrary.MakeCharacterFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663460
	struct FCharacterFlagsEnum MakeCharacterFlagsEnum(struct FCharacterFlagsEnum Enum); // Function Icarus.CharacterFlagsLibrary.MakeCharacterFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16633e0
	struct FCharacterFlagsRowHandle MakeCharacterFlags(struct UE4::FName RowName); // Function Icarus.CharacterFlagsLibrary.MakeCharacterFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1663340
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1662f50
	struct FCharacterFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662da0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1662bf0
	void GetCharacterFlagsStruct(struct FCharacterFlagsRowHandle RowHandle, struct FCharacterFlag& CharacterFlags, enum class EValid& Paths); // Function Icarus.CharacterFlagsLibrary.GetCharacterFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1662910
	bool EqualEqual_FCharacterFlagsRowHandleFCharacterFlagsRowHandle(struct FCharacterFlagsRowHandle RowHandleA, struct FCharacterFlagsRowHandle RowHandleB); // Function Icarus.CharacterFlagsLibrary.EqualEqual_FCharacterFlagsRowHandleFCharacterFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16624b0
	bool EqualEqual_EnumEnum(struct FCharacterFlagsEnum A, struct FCharacterFlagsEnum B); // Function Icarus.CharacterFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662140
	struct FCharacterFlagsRowHandle CastToCharacterFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterFlagsLibrary.CastToCharacterFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661e40
	void BreakCharacterFlagsEnum(struct FCharacterFlagsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterFlagsLibrary.BreakCharacterFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1661aa0
	void AddRowToCharacterFlagsTable(struct UE4::FName Name, struct FCharacterFlag Data, struct FCharacterFlagsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterFlagsLibrary.AddRowToCharacterFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661570
};

// Class Icarus.CharacterFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterFlagsTable : UIcarusDataTable {
};

// Class Icarus.CharacterGrowthLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterGrowthLibrary : URowLibrary {

	struct FCharacterGrowthRowHandle StructToRowHandle(struct FCharacterGrowthEnum EnumValue); // Function Icarus.CharacterGrowthLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a420
	struct UE4::FName StructToName(struct FCharacterGrowthEnum EnumValue); // Function Icarus.CharacterGrowthLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a240
	int32_t StructToInt(struct FCharacterGrowthEnum EnumValue); // Function Icarus.CharacterGrowthLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a060
	struct FCharacterGrowthEnum RowHandleToStruct(struct FCharacterGrowthRowHandle RowHandle); // Function Icarus.CharacterGrowthLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669e20
	void RemoveRowFromCharacterGrowthTable(struct UE4::FName Name); // Function Icarus.CharacterGrowthLibrary.RemoveRowFromCharacterGrowthTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1669ca0
	void RefreshConstants(); // Function Icarus.CharacterGrowthLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1669c40
	int32_t NumRows(); // Function Icarus.CharacterGrowthLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669bb0
	bool NotEqual_EnumName(struct FCharacterGrowthEnum A, struct UE4::FName B); // Function Icarus.CharacterGrowthLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16698e0
	bool NotEqual_EnumEnum(struct FCharacterGrowthEnum A, struct FCharacterGrowthEnum B); // Function Icarus.CharacterGrowthLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669610
	struct FCharacterGrowthEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterGrowthLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669460
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterGrowthLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16692b0
	struct FCharacterGrowthRowHandle MakeLiteralCharacterGrowth(struct FCharacterGrowthRowHandle RowHandle); // Function Icarus.CharacterGrowthLibrary.MakeLiteralCharacterGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669040
	struct FCharacterGrowthRowHandle MakeCharacterGrowthFromIndex(int32_t Index); // Function Icarus.CharacterGrowthLibrary.MakeCharacterGrowthFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668c50
	struct FCharacterGrowthEnum MakeCharacterGrowthEnum(struct FCharacterGrowthEnum Enum); // Function Icarus.CharacterGrowthLibrary.MakeCharacterGrowthEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668bd0
	struct FCharacterGrowthRowHandle MakeCharacterGrowth(struct UE4::FName RowName); // Function Icarus.CharacterGrowthLibrary.MakeCharacterGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668b30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterGrowthLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1668980
	struct FCharacterGrowthEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterGrowthLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16687d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterGrowthLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1668620
	void GetCharacterGrowthStruct(struct FCharacterGrowthRowHandle RowHandle, struct FCharacterGrowth& CharacterGrowth, enum class EValid& Paths); // Function Icarus.CharacterGrowthLibrary.GetCharacterGrowthStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16680e0
	bool EqualEqual_FCharacterGrowthRowHandleFCharacterGrowthRowHandle(struct FCharacterGrowthRowHandle RowHandleA, struct FCharacterGrowthRowHandle RowHandleB); // Function Icarus.CharacterGrowthLibrary.EqualEqual_FCharacterGrowthRowHandleFCharacterGrowthRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667d20
	bool EqualEqual_EnumEnum(struct FCharacterGrowthEnum A, struct FCharacterGrowthEnum B); // Function Icarus.CharacterGrowthLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667a50
	struct FCharacterGrowthRowHandle CastToCharacterGrowthRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterGrowthLibrary.CastToCharacterGrowthRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16676f0
	void BreakCharacterGrowthEnum(struct FCharacterGrowthEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterGrowthLibrary.BreakCharacterGrowthEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16672d0
	void AddRowToCharacterGrowthTable(struct UE4::FName Name, struct FCharacterGrowth Data, struct FCharacterGrowthRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterGrowthLibrary.AddRowToCharacterGrowthTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1666bb0
};

// Class Icarus.CharacterGrowthTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterGrowthTable : UIcarusDataTable {
};

// Class Icarus.CharacterPerksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterPerksLibrary : URowLibrary {

	struct FCharacterPerksRowHandle StructToRowHandle(struct FCharacterPerksEnum EnumValue); // Function Icarus.CharacterPerksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a4d0
	struct UE4::FName StructToName(struct FCharacterPerksEnum EnumValue); // Function Icarus.CharacterPerksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a2e0
	int32_t StructToInt(struct FCharacterPerksEnum EnumValue); // Function Icarus.CharacterPerksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a100
	struct FCharacterPerksEnum RowHandleToStruct(struct FCharacterPerksRowHandle RowHandle); // Function Icarus.CharacterPerksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669ee0
	void RemoveRowFromCharacterPerksTable(struct UE4::FName Name); // Function Icarus.CharacterPerksLibrary.RemoveRowFromCharacterPerksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1669d20
	void RefreshConstants(); // Function Icarus.CharacterPerksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1669c60
	int32_t NumRows(); // Function Icarus.CharacterPerksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669be0
	bool NotEqual_EnumName(struct FCharacterPerksEnum A, struct UE4::FName B); // Function Icarus.CharacterPerksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16699d0
	bool NotEqual_EnumEnum(struct FCharacterPerksEnum A, struct FCharacterPerksEnum B); // Function Icarus.CharacterPerksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669700
	struct FCharacterPerksEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterPerksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16694f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterPerksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1669340
	struct FCharacterPerksRowHandle MakeLiteralCharacterPerks(struct FCharacterPerksRowHandle RowHandle); // Function Icarus.CharacterPerksLibrary.MakeLiteralCharacterPerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669110
	struct FCharacterPerksRowHandle MakeCharacterPerksFromIndex(int32_t Index); // Function Icarus.CharacterPerksLibrary.MakeCharacterPerksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668e00
	struct FCharacterPerksEnum MakeCharacterPerksEnum(struct FCharacterPerksEnum Enum); // Function Icarus.CharacterPerksLibrary.MakeCharacterPerksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668d80
	struct FCharacterPerksRowHandle MakeCharacterPerks(struct UE4::FName RowName); // Function Icarus.CharacterPerksLibrary.MakeCharacterPerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668ce0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterPerksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1668a10
	struct FCharacterPerksEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterPerksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668860
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterPerksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16686b0
	void GetCharacterPerksStruct(struct FCharacterPerksRowHandle RowHandle, struct FCharacterPerk& CharacterPerks, enum class EValid& Paths); // Function Icarus.CharacterPerksLibrary.GetCharacterPerksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1668260
	bool EqualEqual_FCharacterPerksRowHandleFCharacterPerksRowHandle(struct FCharacterPerksRowHandle RowHandleA, struct FCharacterPerksRowHandle RowHandleB); // Function Icarus.CharacterPerksLibrary.EqualEqual_FCharacterPerksRowHandleFCharacterPerksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667e60
	bool EqualEqual_EnumEnum(struct FCharacterPerksEnum A, struct FCharacterPerksEnum B); // Function Icarus.CharacterPerksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667b40
	struct FCharacterPerksRowHandle CastToCharacterPerksRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterPerksLibrary.CastToCharacterPerksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1667810
	void BreakCharacterPerksEnum(struct FCharacterPerksEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterPerksLibrary.BreakCharacterPerksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1667430
	void AddRowToCharacterPerksTable(struct UE4::FName Name, struct FCharacterPerk Data, struct FCharacterPerksRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterPerksLibrary.AddRowToCharacterPerksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1666e00
};

// Class Icarus.CharacterPerksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterPerksTable : UIcarusDataTable {
};

// Class Icarus.CharacterStartingStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterStartingStatsLibrary : URowLibrary {

	struct FCharacterStartingStatsRowHandle StructToRowHandle(struct FCharacterStartingStatsEnum EnumValue); // Function Icarus.CharacterStartingStatsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a580
	struct UE4::FName StructToName(struct FCharacterStartingStatsEnum EnumValue); // Function Icarus.CharacterStartingStatsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a380
	int32_t StructToInt(struct FCharacterStartingStatsEnum EnumValue); // Function Icarus.CharacterStartingStatsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166a1a0
	struct FCharacterStartingStatsEnum RowHandleToStruct(struct FCharacterStartingStatsRowHandle RowHandle); // Function Icarus.CharacterStartingStatsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669fa0
	void RemoveRowFromCharacterStartingStatsTable(struct UE4::FName Name); // Function Icarus.CharacterStartingStatsLibrary.RemoveRowFromCharacterStartingStatsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1669da0
	void RefreshConstants(); // Function Icarus.CharacterStartingStatsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1669c80
	int32_t NumRows(); // Function Icarus.CharacterStartingStatsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669c10
	bool NotEqual_EnumName(struct FCharacterStartingStatsEnum A, struct UE4::FName B); // Function Icarus.CharacterStartingStatsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669ac0
	bool NotEqual_EnumEnum(struct FCharacterStartingStatsEnum A, struct FCharacterStartingStatsEnum B); // Function Icarus.CharacterStartingStatsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16697f0
	struct FCharacterStartingStatsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterStartingStatsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1669580
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterStartingStatsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16693d0
	struct FCharacterStartingStatsRowHandle MakeLiteralCharacterStartingStats(struct FCharacterStartingStatsRowHandle RowHandle); // Function Icarus.CharacterStartingStatsLibrary.MakeLiteralCharacterStartingStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16691e0
	struct FCharacterStartingStatsRowHandle MakeCharacterStartingStatsFromIndex(int32_t Index); // Function Icarus.CharacterStartingStatsLibrary.MakeCharacterStartingStatsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668fb0
	struct FCharacterStartingStatsEnum MakeCharacterStartingStatsEnum(struct FCharacterStartingStatsEnum Enum); // Function Icarus.CharacterStartingStatsLibrary.MakeCharacterStartingStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668f30
	struct FCharacterStartingStatsRowHandle MakeCharacterStartingStats(struct UE4::FName RowName); // Function Icarus.CharacterStartingStatsLibrary.MakeCharacterStartingStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1668e90
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterStartingStatsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1668aa0
	struct FCharacterStartingStatsEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterStartingStatsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16688f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterStartingStatsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1668740
	void GetCharacterStartingStatsStruct(struct FCharacterStartingStatsRowHandle RowHandle, struct FPlayerStartingStats& CharacterStartingStats, enum class EValid& Paths); // Function Icarus.CharacterStartingStatsLibrary.GetCharacterStartingStatsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1668400
	bool EqualEqual_FCharacterStartingStatsRowHandleFCharacterStartingStatsRowHandle(struct FCharacterStartingStatsRowHandle RowHandleA, struct FCharacterStartingStatsRowHandle RowHandleB); // Function Icarus.CharacterStartingStatsLibrary.EqualEqual_FCharacterStartingStatsRowHandleFCharacterStartingStatsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667fa0
	bool EqualEqual_EnumEnum(struct FCharacterStartingStatsEnum A, struct FCharacterStartingStatsEnum B); // Function Icarus.CharacterStartingStatsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667c30
	struct FCharacterStartingStatsRowHandle CastToCharacterStartingStatsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterStartingStatsLibrary.CastToCharacterStartingStatsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1667930
	void BreakCharacterStartingStatsEnum(struct FCharacterStartingStatsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterStartingStatsLibrary.BreakCharacterStartingStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1667590
	void AddRowToCharacterStartingStatsTable(struct UE4::FName Name, struct FPlayerStartingStats Data, struct FCharacterStartingStatsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterStartingStatsLibrary.AddRowToCharacterStartingStatsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1666fd0
};

// Class Icarus.CharacterStartingStatsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterStartingStatsTable : UIcarusDataTable {
};

// Class Icarus.CharacterState
// Size: 0x2e0 (Inherited: 0x228)
struct UCharacterState : UActorState {
	struct FMulticastSparseDelegate OnStaminaUpdated; // 0x228(0x01)
	struct FMulticastSparseDelegate OnStaminaDepleted; // 0x229(0x01)
	struct FMulticastSparseDelegate OnStaminaDepletedDuringAction; // 0x22a(0x01)
	struct FMulticastSparseDelegate OnExperienceEvent; // 0x22b(0x01)
	struct FMulticastSparseDelegate OnExperienceUpdated; // 0x22c(0x01)
	struct FMulticastSparseDelegate OnExperienceDebtUpdated; // 0x22d(0x01)
	struct FMulticastSparseDelegate OnLevelUpdated; // 0x22e(0x01)
	char pad_22F[0x1]; // 0x22f(0x01)
	int32_t Stamina; // 0x230(0x04)
	int32_t MaxStamina; // 0x234(0x04)
	int32_t TotalExperience; // 0x238(0x04)
	int32_t TotalExperienceDebt; // 0x23c(0x04)
	struct FCharacterGrowthRowHandle GrowthRowHandle; // 0x240(0x18)
	int32_t Level; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TMap<int32_t, struct FStaminaActionCostsRowHandle> StaminaTickEvents; // 0x260(0x50)
	char pad_2B0[0x20]; // 0x2b0(0x20)
	bool bHasStaminaRegen; // 0x2d0(0x01)
	char pad_2D1[0xf]; // 0x2d1(0x0f)

	void TickStaminaEvents(); // Function Icarus.CharacterState.TickStaminaEvents // (Final|Native|Protected) // @ game+0x166fcc0
	void StopStaminaAction(struct FStaminaActionCostsRowHandle Action, int32_t UID); // Function Icarus.CharacterState.StopStaminaAction // (Final|Native|Public|BlueprintCallable) // @ game+0x166f7e0
	int32_t StartStaminaAction(struct FStaminaActionCostsRowHandle Action, bool SkipTickCost); // Function Icarus.CharacterState.StartStaminaAction // (Final|Native|Public|BlueprintCallable) // @ game+0x166f6d0
	bool SetupAI(int32_t Level, int32_t New_Health, int32_t New_Stamina, int32_t New_Strength, int32_t New_Agility, int32_t New_Perception); // Function Icarus.CharacterState.SetupAI // (Final|Native|Public|BlueprintCallable) // @ game+0x166f500
	void SetStamina(int32_t Amount); // Function Icarus.CharacterState.SetStamina // (Final|Native|Public|BlueprintCallable) // @ game+0x166f470
	void SetExperienceDebt(int32_t Amount); // Function Icarus.CharacterState.SetExperienceDebt // (Native|Public|BlueprintCallable) // @ game+0x166f3e0
	void SetExperience(int32_t Amount); // Function Icarus.CharacterState.SetExperience // (Native|Public|BlueprintCallable) // @ game+0x166f350
	void RecalculateStaminaRegenRate(); // Function Icarus.CharacterState.RecalculateStaminaRegenRate // (Final|Native|Protected) // @ game+0x166f070
	void RecalculateCurrentStamina(); // Function Icarus.CharacterState.RecalculateCurrentStamina // (Final|Native|Protected) // @ game+0x166f050
	void OnRep_TotalExperienceDebt(); // Function Icarus.CharacterState.OnRep_TotalExperienceDebt // (Final|Native|Protected) // @ game+0x166f030
	void OnRep_TotalExperience(); // Function Icarus.CharacterState.OnRep_TotalExperience // (Final|Native|Protected) // @ game+0x166f010
	void OnRep_Stamina(); // Function Icarus.CharacterState.OnRep_Stamina // (Final|Native|Protected) // @ game+0x166eff0
	void OnRep_Level(); // Function Icarus.CharacterState.OnRep_Level // (Final|Native|Protected) // @ game+0x166efd0
	int32_t GetStamina(); // Function Icarus.CharacterState.GetStamina // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166e0e0
	int32_t GetMaxStamina(); // Function Icarus.CharacterState.GetMaxStamina // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166e0b0
	int32_t GetLevel(); // Function Icarus.CharacterState.GetLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166e080
	int32_t GetExperienceRequired(int32_t Level); // Function Icarus.CharacterState.GetExperienceRequired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166dfe0
	int32_t GetExperienceDebt(); // Function Icarus.CharacterState.GetExperienceDebt // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166dfb0
	int32_t GetExperience(); // Function Icarus.CharacterState.GetExperience // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166df80
	void ClientAddedExperienceEvent(struct FExperienceEventsRowHandle ExperienceEvent, int32_t ExperienceGained); // Function Icarus.CharacterState.ClientAddedExperienceEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x166d6b0
	bool CanRegenerateStamina(); // Function Icarus.CharacterState.CanRegenerateStamina // (Final|Native|Protected|Const) // @ game+0x166d3b0
	bool CanPerformStaminaAction(struct FStaminaCost& ActionCost); // Function Icarus.CharacterState.CanPerformStaminaAction // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x166d2d0
	void CancelStaminaAction(int32_t UID); // Function Icarus.CharacterState.CancelStaminaAction // (Final|Native|Public|BlueprintCallable) // @ game+0x166d3e0
	void BiomeTick(float DeltaTime); // Function Icarus.CharacterState.BiomeTick // (Final|Native|Public) // @ game+0x166cf90
	void AddStamina(int32_t Amount); // Function Icarus.CharacterState.AddStamina // (Native|Public|BlueprintCallable) // @ game+0x166cf00
	bool AddExperienceEvent(struct FExperienceEventsRowHandle& ExperienceEvent, int32_t GrantedExperience); // Function Icarus.CharacterState.AddExperienceEvent // (Final|Native|Public|HasOutParms) // @ game+0x166c870
	void AddExperienceDebt(int32_t Amount); // Function Icarus.CharacterState.AddExperienceDebt // (Final|Native|Public|BlueprintCallable) // @ game+0x166c7e0
	void AddExperience(int32_t Amount); // Function Icarus.CharacterState.AddExperience // (Final|Native|Public|BlueprintCallable) // @ game+0x166c750
};

// Class Icarus.CharacterTimelineLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterTimelineLibrary : URowLibrary {

	struct FCharacterTimelineRowHandle StructToRowHandle(struct FCharacterTimelineEnum EnumValue); // Function Icarus.CharacterTimelineLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166fb60
	struct UE4::FName StructToName(struct FCharacterTimelineEnum EnumValue); // Function Icarus.CharacterTimelineLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166fa20
	int32_t StructToInt(struct FCharacterTimelineEnum EnumValue); // Function Icarus.CharacterTimelineLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166f8e0
	struct FCharacterTimelineEnum RowHandleToStruct(struct FCharacterTimelineRowHandle RowHandle); // Function Icarus.CharacterTimelineLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166f1d0
	void RemoveRowFromCharacterTimelineTable(struct UE4::FName Name); // Function Icarus.CharacterTimelineLibrary.RemoveRowFromCharacterTimelineTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x166f0d0
	void RefreshConstants(); // Function Icarus.CharacterTimelineLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x166f090
	int32_t NumRows(); // Function Icarus.CharacterTimelineLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ef70
	bool NotEqual_EnumName(struct FCharacterTimelineEnum A, struct UE4::FName B); // Function Icarus.CharacterTimelineLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ed90
	bool NotEqual_EnumEnum(struct FCharacterTimelineEnum A, struct FCharacterTimelineEnum B); // Function Icarus.CharacterTimelineLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ebb0
	struct FCharacterTimelineEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterTimelineLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ea90
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterTimelineLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x166e970
	struct FCharacterTimelineRowHandle MakeLiteralCharacterTimeline(struct FCharacterTimelineRowHandle RowHandle); // Function Icarus.CharacterTimelineLibrary.MakeLiteralCharacterTimeline // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e7d0
	struct FCharacterTimelineRowHandle MakeCharacterTimelineFromIndex(int32_t Index); // Function Icarus.CharacterTimelineLibrary.MakeCharacterTimelineFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e590
	struct FCharacterTimelineEnum MakeCharacterTimelineEnum(struct FCharacterTimelineEnum Enum); // Function Icarus.CharacterTimelineLibrary.MakeCharacterTimelineEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e510
	struct FCharacterTimelineRowHandle MakeCharacterTimeline(struct UE4::FName RowName); // Function Icarus.CharacterTimelineLibrary.MakeCharacterTimeline // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e470
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterTimelineLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x166e350
	struct FCharacterTimelineEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterTimelineLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e230
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterTimelineLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x166e110
	void GetCharacterTimelineStruct(struct FCharacterTimelineRowHandle RowHandle, struct FCharacterTimeline& CharacterTimeline, enum class EValid& Paths); // Function Icarus.CharacterTimelineLibrary.GetCharacterTimelineStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166dc00
	bool EqualEqual_FCharacterTimelineRowHandleFCharacterTimelineRowHandle(struct FCharacterTimelineRowHandle RowHandleA, struct FCharacterTimelineRowHandle RowHandleB); // Function Icarus.CharacterTimelineLibrary.EqualEqual_FCharacterTimelineRowHandleFCharacterTimelineRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d980
	bool EqualEqual_EnumEnum(struct FCharacterTimelineEnum A, struct FCharacterTimelineEnum B); // Function Icarus.CharacterTimelineLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d7a0
	struct FCharacterTimelineRowHandle CastToCharacterTimelineRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterTimelineLibrary.CastToCharacterTimelineRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166d470
	void BreakCharacterTimelineEnum(struct FCharacterTimelineEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterTimelineLibrary.BreakCharacterTimelineEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x166d010
	void AddRowToCharacterTimelineTable(struct UE4::FName Name, struct FCharacterTimeline Data, struct FCharacterTimelineRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterTimelineLibrary.AddRowToCharacterTimelineTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166c970
};

// Class Icarus.CharacterTimelineTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterTimelineTable : UIcarusDataTable {
};

// Class Icarus.CharacterVoicesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterVoicesLibrary : URowLibrary {

	struct FCharacterVoicesRowHandle StructToRowHandle(struct FCharacterVoicesEnum EnumValue); // Function Icarus.CharacterVoicesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166fc10
	struct UE4::FName StructToName(struct FCharacterVoicesEnum EnumValue); // Function Icarus.CharacterVoicesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166fac0
	int32_t StructToInt(struct FCharacterVoicesEnum EnumValue); // Function Icarus.CharacterVoicesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166f980
	struct FCharacterVoicesEnum RowHandleToStruct(struct FCharacterVoicesRowHandle RowHandle); // Function Icarus.CharacterVoicesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166f290
	void RemoveRowFromCharacterVoicesTable(struct UE4::FName Name); // Function Icarus.CharacterVoicesLibrary.RemoveRowFromCharacterVoicesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x166f150
	void RefreshConstants(); // Function Icarus.CharacterVoicesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x166f0b0
	int32_t NumRows(); // Function Icarus.CharacterVoicesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166efa0
	bool NotEqual_EnumName(struct FCharacterVoicesEnum A, struct UE4::FName B); // Function Icarus.CharacterVoicesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ee80
	bool NotEqual_EnumEnum(struct FCharacterVoicesEnum A, struct FCharacterVoicesEnum B); // Function Icarus.CharacterVoicesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166eca0
	struct FCharacterVoicesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CharacterVoicesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166eb20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CharacterVoicesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x166ea00
	struct FCharacterVoicesRowHandle MakeLiteralCharacterVoices(struct FCharacterVoicesRowHandle RowHandle); // Function Icarus.CharacterVoicesLibrary.MakeLiteralCharacterVoices // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e8a0
	struct FCharacterVoicesRowHandle MakeCharacterVoicesFromIndex(int32_t Index); // Function Icarus.CharacterVoicesLibrary.MakeCharacterVoicesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e740
	struct FCharacterVoicesEnum MakeCharacterVoicesEnum(struct FCharacterVoicesEnum Enum); // Function Icarus.CharacterVoicesLibrary.MakeCharacterVoicesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e6c0
	struct FCharacterVoicesRowHandle MakeCharacterVoices(struct UE4::FName RowName); // Function Icarus.CharacterVoicesLibrary.MakeCharacterVoices // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e620
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CharacterVoicesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x166e3e0
	struct FCharacterVoicesEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterVoicesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e2c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CharacterVoicesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x166e1a0
	void GetCharacterVoicesStruct(struct FCharacterVoicesRowHandle RowHandle, struct FCharacterVoiceData& CharacterVoices, enum class EValid& Paths); // Function Icarus.CharacterVoicesLibrary.GetCharacterVoicesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166ddc0
	bool EqualEqual_FCharacterVoicesRowHandleFCharacterVoicesRowHandle(struct FCharacterVoicesRowHandle RowHandleA, struct FCharacterVoicesRowHandle RowHandleB); // Function Icarus.CharacterVoicesLibrary.EqualEqual_FCharacterVoicesRowHandleFCharacterVoicesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166dac0
	bool EqualEqual_EnumEnum(struct FCharacterVoicesEnum A, struct FCharacterVoicesEnum B); // Function Icarus.CharacterVoicesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d890
	struct FCharacterVoicesRowHandle CastToCharacterVoicesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CharacterVoicesLibrary.CastToCharacterVoicesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166d590
	void BreakCharacterVoicesEnum(struct FCharacterVoicesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CharacterVoicesLibrary.BreakCharacterVoicesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x166d170
	void AddRowToCharacterVoicesTable(struct UE4::FName Name, struct FCharacterVoiceData Data, struct FCharacterVoicesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CharacterVoicesLibrary.AddRowToCharacterVoicesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166cc90
};

// Class Icarus.CharacterVoicesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterVoicesTable : UIcarusDataTable {
};

// Class Icarus.CheatController
// Size: 0x228 (Inherited: 0x220)
struct ACheatController : AActor {
	struct FPerPlayerCheatData PerPlayerCheats; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)

	void SetVerboseDamageLoggingEnabled(bool bEnabled); // Function Icarus.CheatController.SetVerboseDamageLoggingEnabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16746e0
	void SetUnlockAllRecipes(bool bEnabled); // Function Icarus.CheatController.SetUnlockAllRecipes // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1674650
	void SetUnlimitedResourcesEnabled(bool bEnabled); // Function Icarus.CheatController.SetUnlimitedResourcesEnabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16745c0
	void SetShelteredRequiredDisabled(bool bDisabled); // Function Icarus.CheatController.SetShelteredRequiredDisabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16740d0
	void SetGodModeEnabled(bool bEnabled); // Function Icarus.CheatController.SetGodModeEnabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1674330
	void SetBuildingIntegrityDisabled(bool bDisabled); // Function Icarus.CheatController.SetBuildingIntegrityDisabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x16740d0
	bool IsVerboseDamageLoggingEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsVerboseDamageLoggingEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x964310
	bool IsUnlockAllRecipesEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsUnlockAllRecipesEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x964310
	bool IsUnlimitedResourcesEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsUnlimitedResourcesEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x964310
	bool IsShelteredRequiredDisabled(struct UObject* WorldContextObject); // Function Icarus.CheatController.IsShelteredRequiredDisabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x964310
	bool IsGodModeEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsGodModeEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x964310
	bool IsBuildingIntegrityDisabled(struct UObject* WorldContextObject); // Function Icarus.CheatController.IsBuildingIntegrityDisabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x964310
};

// Class Icarus.CheatFunctionBase
// Size: 0x2a8 (Inherited: 0x260)
struct UCheatFunctionBase : UUserWidget {
	struct FString Name; // 0x260(0x10)
	struct FText Description; // 0x270(0x18)
	struct FLinearColor TitleColour; // 0x288(0x10)
	struct FLinearColor AreaColor; // 0x298(0x10)

	void UpdatePreview(struct TArray<struct FString>& Args); // Function Icarus.CheatFunctionBase.UpdatePreview // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	struct FString GetName(); // Function Icarus.CheatFunctionBase.GetName // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x16731c0
	bool ForceNoBorder(); // Function Icarus.CheatFunctionBase.ForceNoBorder // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1672dd0
	void Execute(); // Function Icarus.CheatFunctionBase.Execute // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1644450
};

// Class Icarus.CheatOverlayBase
// Size: 0x340 (Inherited: 0x260)
struct UCheatOverlayBase : UUserWidget {
	char pad_260[0x10]; // 0x260(0x10)
	struct FMulticastInlineDelegate OnScriptQueueFinished; // 0x270(0x10)
	char pad_280[0x18]; // 0x280(0x18)
	struct FMulticastInlineDelegate OnCheatScriptFinished; // 0x298(0x10)
	struct TArray<struct UCheatFunctionBase*> CheatFunctionWidgets; // 0x2a8(0x10)
	char pad_2B8[0x88]; // 0x2b8(0x88)

	void StopWaiting(); // Function Icarus.CheatOverlayBase.StopWaiting // (Final|Native|Public|BlueprintCallable) // @ game+0x1674790
	void StartWaiting(); // Function Icarus.CheatOverlayBase.StartWaiting // (Final|Native|Public|BlueprintCallable) // @ game+0x1674770
	void SetShow(bool bInShow); // Function Icarus.CheatOverlayBase.SetShow // (Final|Native|Public|BlueprintCallable) // @ game+0x1674530
	void SetFilteredWidgets(struct TArray<struct UCheatFunctionBase*>& Widgets); // Function Icarus.CheatOverlayBase.SetFilteredWidgets // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	bool SetCheatVariable(struct FString Variable, struct FString Value); // Function Icarus.CheatOverlayBase.SetCheatVariable // (Final|Native|Public|BlueprintCallable) // @ game+0x1674210
	void SetCheatFunctionList(struct TArray<struct UObject*>& List); // Function Icarus.CheatOverlayBase.SetCheatFunctionList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1674160
	void RequestReloadCheats(); // Function Icarus.CheatOverlayBase.RequestReloadCheats // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void PreviewCommand(struct FString CommandText); // Function Icarus.CheatOverlayBase.PreviewCommand // (Final|Native|Public|BlueprintCallable) // @ game+0x1673dc0
	struct FString ParseCheatLineArguments(struct FString Line, struct TArray<struct FString>& Args); // Function Icarus.CheatOverlayBase.ParseCheatLineArguments // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673c40
	void OnShowChanged(bool bNewShow); // Function Icarus.CheatOverlayBase.OnShowChanged // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnBeginPlay(); // Function Icarus.CheatOverlayBase.OnBeginPlay // (Final|Native|Public|BlueprintCallable) // @ game+0xe3ae30
	bool IsWaiting(); // Function Icarus.CheatOverlayBase.IsWaiting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673670
	bool IsShowing(); // Function Icarus.CheatOverlayBase.IsShowing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16735c0
	bool IsCheatScriptExecuting(); // Function Icarus.CheatOverlayBase.IsCheatScriptExecuting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673560
	void EvaluateLines(struct TArray<struct FString>& ScriptLines); // Function Icarus.CheatOverlayBase.EvaluateLines // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1672c20
	void Evaluate(struct FString Script); // Function Icarus.CheatOverlayBase.Evaluate // (Final|Native|Public|BlueprintCallable) // @ game+0x1672b70
	void Close(); // Function Icarus.CheatOverlayBase.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x1672920
	void ClearFilteredWidgets(); // Function Icarus.CheatOverlayBase.ClearFilteredWidgets // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void AddCustomFunction(struct FString Name, struct TArray<struct FString>& ScriptLines, struct FString Description); // Function Icarus.CheatOverlayBase.AddCustomFunction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void AddCustomAutomationFunction(struct FString Name, struct TArray<struct FString>& ScriptLines, struct FString Description); // Function Icarus.CheatOverlayBase.AddCustomAutomationFunction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void AddCheat(struct UCheatFunctionBase* Widget); // Function Icarus.CheatOverlayBase.AddCheat // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.CheatOverlayFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCheatOverlayFunctionLibrary : UBlueprintFunctionLibrary {

	struct UCheatOverlayBase* GetCheatOverlay(struct UObject* WorldContextObject); // Function Icarus.CheatOverlayFunctionLibrary.GetCheatOverlay // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672e00
};

// Class Icarus.ComboBoxText
// Size: 0xe08 (Inherited: 0x108)
struct UComboBoxText : UWidget {
	struct TArray<struct FText> DefaultOptions; // 0x108(0x10)
	struct FText SelectedOption; // 0x118(0x18)
	struct FComboBoxStyle WidgetStyle; // 0x130(0x3f0)
	struct FTableRowStyle ItemStyle; // 0x520(0x7c8)
	struct FMargin ContentPadding; // 0xce8(0x10)
	float MaxListHeight; // 0xcf8(0x04)
	bool HasDownArrow; // 0xcfc(0x01)
	bool EnableGamepadNavigationMode; // 0xcfd(0x01)
	char pad_CFE[0x2]; // 0xcfe(0x02)
	struct FSlateFontInfo Font; // 0xd00(0x58)
	struct FSlateColor ForegroundColor; // 0xd58(0x28)
	bool bIsFocusable; // 0xd80(0x01)
	char pad_D81[0x3]; // 0xd81(0x03)
	struct FDelegate OnGenerateWidgetEvent; // 0xd84(0x10)
	char pad_D94[0x4]; // 0xd94(0x04)
	struct FMulticastInlineDelegate OnSelectionChanged; // 0xd98(0x10)
	struct FMulticastInlineDelegate OnOpening; // 0xda8(0x10)
	char pad_DB8[0x50]; // 0xdb8(0x50)

	void SetSelectedOption(struct FText Option); // Function Icarus.ComboBoxText.SetSelectedOption // (Final|Native|Public|BlueprintCallable) // @ game+0x1674450
	void SetSelectedIndex(int32_t Index); // Function Icarus.ComboBoxText.SetSelectedIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x16743c0
	bool RemoveOption(struct FText& Option); // Function Icarus.ComboBoxText.RemoveOption // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1673eb0
	void RefreshOptions(); // Function Icarus.ComboBoxText.RefreshOptions // (Final|Native|Public|BlueprintCallable) // @ game+0x1673e90
	void OnSelectionChangedEvent__DelegateSignature(struct FText SelectedItem, enum class ESelectInfo SelectionType); // DelegateFunction Icarus.ComboBoxText.OnSelectionChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1be0000
	void OnOpeningEvent__DelegateSignature(); // DelegateFunction Icarus.ComboBoxText.OnOpeningEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1be0000
	bool IsOpen(); // Function Icarus.ComboBoxText.IsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673590
	struct FText GetSelectedOption(); // Function Icarus.ComboBoxText.GetSelectedOption // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16733a0
	int32_t GetSelectedIndex(); // Function Icarus.ComboBoxText.GetSelectedIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673370
	int32_t GetOptionCount(); // Function Icarus.ComboBoxText.GetOptionCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673340
	struct FText GetOptionAtIndex(int32_t Index); // Function Icarus.ComboBoxText.GetOptionAtIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1673240
	int32_t FindOptionIndex(struct FText& Option); // Function Icarus.ComboBoxText.FindOptionIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1672cf0
	void ClearSelection(); // Function Icarus.ComboBoxText.ClearSelection // (Final|Native|Public|BlueprintCallable) // @ game+0x1672900
	void ClearOptions(); // Function Icarus.ComboBoxText.ClearOptions // (Final|Native|Public|BlueprintCallable) // @ game+0x16728e0
	void AddOption(struct FText& Option); // Function Icarus.ComboBoxText.AddOption // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1672340
};

// Class Icarus.CombustibleComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UCombustibleComponent : UTraitComponent {
	int32_t MillijoulesRemaining; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)

	bool GetCombustibleData(struct FCombustibleData& OutData); // Function Icarus.CombustibleComponent.GetCombustibleData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1672e90
};

// Class Icarus.CombustibleLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCombustibleLibrary : URowLibrary {

	struct FCombustibleRowHandle StructToRowHandle(struct FCombustibleEnum EnumValue); // Function Icarus.CombustibleLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16748f0
	struct UE4::FName StructToName(struct FCombustibleEnum EnumValue); // Function Icarus.CombustibleLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674850
	int32_t StructToInt(struct FCombustibleEnum EnumValue); // Function Icarus.CombustibleLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16747b0
	struct FCombustibleEnum RowHandleToStruct(struct FCombustibleRowHandle RowHandle); // Function Icarus.CombustibleLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674010
	void RemoveRowFromCombustibleTable(struct UE4::FName Name); // Function Icarus.CombustibleLibrary.RemoveRowFromCombustibleTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1673f90
	void RefreshConstants(); // Function Icarus.CombustibleLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1673e70
	int32_t NumRows(); // Function Icarus.CombustibleLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673c10
	bool NotEqual_EnumName(struct FCombustibleEnum A, struct UE4::FName B); // Function Icarus.CombustibleLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673b20
	bool NotEqual_EnumEnum(struct FCombustibleEnum A, struct FCombustibleEnum B); // Function Icarus.CombustibleLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673a30
	struct FCombustibleEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CombustibleLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16739a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CombustibleLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1673910
	struct FCombustibleRowHandle MakeLiteralCombustible(struct FCombustibleRowHandle RowHandle); // Function Icarus.CombustibleLibrary.MakeLiteralCombustible // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673840
	struct FCombustibleRowHandle MakeCombustibleFromIndex(int32_t Index); // Function Icarus.CombustibleLibrary.MakeCombustibleFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16737b0
	struct FCombustibleEnum MakeCombustibleEnum(struct FCombustibleEnum Enum); // Function Icarus.CombustibleLibrary.MakeCombustibleEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673730
	struct FCombustibleRowHandle MakeCombustible(struct UE4::FName RowName); // Function Icarus.CombustibleLibrary.MakeCombustible // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673690
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CombustibleLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16735e0
	struct FCombustibleEnum IntToStruct(int32_t IntValue); // Function Icarus.CombustibleLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16734d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CombustibleLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1673440
	void GetCombustibleStruct(struct FCombustibleRowHandle RowHandle, struct FCombustibleData& Combustible, enum class EValid& Paths); // Function Icarus.CombustibleLibrary.GetCombustibleStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1673020
	bool EqualEqual_FCombustibleRowHandleFCombustibleRowHandle(struct FCombustibleRowHandle RowHandleA, struct FCombustibleRowHandle RowHandleB); // Function Icarus.CombustibleLibrary.EqualEqual_FCombustibleRowHandleFCombustibleRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672a30
	bool EqualEqual_EnumEnum(struct FCombustibleEnum A, struct FCombustibleEnum B); // Function Icarus.CombustibleLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672940
	struct FCombustibleRowHandle CastToCombustibleRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CombustibleLibrary.CastToCombustibleRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16727c0
	void BreakCombustibleEnum(struct FCombustibleEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CombustibleLibrary.BreakCombustibleEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1672660
	void AddRowToCombustibleTable(struct UE4::FName Name, struct FCombustibleData Data, struct FCombustibleRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CombustibleLibrary.AddRowToCombustibleTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1672410
};

// Class Icarus.CombustibleTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCombustibleTable : UIcarusDataTable {
};

// Class Icarus.ConcaveHullMesh
// Size: 0x570 (Inherited: 0x4d0)
struct UConcaveHullMesh : UProceduralMeshComponent {
	struct FMulticastSparseDelegate OnMeshGenerated; // 0x4d0(0x01)
	char pad_4D1[0x3]; // 0x4d1(0x03)
	float Concavity; // 0x4d4(0x04)
	float LengthThreshold; // 0x4d8(0x04)
	bool bProjectToLandscape; // 0x4dc(0x01)
	char pad_4DD[0x3]; // 0x4dd(0x03)
	struct TArray<struct FVector2D> ConcaveHullPoints; // 0x4e0(0x10)
	struct TArray<struct FVector> ConcaveHullVertices; // 0x4f0(0x10)
	char pad_500[0x70]; // 0x500(0x70)

	bool IsRunningAsyncGenerate(); // Function Icarus.ConcaveHullMesh.IsRunningAsyncGenerate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1679120
	void GenerateConcaveHull(struct TArray<struct FVector>& Points, bool bIsWorldSpace, bool bCreateConvexCollision, bool bIsAsync); // Function Icarus.ConcaveHullMesh.GenerateConcaveHull // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1678810
	void DebugGeneratedHullPoints(float ZOffset); // Function Icarus.ConcaveHullMesh.DebugGeneratedHullPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x1677bf0
};

// Class Icarus.ConfirmationPopupBase
// Size: 0x280 (Inherited: 0x260)
struct UConfirmationPopupBase : UUserWidget {
	struct FDelegate OnOptionAClicked; // 0x260(0x10)
	struct FDelegate OnOptionBClicked; // 0x270(0x10)

	void ShowConfirmationPopup(struct FConfirmationPopupDetails& ConfirmationPopupDetails, struct FDelegate OnOptionA, struct FDelegate OnOptionB); // Function Icarus.ConfirmationPopupBase.ShowConfirmationPopup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1679c70
	void SetPromptDetails(struct FConfirmationPopupDetails& ConfirmationPopupDetails); // Function Icarus.ConfirmationPopupBase.SetPromptDetails // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void OptionBClicked(); // Function Icarus.ConfirmationPopupBase.OptionBClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x1679a50
	void OptionAClicked(); // Function Icarus.ConfirmationPopupBase.OptionAClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x1679a30
	void HideConfirmationPopup(); // Function Icarus.ConfirmationPopupBase.HideConfirmationPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x1678fe0
};

// Class Icarus.ReplicatedConnectedPlayer
// Size: 0x60 (Inherited: 0x28)
struct UReplicatedConnectedPlayer : UObject {
	struct FConnectedPlayer State; // 0x28(0x30)
	bool bLocallyInitialised; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// Class Icarus.ConnectedPlayers
// Size: 0xe8 (Inherited: 0xb0)
struct UConnectedPlayers : UActorComponent {
	struct FMulticastInlineDelegate OnConnectedPlayerInitialised; // 0xb0(0x10)
	struct TArray<struct UReplicatedConnectedPlayer*> ReplicatedConnectedPlayers; // 0xc0(0x10)
	struct TArray<struct FConnectedPlayer> CachedInitialisedConnectedPlayers; // 0xd0(0x10)
	char pad_E0[0x8]; // 0xe0(0x08)

	bool ServerTryCompletePlayerInitialisation(struct AIcarusPlayerController* Player); // Function Icarus.ConnectedPlayers.ServerTryCompletePlayerInitialisation // (Final|Native|Public) // @ game+0x1679bd0
	void OnRep_ConnectedPlayers(); // Function Icarus.ConnectedPlayers.OnRep_ConnectedPlayers // (Final|Native|Protected) // @ game+0x1679a10
	struct TArray<struct FConnectedPlayer> GetInitialisedConnectedPlayers(); // Function Icarus.ConnectedPlayers.GetInitialisedConnectedPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1678ec0
};

// Class Icarus.ConnectedPlayersFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UConnectedPlayersFunctionLibrary : UBlueprintFunctionLibrary {

	bool NotEqual_ConnectedPlayerPlayerCharacterID(struct FConnectedPlayer& A, struct FPlayerCharacterID& B); // Function Icarus.ConnectedPlayersFunctionLibrary.NotEqual_ConnectedPlayerPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16796d0
	bool NotEqual_ConnectedPlayerConnectedPlayer(struct FConnectedPlayer& A, struct FConnectedPlayer& B); // Function Icarus.ConnectedPlayersFunctionLibrary.NotEqual_ConnectedPlayerConnectedPlayer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1679580
	struct UConnectedPlayers* GetConnectedPlayers(struct UObject* WorldContextObject); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16789c0
	bool FindInitialisedConnectedPlayerByPlayerState(struct UObject* WorldContextObject, struct AIcarusPlayerState* PlayerState, struct FConnectedPlayer& OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.FindInitialisedConnectedPlayerByPlayerState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16786c0
	bool FindInitialisedConnectedPlayerByPlayerID(struct UObject* WorldContextObject, struct FString PlayerID, struct FConnectedPlayer& OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.FindInitialisedConnectedPlayerByPlayerID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1678550
	bool FindInitialisedConnectedPlayerByPlayerCharacterID(struct UObject* WorldContextObject, struct FPlayerCharacterID& PlayerCharacterID, struct FConnectedPlayer& OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.FindInitialisedConnectedPlayerByPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16783c0
	bool FindInitialisedConnectedPlayerByPlayerCharacter(struct UObject* WorldContextObject, struct AIcarusPlayerCharacter* PlayerCharacter, struct FConnectedPlayer& OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.FindInitialisedConnectedPlayerByPlayerCharacter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1678270
	bool FindInitialisedConnectedPlayerByController(struct UObject* WorldContextObject, struct AIcarusPlayerController* Controller, struct FConnectedPlayer& OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.FindInitialisedConnectedPlayerByController // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1678120
	bool EqualEqual_ConnectedPlayerPlayerCharacterID(struct FConnectedPlayer& A, struct FPlayerCharacterID& B); // Function Icarus.ConnectedPlayersFunctionLibrary.EqualEqual_ConnectedPlayerPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1677dc0
	bool EqualEqual_ConnectedPlayerConnectedPlayer(struct FConnectedPlayer& A, struct FConnectedPlayer& B); // Function Icarus.ConnectedPlayersFunctionLibrary.EqualEqual_ConnectedPlayerConnectedPlayer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1677c70
};

// Class Icarus.ConsumableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UConsumableComponent : UTraitComponent {

	bool GetConsumableData(struct FConsumableData& OutData); // Function Icarus.ConsumableComponent.GetConsumableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1678a50
};

// Class Icarus.ConsumableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UConsumableLibrary : URowLibrary {

	struct FConsumableRowHandle StructToRowHandle(struct FConsumableEnum EnumValue); // Function Icarus.ConsumableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679f70
	struct UE4::FName StructToName(struct FConsumableEnum EnumValue); // Function Icarus.ConsumableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679ed0
	int32_t StructToInt(struct FConsumableEnum EnumValue); // Function Icarus.ConsumableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679e30
	struct FConsumableEnum RowHandleToStruct(struct FConsumableRowHandle RowHandle); // Function Icarus.ConsumableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679b10
	void RemoveRowFromConsumableTable(struct UE4::FName Name); // Function Icarus.ConsumableLibrary.RemoveRowFromConsumableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1679a90
	void RefreshConstants(); // Function Icarus.ConsumableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1679a70
	int32_t NumRows(); // Function Icarus.ConsumableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16799e0
	bool NotEqual_EnumName(struct FConsumableEnum A, struct UE4::FName B); // Function Icarus.ConsumableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16798f0
	bool NotEqual_EnumEnum(struct FConsumableEnum A, struct FConsumableEnum B); // Function Icarus.ConsumableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679800
	struct FConsumableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ConsumableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16794f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ConsumableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1679460
	struct FConsumableRowHandle MakeLiteralConsumable(struct FConsumableRowHandle RowHandle); // Function Icarus.ConsumableLibrary.MakeLiteralConsumable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679390
	struct FConsumableRowHandle MakeConsumableFromIndex(int32_t Index); // Function Icarus.ConsumableLibrary.MakeConsumableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679300
	struct FConsumableEnum MakeConsumableEnum(struct FConsumableEnum Enum); // Function Icarus.ConsumableLibrary.MakeConsumableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679280
	struct FConsumableRowHandle MakeConsumable(struct UE4::FName RowName); // Function Icarus.ConsumableLibrary.MakeConsumable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16791e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ConsumableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1679150
	struct FConsumableEnum IntToStruct(int32_t IntValue); // Function Icarus.ConsumableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679090
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ConsumableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1679000
	void GetConsumableStruct(struct FConsumableRowHandle RowHandle, struct FConsumableData& Consumable, enum class EValid& Paths); // Function Icarus.ConsumableLibrary.GetConsumableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1678c70
	bool EqualEqual_FConsumableRowHandleFConsumableRowHandle(struct FConsumableRowHandle RowHandleA, struct FConsumableRowHandle RowHandleB); // Function Icarus.ConsumableLibrary.EqualEqual_FConsumableRowHandleFConsumableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1677fe0
	bool EqualEqual_EnumEnum(struct FConsumableEnum A, struct FConsumableEnum B); // Function Icarus.ConsumableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1677ef0
	struct FConsumableRowHandle CastToConsumableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ConsumableLibrary.CastToConsumableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1677a40
	void BreakConsumableEnum(struct FConsumableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ConsumableLibrary.BreakConsumableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16778e0
	void AddRowToConsumableTable(struct UE4::FName Name, struct FConsumableData Data, struct FConsumableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ConsumableLibrary.AddRowToConsumableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1677530
};

// Class Icarus.ConsumableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UConsumableTable : UIcarusDataTable {
};

// Class Icarus.ContextMenuFactory
// Size: 0x238 (Inherited: 0x220)
struct AContextMenuFactory : AActor {
	struct APlayerController* OwningPlayer; // 0x220(0x08)
	struct TArray<struct FContextMenuItemData> Items; // 0x228(0x10)

	struct UContextMenuWidget* ShowAsRadialMenu(); // Function Icarus.ContextMenuFactory.ShowAsRadialMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct UContextMenuWidget* ShowAsContextMenu(struct FVector2D ScreenPosition); // Function Icarus.ContextMenuFactory.ShowAsContextMenu // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetContextMenuData(struct FText& Name, struct TSoftObjectPtr<UTexture2D>& Icon); // Function Icarus.ContextMenuFactory.SetContextMenuData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void CreateMenu(struct APlayerController* NewOwningPlayer); // Function Icarus.ContextMenuFactory.CreateMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1677b60
	void AddItem(struct FContextMenuItemData& ContextMenuItemData, struct FDelegate OnClickedDelegate); // Function Icarus.ContextMenuFactory.AddItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16773c0
};

// Class Icarus.ContextMenuGroupTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UContextMenuGroupTypesLibrary : URowLibrary {

	struct FContextMenuGroupTypesRowHandle StructToRowHandle(struct FContextMenuGroupTypesEnum EnumValue); // Function Icarus.ContextMenuGroupTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167fb70
	struct UE4::FName StructToName(struct FContextMenuGroupTypesEnum EnumValue); // Function Icarus.ContextMenuGroupTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167fa30
	int32_t StructToInt(struct FContextMenuGroupTypesEnum EnumValue); // Function Icarus.ContextMenuGroupTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f8f0
	struct FContextMenuGroupTypesEnum RowHandleToStruct(struct FContextMenuGroupTypesRowHandle RowHandle); // Function Icarus.ContextMenuGroupTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f770
	void RemoveRowFromContextMenuGroupTypesTable(struct UE4::FName Name); // Function Icarus.ContextMenuGroupTypesLibrary.RemoveRowFromContextMenuGroupTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167f670
	void RefreshConstants(); // Function Icarus.ContextMenuGroupTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x167f630
	int32_t NumRows(); // Function Icarus.ContextMenuGroupTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f5d0
	bool NotEqual_EnumName(struct FContextMenuGroupTypesEnum A, struct UE4::FName B); // Function Icarus.ContextMenuGroupTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f3f0
	bool NotEqual_EnumEnum(struct FContextMenuGroupTypesEnum A, struct FContextMenuGroupTypesEnum B); // Function Icarus.ContextMenuGroupTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f210
	struct FContextMenuGroupTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ContextMenuGroupTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f0f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ContextMenuGroupTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x167efd0
	struct FContextMenuGroupTypesRowHandle MakeLiteralContextMenuGroupTypes(struct FContextMenuGroupTypesRowHandle RowHandle); // Function Icarus.ContextMenuGroupTypesLibrary.MakeLiteralContextMenuGroupTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ee30
	struct FContextMenuGroupTypesRowHandle MakeContextMenuGroupTypesFromIndex(int32_t Index); // Function Icarus.ContextMenuGroupTypesLibrary.MakeContextMenuGroupTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ebf0
	struct FContextMenuGroupTypesEnum MakeContextMenuGroupTypesEnum(struct FContextMenuGroupTypesEnum Enum); // Function Icarus.ContextMenuGroupTypesLibrary.MakeContextMenuGroupTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167eb70
	struct FContextMenuGroupTypesRowHandle MakeContextMenuGroupTypes(struct UE4::FName RowName); // Function Icarus.ContextMenuGroupTypesLibrary.MakeContextMenuGroupTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ead0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ContextMenuGroupTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x167e990
	struct FContextMenuGroupTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ContextMenuGroupTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167e7c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ContextMenuGroupTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x167e6a0
	void GetContextMenuGroupTypesStruct(struct FContextMenuGroupTypesRowHandle RowHandle, struct FContextMenuGroupType& ContextMenuGroupTypes, enum class EValid& Paths); // Function Icarus.ContextMenuGroupTypesLibrary.GetContextMenuGroupTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167e020
	bool EqualEqual_FContextMenuGroupTypesRowHandleFContextMenuGroupTypesRowHandle(struct FContextMenuGroupTypesRowHandle RowHandleA, struct FContextMenuGroupTypesRowHandle RowHandleB); // Function Icarus.ContextMenuGroupTypesLibrary.EqualEqual_FContextMenuGroupTypesRowHandleFContextMenuGroupTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dda0
	bool EqualEqual_EnumEnum(struct FContextMenuGroupTypesEnum A, struct FContextMenuGroupTypesEnum B); // Function Icarus.ContextMenuGroupTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dbc0
	struct FContextMenuGroupTypesRowHandle CastToContextMenuGroupTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ContextMenuGroupTypesLibrary.CastToContextMenuGroupTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167d4e0
	void BreakContextMenuGroupTypesEnum(struct FContextMenuGroupTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ContextMenuGroupTypesLibrary.BreakContextMenuGroupTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x167d220
	void AddRowToContextMenuGroupTypesTable(struct UE4::FName Name, struct FContextMenuGroupType Data, struct FContextMenuGroupTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ContextMenuGroupTypesLibrary.AddRowToContextMenuGroupTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167ccd0
};

// Class Icarus.ContextMenuGroupTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UContextMenuGroupTypesTable : UIcarusDataTable {
};

// Class Icarus.ContextMenuWidget
// Size: 0x260 (Inherited: 0x260)
struct UContextMenuWidget : UUserWidget {

	void ShowMenu(struct FVector2D ScreenPosition, struct FText& MenuName, struct TSoftObjectPtr<UTexture2D>& MenuIcon); // Function Icarus.ContextMenuWidget.ShowMenu // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void CloseMenu(); // Function Icarus.ContextMenuWidget.CloseMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void AddItems(struct TArray<struct FContextMenuItemData>& ContextMenuItems); // Function Icarus.ContextMenuWidget.AddItems // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.CosmeticsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCosmeticsFunctionLibrary : UBlueprintFunctionLibrary {

	void LogDLCInfo(); // Function Icarus.CosmeticsFunctionLibrary.LogDLCInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167eab0
	bool IsDLCPackageInstalled(struct FDLCPackageDataRowHandle DLCPackage); // Function Icarus.CosmeticsFunctionLibrary.IsDLCPackageInstalled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167e8e0
};

// Class Icarus.CraftingAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCraftingAudioDataLibrary : URowLibrary {

	struct FCraftingAudioDataRowHandle StructToRowHandle(struct FCraftingAudioDataEnum EnumValue); // Function Icarus.CraftingAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167fc20
	struct UE4::FName StructToName(struct FCraftingAudioDataEnum EnumValue); // Function Icarus.CraftingAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167fad0
	int32_t StructToInt(struct FCraftingAudioDataEnum EnumValue); // Function Icarus.CraftingAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f990
	struct FCraftingAudioDataEnum RowHandleToStruct(struct FCraftingAudioDataRowHandle RowHandle); // Function Icarus.CraftingAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f830
	void RemoveRowFromCraftingAudioDataTable(struct UE4::FName Name); // Function Icarus.CraftingAudioDataLibrary.RemoveRowFromCraftingAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167f6f0
	void RefreshConstants(); // Function Icarus.CraftingAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x167f650
	int32_t NumRows(); // Function Icarus.CraftingAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f600
	bool NotEqual_EnumName(struct FCraftingAudioDataEnum A, struct UE4::FName B); // Function Icarus.CraftingAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f4e0
	bool NotEqual_EnumEnum(struct FCraftingAudioDataEnum A, struct FCraftingAudioDataEnum B); // Function Icarus.CraftingAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f300
	struct FCraftingAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CraftingAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167f180
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CraftingAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x167f060
	struct FCraftingAudioDataRowHandle MakeLiteralCraftingAudioData(struct FCraftingAudioDataRowHandle RowHandle); // Function Icarus.CraftingAudioDataLibrary.MakeLiteralCraftingAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ef00
	struct FCraftingAudioDataRowHandle MakeCraftingAudioDataFromIndex(int32_t Index); // Function Icarus.CraftingAudioDataLibrary.MakeCraftingAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167eda0
	struct FCraftingAudioDataEnum MakeCraftingAudioDataEnum(struct FCraftingAudioDataEnum Enum); // Function Icarus.CraftingAudioDataLibrary.MakeCraftingAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ed20
	struct FCraftingAudioDataRowHandle MakeCraftingAudioData(struct UE4::FName RowName); // Function Icarus.CraftingAudioDataLibrary.MakeCraftingAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ec80
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CraftingAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x167ea20
	struct FCraftingAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.CraftingAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167e850
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CraftingAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x167e730
	void GetCraftingAudioDataStruct(struct FCraftingAudioDataRowHandle RowHandle, struct FCraftingAudioData& CraftingAudioData, enum class EValid& Paths); // Function Icarus.CraftingAudioDataLibrary.GetCraftingAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167e1e0
	bool EqualEqual_FCraftingAudioDataRowHandleFCraftingAudioDataRowHandle(struct FCraftingAudioDataRowHandle RowHandleA, struct FCraftingAudioDataRowHandle RowHandleB); // Function Icarus.CraftingAudioDataLibrary.EqualEqual_FCraftingAudioDataRowHandleFCraftingAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dee0
	bool EqualEqual_EnumEnum(struct FCraftingAudioDataEnum A, struct FCraftingAudioDataEnum B); // Function Icarus.CraftingAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dcb0
	struct FCraftingAudioDataRowHandle CastToCraftingAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CraftingAudioDataLibrary.CastToCraftingAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167d600
	void BreakCraftingAudioDataEnum(struct FCraftingAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CraftingAudioDataLibrary.BreakCraftingAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x167d380
	void AddRowToCraftingAudioDataTable(struct UE4::FName Name, struct FCraftingAudioData Data, struct FCraftingAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CraftingAudioDataLibrary.AddRowToCraftingAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167cf40
};

// Class Icarus.CraftingAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCraftingAudioDataTable : UIcarusDataTable {
};

// Class Icarus.CraftingFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCraftingFunctionLibrary : UBlueprintFunctionLibrary {

	float GetStatBasedResourceCostMultiplier(struct FProcessorRecipesRowHandle& Recipe, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.GetStatBasedResourceCostMultiplier // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167e5b0
	int32_t GetScaledRecipeInputCount(struct FProcessorRecipesRowHandle& Recipe, struct FCraftingInput& Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.GetScaledRecipeInputCount // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167e3d0
	struct TArray<struct FResourceItem> CreateRecipeOutputResourceData(struct FProcessorRecipesRowHandle& Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeOutputResourceData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167da80
	struct TArray<struct FItemData> CreateRecipeOutputItemData(struct FProcessorRecipesRowHandle& Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeOutputItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167d970
	struct TArray<struct FResourceItem> CreateRecipeInputResourceData(struct FProcessorRecipesRowHandle& Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeInputResourceData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167d830
	struct TArray<struct FItemData> CreateRecipeInputItemData(struct FProcessorRecipesRowHandle& Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeInputItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167d720
};

// Class Icarus.CraftingModificationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCraftingModificationsLibrary : URowLibrary {

	struct FCraftingModificationsRowHandle StructToRowHandle(struct FCraftingModificationsEnum EnumValue); // Function Icarus.CraftingModificationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16852f0
	struct UE4::FName StructToName(struct FCraftingModificationsEnum EnumValue); // Function Icarus.CraftingModificationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16851b0
	int32_t StructToInt(struct FCraftingModificationsEnum EnumValue); // Function Icarus.CraftingModificationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1685070
	struct FCraftingModificationsEnum RowHandleToStruct(struct FCraftingModificationsRowHandle RowHandle); // Function Icarus.CraftingModificationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684ef0
	void RemoveRowFromCraftingModificationsTable(struct UE4::FName Name); // Function Icarus.CraftingModificationsLibrary.RemoveRowFromCraftingModificationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1684df0
	void RefreshConstants(); // Function Icarus.CraftingModificationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1684db0
	int32_t NumRows(); // Function Icarus.CraftingModificationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684cc0
	bool NotEqual_EnumName(struct FCraftingModificationsEnum A, struct UE4::FName B); // Function Icarus.CraftingModificationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684ae0
	bool NotEqual_EnumEnum(struct FCraftingModificationsEnum A, struct FCraftingModificationsEnum B); // Function Icarus.CraftingModificationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684900
	struct FCraftingModificationsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CraftingModificationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16847e0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CraftingModificationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16846c0
	struct FCraftingModificationsRowHandle MakeLiteralCraftingModifications(struct FCraftingModificationsRowHandle RowHandle); // Function Icarus.CraftingModificationsLibrary.MakeLiteralCraftingModifications // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684520
	struct FCraftingModificationsRowHandle MakeCraftingModificationsFromIndex(int32_t Index); // Function Icarus.CraftingModificationsLibrary.MakeCraftingModificationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16842e0
	struct FCraftingModificationsEnum MakeCraftingModificationsEnum(struct FCraftingModificationsEnum Enum); // Function Icarus.CraftingModificationsLibrary.MakeCraftingModificationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684260
	struct FCraftingModificationsRowHandle MakeCraftingModifications(struct UE4::FName RowName); // Function Icarus.CraftingModificationsLibrary.MakeCraftingModifications // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16841c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CraftingModificationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16840a0
	struct FCraftingModificationsEnum IntToStruct(int32_t IntValue); // Function Icarus.CraftingModificationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683f80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CraftingModificationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1683e60
	void GetCraftingModificationsStruct(struct FCraftingModificationsRowHandle RowHandle, struct FCraftingModifications& CraftingModifications, enum class EValid& Paths); // Function Icarus.CraftingModificationsLibrary.GetCraftingModificationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1683a40
	bool EqualEqual_FCraftingModificationsRowHandleFCraftingModificationsRowHandle(struct FCraftingModificationsRowHandle RowHandleA, struct FCraftingModificationsRowHandle RowHandleB); // Function Icarus.CraftingModificationsLibrary.EqualEqual_FCraftingModificationsRowHandleFCraftingModificationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16837c0
	bool EqualEqual_EnumEnum(struct FCraftingModificationsEnum A, struct FCraftingModificationsEnum B); // Function Icarus.CraftingModificationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16835e0
	struct FCraftingModificationsRowHandle CastToCraftingModificationsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CraftingModificationsLibrary.CastToCraftingModificationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16833a0
	void BreakCraftingModificationsEnum(struct FCraftingModificationsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CraftingModificationsLibrary.BreakCraftingModificationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1682a80
	void AddRowToCraftingModificationsTable(struct UE4::FName Name, struct FCraftingModifications Data, struct FCraftingModificationsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CraftingModificationsLibrary.AddRowToCraftingModificationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16824a0
};

// Class Icarus.CraftingModificationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCraftingModificationsTable : UIcarusDataTable {
};

// Class Icarus.CreatureAudioComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UCreatureAudioComponent : UActorComponent {
	enum class EAudioShelterState CurrentShelterState; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	float CurrentWaterDepth; // 0xb4(0x04)

	void UpdateShelterState(); // Function Icarus.CreatureAudioComponent.UpdateShelterState // (Final|Native|Protected|BlueprintCallable) // @ game+0x1685450
	float GetWaterImmersion(); // Function Icarus.CreatureAudioComponent.GetWaterImmersion // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1683e20
};

// Class Icarus.CreatureAudioThreatComponent
// Size: 0xe8 (Inherited: 0xb0)
struct UCreatureAudioThreatComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FAIAudioDataRowHandle AudioDataRow; // 0xb8(0x18)
	char pad_D0[0x8]; // 0xd0(0x08)
	struct AIcarusNPCCharacter* Creature; // 0xd8(0x08)
	char pad_E0[0x8]; // 0xe0(0x08)

	void OnCreatureDeath(struct UActorState* ActorState); // Function Icarus.CreatureAudioThreatComponent.OnCreatureDeath // (Final|Native|Protected) // @ game+0x1684d20
};

// Class Icarus.CreatureAudioThreatDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCreatureAudioThreatDataLibrary : URowLibrary {

	struct FCreatureAudioThreatDataRowHandle StructToRowHandle(struct FCreatureAudioThreatDataEnum EnumValue); // Function Icarus.CreatureAudioThreatDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16853a0
	struct UE4::FName StructToName(struct FCreatureAudioThreatDataEnum EnumValue); // Function Icarus.CreatureAudioThreatDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1685250
	int32_t StructToInt(struct FCreatureAudioThreatDataEnum EnumValue); // Function Icarus.CreatureAudioThreatDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1685110
	struct FCreatureAudioThreatDataEnum RowHandleToStruct(struct FCreatureAudioThreatDataRowHandle RowHandle); // Function Icarus.CreatureAudioThreatDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684fb0
	void RemoveRowFromCreatureAudioThreatDataTable(struct UE4::FName Name); // Function Icarus.CreatureAudioThreatDataLibrary.RemoveRowFromCreatureAudioThreatDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1684e70
	void RefreshConstants(); // Function Icarus.CreatureAudioThreatDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1684dd0
	int32_t NumRows(); // Function Icarus.CreatureAudioThreatDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684cf0
	bool NotEqual_EnumName(struct FCreatureAudioThreatDataEnum A, struct UE4::FName B); // Function Icarus.CreatureAudioThreatDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684bd0
	bool NotEqual_EnumEnum(struct FCreatureAudioThreatDataEnum A, struct FCreatureAudioThreatDataEnum B); // Function Icarus.CreatureAudioThreatDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16849f0
	struct FCreatureAudioThreatDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CreatureAudioThreatDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684870
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CreatureAudioThreatDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1684750
	struct FCreatureAudioThreatDataRowHandle MakeLiteralCreatureAudioThreatData(struct FCreatureAudioThreatDataRowHandle RowHandle); // Function Icarus.CreatureAudioThreatDataLibrary.MakeLiteralCreatureAudioThreatData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16845f0
	struct FCreatureAudioThreatDataRowHandle MakeCreatureAudioThreatDataFromIndex(int32_t Index); // Function Icarus.CreatureAudioThreatDataLibrary.MakeCreatureAudioThreatDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684490
	struct FCreatureAudioThreatDataEnum MakeCreatureAudioThreatDataEnum(struct FCreatureAudioThreatDataEnum Enum); // Function Icarus.CreatureAudioThreatDataLibrary.MakeCreatureAudioThreatDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684410
	struct FCreatureAudioThreatDataRowHandle MakeCreatureAudioThreatData(struct UE4::FName RowName); // Function Icarus.CreatureAudioThreatDataLibrary.MakeCreatureAudioThreatData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684370
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CreatureAudioThreatDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1684130
	struct FCreatureAudioThreatDataEnum IntToStruct(int32_t IntValue); // Function Icarus.CreatureAudioThreatDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1684010
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CreatureAudioThreatDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1683ef0
	void GetCreatureAudioThreatDataStruct(struct FCreatureAudioThreatDataRowHandle RowHandle, struct FCreatureAudioThreatData& CreatureAudioThreatData, enum class EValid& Paths); // Function Icarus.CreatureAudioThreatDataLibrary.GetCreatureAudioThreatDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1683bf0
	bool EqualEqual_FCreatureAudioThreatDataRowHandleFCreatureAudioThreatDataRowHandle(struct FCreatureAudioThreatDataRowHandle RowHandleA, struct FCreatureAudioThreatDataRowHandle RowHandleB); // Function Icarus.CreatureAudioThreatDataLibrary.EqualEqual_FCreatureAudioThreatDataRowHandleFCreatureAudioThreatDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683900
	bool EqualEqual_EnumEnum(struct FCreatureAudioThreatDataEnum A, struct FCreatureAudioThreatDataEnum B); // Function Icarus.CreatureAudioThreatDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16836d0
	struct FCreatureAudioThreatDataRowHandle CastToCreatureAudioThreatDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CreatureAudioThreatDataLibrary.CastToCreatureAudioThreatDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16834c0
	void BreakCreatureAudioThreatDataEnum(struct FCreatureAudioThreatDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CreatureAudioThreatDataLibrary.BreakCreatureAudioThreatDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1682be0
	void AddRowToCreatureAudioThreatDataTable(struct UE4::FName Name, struct FCreatureAudioThreatData Data, struct FCreatureAudioThreatDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CreatureAudioThreatDataLibrary.AddRowToCreatureAudioThreatDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1682770
};

// Class Icarus.CreatureAudioThreatDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCreatureAudioThreatDataTable : UIcarusDataTable {
};

// Class Icarus.CreatureAudioThreatTargetTrackComponent
// Size: 0x138 (Inherited: 0xe8)
struct UCreatureAudioThreatTargetTrackComponent : UCreatureAudioThreatComponent {
	struct TMap<enum class ECreatureAudioThreatTargetType, float> CurrentTargets; // 0xe8(0x50)
};

// Class Icarus.CreatureAudioThreatGOAPComponent
// Size: 0x138 (Inherited: 0x138)
struct UCreatureAudioThreatGOAPComponent : UCreatureAudioThreatTargetTrackComponent {
};

// Class Icarus.CreatureAudioThreatSimpleBossComponent
// Size: 0x138 (Inherited: 0x138)
struct UCreatureAudioThreatSimpleBossComponent : UCreatureAudioThreatTargetTrackComponent {
};

// Class Icarus.CreatureSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UCreatureSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnCreatureKilledNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnCreatureSkinnedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnCorpseItemRemovedNotify; // 0x50(0x10)

	void BroadcastCreatureSkinnedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusCorpse* Corpse); // Function Icarus.CreatureSubsystem.BroadcastCreatureSkinnedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d660
	void BroadcastCreatureKilledDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Causer, struct AActor* Creature); // Function Icarus.CreatureSubsystem.BroadcastCreatureKilledDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1683280
	void BroadcastCorpseItemRemovedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.CreatureSubsystem.BroadcastCorpseItemRemovedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1682d40
};

// Class Icarus.CriticalHitSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCriticalHitSetupLibrary : URowLibrary {

	struct FCriticalHitSetupRowHandle StructToRowHandle(struct FCriticalHitSetupEnum EnumValue); // Function Icarus.CriticalHitSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168c4b0
	struct UE4::FName StructToName(struct FCriticalHitSetupEnum EnumValue); // Function Icarus.CriticalHitSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168c370
	int32_t StructToInt(struct FCriticalHitSetupEnum EnumValue); // Function Icarus.CriticalHitSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168c230
	struct FCriticalHitSetupEnum RowHandleToStruct(struct FCriticalHitSetupRowHandle RowHandle); // Function Icarus.CriticalHitSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168bd30
	void RemoveRowFromCriticalHitSetupTable(struct UE4::FName Name); // Function Icarus.CriticalHitSetupLibrary.RemoveRowFromCriticalHitSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168bc30
	void RefreshConstants(); // Function Icarus.CriticalHitSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x168bbf0
	int32_t NumRows(); // Function Icarus.CriticalHitSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b6f0
	bool NotEqual_EnumName(struct FCriticalHitSetupEnum A, struct UE4::FName B); // Function Icarus.CriticalHitSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b510
	bool NotEqual_EnumEnum(struct FCriticalHitSetupEnum A, struct FCriticalHitSetupEnum B); // Function Icarus.CriticalHitSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b330
	struct FCriticalHitSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CriticalHitSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b210
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CriticalHitSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x168b0f0
	struct FCriticalHitSetupRowHandle MakeLiteralCriticalHitSetup(struct FCriticalHitSetupRowHandle RowHandle); // Function Icarus.CriticalHitSetupLibrary.MakeLiteralCriticalHitSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168af50
	struct FCriticalHitSetupRowHandle MakeCriticalHitSetupFromIndex(int32_t Index); // Function Icarus.CriticalHitSetupLibrary.MakeCriticalHitSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ad10
	struct FCriticalHitSetupEnum MakeCriticalHitSetupEnum(struct FCriticalHitSetupEnum Enum); // Function Icarus.CriticalHitSetupLibrary.MakeCriticalHitSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ac90
	struct FCriticalHitSetupRowHandle MakeCriticalHitSetup(struct UE4::FName RowName); // Function Icarus.CriticalHitSetupLibrary.MakeCriticalHitSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168abf0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CriticalHitSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x168aad0
	struct FCriticalHitSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.CriticalHitSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a840
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CriticalHitSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x168a720
	void GetCriticalHitSetupStruct(struct FCriticalHitSetupRowHandle RowHandle, struct FCriticalHitSetup& CriticalHitSetup, enum class EValid& Paths); // Function Icarus.CriticalHitSetupLibrary.GetCriticalHitSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168a240
	bool EqualEqual_FCriticalHitSetupRowHandleFCriticalHitSetupRowHandle(struct FCriticalHitSetupRowHandle RowHandleA, struct FCriticalHitSetupRowHandle RowHandleB); // Function Icarus.CriticalHitSetupLibrary.EqualEqual_FCriticalHitSetupRowHandleFCriticalHitSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689dc0
	bool EqualEqual_EnumEnum(struct FCriticalHitSetupEnum A, struct FCriticalHitSetupEnum B); // Function Icarus.CriticalHitSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689be0
	struct FCriticalHitSetupRowHandle CastToCriticalHitSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CriticalHitSetupLibrary.CastToCriticalHitSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1688850
	void BreakCriticalHitSetupEnum(struct FCriticalHitSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CriticalHitSetupLibrary.BreakCriticalHitSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1688450
	void AddRowToCriticalHitSetupTable(struct UE4::FName Name, struct FCriticalHitSetup Data, struct FCriticalHitSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CriticalHitSetupLibrary.AddRowToCriticalHitSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1687e10
};

// Class Icarus.CriticalHitSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCriticalHitSetupTable : UIcarusDataTable {
};

// Class Icarus.CurrencyConversionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCurrencyConversionsLibrary : URowLibrary {

	struct FCurrencyConversionsRowHandle StructToRowHandle(struct FCurrencyConversionsEnum EnumValue); // Function Icarus.CurrencyConversionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168c560
	struct UE4::FName StructToName(struct FCurrencyConversionsEnum EnumValue); // Function Icarus.CurrencyConversionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168c410
	int32_t StructToInt(struct FCurrencyConversionsEnum EnumValue); // Function Icarus.CurrencyConversionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168c2d0
	struct FCurrencyConversionsEnum RowHandleToStruct(struct FCurrencyConversionsRowHandle RowHandle); // Function Icarus.CurrencyConversionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168bdf0
	void RemoveRowFromCurrencyConversionsTable(struct UE4::FName Name); // Function Icarus.CurrencyConversionsLibrary.RemoveRowFromCurrencyConversionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168bcb0
	void RefreshConstants(); // Function Icarus.CurrencyConversionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x168bc10
	int32_t NumRows(); // Function Icarus.CurrencyConversionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b720
	bool NotEqual_EnumName(struct FCurrencyConversionsEnum A, struct UE4::FName B); // Function Icarus.CurrencyConversionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b600
	bool NotEqual_EnumEnum(struct FCurrencyConversionsEnum A, struct FCurrencyConversionsEnum B); // Function Icarus.CurrencyConversionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b420
	struct FCurrencyConversionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.CurrencyConversionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b2a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.CurrencyConversionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x168b180
	struct FCurrencyConversionsRowHandle MakeLiteralCurrencyConversions(struct FCurrencyConversionsRowHandle RowHandle); // Function Icarus.CurrencyConversionsLibrary.MakeLiteralCurrencyConversions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168b020
	struct FCurrencyConversionsRowHandle MakeCurrencyConversionsFromIndex(int32_t Index); // Function Icarus.CurrencyConversionsLibrary.MakeCurrencyConversionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168aec0
	struct FCurrencyConversionsEnum MakeCurrencyConversionsEnum(struct FCurrencyConversionsEnum Enum); // Function Icarus.CurrencyConversionsLibrary.MakeCurrencyConversionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ae40
	struct FCurrencyConversionsRowHandle MakeCurrencyConversions(struct UE4::FName RowName); // Function Icarus.CurrencyConversionsLibrary.MakeCurrencyConversions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ada0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.CurrencyConversionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x168ab60
	struct FCurrencyConversionsEnum IntToStruct(int32_t IntValue); // Function Icarus.CurrencyConversionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a8d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.CurrencyConversionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x168a7b0
	void GetCurrencyConversionsStruct(struct FCurrencyConversionsRowHandle RowHandle, struct FCurrencyConversion& CurrencyConversions, enum class EValid& Paths); // Function Icarus.CurrencyConversionsLibrary.GetCurrencyConversionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168a410
	bool EqualEqual_FCurrencyConversionsRowHandleFCurrencyConversionsRowHandle(struct FCurrencyConversionsRowHandle RowHandleA, struct FCurrencyConversionsRowHandle RowHandleB); // Function Icarus.CurrencyConversionsLibrary.EqualEqual_FCurrencyConversionsRowHandleFCurrencyConversionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689f00
	bool EqualEqual_EnumEnum(struct FCurrencyConversionsEnum A, struct FCurrencyConversionsEnum B); // Function Icarus.CurrencyConversionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689cd0
	struct FCurrencyConversionsRowHandle CastToCurrencyConversionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.CurrencyConversionsLibrary.CastToCurrencyConversionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1688970
	void BreakCurrencyConversionsEnum(struct FCurrencyConversionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.CurrencyConversionsLibrary.BreakCurrencyConversionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16885b0
	void AddRowToCurrencyConversionsTable(struct UE4::FName Name, struct FCurrencyConversion Data, struct FCurrencyConversionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.CurrencyConversionsLibrary.AddRowToCurrencyConversionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16881d0
};

// Class Icarus.CurrencyConversionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCurrencyConversionsTable : UIcarusDataTable {
};

// Class Icarus.CursorSubsystem
// Size: 0xf0 (Inherited: 0x30)
struct UCursorSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate CursorCleared; // 0x30(0x10)
	struct FMulticastInlineDelegate CursorUpdated; // 0x40(0x10)
	struct FItemData CurrentItem; // 0x50(0xa0)

	void UpdateCursor(struct FItemData Item); // Function Icarus.CursorSubsystem.UpdateCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x168c610
};

// Class Icarus.CustomComboBox
// Size: 0x598 (Inherited: 0x108)
struct UCustomComboBox : UWidget {
	struct FComboButtonStyle ComboStyle; // 0x108(0x3b8)
	struct FMulticastInlineDelegate OnItemSet; // 0x4c0(0x10)
	char pad_4D0[0x40]; // 0x4d0(0x40)
	struct TArray<struct UUserWidget*> WidgetsRef; // 0x510(0x10)
	char pad_520[0x78]; // 0x520(0x78)

	void SortItems(); // Function Icarus.CustomComboBox.SortItems // (Final|Native|Public|BlueprintCallable) // @ game+0x168c210
	void SetSelectedName(struct FString Name, bool bApplyToCombo); // Function Icarus.CustomComboBox.SetSelectedName // (Final|Native|Public|BlueprintCallable) // @ game+0x168c0c0
	void SetSelectedIndex(int32_t Index, bool bApplyToCombo); // Function Icarus.CustomComboBox.SetSelectedIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x168bff0
	void SetOpen(bool bOpen); // Function Icarus.CustomComboBox.SetOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x168bf60
	void SetFilter(struct FString FilterText); // Function Icarus.CustomComboBox.SetFilter // (Final|Native|Public|BlueprintCallable) // @ game+0x168beb0
	bool IsOpen(); // Function Icarus.CustomComboBox.IsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x168aaa0
	struct UUserWidget* GetSelectedWidget(); // Function Icarus.CustomComboBox.GetSelectedWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x168a6f0
	void ClearChildren(); // Function Icarus.CustomComboBox.ClearChildren // (Final|Native|Public|BlueprintCallable) // @ game+0x1688a90
	void AddItem(struct FString Name, struct UUserWidget* Widget); // Function Icarus.CustomComboBox.AddItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1687cd0
};

// Class Icarus.DamageFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDamageFunctionLibrary : UBlueprintFunctionLibrary {

	bool PrepareProjectileDamage(struct AActor* Instigator, struct AActor* Projectile); // Function Icarus.DamageFunctionLibrary.PrepareProjectileDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168bb20
	int32_t PredictResistedDamage(struct AActor* Attacker, struct AActor* Weapon, struct AActor* Defender, bool bKillCam); // Function Icarus.DamageFunctionLibrary.PredictResistedDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168b9d0
	struct TMap<enum class EIcarusDamageType, int32_t> PredictDamage(struct AActor* Attacker, struct AActor* Weapon, bool bUseDamageVariation); // Function Icarus.DamageFunctionLibrary.PredictDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168b820
	bool PartiallyRepairItem(struct AIcarusItem* ItemInstance, float RepairPercent); // Function Icarus.DamageFunctionLibrary.PartiallyRepairItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168b750
	bool IsCriticalHit(struct AActor* Defender, struct FHitResult& HitInfo); // Function Icarus.DamageFunctionLibrary.IsCriticalHit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168a960
	enum class EIcarusDamageType GetDamageTypeFromEvent(struct FDamageEvent& DamageEvent); // Function Icarus.DamageFunctionLibrary.GetDamageTypeFromEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x168a650
	struct UDamageType* GetDamageTypeClass(enum class EIcarusDamageType DamageType); // Function Icarus.DamageFunctionLibrary.GetDamageTypeClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168a5c0
	int32_t GetCriticalDamagePlusPercent(struct AActor* Attacker); // Function Icarus.DamageFunctionLibrary.GetCriticalDamagePlusPercent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168a1b0
	struct FStatContainer GetBestStatContainer(struct AActor* Attacker); // Function Icarus.DamageFunctionLibrary.GetBestStatContainer // (Final|Native|Static|Public) // @ game+0x168a040
	bool DealSelfDamage(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.DealSelfDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1689ae0
	bool DealRadialDamageWithFalloff(struct UObject* WorldContextObject, enum class EIcarusDamageType DamageType, float BaseDamage, float MinimumDamage, struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, struct TArray<struct AActor*>& IgnoreActors, struct AActor* Attacker, struct AController* AttackInstigator, enum class ECollisionChannel DamagePreventionChannel); // Function Icarus.DamageFunctionLibrary.DealRadialDamageWithFalloff // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1689730
	bool DealRadialDamage(struct UObject* WorldContextObject, enum class EIcarusDamageType DamageType, float BaseDamage, struct FVector& Origin, float DamageRadius, struct TArray<struct AActor*>& IgnoreActors, struct AActor* Attacker, struct AController* AttackInstigator, bool bDoFullDamage, enum class ECollisionChannel DamagePreventionChannel); // Function Icarus.DamageFunctionLibrary.DealRadialDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1689410
	bool DealPointDamage(struct AActor* Attacker, struct AActor* Weapon, struct AActor* Defender, bool bIsKillCam, struct FVector& HitNormal, struct FHitResult& HitInfo, bool& WasCriticalHit); // Function Icarus.DamageFunctionLibrary.DealPointDamage // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1689190
	bool DealFlatDamage(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct AActor* Defender, struct AController* Instigator); // Function Icarus.DamageFunctionLibrary.DealFlatDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1689050
	bool DealDamageToInventoryItems(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct UInventory* Inventory, struct FGameplayTagQuery TagQuery); // Function Icarus.DamageFunctionLibrary.DealDamageToInventoryItems // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1688e80
	bool DealDamageToInventoryItem(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct UInventory* Inventory, int32_t Location); // Function Icarus.DamageFunctionLibrary.DealDamageToInventoryItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1688d40
	bool DealDamage(struct AActor* Attacker, struct AActor* Weapon, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.DealDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1688c40
	bool DealCollisionDamage(struct AActor* Attacker, struct AActor* Defender, float ImpulseDamage, struct FHitResult& HitInfo); // Function Icarus.DamageFunctionLibrary.DealCollisionDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1688ab0
	int32_t CalculateDamageTaken(enum class EIcarusDamageType DamageType, int32_t DamageValue, struct AActor* Causer, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.CalculateDamageTaken // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1688710
};

// Class Icarus.DataTableValidationLibrary
// Size: 0x118 (Inherited: 0x28)
struct UDataTableValidationLibrary : UObject {
	char pad_28[0x98]; // 0x28(0x98)
	struct TMap<struct UObject*, struct TWeakObjectPtr<struct AActor>> TempTestActors; // 0xc0(0x50)
	struct UWorld* TempTestWorld; // 0x110(0x08)

	void Warn(struct FString Message); // Function Icarus.DataTableValidationLibrary.Warn // (Final|Native|Public|BlueprintCallable) // @ game+0x168f900
	void Validate_WorldData_RowHandle(struct FWorldDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WorldData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WorldBosses_RowHandle(struct FWorldBossesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WorldBosses_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WorkshopItems_RowHandle(struct FWorkshopItemsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WorkshopItems_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Weight_RowHandle(struct FWeightRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Weight_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WeatherPools_RowHandle(struct FWeatherPoolsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherPools_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WeatherEvents_RowHandle(struct FWeatherEventsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WeatherBiomeGroups_RowHandle(struct FWeatherBiomeGroupsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherBiomeGroups_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WeatherActions_RowHandle(struct FWeatherActionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherActions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_WaterSetup_RowHandle(struct FWaterSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WaterSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Water_RowHandle(struct FWaterRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Water_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_VoxelSetupData_RowHandle(struct FVoxelSetupDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VoxelSetupData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_VoxelMaterialMap_RowHandle(struct FVoxelMaterialMapRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VoxelMaterialMap_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_VoxelDistributionRegion_RowHandle(struct FVoxelDistributionRegionRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VoxelDistributionRegion_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_VocalisationSettings_RowHandle(struct FVocalisationSettingsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VocalisationSettings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Vocalisations_RowHandle(struct FVocalisationsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Vocalisations_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Vehicular_RowHandle(struct FVehicularRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Vehicular_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_VehicleSetups_RowHandle(struct FVehicleSetupsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VehicleSetups_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ValidInteractQueries_RowHandle(struct FValidInteractQueriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ValidInteractQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ValidHitTypes_RowHandle(struct FValidHitTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ValidHitTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ValidHitQueries_RowHandle(struct FValidHitQueriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ValidHitQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Uses_RowHandle(struct FUsesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Uses_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Usable_RowHandle(struct FUsableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Usable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TreeAudioData_RowHandle(struct FTreeAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TreeAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Transmutable_RowHandle(struct FTransmutableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Transmutable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ToolTypes_RowHandle(struct FToolTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ToolTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ToolDamage_RowHandle(struct FToolDamageRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ToolDamage_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TimeOfDay_RowHandle(struct FTimeOfDayRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TimeOfDay_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TimelineRanks_RowHandle(struct FTimelineRanksRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TimelineRanks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Thermal_RowHandle(struct FThermalRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Thermal_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Terrains_RowHandle(struct FTerrainsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Terrains_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TalentViews_RowHandle(struct FTalentViewsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentViews_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TalentTrees_RowHandle(struct FTalentTreesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentTrees_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Talents_RowHandle(struct FTalentsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Talents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TalentRanks_RowHandle(struct FTalentRanksRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentRanks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TalentModelViews_RowHandle(struct FTalentModelViewsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentModelViews_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TalentModels_RowHandle(struct FTalentModelsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentModels_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TalentArchetypes_RowHandle(struct FTalentArchetypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentArchetypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_TagQueries_RowHandle(struct FTagQueriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TagQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_SurvivalTriggers_RowHandle(struct FSurvivalTriggersRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_SurvivalTriggers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Surfaces_RowHandle(struct FSurfacesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Surfaces_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Stats_RowHandle(struct FStatsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Stats_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Statistics_RowHandle(struct FStatisticsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Statistics_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_StatGameplayTags_RowHandle(struct FStatGameplayTagsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StatGameplayTags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_StatCategories_RowHandle(struct FStatCategoriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StatCategories_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_StatAfflictions_RowHandle(struct FStatAfflictionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StatAfflictions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_StaminaActionCosts_RowHandle(struct FStaminaActionCostsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StaminaActionCosts_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Slotable_RowHandle(struct FSlotableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Slotable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_SessionFlags_RowHandle(struct FSessionFlagsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_SessionFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ScriptedEvents_RowHandle(struct FScriptedEventsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ScriptedEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Rulesets_RowHandle(struct FRulesetsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Rulesets_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RTXGIVolumes_RowHandle(struct FRTXGIVolumesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RTXGIVolumes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RowHandle(struct FRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Rocketable_RowHandle(struct FRocketableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Rocketable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ResourceNodeAudioData_RowHandle(struct FResourceNodeAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ResourceNodeAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RepGraphClassSettings_RowHandle(struct FRepGraphClassSettingsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RepGraphClassSettings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RepGraphClassPolicies_RowHandle(struct FRepGraphClassPoliciesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RepGraphClassPolicies_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RecipeSets_RowHandle(struct FRecipeSetsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RecipeSets_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RangedWeaponData_RowHandle(struct FRangedWeaponDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RangedWeaponData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RadialOptions_RowHandle(struct FRadialOptionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RadialOptions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_RadialMenuData_RowHandle(struct FRadialMenuDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RadialMenuData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_QuickMove_RowHandle(struct FQuickMoveRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuickMove_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_QuestWeatherModifiers_RowHandle(struct FQuestWeatherModifiersRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestWeatherModifiers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_QuestVocalisationModifiers_RowHandle(struct FQuestVocalisationModifiersRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestVocalisationModifiers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Quests_RowHandle(struct FQuestsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Quests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_QuestQueries_RowHandle(struct FQuestQueriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_QuestEvents_RowHandle(struct FQuestEventsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_QuestEnemyModifiers_RowHandle(struct FQuestEnemyModifiersRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestEnemyModifiers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ProspectStats_RowHandle(struct FProspectStatsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProspectStats_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ProspectList_RowHandle(struct FProspectListRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProspectList_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ProjectileTypes_RowHandle(struct FProjectileTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProjectileTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ProcessorRecipes_RowHandle(struct FProcessorRecipesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProcessorRecipes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Processing_RowHandle(struct FProcessingRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Processing_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_PreviewCameraSettings_RowHandle(struct FPreviewCameraSettingsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PreviewCameraSettings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_PlayerTrackers_RowHandle(struct FPlayerTrackersRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerTrackers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_PlayerTrackerCategories_RowHandle(struct FPlayerTrackerCategoriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerTrackerCategories_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_PlayerIdentity_RowHandle(struct FPlayerIdentityRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerIdentity_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_PlayerFootstepAudioData_RowHandle(struct FPlayerFootstepAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerFootstepAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_PlayerAccoladeCategories_RowHandle(struct FPlayerAccoladeCategoriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerAccoladeCategories_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Oxygen_RowHandle(struct FOxygenRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Oxygen_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_OreDeposit_RowHandle(struct FOreDepositRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_OreDeposit_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_OrchestrationStateFlags_RowHandle(struct FOrchestrationStateFlagsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_OrchestrationStateFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_OrchestrationEvents_RowHandle(struct FOrchestrationEventsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_OrchestrationEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_MusicTracks_RowHandle(struct FMusicTracksRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MusicTracks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ModifierStates_RowHandle(struct FModifierStatesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ModifierStates_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ModifierStateAudioData_RowHandle(struct FModifierStateAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ModifierStateAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_MetaResourceNodes_RowHandle(struct FMetaResourceNodesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MetaResourceNodes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_MetaCurrency_RowHandle(struct FMetaCurrencyRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MetaCurrency_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Meshable_RowHandle(struct FMeshableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Meshable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_MapSearchArea_RowHandle(struct FMapSearchAreaRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MapSearchArea_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_MapIcons_RowHandle(struct FMapIconsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MapIcons_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_LevelSequences_RowHandle(struct FLevelSequencesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_LevelSequences_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Languages_RowHandle(struct FLanguagesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Languages_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Keys_RowHandle(struct FKeysRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Keys_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_KeyIcons_RowHandle(struct FKeyIconsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_KeyIcons_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Keybindings_RowHandle(struct FKeybindingsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Keybindings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_KeybindContexts_RowHandle(struct FKeybindContextsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_KeybindContexts_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemWeightStatQueries_RowHandle(struct FItemWeightStatQueriesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemWeightStatQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemTraitMasks_RowHandle(struct FItemTraitMasksRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemTraitMasks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemTemplate_RowHandle(struct FItemTemplateRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemTemplate_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemsStatic_RowHandle(struct FItemsStaticRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemsStatic_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemRewards_RowHandle(struct FItemRewardsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemRewards_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemClassificationsIcons_RowHandle(struct FItemClassificationsIconsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemClassificationsIcons_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemAudioData_RowHandle(struct FItemAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemAttachment_RowHandle(struct FItemAttachmentRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemAttachment_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ItemAnimations_RowHandle(struct FItemAnimationsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemAnimations_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Itemable_RowHandle(struct FItemableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Itemable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_InventoryInfo_RowHandle(struct FInventoryInfoRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_InventoryInfo_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_InventoryID_RowHandle(struct FInventoryIDRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_InventoryID_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_InventoryContainer_RowHandle(struct FInventoryContainerRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_InventoryContainer_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Inventory_RowHandle(struct FInventoryRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Inventory_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Interactions_RowHandle(struct FInteractionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Interactions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Interactable_RowHandle(struct FInteractableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Interactable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_HuntingSetup_RowHandle(struct FHuntingSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_HuntingSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_HuntingClueSetup_RowHandle(struct FHuntingClueSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_HuntingClueSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Hitable_RowHandle(struct FHitableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Hitable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Hints_RowHandle(struct FHintsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Hints_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Highlightable_RowHandle(struct FHighlightableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Highlightable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_GrantedAuras_RowHandle(struct FGrantedAurasRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GrantedAuras_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_GOAPSetup_RowHandle(struct FGOAPSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_GOAPProperties_RowHandle(struct FGOAPPropertiesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPProperties_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_GOAPMotivations_RowHandle(struct FGOAPMotivationsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPMotivations_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_GOAPGoals_RowHandle(struct FGOAPGoalsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPGoals_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_GOAPActions_RowHandle(struct FGOAPActionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPActions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Generator_RowHandle(struct FGeneratorRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Generator_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Fuel_RowHandle(struct FFuelRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Fuel_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FoodTypes_RowHandle(struct FFoodTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FoodTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Focusable_RowHandle(struct FFocusableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Focusable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FLODDescriptions_RowHandle(struct FFLODDescriptionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FLODDescriptions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Floatable_RowHandle(struct FFloatableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Floatable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Flammable_RowHandle(struct FFlammableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Flammable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FishSetup_RowHandle(struct FFishSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FishSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FirearmData_RowHandle(struct FFirearmDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FirearmData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FirearmAudioData_RowHandle(struct FFirearmAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FirearmAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Fillable_RowHandle(struct FFillableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Fillable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FeatureLevels_RowHandle(struct FFeatureLevelsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FeatureLevels_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FarmingSeeds_RowHandle(struct FFarmingSeedsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FarmingSeeds_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FarmingGrowthStates_RowHandle(struct FFarmingGrowthStatesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FarmingGrowthStates_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Farmable_RowHandle(struct FFarmableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Farmable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FactionMissions_RowHandle(struct FFactionMissionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FactionMissions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_FactionInfo_RowHandle(struct FFactionInfoRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FactionInfo_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ExperienceEvents_RowHandle(struct FExperienceEventsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ExperienceEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Experience_RowHandle(struct FExperienceRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Experience_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ExoticSpawn_RowHandle(struct FExoticSpawnRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ExoticSpawn_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ErrorCodes_RowHandle(struct FErrorCodesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ErrorCodes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Equippable_RowHandle(struct FEquippableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Equippable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_EpicCreatures_RowHandle(struct FEpicCreaturesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_EpicCreatures_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Energy_RowHandle(struct FEnergyRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Energy_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Durable_RowHandle(struct FDurableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Durable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DropShipSequences_RowHandle(struct FDropShipSequencesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DropShipSequences_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DropShipActions_RowHandle(struct FDropShipActionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DropShipActions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DLCPackageData_RowHandle(struct FDLCPackageDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DLCPackageData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DialogueSpeaker_RowHandle(struct FDialogueSpeakerRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DialogueSpeaker_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DialoguePool_RowHandle(struct FDialoguePoolRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DialoguePool_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Dialogue_RowHandle(struct FDialogueRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Dialogue_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DeployableTypes_RowHandle(struct FDeployableTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DeployableTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DeployableSetup_RowHandle(struct FDeployableSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DeployableSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Deployable_RowHandle(struct FDeployableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Deployable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Decayable_RowHandle(struct FDecayableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Decayable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_DataTable(struct UIcarusDataTable* DataTable); // Function Icarus.DataTableValidationLibrary.Validate_DataTable // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void Validate_CurrencyConversions_RowHandle(struct FCurrencyConversionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CurrencyConversions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CriticalHitSetup_RowHandle(struct FCriticalHitSetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CriticalHitSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CreatureAudioThreatData_RowHandle(struct FCreatureAudioThreatDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CreatureAudioThreatData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CraftingModifications_RowHandle(struct FCraftingModificationsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CraftingModifications_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CraftingAudioData_RowHandle(struct FCraftingAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CraftingAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ContextMenuGroupTypes_RowHandle(struct FContextMenuGroupTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ContextMenuGroupTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Consumable_RowHandle(struct FConsumableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Consumable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Combustible_RowHandle(struct FCombustibleRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Combustible_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterVoices_RowHandle(struct FCharacterVoicesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterVoices_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterTimeline_RowHandle(struct FCharacterTimelineRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterTimeline_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterStartingStats_RowHandle(struct FCharacterStartingStatsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterStartingStats_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterPerks_RowHandle(struct FCharacterPerksRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterPerks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterGrowth_RowHandle(struct FCharacterGrowthRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterGrowth_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterFlags_RowHandle(struct FCharacterFlagsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_CharacterCreationData_RowHandle(struct FCharacterCreationDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterCreationData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Challenges_RowHandle(struct FChallengesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Challenges_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_BuildingTypes_RowHandle(struct FBuildingTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BuildingTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_BuildingStability_RowHandle(struct FBuildingStabilityRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BuildingStability_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_BuildableAudioData_RowHandle(struct FBuildableAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BuildableAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Buildable_RowHandle(struct FBuildableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Buildable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_BlueprintUnlocks_RowHandle(struct FBlueprintUnlocksRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BlueprintUnlocks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Biomes_RowHandle(struct FBiomesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Biomes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_BiomeAudioData_RowHandle(struct FBiomeAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BiomeAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Ballistic_RowHandle(struct FBallisticRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Ballistic_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AutonomousSpawns_RowHandle(struct FAutonomousSpawnsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AutonomousSpawns_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AssetReferences_RowHandle(struct FAssetReferencesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AssetReferences_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ArmourSets_RowHandle(struct FArmourSetsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ArmourSets_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_ArmourSetBonus_RowHandle(struct FArmourSetBonusRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ArmourSetBonus_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Armour_RowHandle(struct FArmourRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Armour_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AmmoTypes_RowHandle(struct FAmmoTypesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AmmoTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AISpawnZones_RowHandle(struct FAISpawnZonesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISpawnZones_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AISpawnRules_RowHandle(struct FAISpawnRulesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISpawnRules_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AISpawnConfig_RowHandle(struct FAISpawnConfigRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISpawnConfig_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AISetup_RowHandle(struct FAISetupRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AIRelationships_RowHandle(struct FAIRelationshipsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIRelationships_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AIGrowth_RowHandle(struct FAIGrowthRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIGrowth_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AIDescriptors_RowHandle(struct FAIDescriptorsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIDescriptors_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AICreatureType_RowHandle(struct FAICreatureTypeRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AICreatureType_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AIAudioData_RowHandle(struct FAIAudioDataRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AfflictionChance_RowHandle(struct FAfflictionChanceRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AfflictionChance_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Actions_RowHandle(struct FActionsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Actions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Actionable_RowHandle(struct FActionableRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Actionable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_AccountFlags_RowHandle(struct FAccountFlagsRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AccountFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Validate_Accolades_RowHandle(struct FAccoladesRowHandle& RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Accolades_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void Info(struct FString Message); // Function Icarus.DataTableValidationLibrary.Info // (Final|Native|Public|BlueprintCallable) // @ game+0x168f850
	struct AActor* GetOrSpawnTempTestActor(struct UObject* ActorClass); // Function Icarus.DataTableValidationLibrary.GetOrSpawnTempTestActor // (Final|Native|Public|BlueprintCallable) // @ game+0x168f7b0
	void Fatal(struct FString Message); // Function Icarus.DataTableValidationLibrary.Fatal // (Final|Native|Public|BlueprintCallable) // @ game+0x168f700
	void Error(struct FString Message); // Function Icarus.DataTableValidationLibrary.Error // (Final|Native|Public|BlueprintCallable) // @ game+0x168f650
	void Detail(struct FString Message); // Function Icarus.DataTableValidationLibrary.Detail // (Final|Native|Public|BlueprintCallable) // @ game+0x168f5a0
};

// Class Icarus.DecayableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UDecayableComponent : UTraitComponent {
	int32_t DecayTime; // 0xd0(0x04)
	int32_t SpoilTime; // 0xd4(0x04)
	float CurrentTime; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	bool GetDecayableData(struct FDecayableData& OutData); // Function Icarus.DecayableComponent.GetDecayableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16934e0
};

// Class Icarus.DecayableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDecayableLibrary : URowLibrary {

	struct FDecayableRowHandle StructToRowHandle(struct FDecayableEnum EnumValue); // Function Icarus.DecayableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695940
	struct UE4::FName StructToName(struct FDecayableEnum EnumValue); // Function Icarus.DecayableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695800
	int32_t StructToInt(struct FDecayableEnum EnumValue); // Function Icarus.DecayableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16956c0
	struct FDecayableEnum RowHandleToStruct(struct FDecayableRowHandle RowHandle); // Function Icarus.DecayableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694e60
	void RemoveRowFromDecayableTable(struct UE4::FName Name); // Function Icarus.DecayableLibrary.RemoveRowFromDecayableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1694d60
	void RefreshConstants(); // Function Icarus.DecayableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1694d20
	int32_t NumRows(); // Function Icarus.DecayableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694ca0
	bool NotEqual_EnumName(struct FDecayableEnum A, struct UE4::FName B); // Function Icarus.DecayableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694ac0
	bool NotEqual_EnumEnum(struct FDecayableEnum A, struct FDecayableEnum B); // Function Icarus.DecayableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16948e0
	struct FDecayableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DecayableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16947c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DecayableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16946a0
	struct FDecayableRowHandle MakeLiteralDecayable(struct FDecayableRowHandle RowHandle); // Function Icarus.DecayableLibrary.MakeLiteralDecayable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694470
	struct FDecayableRowHandle MakeDecayableFromIndex(int32_t Index); // Function Icarus.DecayableLibrary.MakeDecayableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694230
	struct FDecayableEnum MakeDecayableEnum(struct FDecayableEnum Enum); // Function Icarus.DecayableLibrary.MakeDecayableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16941b0
	struct FDecayableRowHandle MakeDecayable(struct UE4::FName RowName); // Function Icarus.DecayableLibrary.MakeDecayable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694110
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DecayableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1693ff0
	struct FDecayableEnum IntToStruct(int32_t IntValue); // Function Icarus.DecayableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1693ed0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DecayableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1693db0
	void GetDecayableStruct(struct FDecayableRowHandle RowHandle, struct FDecayableData& Decayable, enum class EValid& Paths); // Function Icarus.DecayableLibrary.GetDecayableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1693690
	bool EqualEqual_FDecayableRowHandleFDecayableRowHandle(struct FDecayableRowHandle RowHandleA, struct FDecayableRowHandle RowHandleB); // Function Icarus.DecayableLibrary.EqualEqual_FDecayableRowHandleFDecayableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16931b0
	bool EqualEqual_EnumEnum(struct FDecayableEnum A, struct FDecayableEnum B); // Function Icarus.DecayableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1692fd0
	struct FDecayableRowHandle CastToDecayableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DecayableLibrary.CastToDecayableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692d00
	void BreakDecayableEnum(struct FDecayableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DecayableLibrary.BreakDecayableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1692a40
	void AddRowToDecayableTable(struct UE4::FName Name, struct FDecayableData Data, struct FDecayableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DecayableLibrary.AddRowToDecayableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16925b0
};

// Class Icarus.DecayableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDecayableTable : UIcarusDataTable {
};

// Class Icarus.Deployable
// Size: 0x420 (Inherited: 0x3f0)
struct ADeployable : AIcarusItem {
	struct AActor* FoundationActor; // 0x3f0(0x08)
	struct TArray<struct ADeployable*> AttachedDeployableActors; // 0x3f8(0x10)
	struct TArray<struct AResourceNetwork*> LinkedNetworks; // 0x408(0x10)
	struct UResourceComponent* ResourceComponent; // 0x418(0x08)

	void UpdateConnectedResourceNetworks(struct UResourceNetworkComponent* Component); // Function Icarus.Deployable.UpdateConnectedResourceNetworks // (Final|Native|Public|BlueprintCallable) // @ game+0x1695aa0
	void SetFoundationActor(struct AActor* NewFoundationActor); // Function Icarus.Deployable.SetFoundationActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1695630
	void OnServer_DisconnectFromNetworks(); // Function Icarus.Deployable.OnServer_DisconnectFromNetworks // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1694d00
	void OnRestoreFoundationFromDatabase(struct AIcarusActor* FoundationFromDatabase); // Function Icarus.Deployable.OnRestoreFoundationFromDatabase // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	bool HasAccessToResourceNetwork(enum class EIcarusResourceType Type, int32_t Rate, bool bActivate); // Function Icarus.Deployable.HasAccessToResourceNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x1693ca0
	struct UInventoryComponent* GetSlotInventory(enum class EObjectSlotType InventoryType); // Function Icarus.Deployable.GetSlotInventory // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1693c10
	bool GetIsInCave(); // Function Icarus.Deployable.GetIsInCave // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct ADeployable* GetAttachedDeployableParent(); // Function Icarus.Deployable.GetAttachedDeployableParent // (Final|Native|Public|BlueprintCallable) // @ game+0x16934b0
	struct TArray<struct ADeployable*> GetAttachedDeployableChildren(); // Function Icarus.Deployable.GetAttachedDeployableChildren // (Final|Native|Public|BlueprintCallable) // @ game+0x1693430
	void Deployable_StopInteract(struct AActor* Interactor); // Function Icarus.Deployable.Deployable_StopInteract // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void Deployable_Interact(struct AActor* Interactor); // Function Icarus.Deployable.Deployable_Interact // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool DeactivateResourceNetwork(enum class EIcarusResourceType Type); // Function Icarus.Deployable.DeactivateResourceNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x1692f40
	bool ActorCanConnectToNetwork(enum class EIcarusResourceType Type); // Function Icarus.Deployable.ActorCanConnectToNetwork // (Native|Event|Public|BlueprintEvent) // @ game+0x16054a0
};

// Class Icarus.DeployableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UDeployableComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnDeployed; // 0xd0(0x01)
	enum class EIcarusItemContext SpawnContext; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
	struct UNavModifierComponent* NavModifierComponent; // 0xd8(0x08)

	void Server_RequestDeploy(struct FTransform DeployTransform, struct AActor* FoundationActor, struct FItemData ItemData, int32_t VariantIndex); // Function Icarus.DeployableComponent.Server_RequestDeploy // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x1694fe0
	void Multicast_DeploySuccess(struct ADeployable* SpawnedDeployable); // Function Icarus.DeployableComponent.Multicast_DeploySuccess // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x1694610
	bool GetDeployableData(struct FDeployableData& OutData); // Function Icarus.DeployableComponent.GetDeployableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1693830
};

// Class Icarus.DeployableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDeployableLibrary : URowLibrary {

	struct FDeployableRowHandle StructToRowHandle(struct FDeployableEnum EnumValue); // Function Icarus.DeployableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16959f0
	struct UE4::FName StructToName(struct FDeployableEnum EnumValue); // Function Icarus.DeployableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16958a0
	int32_t StructToInt(struct FDeployableEnum EnumValue); // Function Icarus.DeployableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695760
	struct FDeployableEnum RowHandleToStruct(struct FDeployableRowHandle RowHandle); // Function Icarus.DeployableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694f20
	void RemoveRowFromDeployableTable(struct UE4::FName Name); // Function Icarus.DeployableLibrary.RemoveRowFromDeployableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1694de0
	void RefreshConstants(); // Function Icarus.DeployableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1694d40
	int32_t NumRows(); // Function Icarus.DeployableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694cd0
	bool NotEqual_EnumName(struct FDeployableEnum A, struct UE4::FName B); // Function Icarus.DeployableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694bb0
	bool NotEqual_EnumEnum(struct FDeployableEnum A, struct FDeployableEnum B); // Function Icarus.DeployableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16949d0
	struct FDeployableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DeployableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694850
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DeployableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1694730
	struct FDeployableRowHandle MakeLiteralDeployable(struct FDeployableRowHandle RowHandle); // Function Icarus.DeployableLibrary.MakeLiteralDeployable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694540
	struct FDeployableRowHandle MakeDeployableFromIndex(int32_t Index); // Function Icarus.DeployableLibrary.MakeDeployableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16943e0
	struct FDeployableEnum MakeDeployableEnum(struct FDeployableEnum Enum); // Function Icarus.DeployableLibrary.MakeDeployableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694360
	struct FDeployableRowHandle MakeDeployable(struct UE4::FName RowName); // Function Icarus.DeployableLibrary.MakeDeployable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16942c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DeployableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1694080
	struct FDeployableEnum IntToStruct(int32_t IntValue); // Function Icarus.DeployableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1693f60
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DeployableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1693e40
	void GetDeployableStruct(struct FDeployableRowHandle RowHandle, struct FDeployableData& Deployable, enum class EValid& Paths); // Function Icarus.DeployableLibrary.GetDeployableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1693a20
	bool EqualEqual_FDeployableRowHandleFDeployableRowHandle(struct FDeployableRowHandle RowHandleA, struct FDeployableRowHandle RowHandleB); // Function Icarus.DeployableLibrary.EqualEqual_FDeployableRowHandleFDeployableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16932f0
	bool EqualEqual_EnumEnum(struct FDeployableEnum A, struct FDeployableEnum B); // Function Icarus.DeployableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16930c0
	struct FDeployableRowHandle CastToDeployableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DeployableLibrary.CastToDeployableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692e20
	void BreakDeployableEnum(struct FDeployableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DeployableLibrary.BreakDeployableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1692ba0
	void AddRowToDeployableTable(struct UE4::FName Name, struct FDeployableData Data, struct FDeployableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DeployableLibrary.AddRowToDeployableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692800
};

// Class Icarus.DeployableSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDeployableSetupLibrary : URowLibrary {

	struct FDeployableSetupRowHandle StructToRowHandle(struct FDeployableSetupEnum EnumValue); // Function Icarus.DeployableSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b540
	struct UE4::FName StructToName(struct FDeployableSetupEnum EnumValue); // Function Icarus.DeployableSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b360
	int32_t StructToInt(struct FDeployableSetupEnum EnumValue); // Function Icarus.DeployableSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b180
	struct FDeployableSetupEnum RowHandleToStruct(struct FDeployableSetupRowHandle RowHandle); // Function Icarus.DeployableSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169af40
	void RemoveRowFromDeployableSetupTable(struct UE4::FName Name); // Function Icarus.DeployableSetupLibrary.RemoveRowFromDeployableSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x169adc0
	void RefreshConstants(); // Function Icarus.DeployableSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x169ad60
	int32_t NumRows(); // Function Icarus.DeployableSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169acd0
	bool NotEqual_EnumName(struct FDeployableSetupEnum A, struct UE4::FName B); // Function Icarus.DeployableSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169aa00
	bool NotEqual_EnumEnum(struct FDeployableSetupEnum A, struct FDeployableSetupEnum B); // Function Icarus.DeployableSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a730
	struct FDeployableSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DeployableSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a580
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DeployableSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x169a3d0
	struct FDeployableSetupRowHandle MakeLiteralDeployableSetup(struct FDeployableSetupRowHandle RowHandle); // Function Icarus.DeployableSetupLibrary.MakeLiteralDeployableSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a160
	struct FDeployableSetupRowHandle MakeDeployableSetupFromIndex(int32_t Index); // Function Icarus.DeployableSetupLibrary.MakeDeployableSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699d70
	struct FDeployableSetupEnum MakeDeployableSetupEnum(struct FDeployableSetupEnum Enum); // Function Icarus.DeployableSetupLibrary.MakeDeployableSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699cf0
	struct FDeployableSetupRowHandle MakeDeployableSetup(struct UE4::FName RowName); // Function Icarus.DeployableSetupLibrary.MakeDeployableSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699c50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DeployableSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1699aa0
	struct FDeployableSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.DeployableSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16998f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DeployableSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1699740
	void GetDeployableSetupStruct(struct FDeployableSetupRowHandle RowHandle, struct FDeployableSetup& DeployableSetup, enum class EValid& Paths); // Function Icarus.DeployableSetupLibrary.GetDeployableSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1699270
	bool EqualEqual_FDeployableSetupRowHandleFDeployableSetupRowHandle(struct FDeployableSetupRowHandle RowHandleA, struct FDeployableSetupRowHandle RowHandleB); // Function Icarus.DeployableSetupLibrary.EqualEqual_FDeployableSetupRowHandleFDeployableSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698eb0
	bool EqualEqual_EnumEnum(struct FDeployableSetupEnum A, struct FDeployableSetupEnum B); // Function Icarus.DeployableSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698be0
	struct FDeployableSetupRowHandle CastToDeployableSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DeployableSetupLibrary.CastToDeployableSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1698880
	void BreakDeployableSetupEnum(struct FDeployableSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DeployableSetupLibrary.BreakDeployableSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16982a0
	void AddRowToDeployableSetupTable(struct UE4::FName Name, struct FDeployableSetup Data, struct FDeployableSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DeployableSetupLibrary.AddRowToDeployableSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1697ba0
};

// Class Icarus.DeployableSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDeployableSetupTable : UIcarusDataTable {
};

// Class Icarus.DeployableSubsystem
// Size: 0x70 (Inherited: 0x30)
struct UDeployableSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnDeployNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnGeneratorActivatedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnGeneratorDeactivatedNotify; // 0x50(0x10)
	struct FMulticastInlineDelegate OnFactionDeployableActivatedNotify; // 0x60(0x10)

	void BroadcastGeneratorDeactivatedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastGeneratorDeactivatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16987a0
	void BroadcastGeneratorActivatedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastGeneratorActivatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d660
	void BroadcastFactionDeployableActivatedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastFactionDeployableActivatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16986c0
	void BroadcastDeployDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastDeployDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d580
};

// Class Icarus.DeployableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDeployableTable : UIcarusDataTable {
};

// Class Icarus.DeployableTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDeployableTypesLibrary : URowLibrary {

	struct FDeployableTypesRowHandle StructToRowHandle(struct FDeployableTypesEnum EnumValue); // Function Icarus.DeployableTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b5f0
	struct UE4::FName StructToName(struct FDeployableTypesEnum EnumValue); // Function Icarus.DeployableTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b400
	int32_t StructToInt(struct FDeployableTypesEnum EnumValue); // Function Icarus.DeployableTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b220
	struct FDeployableTypesEnum RowHandleToStruct(struct FDeployableTypesRowHandle RowHandle); // Function Icarus.DeployableTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b000
	void RemoveRowFromDeployableTypesTable(struct UE4::FName Name); // Function Icarus.DeployableTypesLibrary.RemoveRowFromDeployableTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x169ae40
	void RefreshConstants(); // Function Icarus.DeployableTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x169ad80
	int32_t NumRows(); // Function Icarus.DeployableTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ad00
	bool NotEqual_EnumName(struct FDeployableTypesEnum A, struct UE4::FName B); // Function Icarus.DeployableTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169aaf0
	bool NotEqual_EnumEnum(struct FDeployableTypesEnum A, struct FDeployableTypesEnum B); // Function Icarus.DeployableTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a820
	struct FDeployableTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DeployableTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a610
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DeployableTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x169a460
	struct FDeployableTypesRowHandle MakeLiteralDeployableTypes(struct FDeployableTypesRowHandle RowHandle); // Function Icarus.DeployableTypesLibrary.MakeLiteralDeployableTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a230
	struct FDeployableTypesRowHandle MakeDeployableTypesFromIndex(int32_t Index); // Function Icarus.DeployableTypesLibrary.MakeDeployableTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699f20
	struct FDeployableTypesEnum MakeDeployableTypesEnum(struct FDeployableTypesEnum Enum); // Function Icarus.DeployableTypesLibrary.MakeDeployableTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699ea0
	struct FDeployableTypesRowHandle MakeDeployableTypes(struct UE4::FName RowName); // Function Icarus.DeployableTypesLibrary.MakeDeployableTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699e00
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DeployableTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1699b30
	struct FDeployableTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.DeployableTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699980
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DeployableTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16997d0
	void GetDeployableTypesStruct(struct FDeployableTypesRowHandle RowHandle, struct FIcarusDeployableType& DeployableTypes, enum class EValid& Paths); // Function Icarus.DeployableTypesLibrary.GetDeployableTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1699410
	bool EqualEqual_FDeployableTypesRowHandleFDeployableTypesRowHandle(struct FDeployableTypesRowHandle RowHandleA, struct FDeployableTypesRowHandle RowHandleB); // Function Icarus.DeployableTypesLibrary.EqualEqual_FDeployableTypesRowHandleFDeployableTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698ff0
	bool EqualEqual_EnumEnum(struct FDeployableTypesEnum A, struct FDeployableTypesEnum B); // Function Icarus.DeployableTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698cd0
	struct FDeployableTypesRowHandle CastToDeployableTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DeployableTypesLibrary.CastToDeployableTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16989a0
	void BreakDeployableTypesEnum(struct FDeployableTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DeployableTypesLibrary.BreakDeployableTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1698400
	void AddRowToDeployableTypesTable(struct UE4::FName Name, struct FIcarusDeployableType Data, struct FDeployableTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DeployableTypesLibrary.AddRowToDeployableTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1697d80
};

// Class Icarus.DeployableTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDeployableTypesTable : UIcarusDataTable {
};

// Class Icarus.DialogueLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDialogueLibrary : URowLibrary {

	struct FDialogueRowHandle StructToRowHandle(struct FDialogueEnum EnumValue); // Function Icarus.DialogueLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b6a0
	struct UE4::FName StructToName(struct FDialogueEnum EnumValue); // Function Icarus.DialogueLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b4a0
	int32_t StructToInt(struct FDialogueEnum EnumValue); // Function Icarus.DialogueLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b2c0
	struct FDialogueEnum RowHandleToStruct(struct FDialogueRowHandle RowHandle); // Function Icarus.DialogueLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169b0c0
	void RemoveRowFromDialogueTable(struct UE4::FName Name); // Function Icarus.DialogueLibrary.RemoveRowFromDialogueTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x169aec0
	void RefreshConstants(); // Function Icarus.DialogueLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x169ada0
	int32_t NumRows(); // Function Icarus.DialogueLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ad30
	bool NotEqual_EnumName(struct FDialogueEnum A, struct UE4::FName B); // Function Icarus.DialogueLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169abe0
	bool NotEqual_EnumEnum(struct FDialogueEnum A, struct FDialogueEnum B); // Function Icarus.DialogueLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a910
	struct FDialogueEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DialogueLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a6a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DialogueLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x169a4f0
	struct FDialogueRowHandle MakeLiteralDialogue(struct FDialogueRowHandle RowHandle); // Function Icarus.DialogueLibrary.MakeLiteralDialogue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a300
	struct FDialogueRowHandle MakeDialogueFromIndex(int32_t Index); // Function Icarus.DialogueLibrary.MakeDialogueFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a0d0
	struct FDialogueEnum MakeDialogueEnum(struct FDialogueEnum Enum); // Function Icarus.DialogueLibrary.MakeDialogueEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a050
	struct FDialogueRowHandle MakeDialogue(struct UE4::FName RowName); // Function Icarus.DialogueLibrary.MakeDialogue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699fb0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DialogueLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1699bc0
	struct FDialogueEnum IntToStruct(int32_t IntValue); // Function Icarus.DialogueLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699a10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DialogueLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1699860
	void GetDialogueStruct(struct FDialogueRowHandle RowHandle, struct FDialogue& Dialogue, enum class EValid& Paths); // Function Icarus.DialogueLibrary.GetDialogueStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16995a0
	bool EqualEqual_FDialogueRowHandleFDialogueRowHandle(struct FDialogueRowHandle RowHandleA, struct FDialogueRowHandle RowHandleB); // Function Icarus.DialogueLibrary.EqualEqual_FDialogueRowHandleFDialogueRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699130
	bool EqualEqual_EnumEnum(struct FDialogueEnum A, struct FDialogueEnum B); // Function Icarus.DialogueLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698dc0
	struct FDialogueRowHandle CastToDialogueRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DialogueLibrary.CastToDialogueRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1698ac0
	void BreakDialogueEnum(struct FDialogueEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DialogueLibrary.BreakDialogueEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1698560
	void AddRowToDialogueTable(struct UE4::FName Name, struct FDialogue Data, struct FDialogueRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DialogueLibrary.AddRowToDialogueTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1697fb0
};

// Class Icarus.DialogueManager
// Size: 0x268 (Inherited: 0x220)
struct ADialogueManager : AActor {
	struct UFMODEvent* InterruptFMODEvent; // 0x220(0x08)
	float InterruptionDelayLength; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct UFMODAudioComponent* AudioComponent; // 0x230(0x08)
	char pad_238[0x30]; // 0x238(0x30)

	void QueueDialogue(struct FDialogueRowHandle& Dialogue); // Function Icarus.DialogueManager.QueueDialogue // (Final|Native|Private|HasOutParms) // @ game+0x16a0fc0
	void OnDialoguePlayed(struct FDialogueRowHandle Dialogue); // Function Icarus.DialogueManager.OnDialoguePlayed // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
	float GetCurrentDialogueLength(); // Function Icarus.DialogueManager.GetCurrentDialogueLength // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x169f480
	void ClearCurrentDialogue(); // Function Icarus.DialogueManager.ClearCurrentDialogue // (Final|Native|Private) // @ game+0x169edd0
	void ClearAllDialogues(); // Function Icarus.DialogueManager.ClearAllDialogues // (Final|Native|Private) // @ game+0x169edb0
};

// Class Icarus.DialoguePoolLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDialoguePoolLibrary : URowLibrary {

	struct FDialoguePoolRowHandle StructToRowHandle(struct FDialoguePoolEnum EnumValue); // Function Icarus.DialoguePoolLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1920
	struct UE4::FName StructToName(struct FDialoguePoolEnum EnumValue); // Function Icarus.DialoguePoolLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1730
	int32_t StructToInt(struct FDialoguePoolEnum EnumValue); // Function Icarus.DialoguePoolLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1550
	struct FDialoguePoolEnum RowHandleToStruct(struct FDialoguePoolRowHandle RowHandle); // Function Icarus.DialoguePoolLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1310
	void RemoveRowFromDialoguePoolTable(struct UE4::FName Name); // Function Icarus.DialoguePoolLibrary.RemoveRowFromDialoguePoolTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a1150
	void RefreshConstants(); // Function Icarus.DialoguePoolLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a1090
	int32_t NumRows(); // Function Icarus.DialoguePoolLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0f60
	bool NotEqual_EnumName(struct FDialoguePoolEnum A, struct UE4::FName B); // Function Icarus.DialoguePoolLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0d50
	bool NotEqual_EnumEnum(struct FDialoguePoolEnum A, struct FDialoguePoolEnum B); // Function Icarus.DialoguePoolLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0a80
	struct FDialoguePoolEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DialoguePoolLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0870
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DialoguePoolLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a06c0
	struct FDialoguePoolRowHandle MakeLiteralDialoguePool(struct FDialoguePoolRowHandle RowHandle); // Function Icarus.DialoguePoolLibrary.MakeLiteralDialoguePool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0490
	struct FDialoguePoolRowHandle MakeDialoguePoolFromIndex(int32_t Index); // Function Icarus.DialoguePoolLibrary.MakeDialoguePoolFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0180
	struct FDialoguePoolEnum MakeDialoguePoolEnum(struct FDialoguePoolEnum Enum); // Function Icarus.DialoguePoolLibrary.MakeDialoguePoolEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0100
	struct FDialoguePoolRowHandle MakeDialoguePool(struct UE4::FName RowName); // Function Icarus.DialoguePoolLibrary.MakeDialoguePool // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0060
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DialoguePoolLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x169fd90
	struct FDialoguePoolEnum IntToStruct(int32_t IntValue); // Function Icarus.DialoguePoolLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fbe0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DialoguePoolLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x169fa30
	void GetDialoguePoolStruct(struct FDialoguePoolRowHandle RowHandle, struct FDialoguePool& DialoguePool, enum class EValid& Paths); // Function Icarus.DialoguePoolLibrary.GetDialoguePoolStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169f650
	bool EqualEqual_FDialoguePoolRowHandleFDialoguePoolRowHandle(struct FDialoguePoolRowHandle RowHandleA, struct FDialoguePoolRowHandle RowHandleB); // Function Icarus.DialoguePoolLibrary.EqualEqual_FDialoguePoolRowHandleFDialoguePoolRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f200
	bool EqualEqual_EnumEnum(struct FDialoguePoolEnum A, struct FDialoguePoolEnum B); // Function Icarus.DialoguePoolLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169eee0
	struct FDialoguePoolRowHandle CastToDialoguePoolRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DialoguePoolLibrary.CastToDialoguePoolRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169eb70
	void BreakDialoguePoolEnum(struct FDialoguePoolEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DialoguePoolLibrary.BreakDialoguePoolEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x169e790
	void AddRowToDialoguePoolTable(struct UE4::FName Name, struct FDialoguePool Data, struct FDialoguePoolRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DialoguePoolLibrary.AddRowToDialoguePoolTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169e150
};

// Class Icarus.DialoguePoolTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDialoguePoolTable : UIcarusDataTable {
};

// Class Icarus.DialogueSpeakerLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDialogueSpeakerLibrary : URowLibrary {

	struct FDialogueSpeakerRowHandle StructToRowHandle(struct FDialogueSpeakerEnum EnumValue); // Function Icarus.DialogueSpeakerLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a19d0
	struct UE4::FName StructToName(struct FDialogueSpeakerEnum EnumValue); // Function Icarus.DialogueSpeakerLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a17d0
	int32_t StructToInt(struct FDialogueSpeakerEnum EnumValue); // Function Icarus.DialogueSpeakerLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a15f0
	struct FDialogueSpeakerEnum RowHandleToStruct(struct FDialogueSpeakerRowHandle RowHandle); // Function Icarus.DialogueSpeakerLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a13d0
	void RemoveRowFromDialogueSpeakerTable(struct UE4::FName Name); // Function Icarus.DialogueSpeakerLibrary.RemoveRowFromDialogueSpeakerTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a11d0
	void RefreshConstants(); // Function Icarus.DialogueSpeakerLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a10b0
	int32_t NumRows(); // Function Icarus.DialogueSpeakerLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0f90
	bool NotEqual_EnumName(struct FDialogueSpeakerEnum A, struct UE4::FName B); // Function Icarus.DialogueSpeakerLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0e40
	bool NotEqual_EnumEnum(struct FDialogueSpeakerEnum A, struct FDialogueSpeakerEnum B); // Function Icarus.DialogueSpeakerLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0b70
	struct FDialogueSpeakerEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DialogueSpeakerLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0900
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DialogueSpeakerLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a0750
	struct FDialogueSpeakerRowHandle MakeLiteralDialogueSpeaker(struct FDialogueSpeakerRowHandle RowHandle); // Function Icarus.DialogueSpeakerLibrary.MakeLiteralDialogueSpeaker // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0560
	struct FDialogueSpeakerRowHandle MakeDialogueSpeakerFromIndex(int32_t Index); // Function Icarus.DialogueSpeakerLibrary.MakeDialogueSpeakerFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0330
	struct FDialogueSpeakerEnum MakeDialogueSpeakerEnum(struct FDialogueSpeakerEnum Enum); // Function Icarus.DialogueSpeakerLibrary.MakeDialogueSpeakerEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a02b0
	struct FDialogueSpeakerRowHandle MakeDialogueSpeaker(struct UE4::FName RowName); // Function Icarus.DialogueSpeakerLibrary.MakeDialogueSpeaker // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0210
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DialogueSpeakerLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x169fe20
	struct FDialogueSpeakerEnum IntToStruct(int32_t IntValue); // Function Icarus.DialogueSpeakerLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fc70
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DialogueSpeakerLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x169fac0
	void GetDialogueSpeakerStruct(struct FDialogueSpeakerRowHandle RowHandle, struct FDialogueSpeaker& DialogueSpeaker, enum class EValid& Paths); // Function Icarus.DialogueSpeakerLibrary.GetDialogueSpeakerStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169f7e0
	bool EqualEqual_FDialogueSpeakerRowHandleFDialogueSpeakerRowHandle(struct FDialogueSpeakerRowHandle RowHandleA, struct FDialogueSpeakerRowHandle RowHandleB); // Function Icarus.DialogueSpeakerLibrary.EqualEqual_FDialogueSpeakerRowHandleFDialogueSpeakerRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f340
	bool EqualEqual_EnumEnum(struct FDialogueSpeakerEnum A, struct FDialogueSpeakerEnum B); // Function Icarus.DialogueSpeakerLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169efd0
	struct FDialogueSpeakerRowHandle CastToDialogueSpeakerRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DialogueSpeakerLibrary.CastToDialogueSpeakerRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169ec90
	void BreakDialogueSpeakerEnum(struct FDialogueSpeakerEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DialogueSpeakerLibrary.BreakDialogueSpeakerEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x169e8f0
	void AddRowToDialogueSpeakerTable(struct UE4::FName Name, struct FDialogueSpeaker Data, struct FDialogueSpeakerRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DialogueSpeakerLibrary.AddRowToDialogueSpeakerTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169e3c0
};

// Class Icarus.DialogueSpeakerTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDialogueSpeakerTable : UIcarusDataTable {
};

// Class Icarus.DialogueSystem
// Size: 0xd0 (Inherited: 0xb0)
struct UDialogueSystem : UActorComponent {
	struct FMulticastInlineDelegate OnPlayDialogue; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnClearDialogues; // 0xc0(0x10)

	void TriggerDialogueFromPool(struct FDialoguePoolRowHandle DialoguePool); // Function Icarus.DialogueSystem.TriggerDialogueFromPool // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x16a1b30
	void TriggerDialogue(struct FDialogueRowHandle Dialogue); // Function Icarus.DialogueSystem.TriggerDialogue // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x16a1a80
	void ClearAllDialogues(); // Function Icarus.DialogueSystem.ClearAllDialogues // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x16450c0
};

// Class Icarus.DialogueTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDialogueTable : UIcarusDataTable {
};

// Class Icarus.DisasterController
// Size: 0x230 (Inherited: 0x220)
struct ADisasterController : AInfo {
	struct UFireControllerComponent* FireController; // 0x220(0x08)
	struct UIcarusStatContainer* StatContainer; // 0x228(0x08)

	void StopGeneratingLightning(struct FBiomesEnum Biome); // Function Icarus.DisasterController.StopGeneratingLightning // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetWorldStats(); // Function Icarus.DisasterController.SetWorldStats // (Final|Native|Protected) // @ game+0x16a1490
};

// Class Icarus.DistanceControlledAudioEmitter
// Size: 0x240 (Inherited: 0x200)
struct UDistanceControlledAudioEmitter : USceneComponent {
	struct TSoftObjectPtr<UFMODEvent> Event; // 0x1f8(0x28)
	struct UFMODAudioComponent* AudioComponent; // 0x220(0x08)
	char pad_230[0x10]; // 0x230(0x10)
};

// Class Icarus.DLCPackageDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDLCPackageDataLibrary : URowLibrary {

	struct FDLCPackageDataRowHandle StructToRowHandle(struct FDLCPackageDataEnum EnumValue); // Function Icarus.DLCPackageDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1870
	struct UE4::FName StructToName(struct FDLCPackageDataEnum EnumValue); // Function Icarus.DLCPackageDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1690
	int32_t StructToInt(struct FDLCPackageDataEnum EnumValue); // Function Icarus.DLCPackageDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a14b0
	struct FDLCPackageDataEnum RowHandleToStruct(struct FDLCPackageDataRowHandle RowHandle); // Function Icarus.DLCPackageDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a1250
	void RemoveRowFromDLCPackageDataTable(struct UE4::FName Name); // Function Icarus.DLCPackageDataLibrary.RemoveRowFromDLCPackageDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a10d0
	void RefreshConstants(); // Function Icarus.DLCPackageDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a1070
	int32_t NumRows(); // Function Icarus.DLCPackageDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0f30
	bool NotEqual_EnumName(struct FDLCPackageDataEnum A, struct UE4::FName B); // Function Icarus.DLCPackageDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0c60
	bool NotEqual_EnumEnum(struct FDLCPackageDataEnum A, struct FDLCPackageDataEnum B); // Function Icarus.DLCPackageDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0990
	struct FDLCPackageDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DLCPackageDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a07e0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DLCPackageDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a0630
	struct FDLCPackageDataRowHandle MakeLiteralDLCPackageData(struct FDLCPackageDataRowHandle RowHandle); // Function Icarus.DLCPackageDataLibrary.MakeLiteralDLCPackageData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a03c0
	struct FDLCPackageDataRowHandle MakeDLCPackageDataFromIndex(int32_t Index); // Function Icarus.DLCPackageDataLibrary.MakeDLCPackageDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ffd0
	struct FDLCPackageDataEnum MakeDLCPackageDataEnum(struct FDLCPackageDataEnum Enum); // Function Icarus.DLCPackageDataLibrary.MakeDLCPackageDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ff50
	struct FDLCPackageDataRowHandle MakeDLCPackageData(struct UE4::FName RowName); // Function Icarus.DLCPackageDataLibrary.MakeDLCPackageData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169feb0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DLCPackageDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x169fd00
	struct FDLCPackageDataEnum IntToStruct(int32_t IntValue); // Function Icarus.DLCPackageDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fb50
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DLCPackageDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x169f9a0
	void GetDLCPackageDataStruct(struct FDLCPackageDataRowHandle RowHandle, struct FDLCPackageData& DLCPackageData, enum class EValid& Paths); // Function Icarus.DLCPackageDataLibrary.GetDLCPackageDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169f4b0
	bool EqualEqual_FDLCPackageDataRowHandleFDLCPackageDataRowHandle(struct FDLCPackageDataRowHandle RowHandleA, struct FDLCPackageDataRowHandle RowHandleB); // Function Icarus.DLCPackageDataLibrary.EqualEqual_FDLCPackageDataRowHandleFDLCPackageDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f0c0
	bool EqualEqual_EnumEnum(struct FDLCPackageDataEnum A, struct FDLCPackageDataEnum B); // Function Icarus.DLCPackageDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169edf0
	struct FDLCPackageDataRowHandle CastToDLCPackageDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DLCPackageDataLibrary.CastToDLCPackageDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169ea50
	void BreakDLCPackageDataEnum(struct FDLCPackageDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DLCPackageDataLibrary.BreakDLCPackageDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x169e630
	void AddRowToDLCPackageDataTable(struct UE4::FName Name, struct FDLCPackageData Data, struct FDLCPackageDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DLCPackageDataLibrary.AddRowToDLCPackageDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169df10
};

// Class Icarus.DLCPackageDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDLCPackageDataTable : UIcarusDataTable {
};

// Class Icarus.DropShipActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDropShipActionsLibrary : URowLibrary {

	struct FDropShipActionsRowHandle StructToRowHandle(struct FDropShipActionsEnum EnumValue); // Function Icarus.DropShipActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a82f0
	struct UE4::FName StructToName(struct FDropShipActionsEnum EnumValue); // Function Icarus.DropShipActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a8110
	int32_t StructToInt(struct FDropShipActionsEnum EnumValue); // Function Icarus.DropShipActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7f30
	struct FDropShipActionsEnum RowHandleToStruct(struct FDropShipActionsRowHandle RowHandle); // Function Icarus.DropShipActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7c60
	void RemoveRowFromDropShipActionsTable(struct UE4::FName Name); // Function Icarus.DropShipActionsLibrary.RemoveRowFromDropShipActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a7ae0
	void RefreshConstants(); // Function Icarus.DropShipActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a7a80
	int32_t NumRows(); // Function Icarus.DropShipActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7920
	bool NotEqual_EnumName(struct FDropShipActionsEnum A, struct UE4::FName B); // Function Icarus.DropShipActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7650
	bool NotEqual_EnumEnum(struct FDropShipActionsEnum A, struct FDropShipActionsEnum B); // Function Icarus.DropShipActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7380
	struct FDropShipActionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DropShipActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a71d0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DropShipActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a7020
	struct FDropShipActionsRowHandle MakeLiteralDropShipActions(struct FDropShipActionsRowHandle RowHandle); // Function Icarus.DropShipActionsLibrary.MakeLiteralDropShipActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6db0
	struct FDropShipActionsRowHandle MakeDropShipActionsFromIndex(int32_t Index); // Function Icarus.DropShipActionsLibrary.MakeDropShipActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a69c0
	struct FDropShipActionsEnum MakeDropShipActionsEnum(struct FDropShipActionsEnum Enum); // Function Icarus.DropShipActionsLibrary.MakeDropShipActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6940
	struct FDropShipActionsRowHandle MakeDropShipActions(struct UE4::FName RowName); // Function Icarus.DropShipActionsLibrary.MakeDropShipActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a68a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DropShipActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16a66f0
	struct FDropShipActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.DropShipActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6540
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DropShipActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16a6390
	void GetDropShipActionsStruct(struct FDropShipActionsRowHandle RowHandle, struct FDropShipAction& DropShipActions, enum class EValid& Paths); // Function Icarus.DropShipActionsLibrary.GetDropShipActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a5c60
	bool EqualEqual_FDropShipActionsRowHandleFDropShipActionsRowHandle(struct FDropShipActionsRowHandle RowHandleA, struct FDropShipActionsRowHandle RowHandleB); // Function Icarus.DropShipActionsLibrary.EqualEqual_FDropShipActionsRowHandleFDropShipActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a58a0
	bool EqualEqual_EnumEnum(struct FDropShipActionsEnum A, struct FDropShipActionsEnum B); // Function Icarus.DropShipActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a55d0
	struct FDropShipActionsRowHandle CastToDropShipActionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DropShipActionsLibrary.CastToDropShipActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a5270
	void BreakDropShipActionsEnum(struct FDropShipActionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DropShipActionsLibrary.BreakDropShipActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16a4e50
	void AddRowToDropShipActionsTable(struct UE4::FName Name, struct FDropShipAction Data, struct FDropShipActionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DropShipActionsLibrary.AddRowToDropShipActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a4610
};

// Class Icarus.DropShipActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDropShipActionsTable : UIcarusDataTable {
};

// Class Icarus.DropShipSequencesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDropShipSequencesLibrary : URowLibrary {

	struct FDropShipSequencesRowHandle StructToRowHandle(struct FDropShipSequencesEnum EnumValue); // Function Icarus.DropShipSequencesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a83a0
	struct UE4::FName StructToName(struct FDropShipSequencesEnum EnumValue); // Function Icarus.DropShipSequencesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a81b0
	int32_t StructToInt(struct FDropShipSequencesEnum EnumValue); // Function Icarus.DropShipSequencesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7fd0
	struct FDropShipSequencesEnum RowHandleToStruct(struct FDropShipSequencesRowHandle RowHandle); // Function Icarus.DropShipSequencesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7d20
	void RemoveRowFromDropShipSequencesTable(struct UE4::FName Name); // Function Icarus.DropShipSequencesLibrary.RemoveRowFromDropShipSequencesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a7b60
	void RefreshConstants(); // Function Icarus.DropShipSequencesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a7aa0
	int32_t NumRows(); // Function Icarus.DropShipSequencesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7950
	bool NotEqual_EnumName(struct FDropShipSequencesEnum A, struct UE4::FName B); // Function Icarus.DropShipSequencesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7740
	bool NotEqual_EnumEnum(struct FDropShipSequencesEnum A, struct FDropShipSequencesEnum B); // Function Icarus.DropShipSequencesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7470
	struct FDropShipSequencesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DropShipSequencesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7260
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DropShipSequencesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a70b0
	struct FDropShipSequencesRowHandle MakeLiteralDropShipSequences(struct FDropShipSequencesRowHandle RowHandle); // Function Icarus.DropShipSequencesLibrary.MakeLiteralDropShipSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6e80
	struct FDropShipSequencesRowHandle MakeDropShipSequencesFromIndex(int32_t Index); // Function Icarus.DropShipSequencesLibrary.MakeDropShipSequencesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6b70
	struct FDropShipSequencesEnum MakeDropShipSequencesEnum(struct FDropShipSequencesEnum Enum); // Function Icarus.DropShipSequencesLibrary.MakeDropShipSequencesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6af0
	struct FDropShipSequencesRowHandle MakeDropShipSequences(struct UE4::FName RowName); // Function Icarus.DropShipSequencesLibrary.MakeDropShipSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6a50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DropShipSequencesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16a6780
	struct FDropShipSequencesEnum IntToStruct(int32_t IntValue); // Function Icarus.DropShipSequencesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a65d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DropShipSequencesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16a6420
	void GetDropShipSequencesStruct(struct FDropShipSequencesRowHandle RowHandle, struct FDropShipSequence& DropShipSequences, enum class EValid& Paths); // Function Icarus.DropShipSequencesLibrary.GetDropShipSequencesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a5de0
	bool EqualEqual_FDropShipSequencesRowHandleFDropShipSequencesRowHandle(struct FDropShipSequencesRowHandle RowHandleA, struct FDropShipSequencesRowHandle RowHandleB); // Function Icarus.DropShipSequencesLibrary.EqualEqual_FDropShipSequencesRowHandleFDropShipSequencesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a59e0
	bool EqualEqual_EnumEnum(struct FDropShipSequencesEnum A, struct FDropShipSequencesEnum B); // Function Icarus.DropShipSequencesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a56c0
	struct FDropShipSequencesRowHandle CastToDropShipSequencesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DropShipSequencesLibrary.CastToDropShipSequencesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a5390
	void BreakDropShipSequencesEnum(struct FDropShipSequencesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DropShipSequencesLibrary.BreakDropShipSequencesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16a4fb0
	void AddRowToDropShipSequencesTable(struct UE4::FName Name, struct FDropShipSequence Data, struct FDropShipSequencesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DropShipSequencesLibrary.AddRowToDropShipSequencesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a4820
};

// Class Icarus.DropShipSequencesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDropShipSequencesTable : UIcarusDataTable {
};

// Class Icarus.DropShipSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UDropShipSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnDropShipInteractNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnDropShipEnterNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnDropShipExitNotify; // 0x50(0x10)

	void BroadcastDropShipInteractDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.DropShipSubsystem.BroadcastDropShipInteractDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d580
	void BroadcastDropShipExitDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.DropShipSubsystem.BroadcastDropShipExitDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16987a0
	void BroadcastDropShipEnterDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.DropShipSubsystem.BroadcastDropShipEnterDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d660
};

// Class Icarus.DurableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UDurableComponent : UTraitComponent {
	int32_t Durability; // 0xd0(0x04)
	struct FMulticastSparseDelegate OnActorBroken; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)

	void SetDurability(int32_t NewDurability); // Function Icarus.DurableComponent.SetDurability // (Final|Native|Public|BlueprintCallable) // @ game+0x16a7ea0
	void OnHealthUpdated(struct UActorState* ActorState, float NewHealth); // Function Icarus.DurableComponent.OnHealthUpdated // (Final|Native|Public) // @ game+0x16a79b0
	void InitialiseComponent(int32_t DurabilityValue); // Function Icarus.DurableComponent.InitialiseComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x16a6300
	bool GetDurableData(struct FDurableData& OutData); // Function Icarus.DurableComponent.GetDurableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16a5fa0
};

// Class Icarus.DurableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDurableLibrary : URowLibrary {

	struct FDurableRowHandle StructToRowHandle(struct FDurableEnum EnumValue); // Function Icarus.DurableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a8450
	struct UE4::FName StructToName(struct FDurableEnum EnumValue); // Function Icarus.DurableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a8250
	int32_t StructToInt(struct FDurableEnum EnumValue); // Function Icarus.DurableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a8070
	struct FDurableEnum RowHandleToStruct(struct FDurableRowHandle RowHandle); // Function Icarus.DurableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7de0
	void RemoveRowFromDurableTable(struct UE4::FName Name); // Function Icarus.DurableLibrary.RemoveRowFromDurableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a7be0
	void RefreshConstants(); // Function Icarus.DurableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a7ac0
	int32_t NumRows(); // Function Icarus.DurableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7980
	bool NotEqual_EnumName(struct FDurableEnum A, struct UE4::FName B); // Function Icarus.DurableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7830
	bool NotEqual_EnumEnum(struct FDurableEnum A, struct FDurableEnum B); // Function Icarus.DurableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a7560
	struct FDurableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.DurableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a72f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.DurableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a7140
	struct FDurableRowHandle MakeLiteralDurable(struct FDurableRowHandle RowHandle); // Function Icarus.DurableLibrary.MakeLiteralDurable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6f50
	struct FDurableRowHandle MakeDurableFromIndex(int32_t Index); // Function Icarus.DurableLibrary.MakeDurableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6d20
	struct FDurableEnum MakeDurableEnum(struct FDurableEnum Enum); // Function Icarus.DurableLibrary.MakeDurableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6ca0
	struct FDurableRowHandle MakeDurable(struct UE4::FName RowName); // Function Icarus.DurableLibrary.MakeDurable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6c00
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.DurableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16a6810
	struct FDurableEnum IntToStruct(int32_t IntValue); // Function Icarus.DurableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6660
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.DurableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16a64b0
	void GetDurableStruct(struct FDurableRowHandle RowHandle, struct FDurableData& Durable, enum class EValid& Paths); // Function Icarus.DurableLibrary.GetDurableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a6150
	bool EqualEqual_FDurableRowHandleFDurableRowHandle(struct FDurableRowHandle RowHandleA, struct FDurableRowHandle RowHandleB); // Function Icarus.DurableLibrary.EqualEqual_FDurableRowHandleFDurableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5b20
	bool EqualEqual_EnumEnum(struct FDurableEnum A, struct FDurableEnum B); // Function Icarus.DurableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a57b0
	struct FDurableRowHandle CastToDurableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.DurableLibrary.CastToDurableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a54b0
	void BreakDurableEnum(struct FDurableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.DurableLibrary.BreakDurableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16a5110
	void AddRowToDurableTable(struct UE4::FName Name, struct FDurableData Data, struct FDurableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.DurableLibrary.AddRowToDurableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a4b60
};

// Class Icarus.DurableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDurableTable : UIcarusDataTable {
};

// Class Icarus.ResourceNetworkComponent
// Size: 0xf8 (Inherited: 0xd0)
struct UResourceNetworkComponent : UTraitComponent {
	char pad_D0[0x8]; // 0xd0(0x08)
	struct AResourceNetwork* InputNetwork; // 0xd8(0x08)
	struct AResourceNetwork* OutputNetwork; // 0xe0(0x08)
	bool ResourceComponentActive; // 0xe8(0x01)
	char pad_E9[0x3]; // 0xe9(0x03)
	int32_t CurrentResourceFlow; // 0xec(0x04)
	bool bPreventAutoActivate; // 0xf0(0x01)
	struct FMulticastSparseDelegate OnResourceDepleted; // 0xf1(0x01)
	struct FMulticastSparseDelegate OnResourceLeaking; // 0xf2(0x01)
	struct FMulticastSparseDelegate OnActiveStateUpdated; // 0xf3(0x01)
	struct FMulticastSparseDelegate OnResourceNetworkUpdated; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)

	void SetNetwork(bool Input, struct AResourceNetwork* Network); // Function Icarus.ResourceNetworkComponent.SetNetwork // (Final|Native|Public) // @ game+0x182e9d0
	void ProcessNetworkComponent(float Delta); // Function Icarus.ResourceNetworkComponent.ProcessNetworkComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x182e600
	void OnRep_ResourceComponentActive(); // Function Icarus.ResourceNetworkComponent.OnRep_ResourceComponentActive // (Final|Native|Public|BlueprintCallable) // @ game+0x182e5e0
	void OnRep_OutputNetwork(); // Function Icarus.ResourceNetworkComponent.OnRep_OutputNetwork // (Final|Native|Public) // @ game+0x182e5c0
	void OnRep_InputNetwork(); // Function Icarus.ResourceNetworkComponent.OnRep_InputNetwork // (Final|Native|Public) // @ game+0x182e5c0
	bool HasConnectedNetwork(); // Function Icarus.ResourceNetworkComponent.HasConnectedNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x182d600
	bool GetResourceNetworkData(struct FResourceNetworkData& OutData); // Function Icarus.ResourceNetworkComponent.GetResourceNetworkData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x182cd40
	enum class EIcarusResourceType GetResourceComponentType(); // Function Icarus.ResourceNetworkComponent.GetResourceComponentType // (Native|Public|BlueprintCallable) // @ game+0x1613120
	void DeactivateResourceComponent(); // Function Icarus.ResourceNetworkComponent.DeactivateResourceComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x182c580
	bool CheckActivationOverdraw(); // Function Icarus.ResourceNetworkComponent.CheckActivationOverdraw // (Final|Native|Public|BlueprintCallable) // @ game+0x182c3f0
	bool ActivateResourceComponent(); // Function Icarus.ResourceNetworkComponent.ActivateResourceComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x182b970
};

// Class Icarus.EnergyComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UEnergyComponent : UResourceNetworkComponent {

	bool GetEnergyData(struct FEnergyData& OutData); // Function Icarus.EnergyComponent.GetEnergyData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16abc50
};

// Class Icarus.EnergyLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEnergyLibrary : URowLibrary {

	struct FEnergyRowHandle StructToRowHandle(struct FEnergyEnum EnumValue); // Function Icarus.EnergyLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad760
	struct UE4::FName StructToName(struct FEnergyEnum EnumValue); // Function Icarus.EnergyLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad620
	int32_t StructToInt(struct FEnergyEnum EnumValue); // Function Icarus.EnergyLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad4e0
	struct FEnergyEnum RowHandleToStruct(struct FEnergyRowHandle RowHandle); // Function Icarus.EnergyLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad360
	void RemoveRowFromEnergyTable(struct UE4::FName Name); // Function Icarus.EnergyLibrary.RemoveRowFromEnergyTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ad260
	void RefreshConstants(); // Function Icarus.EnergyLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ad220
	int32_t NumRows(); // Function Icarus.EnergyLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad1c0
	bool NotEqual_EnumName(struct FEnergyEnum A, struct UE4::FName B); // Function Icarus.EnergyLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acfe0
	bool NotEqual_EnumEnum(struct FEnergyEnum A, struct FEnergyEnum B); // Function Icarus.EnergyLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ace00
	struct FEnergyEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.EnergyLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acce0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.EnergyLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16acbc0
	struct FEnergyRowHandle MakeLiteralEnergy(struct FEnergyRowHandle RowHandle); // Function Icarus.EnergyLibrary.MakeLiteralEnergy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16aca20
	struct FEnergyRowHandle MakeEnergyFromIndex(int32_t Index); // Function Icarus.EnergyLibrary.MakeEnergyFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac7e0
	struct FEnergyEnum MakeEnergyEnum(struct FEnergyEnum Enum); // Function Icarus.EnergyLibrary.MakeEnergyEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac760
	struct FEnergyRowHandle MakeEnergy(struct UE4::FName RowName); // Function Icarus.EnergyLibrary.MakeEnergy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac6c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.EnergyLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ac5a0
	struct FEnergyEnum IntToStruct(int32_t IntValue); // Function Icarus.EnergyLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac480
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.EnergyLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ac360
	void GetEnergyStruct(struct FEnergyRowHandle RowHandle, struct FEnergyData& Energy, enum class EValid& Paths); // Function Icarus.EnergyLibrary.GetEnergyStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16abde0
	bool EqualEqual_FEnergyRowHandleFEnergyRowHandle(struct FEnergyRowHandle RowHandleA, struct FEnergyRowHandle RowHandleB); // Function Icarus.EnergyLibrary.EqualEqual_FEnergyRowHandleFEnergyRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ab9d0
	bool EqualEqual_EnumEnum(struct FEnergyEnum A, struct FEnergyEnum B); // Function Icarus.EnergyLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ab7f0
	struct FEnergyRowHandle CastToEnergyRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.EnergyLibrary.CastToEnergyRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ab5b0
	void BreakEnergyEnum(struct FEnergyEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.EnergyLibrary.BreakEnergyEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ab2f0
	void AddRowToEnergyTable(struct UE4::FName Name, struct FEnergyData Data, struct FEnergyRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.EnergyLibrary.AddRowToEnergyTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16aacc0
};

// Class Icarus.EnergyTable
// Size: 0xb8 (Inherited: 0xb8)
struct UEnergyTable : UIcarusDataTable {
};

// Class Icarus.EnvQueryContext_BackOfQuerier
// Size: 0x28 (Inherited: 0x28)
struct UEnvQueryContext_BackOfQuerier : UEnvQueryContext {
};

// Class Icarus.EnvQueryGenerator_CachedSpawns
// Size: 0x90 (Inherited: 0x50)
struct UEnvQueryGenerator_CachedSpawns : UEnvQueryGenerator {
	struct UEnvQueryContext* Context; // 0x50(0x08)
	struct FAIDataProviderFloatValue MaxPointRadius; // 0x58(0x38)
};

// Class Icarus.EnvQueryGenerator_NearbyTargets
// Size: 0xa8 (Inherited: 0x50)
struct UEnvQueryGenerator_NearbyTargets : UEnvQueryGenerator {
	struct UEnvQueryContext* Context; // 0x50(0x08)
	struct AActor* TargetClassFilter; // 0x58(0x08)
	bool bOnlyAliveActors; // 0x60(0x01)
	bool bFilterByRelationship; // 0x61(0x01)
	enum class ERelationshipType RelationshipToQuerier; // 0x62(0x01)
	char pad_63[0x5]; // 0x63(0x05)
	struct FAIDataProviderFloatValue NearbyRadius; // 0x68(0x38)
	struct UEnvQueryContext* SearchCenter; // 0xa0(0x08)
};

// Class Icarus.EnvQueryGenerator_PerceivedTargets
// Size: 0x70 (Inherited: 0x50)
struct UEnvQueryGenerator_PerceivedTargets : UEnvQueryGenerator {
	struct UEnvQueryContext* Context; // 0x50(0x08)
	struct UAISense* SenseToUse; // 0x58(0x08)
	bool bOnlyAliveActors; // 0x60(0x01)
	bool bFilterByRelationship; // 0x61(0x01)
	enum class ERelationshipType RelationshipToQuerier; // 0x62(0x01)
	char pad_63[0x5]; // 0x63(0x05)
	struct UEnvQueryContext* SearchCenter; // 0x68(0x08)
};

// Class Icarus.EnvQueryTest_DownwardTrace
// Size: 0x2b0 (Inherited: 0x1f8)
struct UEnvQueryTest_DownwardTrace : UEnvQueryTest {
	bool bTraceComplex; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
	struct TArray<enum class ECollisionChannel> CollisionChannels; // 0x200(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> IgnoreClasses; // 0x210(0x10)
	struct FAIDataProviderFloatValue DownwardsTraceDistance; // 0x220(0x38)
	struct FAIDataProviderFloatValue ItemHeightOffset; // 0x258(0x38)
	bool bShowDebug; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct TArray<struct TSoftClassPtr<UObject>> BlacklistActors; // 0x298(0x10)
	struct UEnvQueryContext* Context; // 0x2a8(0x08)
};

// Class Icarus.EnvQueryTest_IsUnderwater
// Size: 0x2a8 (Inherited: 0x1f8)
struct UEnvQueryTest_IsUnderwater : UEnvQueryTest {
	struct FEnvTraceData TraceData; // 0x1f8(0x30)
	enum class ECollisionChannel WaterChannel; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct FAIDataProviderFloatValue UpwardsTraceDistance; // 0x230(0x38)
	struct FAIDataProviderFloatValue ItemHeightOffset; // 0x268(0x38)
	struct UEnvQueryContext* Context; // 0x2a0(0x08)
};

// Class Icarus.EnvQueryTest_RecentDamage
// Size: 0x230 (Inherited: 0x1f8)
struct UEnvQueryTest_RecentDamage : UEnvQueryTest {
	struct FAIDataProviderFloatValue RecentDuration; // 0x1f8(0x38)
};

// Class Icarus.EpicCreaturesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEpicCreaturesLibrary : URowLibrary {

	struct FEpicCreaturesRowHandle StructToRowHandle(struct FEpicCreaturesEnum EnumValue); // Function Icarus.EpicCreaturesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad810
	struct UE4::FName StructToName(struct FEpicCreaturesEnum EnumValue); // Function Icarus.EpicCreaturesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad6c0
	int32_t StructToInt(struct FEpicCreaturesEnum EnumValue); // Function Icarus.EpicCreaturesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad580
	struct FEpicCreaturesEnum RowHandleToStruct(struct FEpicCreaturesRowHandle RowHandle); // Function Icarus.EpicCreaturesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad420
	void RemoveRowFromEpicCreaturesTable(struct UE4::FName Name); // Function Icarus.EpicCreaturesLibrary.RemoveRowFromEpicCreaturesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ad2e0
	void RefreshConstants(); // Function Icarus.EpicCreaturesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ad240
	int32_t NumRows(); // Function Icarus.EpicCreaturesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad1f0
	bool NotEqual_EnumName(struct FEpicCreaturesEnum A, struct UE4::FName B); // Function Icarus.EpicCreaturesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ad0d0
	bool NotEqual_EnumEnum(struct FEpicCreaturesEnum A, struct FEpicCreaturesEnum B); // Function Icarus.EpicCreaturesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acef0
	struct FEpicCreaturesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.EpicCreaturesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acd70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.EpicCreaturesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16acc50
	struct FEpicCreaturesRowHandle MakeLiteralEpicCreatures(struct FEpicCreaturesRowHandle RowHandle); // Function Icarus.EpicCreaturesLibrary.MakeLiteralEpicCreatures // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acaf0
	struct FEpicCreaturesRowHandle MakeEpicCreaturesFromIndex(int32_t Index); // Function Icarus.EpicCreaturesLibrary.MakeEpicCreaturesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac990
	struct FEpicCreaturesEnum MakeEpicCreaturesEnum(struct FEpicCreaturesEnum Enum); // Function Icarus.EpicCreaturesLibrary.MakeEpicCreaturesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac910
	struct FEpicCreaturesRowHandle MakeEpicCreatures(struct UE4::FName RowName); // Function Icarus.EpicCreaturesLibrary.MakeEpicCreatures // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac870
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.EpicCreaturesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ac630
	struct FEpicCreaturesEnum IntToStruct(int32_t IntValue); // Function Icarus.EpicCreaturesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac510
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.EpicCreaturesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ac3f0
	void GetEpicCreaturesStruct(struct FEpicCreaturesRowHandle RowHandle, struct FEpicCreatures& EpicCreatures, enum class EValid& Paths); // Function Icarus.EpicCreaturesLibrary.GetEpicCreaturesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16abf60
	bool EqualEqual_FEpicCreaturesRowHandleFEpicCreaturesRowHandle(struct FEpicCreaturesRowHandle RowHandleA, struct FEpicCreaturesRowHandle RowHandleB); // Function Icarus.EpicCreaturesLibrary.EqualEqual_FEpicCreaturesRowHandleFEpicCreaturesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16abb10
	bool EqualEqual_EnumEnum(struct FEpicCreaturesEnum A, struct FEpicCreaturesEnum B); // Function Icarus.EpicCreaturesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ab8e0
	struct FEpicCreaturesRowHandle CastToEpicCreaturesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.EpicCreaturesLibrary.CastToEpicCreaturesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ab6d0
	void BreakEpicCreaturesEnum(struct FEpicCreaturesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.EpicCreaturesLibrary.BreakEpicCreaturesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ab450
	void AddRowToEpicCreaturesTable(struct UE4::FName Name, struct FEpicCreatures Data, struct FEpicCreaturesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.EpicCreaturesLibrary.AddRowToEpicCreaturesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16aaef0
};

// Class Icarus.EpicCreaturesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UEpicCreaturesTable : UIcarusDataTable {
};

// Class Icarus.EquippableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UEquippableComponent : UTraitComponent {

	bool GetEquippableData(struct FEquippableData& OutData); // Function Icarus.EquippableComponent.GetEquippableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ac1f0
};

// Class Icarus.EquippableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEquippableLibrary : URowLibrary {

	struct FEquippableRowHandle StructToRowHandle(struct FEquippableEnum EnumValue); // Function Icarus.EquippableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b31f0
	struct UE4::FName StructToName(struct FEquippableEnum EnumValue); // Function Icarus.EquippableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b3010
	int32_t StructToInt(struct FEquippableEnum EnumValue); // Function Icarus.EquippableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2e30
	struct FEquippableEnum RowHandleToStruct(struct FEquippableRowHandle RowHandle); // Function Icarus.EquippableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2bf0
	void RemoveRowFromEquippableTable(struct UE4::FName Name); // Function Icarus.EquippableLibrary.RemoveRowFromEquippableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b2a70
	void RefreshConstants(); // Function Icarus.EquippableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b2a10
	int32_t NumRows(); // Function Icarus.EquippableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b28b0
	bool NotEqual_EnumName(struct FEquippableEnum A, struct UE4::FName B); // Function Icarus.EquippableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b25e0
	bool NotEqual_EnumEnum(struct FEquippableEnum A, struct FEquippableEnum B); // Function Icarus.EquippableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2310
	struct FEquippableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.EquippableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2160
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.EquippableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b1fb0
	struct FEquippableRowHandle MakeLiteralEquippable(struct FEquippableRowHandle RowHandle); // Function Icarus.EquippableLibrary.MakeLiteralEquippable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1d40
	struct FEquippableRowHandle MakeEquippableFromIndex(int32_t Index); // Function Icarus.EquippableLibrary.MakeEquippableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1950
	struct FEquippableEnum MakeEquippableEnum(struct FEquippableEnum Enum); // Function Icarus.EquippableLibrary.MakeEquippableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b18d0
	struct FEquippableRowHandle MakeEquippable(struct UE4::FName RowName); // Function Icarus.EquippableLibrary.MakeEquippable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1830
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.EquippableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b1650
	struct FEquippableEnum IntToStruct(int32_t IntValue); // Function Icarus.EquippableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b14a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.EquippableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b12f0
	void GetEquippableStruct(struct FEquippableRowHandle RowHandle, struct FEquippableData& Equippable, enum class EValid& Paths); // Function Icarus.EquippableLibrary.GetEquippableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0dd0
	bool EqualEqual_FEquippableRowHandleFEquippableRowHandle(struct FEquippableRowHandle RowHandleA, struct FEquippableRowHandle RowHandleB); // Function Icarus.EquippableLibrary.EqualEqual_FEquippableRowHandleFEquippableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0980
	bool EqualEqual_EnumEnum(struct FEquippableEnum A, struct FEquippableEnum B); // Function Icarus.EquippableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b06b0
	struct FEquippableRowHandle CastToEquippableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.EquippableLibrary.CastToEquippableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0320
	void BreakEquippableEnum(struct FEquippableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.EquippableLibrary.BreakEquippableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16aff00
	void AddRowToEquippableTable(struct UE4::FName Name, struct FEquippableData Data, struct FEquippableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.EquippableLibrary.AddRowToEquippableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16af780
};

// Class Icarus.EquippableModifier
// Size: 0xe0 (Inherited: 0xb0)
struct UEquippableModifier : UActorComponent {
	struct UInventory* Inventory; // 0xb0(0x08)
	int32_t InventorySlot; // 0xb8(0x04)
	struct FEquippableRowHandle EquippableRow; // 0xbc(0x18)
	int32_t CachedUID; // 0xd4(0x04)
	bool SelfDestruct; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)

	void OnItemRemoved(struct UInventory* RemovedInventory, int32_t RemovedSlot); // Function Icarus.EquippableModifier.OnItemRemoved // (Final|Native|Private) // @ game+0x16b2940
	bool ItemUnequipped(); // Function Icarus.EquippableModifier.ItemUnequipped // (Native|Event|Public|BlueprintEvent) // @ game+0x16b1800
	bool ItemEquipped(); // Function Icarus.EquippableModifier.ItemEquipped // (Native|Event|Public|BlueprintEvent) // @ game+0x1636c70
	void EquippedTick(float DeltaTime); // Function Icarus.EquippableModifier.EquippedTick // (Native|Event|Public|BlueprintEvent) // @ game+0x16b0d40
	bool CheckTickConditions(); // Function Icarus.EquippableModifier.CheckTickConditions // (Native|Event|Public|BlueprintEvent) // @ game+0x16b0680
	void ArmourSlotUpdated(struct UInventory* SourceInventory, int32_t Location); // Function Icarus.EquippableModifier.ArmourSlotUpdated // (Final|Native|Public) // @ game+0x16afe30
};

// Class Icarus.EquippableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UEquippableTable : UIcarusDataTable {
};

// Class Icarus.ErrorCodesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UErrorCodesLibrary : URowLibrary {

	struct FErrorCodesRowHandle StructToRowHandle(struct FErrorCodesEnum EnumValue); // Function Icarus.ErrorCodesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b32a0
	struct UE4::FName StructToName(struct FErrorCodesEnum EnumValue); // Function Icarus.ErrorCodesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b30b0
	int32_t StructToInt(struct FErrorCodesEnum EnumValue); // Function Icarus.ErrorCodesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2ed0
	struct FErrorCodesEnum RowHandleToStruct(struct FErrorCodesRowHandle RowHandle); // Function Icarus.ErrorCodesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2cb0
	void RemoveRowFromErrorCodesTable(struct UE4::FName Name); // Function Icarus.ErrorCodesLibrary.RemoveRowFromErrorCodesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b2af0
	void RefreshConstants(); // Function Icarus.ErrorCodesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b2a30
	int32_t NumRows(); // Function Icarus.ErrorCodesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b28e0
	bool NotEqual_EnumName(struct FErrorCodesEnum A, struct UE4::FName B); // Function Icarus.ErrorCodesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b26d0
	bool NotEqual_EnumEnum(struct FErrorCodesEnum A, struct FErrorCodesEnum B); // Function Icarus.ErrorCodesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2400
	struct FErrorCodesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ErrorCodesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b21f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ErrorCodesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b2040
	struct FErrorCodesRowHandle MakeLiteralErrorCodes(struct FErrorCodesRowHandle RowHandle); // Function Icarus.ErrorCodesLibrary.MakeLiteralErrorCodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1e10
	struct FErrorCodesRowHandle MakeErrorCodesFromIndex(int32_t Index); // Function Icarus.ErrorCodesLibrary.MakeErrorCodesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1b00
	struct FErrorCodesEnum MakeErrorCodesEnum(struct FErrorCodesEnum Enum); // Function Icarus.ErrorCodesLibrary.MakeErrorCodesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1a80
	struct FErrorCodesRowHandle MakeErrorCodes(struct UE4::FName RowName); // Function Icarus.ErrorCodesLibrary.MakeErrorCodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b19e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ErrorCodesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b16e0
	struct FErrorCodesEnum IntToStruct(int32_t IntValue); // Function Icarus.ErrorCodesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1530
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ErrorCodesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b1380
	void GetErrorCodesStruct(struct FErrorCodesRowHandle RowHandle, struct FErrorCode& ErrorCodes, enum class EValid& Paths); // Function Icarus.ErrorCodesLibrary.GetErrorCodesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0f70
	bool EqualEqual_FErrorCodesRowHandleFErrorCodesRowHandle(struct FErrorCodesRowHandle RowHandleA, struct FErrorCodesRowHandle RowHandleB); // Function Icarus.ErrorCodesLibrary.EqualEqual_FErrorCodesRowHandleFErrorCodesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0ac0
	bool EqualEqual_EnumEnum(struct FErrorCodesEnum A, struct FErrorCodesEnum B); // Function Icarus.ErrorCodesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b07a0
	struct FErrorCodesRowHandle CastToErrorCodesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ErrorCodesLibrary.CastToErrorCodesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0440
	void BreakErrorCodesEnum(struct FErrorCodesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ErrorCodesLibrary.BreakErrorCodesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b0060
	void AddRowToErrorCodesTable(struct UE4::FName Name, struct FErrorCode Data, struct FErrorCodesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ErrorCodesLibrary.AddRowToErrorCodesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16af950
};

// Class Icarus.ErrorCodesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UErrorCodesTable : UIcarusDataTable {
};

// Class Icarus.ExoticSpawnLibrary
// Size: 0x28 (Inherited: 0x28)
struct UExoticSpawnLibrary : URowLibrary {

	struct FExoticSpawnRowHandle StructToRowHandle(struct FExoticSpawnEnum EnumValue); // Function Icarus.ExoticSpawnLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b3350
	struct UE4::FName StructToName(struct FExoticSpawnEnum EnumValue); // Function Icarus.ExoticSpawnLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b3150
	int32_t StructToInt(struct FExoticSpawnEnum EnumValue); // Function Icarus.ExoticSpawnLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2f70
	struct FExoticSpawnEnum RowHandleToStruct(struct FExoticSpawnRowHandle RowHandle); // Function Icarus.ExoticSpawnLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2d70
	void RemoveRowFromExoticSpawnTable(struct UE4::FName Name); // Function Icarus.ExoticSpawnLibrary.RemoveRowFromExoticSpawnTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b2b70
	void RefreshConstants(); // Function Icarus.ExoticSpawnLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b2a50
	int32_t NumRows(); // Function Icarus.ExoticSpawnLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2910
	bool NotEqual_EnumName(struct FExoticSpawnEnum A, struct UE4::FName B); // Function Icarus.ExoticSpawnLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b27c0
	bool NotEqual_EnumEnum(struct FExoticSpawnEnum A, struct FExoticSpawnEnum B); // Function Icarus.ExoticSpawnLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b24f0
	struct FExoticSpawnEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ExoticSpawnLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2280
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ExoticSpawnLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b20d0
	struct FExoticSpawnRowHandle MakeLiteralExoticSpawn(struct FExoticSpawnRowHandle RowHandle); // Function Icarus.ExoticSpawnLibrary.MakeLiteralExoticSpawn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1ee0
	struct FExoticSpawnRowHandle MakeExoticSpawnFromIndex(int32_t Index); // Function Icarus.ExoticSpawnLibrary.MakeExoticSpawnFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1cb0
	struct FExoticSpawnEnum MakeExoticSpawnEnum(struct FExoticSpawnEnum Enum); // Function Icarus.ExoticSpawnLibrary.MakeExoticSpawnEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1c30
	struct FExoticSpawnRowHandle MakeExoticSpawn(struct UE4::FName RowName); // Function Icarus.ExoticSpawnLibrary.MakeExoticSpawn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1b90
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ExoticSpawnLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b1770
	struct FExoticSpawnEnum IntToStruct(int32_t IntValue); // Function Icarus.ExoticSpawnLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b15c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ExoticSpawnLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b1410
	void GetExoticSpawnStruct(struct FExoticSpawnRowHandle RowHandle, struct FExoticSpawn& ExoticSpawn, enum class EValid& Paths); // Function Icarus.ExoticSpawnLibrary.GetExoticSpawnStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b1170
	bool EqualEqual_FExoticSpawnRowHandleFExoticSpawnRowHandle(struct FExoticSpawnRowHandle RowHandleA, struct FExoticSpawnRowHandle RowHandleB); // Function Icarus.ExoticSpawnLibrary.EqualEqual_FExoticSpawnRowHandleFExoticSpawnRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0c00
	bool EqualEqual_EnumEnum(struct FExoticSpawnEnum A, struct FExoticSpawnEnum B); // Function Icarus.ExoticSpawnLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0890
	struct FExoticSpawnRowHandle CastToExoticSpawnRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ExoticSpawnLibrary.CastToExoticSpawnRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0560
	void BreakExoticSpawnEnum(struct FExoticSpawnEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ExoticSpawnLibrary.BreakExoticSpawnEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b01c0
	void AddRowToExoticSpawnTable(struct UE4::FName Name, struct FExoticSpawn Data, struct FExoticSpawnRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ExoticSpawnLibrary.AddRowToExoticSpawnTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16afc20
};

// Class Icarus.ExoticSpawnTable
// Size: 0xb8 (Inherited: 0xb8)
struct UExoticSpawnTable : UIcarusDataTable {
};

// Class Icarus.ExperienceComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UExperienceComponent : UTraitComponent {

	bool TriggerExperienceEvent(enum class EExperienceSource Type, struct AActor* Target); // Function Icarus.ExperienceComponent.TriggerExperienceEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x16b95c0
	bool GetExperienceData(struct FExperienceData& OutData); // Function Icarus.ExperienceComponent.GetExperienceData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16b6e30
};

// Class Icarus.ExperienceEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UExperienceEventsLibrary : URowLibrary {

	struct FExperienceEventsRowHandle StructToRowHandle(struct FExperienceEventsEnum EnumValue); // Function Icarus.ExperienceEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b93b0
	struct UE4::FName StructToName(struct FExperienceEventsEnum EnumValue); // Function Icarus.ExperienceEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b91d0
	int32_t StructToInt(struct FExperienceEventsEnum EnumValue); // Function Icarus.ExperienceEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8ff0
	struct FExperienceEventsEnum RowHandleToStruct(struct FExperienceEventsRowHandle RowHandle); // Function Icarus.ExperienceEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8db0
	void RemoveRowFromExperienceEventsTable(struct UE4::FName Name); // Function Icarus.ExperienceEventsLibrary.RemoveRowFromExperienceEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b8c30
	void RefreshConstants(); // Function Icarus.ExperienceEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b8bd0
	int32_t NumRows(); // Function Icarus.ExperienceEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8b40
	bool NotEqual_EnumName(struct FExperienceEventsEnum A, struct UE4::FName B); // Function Icarus.ExperienceEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8870
	bool NotEqual_EnumEnum(struct FExperienceEventsEnum A, struct FExperienceEventsEnum B); // Function Icarus.ExperienceEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b85a0
	struct FExperienceEventsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ExperienceEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b83f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ExperienceEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b8240
	struct FExperienceEventsRowHandle MakeLiteralExperienceEvents(struct FExperienceEventsRowHandle RowHandle); // Function Icarus.ExperienceEventsLibrary.MakeLiteralExperienceEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b80a0
	struct FExperienceEventsRowHandle MakeExperienceEventsFromIndex(int32_t Index); // Function Icarus.ExperienceEventsLibrary.MakeExperienceEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7d00
	struct FExperienceEventsEnum MakeExperienceEventsEnum(struct FExperienceEventsEnum Enum); // Function Icarus.ExperienceEventsLibrary.MakeExperienceEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7c80
	struct FExperienceEventsRowHandle MakeExperienceEvents(struct UE4::FName RowName); // Function Icarus.ExperienceEventsLibrary.MakeExperienceEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7be0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ExperienceEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b7910
	struct FExperienceEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.ExperienceEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7760
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ExperienceEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b75b0
	void GetExperienceEventsStruct(struct FExperienceEventsRowHandle RowHandle, struct FExperienceEvent& ExperienceEvents, enum class EValid& Paths); // Function Icarus.ExperienceEventsLibrary.GetExperienceEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b7040
	bool EqualEqual_FExperienceEventsRowHandleFExperienceEventsRowHandle(struct FExperienceEventsRowHandle RowHandleA, struct FExperienceEventsRowHandle RowHandleB); // Function Icarus.ExperienceEventsLibrary.EqualEqual_FExperienceEventsRowHandleFExperienceEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6a70
	bool EqualEqual_EnumEnum(struct FExperienceEventsEnum A, struct FExperienceEventsEnum B); // Function Icarus.ExperienceEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b67a0
	struct FExperienceEventsRowHandle CastToExperienceEventsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ExperienceEventsLibrary.CastToExperienceEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b6440
	void BreakExperienceEventsEnum(struct FExperienceEventsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ExperienceEventsLibrary.BreakExperienceEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b6180
	void AddRowToExperienceEventsTable(struct UE4::FName Name, struct FExperienceEvent Data, struct FExperienceEventsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ExperienceEventsLibrary.AddRowToExperienceEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5800
};

// Class Icarus.ExperienceEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UExperienceEventsTable : UIcarusDataTable {
};

// Class Icarus.ExperienceLibrary
// Size: 0x28 (Inherited: 0x28)
struct UExperienceLibrary : URowLibrary {

	struct FExperienceRowHandle StructToRowHandle(struct FExperienceEnum EnumValue); // Function Icarus.ExperienceLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b9460
	struct UE4::FName StructToName(struct FExperienceEnum EnumValue); // Function Icarus.ExperienceLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b9270
	int32_t StructToInt(struct FExperienceEnum EnumValue); // Function Icarus.ExperienceLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b9090
	struct FExperienceEnum RowHandleToStruct(struct FExperienceRowHandle RowHandle); // Function Icarus.ExperienceLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8e70
	void RemoveRowFromExperienceTable(struct UE4::FName Name); // Function Icarus.ExperienceLibrary.RemoveRowFromExperienceTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b8cb0
	void RefreshConstants(); // Function Icarus.ExperienceLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b8bf0
	int32_t NumRows(); // Function Icarus.ExperienceLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8b70
	bool NotEqual_EnumName(struct FExperienceEnum A, struct UE4::FName B); // Function Icarus.ExperienceLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8960
	bool NotEqual_EnumEnum(struct FExperienceEnum A, struct FExperienceEnum B); // Function Icarus.ExperienceLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8690
	struct FExperienceEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ExperienceLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8480
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ExperienceLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b82d0
	struct FExperienceRowHandle MakeLiteralExperience(struct FExperienceRowHandle RowHandle); // Function Icarus.ExperienceLibrary.MakeLiteralExperience // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7fd0
	struct FExperienceRowHandle MakeExperienceFromIndex(int32_t Index); // Function Icarus.ExperienceLibrary.MakeExperienceFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7d90
	struct FExperienceEnum MakeExperienceEnum(struct FExperienceEnum Enum); // Function Icarus.ExperienceLibrary.MakeExperienceEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7b60
	struct FExperienceRowHandle MakeExperience(struct UE4::FName RowName); // Function Icarus.ExperienceLibrary.MakeExperience // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7ac0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ExperienceLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b79a0
	struct FExperienceEnum IntToStruct(int32_t IntValue); // Function Icarus.ExperienceLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b77f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ExperienceLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b7640
	void GetExperienceStruct(struct FExperienceRowHandle RowHandle, struct FExperienceData& Experience, enum class EValid& Paths); // Function Icarus.ExperienceLibrary.GetExperienceStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b7200
	bool EqualEqual_FExperienceRowHandleFExperienceRowHandle(struct FExperienceRowHandle RowHandleA, struct FExperienceRowHandle RowHandleB); // Function Icarus.ExperienceLibrary.EqualEqual_FExperienceRowHandleFExperienceRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6bb0
	bool EqualEqual_EnumEnum(struct FExperienceEnum A, struct FExperienceEnum B); // Function Icarus.ExperienceLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6890
	struct FExperienceRowHandle CastToExperienceRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ExperienceLibrary.CastToExperienceRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b6560
	void BreakExperienceEnum(struct FExperienceEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ExperienceLibrary.BreakExperienceEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b6020
	void AddRowToExperienceTable(struct UE4::FName Name, struct FExperienceData Data, struct FExperienceRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ExperienceLibrary.AddRowToExperienceTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5a80
};

// Class Icarus.ExperienceTable
// Size: 0xb8 (Inherited: 0xb8)
struct UExperienceTable : UIcarusDataTable {
};

// Class Icarus.FactionInfoLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFactionInfoLibrary : URowLibrary {

	struct FFactionInfoRowHandle StructToRowHandle(struct FFactionInfoEnum EnumValue); // Function Icarus.FactionInfoLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b9510
	struct UE4::FName StructToName(struct FFactionInfoEnum EnumValue); // Function Icarus.FactionInfoLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b9310
	int32_t StructToInt(struct FFactionInfoEnum EnumValue); // Function Icarus.FactionInfoLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b9130
	struct FFactionInfoEnum RowHandleToStruct(struct FFactionInfoRowHandle RowHandle); // Function Icarus.FactionInfoLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8f30
	void RemoveRowFromFactionInfoTable(struct UE4::FName Name); // Function Icarus.FactionInfoLibrary.RemoveRowFromFactionInfoTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b8d30
	void RefreshConstants(); // Function Icarus.FactionInfoLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b8c10
	int32_t NumRows(); // Function Icarus.FactionInfoLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8ba0
	bool NotEqual_EnumName(struct FFactionInfoEnum A, struct UE4::FName B); // Function Icarus.FactionInfoLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8a50
	bool NotEqual_EnumEnum(struct FFactionInfoEnum A, struct FFactionInfoEnum B); // Function Icarus.FactionInfoLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8780
	struct FFactionInfoEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FactionInfoLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8510
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FactionInfoLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b8360
	struct FFactionInfoRowHandle MakeLiteralFactionInfo(struct FFactionInfoRowHandle RowHandle); // Function Icarus.FactionInfoLibrary.MakeLiteralFactionInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8170
	struct FFactionInfoRowHandle MakeFactionInfoFromIndex(int32_t Index); // Function Icarus.FactionInfoLibrary.MakeFactionInfoFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7f40
	struct FFactionInfoEnum MakeFactionInfoEnum(struct FFactionInfoEnum Enum); // Function Icarus.FactionInfoLibrary.MakeFactionInfoEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7ec0
	struct FFactionInfoRowHandle MakeFactionInfo(struct UE4::FName RowName); // Function Icarus.FactionInfoLibrary.MakeFactionInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7e20
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FactionInfoLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b7a30
	struct FFactionInfoEnum IntToStruct(int32_t IntValue); // Function Icarus.FactionInfoLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7880
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FactionInfoLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b76d0
	void GetFactionInfoStruct(struct FFactionInfoRowHandle RowHandle, struct FFactionInfo& FactionInfo, enum class EValid& Paths); // Function Icarus.FactionInfoLibrary.GetFactionInfoStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b7430
	bool EqualEqual_FFactionInfoRowHandleFFactionInfoRowHandle(struct FFactionInfoRowHandle RowHandleA, struct FFactionInfoRowHandle RowHandleB); // Function Icarus.FactionInfoLibrary.EqualEqual_FFactionInfoRowHandleFFactionInfoRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6cf0
	bool EqualEqual_EnumEnum(struct FFactionInfoEnum A, struct FFactionInfoEnum B); // Function Icarus.FactionInfoLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6980
	struct FFactionInfoRowHandle CastToFactionInfoRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FactionInfoLibrary.CastToFactionInfoRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b6680
	void BreakFactionInfoEnum(struct FFactionInfoEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FactionInfoLibrary.BreakFactionInfoEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b62e0
	void AddRowToFactionInfoTable(struct UE4::FName Name, struct FFactionInfo Data, struct FFactionInfoRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FactionInfoLibrary.AddRowToFactionInfoTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5d90
};

// Class Icarus.FactionInfoTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFactionInfoTable : UIcarusDataTable {
};

// Class Icarus.FactionMissionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFactionMissionsLibrary : URowLibrary {

	struct FFactionMissionsRowHandle StructToRowHandle(struct FFactionMissionsEnum EnumValue); // Function Icarus.FactionMissionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf600
	struct UE4::FName StructToName(struct FFactionMissionsEnum EnumValue); // Function Icarus.FactionMissionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf420
	int32_t StructToInt(struct FFactionMissionsEnum EnumValue); // Function Icarus.FactionMissionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf240
	struct FFactionMissionsEnum RowHandleToStruct(struct FFactionMissionsRowHandle RowHandle); // Function Icarus.FactionMissionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf000
	void RemoveRowFromFactionMissionsTable(struct UE4::FName Name); // Function Icarus.FactionMissionsLibrary.RemoveRowFromFactionMissionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16bee80
	void RefreshConstants(); // Function Icarus.FactionMissionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16bee20
	int32_t NumRows(); // Function Icarus.FactionMissionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bed90
	bool NotEqual_EnumName(struct FFactionMissionsEnum A, struct UE4::FName B); // Function Icarus.FactionMissionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16beac0
	bool NotEqual_EnumEnum(struct FFactionMissionsEnum A, struct FFactionMissionsEnum B); // Function Icarus.FactionMissionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be7f0
	struct FFactionMissionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FactionMissionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be640
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FactionMissionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16be490
	struct FFactionMissionsRowHandle MakeLiteralFactionMissions(struct FFactionMissionsRowHandle RowHandle); // Function Icarus.FactionMissionsLibrary.MakeLiteralFactionMissions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be220
	struct FFactionMissionsRowHandle MakeFactionMissionsFromIndex(int32_t Index); // Function Icarus.FactionMissionsLibrary.MakeFactionMissionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bde30
	struct FFactionMissionsEnum MakeFactionMissionsEnum(struct FFactionMissionsEnum Enum); // Function Icarus.FactionMissionsLibrary.MakeFactionMissionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bddb0
	struct FFactionMissionsRowHandle MakeFactionMissions(struct UE4::FName RowName); // Function Icarus.FactionMissionsLibrary.MakeFactionMissions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdd10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FactionMissionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16bdb60
	struct FFactionMissionsEnum IntToStruct(int32_t IntValue); // Function Icarus.FactionMissionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd9b0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FactionMissionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16bd800
	void GetFactionMissionsStruct(struct FFactionMissionsRowHandle RowHandle, struct FFactionMission& FactionMissions, enum class EValid& Paths); // Function Icarus.FactionMissionsLibrary.GetFactionMissionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bd1e0
	bool EqualEqual_FFactionMissionsRowHandleFFactionMissionsRowHandle(struct FFactionMissionsRowHandle RowHandleA, struct FFactionMissionsRowHandle RowHandleB); // Function Icarus.FactionMissionsLibrary.EqualEqual_FFactionMissionsRowHandleFFactionMissionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bce20
	bool EqualEqual_EnumEnum(struct FFactionMissionsEnum A, struct FFactionMissionsEnum B); // Function Icarus.FactionMissionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bcb50
	struct FFactionMissionsRowHandle CastToFactionMissionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FactionMissionsLibrary.CastToFactionMissionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bc7f0
	void BreakFactionMissionsEnum(struct FFactionMissionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FactionMissionsLibrary.BreakFactionMissionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bc3d0
	void AddRowToFactionMissionsTable(struct UE4::FName Name, struct FFactionMission Data, struct FFactionMissionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FactionMissionsLibrary.AddRowToFactionMissionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bbd30
};

// Class Icarus.FactionMissionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFactionMissionsTable : UIcarusDataTable {
};

// Class Icarus.FarmableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UFarmableComponent : UTraitComponent {

	bool GetFarmableData(struct FFarmableData& OutData); // Function Icarus.FarmableComponent.GetFarmableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16bd360
};

// Class Icarus.FarmableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFarmableLibrary : URowLibrary {

	struct FFarmableRowHandle StructToRowHandle(struct FFarmableEnum EnumValue); // Function Icarus.FarmableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf6b0
	struct UE4::FName StructToName(struct FFarmableEnum EnumValue); // Function Icarus.FarmableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf4c0
	int32_t StructToInt(struct FFarmableEnum EnumValue); // Function Icarus.FarmableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf2e0
	struct FFarmableEnum RowHandleToStruct(struct FFarmableRowHandle RowHandle); // Function Icarus.FarmableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf0c0
	void RemoveRowFromFarmableTable(struct UE4::FName Name); // Function Icarus.FarmableLibrary.RemoveRowFromFarmableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16bef00
	void RefreshConstants(); // Function Icarus.FarmableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16bee40
	int32_t NumRows(); // Function Icarus.FarmableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bedc0
	bool NotEqual_EnumName(struct FFarmableEnum A, struct UE4::FName B); // Function Icarus.FarmableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bebb0
	bool NotEqual_EnumEnum(struct FFarmableEnum A, struct FFarmableEnum B); // Function Icarus.FarmableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be8e0
	struct FFarmableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FarmableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be6d0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FarmableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16be520
	struct FFarmableRowHandle MakeLiteralFarmable(struct FFarmableRowHandle RowHandle); // Function Icarus.FarmableLibrary.MakeLiteralFarmable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be2f0
	struct FFarmableRowHandle MakeFarmableFromIndex(int32_t Index); // Function Icarus.FarmableLibrary.MakeFarmableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdfe0
	struct FFarmableEnum MakeFarmableEnum(struct FFarmableEnum Enum); // Function Icarus.FarmableLibrary.MakeFarmableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdf60
	struct FFarmableRowHandle MakeFarmable(struct UE4::FName RowName); // Function Icarus.FarmableLibrary.MakeFarmable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdec0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FarmableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16bdbf0
	struct FFarmableEnum IntToStruct(int32_t IntValue); // Function Icarus.FarmableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bda40
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FarmableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16bd890
	void GetFarmableStruct(struct FFarmableRowHandle RowHandle, struct FFarmableData& Farmable, enum class EValid& Paths); // Function Icarus.FarmableLibrary.GetFarmableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bd4e0
	bool EqualEqual_FFarmableRowHandleFFarmableRowHandle(struct FFarmableRowHandle RowHandleA, struct FFarmableRowHandle RowHandleB); // Function Icarus.FarmableLibrary.EqualEqual_FFarmableRowHandleFFarmableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bcf60
	bool EqualEqual_EnumEnum(struct FFarmableEnum A, struct FFarmableEnum B); // Function Icarus.FarmableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bcc40
	struct FFarmableRowHandle CastToFarmableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FarmableLibrary.CastToFarmableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bc910
	void BreakFarmableEnum(struct FFarmableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FarmableLibrary.BreakFarmableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bc530
	void AddRowToFarmableTable(struct UE4::FName Name, struct FFarmableData Data, struct FFarmableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FarmableLibrary.AddRowToFarmableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bbef0
};

// Class Icarus.FarmableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFarmableTable : UIcarusDataTable {
};

// Class Icarus.FarmingGrowthStatesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFarmingGrowthStatesLibrary : URowLibrary {

	struct FFarmingGrowthStatesRowHandle StructToRowHandle(struct FFarmingGrowthStatesEnum EnumValue); // Function Icarus.FarmingGrowthStatesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf760
	struct UE4::FName StructToName(struct FFarmingGrowthStatesEnum EnumValue); // Function Icarus.FarmingGrowthStatesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf560
	int32_t StructToInt(struct FFarmingGrowthStatesEnum EnumValue); // Function Icarus.FarmingGrowthStatesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf380
	struct FFarmingGrowthStatesEnum RowHandleToStruct(struct FFarmingGrowthStatesRowHandle RowHandle); // Function Icarus.FarmingGrowthStatesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bf180
	void RemoveRowFromFarmingGrowthStatesTable(struct UE4::FName Name); // Function Icarus.FarmingGrowthStatesLibrary.RemoveRowFromFarmingGrowthStatesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16bef80
	void RefreshConstants(); // Function Icarus.FarmingGrowthStatesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16bee60
	int32_t NumRows(); // Function Icarus.FarmingGrowthStatesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bedf0
	bool NotEqual_EnumName(struct FFarmingGrowthStatesEnum A, struct UE4::FName B); // Function Icarus.FarmingGrowthStatesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16beca0
	bool NotEqual_EnumEnum(struct FFarmingGrowthStatesEnum A, struct FFarmingGrowthStatesEnum B); // Function Icarus.FarmingGrowthStatesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be9d0
	struct FFarmingGrowthStatesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FarmingGrowthStatesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be760
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FarmingGrowthStatesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16be5b0
	struct FFarmingGrowthStatesRowHandle MakeLiteralFarmingGrowthStates(struct FFarmingGrowthStatesRowHandle RowHandle); // Function Icarus.FarmingGrowthStatesLibrary.MakeLiteralFarmingGrowthStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be3c0
	struct FFarmingGrowthStatesRowHandle MakeFarmingGrowthStatesFromIndex(int32_t Index); // Function Icarus.FarmingGrowthStatesLibrary.MakeFarmingGrowthStatesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be190
	struct FFarmingGrowthStatesEnum MakeFarmingGrowthStatesEnum(struct FFarmingGrowthStatesEnum Enum); // Function Icarus.FarmingGrowthStatesLibrary.MakeFarmingGrowthStatesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be110
	struct FFarmingGrowthStatesRowHandle MakeFarmingGrowthStates(struct UE4::FName RowName); // Function Icarus.FarmingGrowthStatesLibrary.MakeFarmingGrowthStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be070
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FarmingGrowthStatesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16bdc80
	struct FFarmingGrowthStatesEnum IntToStruct(int32_t IntValue); // Function Icarus.FarmingGrowthStatesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdad0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FarmingGrowthStatesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16bd920
	void GetFarmingGrowthStatesStruct(struct FFarmingGrowthStatesRowHandle RowHandle, struct FFarmingGrowthState& FarmingGrowthStates, enum class EValid& Paths); // Function Icarus.FarmingGrowthStatesLibrary.GetFarmingGrowthStatesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bd670
	bool EqualEqual_FFarmingGrowthStatesRowHandleFFarmingGrowthStatesRowHandle(struct FFarmingGrowthStatesRowHandle RowHandleA, struct FFarmingGrowthStatesRowHandle RowHandleB); // Function Icarus.FarmingGrowthStatesLibrary.EqualEqual_FFarmingGrowthStatesRowHandleFFarmingGrowthStatesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd0a0
	bool EqualEqual_EnumEnum(struct FFarmingGrowthStatesEnum A, struct FFarmingGrowthStatesEnum B); // Function Icarus.FarmingGrowthStatesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bcd30
	struct FFarmingGrowthStatesRowHandle CastToFarmingGrowthStatesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FarmingGrowthStatesLibrary.CastToFarmingGrowthStatesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bca30
	void BreakFarmingGrowthStatesEnum(struct FFarmingGrowthStatesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FarmingGrowthStatesLibrary.BreakFarmingGrowthStatesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bc690
	void AddRowToFarmingGrowthStatesTable(struct UE4::FName Name, struct FFarmingGrowthState Data, struct FFarmingGrowthStatesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FarmingGrowthStatesLibrary.AddRowToFarmingGrowthStatesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bc160
};

// Class Icarus.FarmingGrowthStatesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFarmingGrowthStatesTable : UIcarusDataTable {
};

// Class Icarus.FarmingPlotRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UFarmingPlotRecorderInterface : UInterface {

	void SetFarmingPlotValues(bool bIsSeededRecord, bool bIsHarvestableRecord, int32_t CurrentGrowthStageRecord, float CurrentTimeRecord, struct FFarmingSeedsRowHandle CurrentSeedRowRecord, float NextStageTimeRecord, float GrowthCompleteTimeRecord); // Function Icarus.FarmingPlotRecorderInterface.SetFarmingPlotValues // (Native|Event|Public|BlueprintEvent) // @ game+0x16c52c0
	void GetFarmingPlotValues(bool& bIsSeededRecord, bool& bIsHarvestableRecord, int32_t& CurrentGrowthStageRecord, float& CurrentTimeRecord, struct FFarmingSeedsRowHandle& CurrentSeedRowRecord, float& NextStageTimeRecord, float& GrowthCompleteTimeRecord); // Function Icarus.FarmingPlotRecorderInterface.GetFarmingPlotValues // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x16c37d0
};

// Class Icarus.FarmingPlotRecorderComponent
// Size: 0x200 (Inherited: 0x1e0)
struct UFarmingPlotRecorderComponent : UDeployableRecorderComponent {
	bool bIsSeeded; // 0x1e0(0x01)
	bool bIsHarvestable; // 0x1e1(0x01)
	char pad_1E2[0x2]; // 0x1e2(0x02)
	int32_t CurrentGrowthStage; // 0x1e4(0x04)
	float CurrentTime; // 0x1e8(0x04)
	struct UE4::FName CurrentSeedRow; // 0x1ec(0x08)
	float NextStageTime; // 0x1f4(0x04)
	float GrowthCompleteTime; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
};

// Class Icarus.FarmingSeedsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFarmingSeedsLibrary : URowLibrary {

	struct FFarmingSeedsRowHandle StructToRowHandle(struct FFarmingSeedsEnum EnumValue); // Function Icarus.FarmingSeedsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c58d0
	struct UE4::FName StructToName(struct FFarmingSeedsEnum EnumValue); // Function Icarus.FarmingSeedsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5790
	int32_t StructToInt(struct FFarmingSeedsEnum EnumValue); // Function Icarus.FarmingSeedsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5650
	struct FFarmingSeedsEnum RowHandleToStruct(struct FFarmingSeedsRowHandle RowHandle); // Function Icarus.FarmingSeedsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5140
	void RemoveRowFromFarmingSeedsTable(struct UE4::FName Name); // Function Icarus.FarmingSeedsLibrary.RemoveRowFromFarmingSeedsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16c4f70
	void RefreshConstants(); // Function Icarus.FarmingSeedsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16c4f30
	int32_t NumRows(); // Function Icarus.FarmingSeedsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4e90
	bool NotEqual_EnumName(struct FFarmingSeedsEnum A, struct UE4::FName B); // Function Icarus.FarmingSeedsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4cb0
	bool NotEqual_EnumEnum(struct FFarmingSeedsEnum A, struct FFarmingSeedsEnum B); // Function Icarus.FarmingSeedsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4ad0
	struct FFarmingSeedsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FarmingSeedsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c49b0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FarmingSeedsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16c4890
	struct FFarmingSeedsRowHandle MakeLiteralFarmingSeeds(struct FFarmingSeedsRowHandle RowHandle); // Function Icarus.FarmingSeedsLibrary.MakeLiteralFarmingSeeds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c46f0
	struct FFarmingSeedsRowHandle MakeFarmingSeedsFromIndex(int32_t Index); // Function Icarus.FarmingSeedsLibrary.MakeFarmingSeedsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c44b0
	struct FFarmingSeedsEnum MakeFarmingSeedsEnum(struct FFarmingSeedsEnum Enum); // Function Icarus.FarmingSeedsLibrary.MakeFarmingSeedsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4430
	struct FFarmingSeedsRowHandle MakeFarmingSeeds(struct UE4::FName RowName); // Function Icarus.FarmingSeedsLibrary.MakeFarmingSeeds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4390
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FarmingSeedsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16c4270
	struct FFarmingSeedsEnum IntToStruct(int32_t IntValue); // Function Icarus.FarmingSeedsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c40f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FarmingSeedsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16c3fd0
	void GetFarmingSeedsStruct(struct FFarmingSeedsRowHandle RowHandle, struct FFarmingSeedData& FarmingSeeds, enum class EValid& Paths); // Function Icarus.FarmingSeedsLibrary.GetFarmingSeedsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c3a70
	bool EqualEqual_FFarmingSeedsRowHandleFFarmingSeedsRowHandle(struct FFarmingSeedsRowHandle RowHandleA, struct FFarmingSeedsRowHandle RowHandleB); // Function Icarus.FarmingSeedsLibrary.EqualEqual_FFarmingSeedsRowHandleFFarmingSeedsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3550
	bool EqualEqual_EnumEnum(struct FFarmingSeedsEnum A, struct FFarmingSeedsEnum B); // Function Icarus.FarmingSeedsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3370
	struct FFarmingSeedsRowHandle CastToFarmingSeedsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FarmingSeedsLibrary.CastToFarmingSeedsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c3130
	void BreakFarmingSeedsEnum(struct FFarmingSeedsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FarmingSeedsLibrary.BreakFarmingSeedsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c2930
	void AddRowToFarmingSeedsTable(struct UE4::FName Name, struct FFarmingSeedData Data, struct FFarmingSeedsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FarmingSeedsLibrary.AddRowToFarmingSeedsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c2270
};

// Class Icarus.FarmingSeedsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFarmingSeedsTable : UIcarusDataTable {
};

// Class Icarus.FarmingSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UFarmingSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnItemHarvestedNotify; // 0x30(0x10)

	void BroadcastItemHarvestedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.FarmingSubsystem.BroadcastItemHarvestedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16c2bf0
};

// Class Icarus.FillableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UFillableComponent : UTraitComponent {
	int32_t FillableType; // 0xd0(0x04)
	int32_t StoredUnits; // 0xd4(0x04)
	struct FMulticastSparseDelegate Client_OnResourceTypeUpdated; // 0xd8(0x01)
	struct FMulticastSparseDelegate Client_OnStoredUnitsUpdated; // 0xd9(0x01)
	char pad_DA[0x6]; // 0xda(0x06)

	void SetStoredUnits(int32_t NewCapacity); // Function Icarus.FillableComponent.SetStoredUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x16c55c0
	bool SetResourceType(enum class EIcarusResourceType NewResourceType); // Function Icarus.FillableComponent.SetResourceType // (Final|Native|Public|BlueprintCallable) // @ game+0x16c5530
	int32_t RemoveUnits(int32_t AmountToRemove, enum class EIcarusResourceType Type); // Function Icarus.FillableComponent.RemoveUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x16c5070
	void OnRep_StoredUnits(); // Function Icarus.FillableComponent.OnRep_StoredUnits // (Final|Native|Public) // @ game+0x16c4f10
	void OnRep_ResourceType(); // Function Icarus.FillableComponent.OnRep_ResourceType // (Final|Native|Public) // @ game+0x16c4ef0
	bool IsFull(); // Function Icarus.FillableComponent.IsFull // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4240
	bool IsEmpty(); // Function Icarus.FillableComponent.IsEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4210
	int32_t GetStoredUnits(); // Function Icarus.FillableComponent.GetStoredUnits // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3fa0
	enum class EIcarusResourceType GetFillableType(); // Function Icarus.FillableComponent.GetFillableType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3f70
	bool GetFillableData(struct FFillableData& OutData); // Function Icarus.FillableComponent.GetFillableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c3c40
	int32_t AddUnits(int32_t AmountToAdd, enum class EIcarusResourceType Type); // Function Icarus.FillableComponent.AddUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x16c2860
};

// Class Icarus.FillableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFillableLibrary : URowLibrary {

	struct FFillableRowHandle StructToRowHandle(struct FFillableEnum EnumValue); // Function Icarus.FillableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5980
	struct UE4::FName StructToName(struct FFillableEnum EnumValue); // Function Icarus.FillableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5830
	int32_t StructToInt(struct FFillableEnum EnumValue); // Function Icarus.FillableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c56f0
	struct FFillableEnum RowHandleToStruct(struct FFillableRowHandle RowHandle); // Function Icarus.FillableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5200
	void RemoveRowFromFillableTable(struct UE4::FName Name); // Function Icarus.FillableLibrary.RemoveRowFromFillableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16c4ff0
	void RefreshConstants(); // Function Icarus.FillableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16c4f50
	int32_t NumRows(); // Function Icarus.FillableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4ec0
	bool NotEqual_EnumName(struct FFillableEnum A, struct UE4::FName B); // Function Icarus.FillableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4da0
	bool NotEqual_EnumEnum(struct FFillableEnum A, struct FFillableEnum B); // Function Icarus.FillableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4bc0
	struct FFillableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FillableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4a40
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FillableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16c4920
	struct FFillableRowHandle MakeLiteralFillable(struct FFillableRowHandle RowHandle); // Function Icarus.FillableLibrary.MakeLiteralFillable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c47c0
	struct FFillableRowHandle MakeFillableFromIndex(int32_t Index); // Function Icarus.FillableLibrary.MakeFillableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4660
	struct FFillableEnum MakeFillableEnum(struct FFillableEnum Enum); // Function Icarus.FillableLibrary.MakeFillableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c45e0
	struct FFillableRowHandle MakeFillable(struct UE4::FName RowName); // Function Icarus.FillableLibrary.MakeFillable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4540
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FillableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16c4300
	struct FFillableEnum IntToStruct(int32_t IntValue); // Function Icarus.FillableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4180
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FillableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16c4060
	void GetFillableStruct(struct FFillableRowHandle RowHandle, struct FFillableData& Fillable, enum class EValid& Paths); // Function Icarus.FillableLibrary.GetFillableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c3dd0
	bool EqualEqual_FFillableRowHandleFFillableRowHandle(struct FFillableRowHandle RowHandleA, struct FFillableRowHandle RowHandleB); // Function Icarus.FillableLibrary.EqualEqual_FFillableRowHandleFFillableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3690
	bool EqualEqual_EnumEnum(struct FFillableEnum A, struct FFillableEnum B); // Function Icarus.FillableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3460
	struct FFillableRowHandle CastToFillableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FillableLibrary.CastToFillableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c3250
	void BreakFillableEnum(struct FFillableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FillableLibrary.BreakFillableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c2a90
	void AddRowToFillableTable(struct UE4::FName Name, struct FFillableData Data, struct FFillableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FillableLibrary.AddRowToFillableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c25b0
};

// Class Icarus.FillableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFillableTable : UIcarusDataTable {
};

// Class Icarus.FirearmAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFirearmAudioDataLibrary : URowLibrary {

	struct FFirearmAudioDataRowHandle StructToRowHandle(struct FFirearmAudioDataEnum EnumValue); // Function Icarus.FirearmAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca8d0
	struct UE4::FName StructToName(struct FFirearmAudioDataEnum EnumValue); // Function Icarus.FirearmAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca790
	int32_t StructToInt(struct FFirearmAudioDataEnum EnumValue); // Function Icarus.FirearmAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca650
	struct FFirearmAudioDataEnum RowHandleToStruct(struct FFirearmAudioDataRowHandle RowHandle); // Function Icarus.FirearmAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca4d0
	void RemoveRowFromFirearmAudioDataTable(struct UE4::FName Name); // Function Icarus.FirearmAudioDataLibrary.RemoveRowFromFirearmAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ca3d0
	void RefreshConstants(); // Function Icarus.FirearmAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ca390
	int32_t NumRows(); // Function Icarus.FirearmAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca330
	bool NotEqual_EnumName(struct FFirearmAudioDataEnum A, struct UE4::FName B); // Function Icarus.FirearmAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca150
	bool NotEqual_EnumEnum(struct FFirearmAudioDataEnum A, struct FFirearmAudioDataEnum B); // Function Icarus.FirearmAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9f70
	struct FFirearmAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FirearmAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9e50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FirearmAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16c9d30
	struct FFirearmAudioDataRowHandle MakeLiteralFirearmAudioData(struct FFirearmAudioDataRowHandle RowHandle); // Function Icarus.FirearmAudioDataLibrary.MakeLiteralFirearmAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9b90
	struct FFirearmAudioDataRowHandle MakeFirearmAudioDataFromIndex(int32_t Index); // Function Icarus.FirearmAudioDataLibrary.MakeFirearmAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9950
	struct FFirearmAudioDataEnum MakeFirearmAudioDataEnum(struct FFirearmAudioDataEnum Enum); // Function Icarus.FirearmAudioDataLibrary.MakeFirearmAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c98d0
	struct FFirearmAudioDataRowHandle MakeFirearmAudioData(struct UE4::FName RowName); // Function Icarus.FirearmAudioDataLibrary.MakeFirearmAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9830
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FirearmAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16c9710
	struct FFirearmAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.FirearmAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c95f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FirearmAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16c94d0
	void GetFirearmAudioDataStruct(struct FFirearmAudioDataRowHandle RowHandle, struct FFirearmAudioData& FirearmAudioData, enum class EValid& Paths); // Function Icarus.FirearmAudioDataLibrary.GetFirearmAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c9100
	bool EqualEqual_FFirearmAudioDataRowHandleFFirearmAudioDataRowHandle(struct FFirearmAudioDataRowHandle RowHandleA, struct FFirearmAudioDataRowHandle RowHandleB); // Function Icarus.FirearmAudioDataLibrary.EqualEqual_FFirearmAudioDataRowHandleFFirearmAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c8e80
	bool EqualEqual_EnumEnum(struct FFirearmAudioDataEnum A, struct FFirearmAudioDataEnum B); // Function Icarus.FirearmAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c8ca0
	struct FFirearmAudioDataRowHandle CastToFirearmAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FirearmAudioDataLibrary.CastToFirearmAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8a60
	void BreakFirearmAudioDataEnum(struct FFirearmAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FirearmAudioDataLibrary.BreakFirearmAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c87a0
	void AddRowToFirearmAudioDataTable(struct UE4::FName Name, struct FFirearmAudioData Data, struct FFirearmAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FirearmAudioDataLibrary.AddRowToFirearmAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8270
};

// Class Icarus.FirearmAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFirearmAudioDataTable : UIcarusDataTable {
};

// Class Icarus.FirearmDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFirearmDataLibrary : URowLibrary {

	struct FFirearmDataRowHandle StructToRowHandle(struct FFirearmDataEnum EnumValue); // Function Icarus.FirearmDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca980
	struct UE4::FName StructToName(struct FFirearmDataEnum EnumValue); // Function Icarus.FirearmDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca830
	int32_t StructToInt(struct FFirearmDataEnum EnumValue); // Function Icarus.FirearmDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca6f0
	struct FFirearmDataEnum RowHandleToStruct(struct FFirearmDataRowHandle RowHandle); // Function Icarus.FirearmDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca590
	void RemoveRowFromFirearmDataTable(struct UE4::FName Name); // Function Icarus.FirearmDataLibrary.RemoveRowFromFirearmDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ca450
	void RefreshConstants(); // Function Icarus.FirearmDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ca3b0
	int32_t NumRows(); // Function Icarus.FirearmDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca360
	bool NotEqual_EnumName(struct FFirearmDataEnum A, struct UE4::FName B); // Function Icarus.FirearmDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca240
	bool NotEqual_EnumEnum(struct FFirearmDataEnum A, struct FFirearmDataEnum B); // Function Icarus.FirearmDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca060
	struct FFirearmDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FirearmDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9ee0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FirearmDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16c9dc0
	struct FFirearmDataRowHandle MakeLiteralFirearmData(struct FFirearmDataRowHandle RowHandle); // Function Icarus.FirearmDataLibrary.MakeLiteralFirearmData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9c60
	struct FFirearmDataRowHandle MakeFirearmDataFromIndex(int32_t Index); // Function Icarus.FirearmDataLibrary.MakeFirearmDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9b00
	struct FFirearmDataEnum MakeFirearmDataEnum(struct FFirearmDataEnum Enum); // Function Icarus.FirearmDataLibrary.MakeFirearmDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9a80
	struct FFirearmDataRowHandle MakeFirearmData(struct UE4::FName RowName); // Function Icarus.FirearmDataLibrary.MakeFirearmData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c99e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FirearmDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16c97a0
	struct FFirearmDataEnum IntToStruct(int32_t IntValue); // Function Icarus.FirearmDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9680
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FirearmDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16c9560
	void GetFirearmDataStruct(struct FFirearmDataRowHandle RowHandle, struct FFirearmData& FirearmData, enum class EValid& Paths); // Function Icarus.FirearmDataLibrary.GetFirearmDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c9330
	bool EqualEqual_FFirearmDataRowHandleFFirearmDataRowHandle(struct FFirearmDataRowHandle RowHandleA, struct FFirearmDataRowHandle RowHandleB); // Function Icarus.FirearmDataLibrary.EqualEqual_FFirearmDataRowHandleFFirearmDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c8fc0
	bool EqualEqual_EnumEnum(struct FFirearmDataEnum A, struct FFirearmDataEnum B); // Function Icarus.FirearmDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c8d90
	struct FFirearmDataRowHandle CastToFirearmDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FirearmDataLibrary.CastToFirearmDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8b80
	void BreakFirearmDataEnum(struct FFirearmDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FirearmDataLibrary.BreakFirearmDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c8900
	void AddRowToFirearmDataTable(struct UE4::FName Name, struct FFirearmData Data, struct FFirearmDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FirearmDataLibrary.AddRowToFirearmDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c85c0
};

// Class Icarus.FirearmDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFirearmDataTable : UIcarusDataTable {
};

// Class Icarus.FireControllerComponent
// Size: 0x140 (Inherited: 0xb0)
struct UFireControllerComponent : UActorComponent {
	struct AFireInstance* FireInstanceClass; // 0xb0(0x08)
	struct AFireInstanceShadow* FireInstanceShadowClass; // 0xb8(0x08)
	struct FTagQueriesRowHandle CanIgniteFireQueryRowHandle; // 0xc0(0x18)
	struct TArray<struct AFireInstance*> ActiveFireInstances; // 0xd8(0x10)
	struct TArray<struct AFireInstanceShadow*> ActiveFireInstanceShadows; // 0xe8(0x10)
	struct TArray<struct UFlammableInstance*> ActiveFlammableInstances; // 0xf8(0x10)
	struct TArray<struct UFlammableInstance*> DynamicInstances; // 0x108(0x10)
	bool bReplicatedStatesDirty; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
	struct TArray<struct UFlammableComponent*> DebugFlammableClasses; // 0x120(0x10)
	int32_t CurrentFlammableInstanceIndex; // 0x130(0x04)
	char pad_134[0xc]; // 0x134(0x0c)

	void SetDebugFlammableState(struct UFlammableComponent* FlammableClass, bool bState); // Function Icarus.FireControllerComponent.SetDebugFlammableState // (Final|Native|Public|BlueprintCallable) // @ game+0x16cf600
	void SetDebugDisableFires(bool bState); // Function Icarus.FireControllerComponent.SetDebugDisableFires // (Final|Native|Public|BlueprintCallable) // @ game+0x16740d0
	void OnFlammableInstanceState_Destroyed_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireControllerComponent.OnFlammableInstanceState_Destroyed_Enter // (Final|Native|Protected) // @ game+0x16cf070
	void OnFlammableInstanceState_Combusting_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireControllerComponent.OnFlammableInstanceState_Combusting_Enter // (Final|Native|Protected) // @ game+0x16cee00
	void OnFireInstanceShadowDestroyed(struct AActor* DestroyedFireInstance); // Function Icarus.FireControllerComponent.OnFireInstanceShadowDestroyed // (Final|Native|Public) // @ game+0x16cec50
	void OnFireInstanceDestroyed(struct AActor* DestroyedFireInstance); // Function Icarus.FireControllerComponent.OnFireInstanceDestroyed // (Final|Native|Public) // @ game+0x16cebc0
	bool IsDebugDisableFiresEnabled(); // Function Icarus.FireControllerComponent.IsDebugDisableFiresEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1672dd0
	struct TArray<struct UFlammableInstance*> GetFlammableInstancesWithinBiome(struct FBiomesRowHandle Biome); // Function Icarus.FireControllerComponent.GetFlammableInstancesWithinBiome // (Final|Native|Public|BlueprintCallable) // @ game+0x16cdfd0
	struct TArray<struct UFlammableInstance*> GetFlammableInstancesIntersectingBounds(struct FBoxSphereBounds& Bounds); // Function Icarus.FireControllerComponent.GetFlammableInstancesIntersectingBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16cdef0
	struct TArray<struct AFireInstance*> GetFireInstancesIntersectingBounds(struct FBoxSphereBounds& Bounds); // Function Icarus.FireControllerComponent.GetFireInstancesIntersectingBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16cdc50
	bool GetDebugFlammableState(struct UFlammableComponent* FlammableClass); // Function Icarus.FireControllerComponent.GetDebugFlammableState // (Final|Native|Public|BlueprintCallable) // @ game+0x16cdb80
	struct TArray<struct UObject*> GetAllFlammableComponentClasses(); // Function Icarus.FireControllerComponent.GetAllFlammableComponentClasses // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16cdad0
};

// Class Icarus.FireInstanceBase
// Size: 0x2f8 (Inherited: 0x2b0)
struct AFireInstanceBase : AIcarusActor {
	struct UConcaveHullMesh* PropagatedMesh; // 0x2b0(0x08)
	bool bPropagatedMeshDirty; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	float CurrentLifeTime; // 0x2bc(0x04)
	struct TArray<struct UFlammableInstance*> Instances; // 0x2c0(0x10)
	bool bDebugPropagationMesh; // 0x2d0(0x01)
	char pad_2D1[0x3]; // 0x2d1(0x03)
	struct FBoxSphereBounds InstancesBounds; // 0x2d4(0x1c)
	bool bInstanceBoundsDirty; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)

	void OnTransferredTo(struct AFireInstanceBase* Dest, struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnTransferredTo // (Native|Event|Public|BlueprintEvent) // @ game+0x16cf290
	void OnTransferredFrom(struct AFireInstanceBase* Source, struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnTransferredFrom // (Native|Event|Public|BlueprintEvent) // @ game+0x16cf1c0
	void OnPropagatedMeshGenerated(); // Function Icarus.FireInstanceBase.OnPropagatedMeshGenerated // (Native|Event|Public|BlueprintEvent) // @ game+0x910910
	void OnFlammableInstanceState_Destroyed_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireInstanceBase.OnFlammableInstanceState_Destroyed_Enter // (Final|Native|Public) // @ game+0x16cefa0
	void OnFlammableInstanceRemoved(struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnFlammableInstanceRemoved // (Native|Event|Public|BlueprintEvent) // @ game+0x16ced70
	void OnFlammableInstanceAdded(struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnFlammableInstanceAdded // (Native|Event|Public|BlueprintEvent) // @ game+0x16cece0
	struct UFireControllerComponent* GetFireController(); // Function Icarus.FireInstanceBase.GetFireController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16cdc20
	float GetAverageTemperature(); // Function Icarus.FireInstanceBase.GetAverageTemperature // (Final|Native|Public|BlueprintCallable) // @ game+0x16cdb50
	bool CheckBoundsOverlapPropagationMesh(struct FBoxSphereBounds& Bounds); // Function Icarus.FireInstanceBase.CheckBoundsOverlapPropagationMesh // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16cd7e0
};

// Class Icarus.FireInstance
// Size: 0x308 (Inherited: 0x2f8)
struct AFireInstance : AFireInstanceBase {
	float MinTimeBetweenPropagation; // 0x2f8(0x04)
	float MaxTimeBetweenPropagation; // 0x2fc(0x04)
	float NextPropagationTime; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)

	void ResetFirePropagation(); // Function Icarus.FireInstance.ResetFirePropagation // (Final|Native|Public|BlueprintCallable) // @ game+0x16cf400
	void OnFlammableInstanceState_Combusting_Exit(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireInstance.OnFlammableInstanceState_Combusting_Exit // (Final|Native|Public) // @ game+0x16ceed0
};

// Class Icarus.FireInstanceShadow
// Size: 0x310 (Inherited: 0x2f8)
struct AFireInstanceShadow : AFireInstanceBase {
	struct TArray<struct FBox> InstanceBoxes; // 0x2f8(0x10)
	bool bReadyToDestroy; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)
};

// Class Icarus.FishActor
// Size: 0x3f0 (Inherited: 0x2b0)
struct AFishActor : AIcarusActor {
	struct USkeletalMeshComponent* Mesh; // 0x2b0(0x08)
	struct UFishManager* FishManager; // 0x2b8(0x08)
	struct FFishSetupRowHandle FishSetup; // 0x2c0(0x18)
	bool bDead; // 0x2d8(0x01)
	char pad_2D9[0x3]; // 0x2d9(0x03)
	float Scale; // 0x2dc(0x04)
	struct AActor* AttachActor; // 0x2e0(0x08)
	struct FVector_NetQuantize RepLocation; // 0x2e8(0x0c)
	struct FVector_NetQuantize TargetLocation; // 0x2f4(0x0c)
	struct AIcarusPlayerCharacter* AwarenessTarget; // 0x300(0x08)
	float AwarenessTimerInterval; // 0x308(0x04)
	float AwarenessCooldownLength; // 0x30c(0x04)
	float CorrectionVariance; // 0x310(0x04)
	int32_t FindNewTargetAttempts; // 0x314(0x04)
	struct FFishSetup FishSetupData; // 0x318(0xc8)
	struct FTimerHandle AwarenessTimerHandle; // 0x3e0(0x08)
	float NextAwarenessTimestamp; // 0x3e8(0x04)
	char pad_3EC[0x4]; // 0x3ec(0x04)

	void SetScale(float NewScale); // Function Icarus.FishActor.SetScale // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16cf7d0
	void SetDead(bool bNewDead); // Function Icarus.FishActor.SetDead // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16cf570
	void SetAttachActor(struct AActor* NewAttachActor); // Function Icarus.FishActor.SetAttachActor // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16cf4e0
	void OnRep_Scale(); // Function Icarus.FishActor.OnRep_Scale // (Final|Native|Protected) // @ game+0x16cf1a0
	void OnRep_Dead(); // Function Icarus.FishActor.OnRep_Dead // (Final|Native|Protected) // @ game+0x16cf180
	void OnRep_AwarenessTarget(); // Function Icarus.FishActor.OnRep_AwarenessTarget // (Native|Event|Public|BlueprintEvent) // @ game+0x16cf160
	void OnRep_AttachActor(); // Function Icarus.FishActor.OnRep_AttachActor // (Final|Native|Protected) // @ game+0x16cf140
	bool IsAware(); // Function Icarus.FishActor.IsAware // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce550
	bool IsAggressive(); // Function Icarus.FishActor.IsAggressive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce520
	float GetMovementSpeed(); // Function Icarus.FishActor.GetMovementSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ce110
	struct FVector GetGoalLocation(); // Function Icarus.FishActor.GetGoalLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ce0d0
	void BPOnRep_Scale(); // Function Icarus.FishActor.BPOnRep_Scale // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void BPOnRep_Dead(); // Function Icarus.FishActor.BPOnRep_Dead // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void BPOnRep_AttachActor(); // Function Icarus.FishActor.BPOnRep_AttachActor // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void AttackPlayer(struct AIcarusPlayerCharacter* Player); // Function Icarus.FishActor.AttackPlayer // (Native|Event|Public|BlueprintEvent) // @ game+0x16cd4d0
};

// Class Icarus.FishManager
// Size: 0xd8 (Inherited: 0xb0)
struct UFishManager : UActorComponent {
	char pad_B0[0x4]; // 0xb0(0x04)
	bool bFishEnabled; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	struct TArray<struct AFishActor*> TotalFish; // 0xb8(0x10)
	float WaterZHeight; // 0xc8(0x04)
	char pad_CC[0xc]; // 0xcc(0x0c)

	struct FVector_NetQuantize GetNextPoint(); // Function Icarus.FishManager.GetNextPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x16ce140
	void FishRemoved(); // Function Icarus.FishManager.FishRemoved // (Final|Native|Public|BlueprintCallable) // @ game+0x16cdab0
};

// Class Icarus.FishSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFishSetupLibrary : URowLibrary {

	struct FFishSetupRowHandle StructToRowHandle(struct FFishSetupEnum EnumValue); // Function Icarus.FishSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cf990
	struct UE4::FName StructToName(struct FFishSetupEnum EnumValue); // Function Icarus.FishSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cf8f0
	int32_t StructToInt(struct FFishSetupEnum EnumValue); // Function Icarus.FishSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cf850
	struct FFishSetupEnum RowHandleToStruct(struct FFishSetupRowHandle RowHandle); // Function Icarus.FishSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cf420
	void RemoveRowFromFishSetupTable(struct UE4::FName Name); // Function Icarus.FishSetupLibrary.RemoveRowFromFishSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16cf380
	void RefreshConstants(); // Function Icarus.FishSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16cf360
	int32_t NumRows(); // Function Icarus.FishSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ceb90
	bool NotEqual_EnumName(struct FFishSetupEnum A, struct UE4::FName B); // Function Icarus.FishSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ceaa0
	bool NotEqual_EnumEnum(struct FFishSetupEnum A, struct FFishSetupEnum B); // Function Icarus.FishSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce9b0
	struct FFishSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FishSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce920
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FishSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16ce890
	struct FFishSetupRowHandle MakeLiteralFishSetup(struct FFishSetupRowHandle RowHandle); // Function Icarus.FishSetupLibrary.MakeLiteralFishSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce7c0
	struct FFishSetupRowHandle MakeFishSetupFromIndex(int32_t Index); // Function Icarus.FishSetupLibrary.MakeFishSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce730
	struct FFishSetupEnum MakeFishSetupEnum(struct FFishSetupEnum Enum); // Function Icarus.FishSetupLibrary.MakeFishSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce6b0
	struct FFishSetupRowHandle MakeFishSetup(struct UE4::FName RowName); // Function Icarus.FishSetupLibrary.MakeFishSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce610
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FishSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ce580
	struct FFishSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.FishSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ce490
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FishSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ce400
	void GetFishSetupStruct(struct FFishSetupRowHandle RowHandle, struct FFishSetup& FishSetup, enum class EValid& Paths); // Function Icarus.FishSetupLibrary.GetFishSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cdd30
	bool EqualEqual_FFishSetupRowHandleFFishSetupRowHandle(struct FFishSetupRowHandle RowHandleA, struct FFishSetupRowHandle RowHandleB); // Function Icarus.FishSetupLibrary.EqualEqual_FFishSetupRowHandleFFishSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cd970
	bool EqualEqual_EnumEnum(struct FFishSetupEnum A, struct FFishSetupEnum B); // Function Icarus.FishSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cd880
	struct FFishSetupRowHandle CastToFishSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FishSetupLibrary.CastToFishSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cd6c0
	void BreakFishSetupEnum(struct FFishSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FishSetupLibrary.BreakFishSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16cd560
	void AddRowToFishSetupTable(struct UE4::FName Name, struct FFishSetup Data, struct FFishSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FishSetupLibrary.AddRowToFishSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cd2d0
};

// Class Icarus.FishSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFishSetupTable : UIcarusDataTable {
};

// Class Icarus.FlagInterface
// Size: 0x28 (Inherited: 0x28)
struct UFlagInterface : UInterface {

	void SetFlag(struct FFlagsMultiRowHandle& Flag, bool bSet); // Function Icarus.FlagInterface.SetFlag // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16cf6d0
	bool HasFlag(struct FFlagsMultiRowHandle& Flag); // Function Icarus.FlagInterface.HasFlag // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ce340
	bool HasAnyFlags(struct TArray<struct FFlagsMultiRowHandle>& Flags); // Function Icarus.FlagInterface.HasAnyFlags // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ce260
	bool HasAllFlags(struct TArray<struct FFlagsMultiRowHandle>& Flags); // Function Icarus.FlagInterface.HasAllFlags // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ce180
};

// Class Icarus.FlagsMultiRowHandleLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFlagsMultiRowHandleLibrary : UBlueprintFunctionLibrary {

	struct FSessionFlagsRowHandle ToSessionFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle); // Function Icarus.FlagsMultiRowHandleLibrary.ToSessionFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d5790
	struct FCharacterFlagsRowHandle ToCharacterFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle); // Function Icarus.FlagsMultiRowHandleLibrary.ToCharacterFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d56d0
	struct FAccountFlagsRowHandle ToAccountFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle); // Function Icarus.FlagsMultiRowHandleLibrary.ToAccountFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d5610
	bool NotEqual_FlagsMultiRowHandleFSessionFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle, struct FSessionFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.NotEqual_FlagsMultiRowHandleFSessionFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d4570
	bool NotEqual_FlagsMultiRowHandleFlagsMultiRowHandle(struct FFlagsMultiRowHandle A, struct FFlagsMultiRowHandle B); // Function Icarus.FlagsMultiRowHandleLibrary.NotEqual_FlagsMultiRowHandleFlagsMultiRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d46b0
	bool NotEqual_FlagsMultiRowHandleFCharacterFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle, struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.NotEqual_FlagsMultiRowHandleFCharacterFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d4430
	bool NotEqual_FlagsMultiRowHandleFAccountFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle, struct FAccountFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.NotEqual_FlagsMultiRowHandleFAccountFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d42f0
	struct FFlagsMultiRowHandle Make(enum class EFlagsTableType Enum, struct UE4::FName RowName); // Function Icarus.FlagsMultiRowHandleLibrary.Make // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x16d4200
	bool IsValid(struct FFlagsMultiRowHandle MultiRowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.IsValid // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d4150
	bool IsNone(struct FFlagsMultiRowHandle MultiRowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.IsNone // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d40a0
	struct UE4::FName GetTableNameByIndex(char TableIndex); // Function Icarus.FlagsMultiRowHandleLibrary.GetTableNameByIndex // (Final|Native|Static|Public) // @ game+0x16d3bb0
	char GetTableIndexByName(struct UE4::FName TableName); // Function Icarus.FlagsMultiRowHandleLibrary.GetTableIndexByName // (Final|Native|Static|Public) // @ game+0x16d3b20
	void GetSessionFlagsStruct(struct FFlagsMultiRowHandle MultiHandle, struct FSessionFlag& SessionFlagsStruct, enum class EValid& Paths); // Function Icarus.FlagsMultiRowHandleLibrary.GetSessionFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d39b0
	struct FRowMetadata GetMetadata(struct FFlagsMultiRowHandle MultiRowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.GetMetadata // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d37a0
	void GetCharacterFlagsStruct(struct FFlagsMultiRowHandle MultiHandle, struct FCharacterFlag& CharacterFlagsStruct, enum class EValid& Paths); // Function Icarus.FlagsMultiRowHandleLibrary.GetCharacterFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d2fe0
	void GetAccountFlagsStruct(struct FFlagsMultiRowHandle MultiHandle, struct FAccountFlag& AccountFlagsStruct, enum class EValid& Paths); // Function Icarus.FlagsMultiRowHandleLibrary.GetAccountFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d2e70
	struct FFlagsMultiRowHandle FromSessionFlagsRowHandle(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.FromSessionFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d2cc0
	struct FFlagsMultiRowHandle FromCharacterFlagsRowHandle(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.FromCharacterFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d2bf0
	struct FFlagsMultiRowHandle FromAccountFlagsRowHandle(struct FAccountFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.FromAccountFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d2b20
	bool EqualEqual_FlagsMultiRowHandleFSessionFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle, struct FSessionFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.EqualEqual_FlagsMultiRowHandleFSessionFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d2890
	bool EqualEqual_FlagsMultiRowHandleFlagsMultiRowHandle(struct FFlagsMultiRowHandle A, struct FFlagsMultiRowHandle B); // Function Icarus.FlagsMultiRowHandleLibrary.EqualEqual_FlagsMultiRowHandleFlagsMultiRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d29d0
	bool EqualEqual_FlagsMultiRowHandleFCharacterFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle, struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.EqualEqual_FlagsMultiRowHandleFCharacterFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d2750
	bool EqualEqual_FlagsMultiRowHandleFAccountFlagsRowHandle(struct FFlagsMultiRowHandle MultiHandle, struct FAccountFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleLibrary.EqualEqual_FlagsMultiRowHandleFAccountFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d2610
	void Break(struct FFlagsMultiRowHandle MultiRowHandle, enum class EFlagsTableType& OutEnum, struct FName& OutName); // Function Icarus.FlagsMultiRowHandleLibrary.Break // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16d2310
};

// Class Icarus.FlagSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UFlagSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnCharacterFlagsUpdated; // 0x30(0x10)
	struct FMulticastInlineDelegate OnSessionFlagsUpdated; // 0x40(0x10)
	struct FMulticastInlineDelegate OnAccountFlagsUpdated; // 0x50(0x10)

	void ServerSetSessionFlag(struct FSessionFlagsRowHandle& SessionFlag, bool State); // Function Icarus.FlagSubsystem.ServerSetSessionFlag // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5520
	void ServerSetCharacterFlagsForPlayer(struct AIcarusPlayerState* PlayerState, struct TMap<struct FCharacterFlagsRowHandle, bool>& FlagMap); // Function Icarus.FlagSubsystem.ServerSetCharacterFlagsForPlayer // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5390
	void ServerSetCharacterFlagForPlayer(struct AIcarusPlayerState* PlayerState, struct FCharacterFlagsRowHandle& CharacterFlag, bool State); // Function Icarus.FlagSubsystem.ServerSetCharacterFlagForPlayer // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5250
	void ServerSetAccountFlagForPlayer(struct AIcarusPlayerState* PlayerState, struct FAccountFlagsRowHandle& AccountFlag, bool State); // Function Icarus.FlagSubsystem.ServerSetAccountFlagForPlayer // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5110
	bool HasSessionFlag(struct FSessionFlagsRowHandle& SessionFlag); // Function Icarus.FlagSubsystem.HasSessionFlag // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3f90
	bool HasFlagPlayer(struct AIcarusPlayerState* PlayerState, struct FFlagsMultiRowHandle& Flag); // Function Icarus.FlagSubsystem.HasFlagPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3e90
	bool HasCharacterFlagPlayer(struct AIcarusPlayerState* PlayerState, struct FCharacterFlagsRowHandle& CharacterFlag); // Function Icarus.FlagSubsystem.HasCharacterFlagPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3da0
	bool HasAccountFlagPlayer(struct AIcarusPlayerState* PlayerState, struct FAccountFlagsRowHandle& AccountFlag); // Function Icarus.FlagSubsystem.HasAccountFlagPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3cb0
};

// Class Icarus.FlammableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UFlammableComponent : UTraitComponent {
	struct UFlammableInstance* CurrentFlammableInstance; // 0xd0(0x08)
	bool bDebugFlammableInstances; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)

	void OnFlammableInstanceState_Any_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FlammableComponent.OnFlammableInstanceState_Any_Enter // (Native|Event|Public|BlueprintEvent) // @ game+0x16d4a10
	void OnFlammableInstanceDetached(struct UFlammableInstance* Instance); // Function Icarus.FlammableComponent.OnFlammableInstanceDetached // (Native|Event|Public|BlueprintEvent) // @ game+0x1694610
	void OnFlammableInstanceAttached(struct UFlammableInstance* Instance); // Function Icarus.FlammableComponent.OnFlammableInstanceAttached // (Native|Event|Public|BlueprintEvent) // @ game+0x16d48a0
	bool HasStaticMovement(); // Function Icarus.FlammableComponent.HasStaticMovement // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16d4040
	struct FTransform GetWorldTransform(); // Function Icarus.FlammableComponent.GetWorldTransform // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16d3c40
	struct FBoxSphereBounds GetLocalBounds(); // Function Icarus.FlammableComponent.GetLocalBounds // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1612c20
	bool GetFlammableData(struct FFlammableData& OutData); // Function Icarus.FlammableComponent.GetFlammableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d31f0
	float GetCombustionTemperature(); // Function Icarus.FlammableComponent.GetCombustionTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d31c0
	float GetCombustionMaximumTemperature(); // Function Icarus.FlammableComponent.GetCombustionMaximumTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3190
	struct TArray<struct FFlammableTargetIgnite> GatherPropagationIgnitions(struct UFlammableInstance* Instance); // Function Icarus.FlammableComponent.GatherPropagationIgnitions // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x16d2d90
	bool CanPropagateToTarget(struct FFlammableTargetIgnite Target); // Function Icarus.FlammableComponent.CanPropagateToTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16d2530
	bool CanPropagate(enum class EFlammablePropagationType PropagationType); // Function Icarus.FlammableComponent.CanPropagate // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16d24a0
	bool CanIgnite(); // Function Icarus.FlammableComponent.CanIgnite // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16d2470
};

// Class Icarus.FlammableActor
// Size: 0x100 (Inherited: 0xe0)
struct UFlammableActor : UFlammableComponent {
	struct FFlammableRepState ReplicatedState; // 0xe0(0x18)
	bool bReplicatesState; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)

	void OnRep_ReplicatedState(); // Function Icarus.FlammableActor.OnRep_ReplicatedState // (Native|Public) // @ game+0x16d4b90
};

// Class Icarus.FlammableActorFLOD
// Size: 0x110 (Inherited: 0x100)
struct UFlammableActorFLOD : UFlammableActor {
	struct UFLODActorComponent* FLODActorComponent; // 0x100(0x08)
	struct UFlammableFISM* FlammableFISM; // 0x108(0x08)

	void RegisterRecordFlammableFISM(struct UFLODRecord* Record); // Function Icarus.FlammableActorFLOD.RegisterRecordFlammableFISM // (Final|Native|Protected) // @ game+0x16d5080
	void OnUpdateInstanceVisuals(float FireSpread, float FireTemperature); // Function Icarus.FlammableActorFLOD.OnUpdateInstanceVisuals // (Native|Event|Protected|BlueprintEvent) // @ game+0x16d4f20
	void OnRevealing(struct UFLODActorComponent* Component, struct AActor* Actor, struct FTransform& Transform); // Function Icarus.FlammableActorFLOD.OnRevealing // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x16d4dc0
	void OnConceal(struct UFLODActorComponent* Component, struct AActor* Actor); // Function Icarus.FlammableActorFLOD.OnConceal // (Final|Native|Protected) // @ game+0x16d47d0
};

// Class Icarus.FlammableFISM
// Size: 0x348 (Inherited: 0xe0)
struct UFlammableFISM : UFlammableComponent {
	struct UFLODRecord* RegisteredRecord; // 0xe0(0x08)
	struct TMap<int32_t, struct UFlammableInstanceFLOD*> CurrentFlammableInstances; // 0xe8(0x50)
	struct TMap<int32_t, struct FFlammableFISMVisualData> InstanceVisualData; // 0x138(0x50)
	struct TMap<int32_t, struct FFlammableFISMVQueuedVisualData> QueuedInstanceVisualData; // 0x188(0x50)
	struct FFlammableRepStateArray ReplicatedStatesArray; // 0x1d8(0x148)
	bool bReplicatedStatesDirty; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	float VisualFireTemperatureCombustion; // 0x324(0x04)
	float VisualFireTemperatureCombustionAdded; // 0x328(0x04)
	float VisualFireSpreadCombustion; // 0x32c(0x04)
	float VisualFireSpreadCombustionAdded; // 0x330(0x04)
	float VisualFireSpreadLerpSpeed; // 0x334(0x04)
	float VisualFireTemperatureLerpUpSpeed; // 0x338(0x04)
	float VisualFireTemperatureLerpDownSpeed; // 0x33c(0x04)
	float VisualEffectsFireSpreadLerpUpSpeed; // 0x340(0x04)
	float VisualEffectsFireSpreadLerpDownSpeed; // 0x344(0x04)

	bool UpdateQueuedInstanceEffects(int32_t InstanceIndex, struct FFlammableFISMVisualData& VisualData); // Function Icarus.FlammableFISM.UpdateQueuedInstanceEffects // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16d5cd0
	void UpdateInstanceVisualData_Pyrolysis(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData& TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Pyrolysis // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16d5bb0
	void UpdateInstanceVisualData_Detached(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData& TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Detached // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16d5a90
	void UpdateInstanceVisualData_Combustion(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData& TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Combustion // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16d5970
	void UpdateInstanceVisualData_Combusted(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData& TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Combusted // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16d5850
	void RegisterRecord(struct UFLODRecord* RegisteredRecord); // Function Icarus.FlammableFISM.RegisterRecord // (Final|Native|Public) // @ game+0x16d4ff0
	void OnReplicatedStateRemoved(struct FFlammableRepState& State); // Function Icarus.FlammableFISM.OnReplicatedStateRemoved // (Final|Native|Public|HasOutParms) // @ game+0x16d4d10
	void OnReplicatedStateChanged(struct FFlammableRepState& State); // Function Icarus.FlammableFISM.OnReplicatedStateChanged // (Final|Native|Public|HasOutParms) // @ game+0x16d4c60
	void OnReplicatedStateAdded(struct FFlammableRepState& State); // Function Icarus.FlammableFISM.OnReplicatedStateAdded // (Final|Native|Public|HasOutParms) // @ game+0x16d4bb0
	void OnRep_Record(); // Function Icarus.FlammableFISM.OnRep_Record // (Final|Native|Public) // @ game+0x16d4b70
	void OnRecordFISMChanged(struct UFLODRecord* InRecord); // Function Icarus.FlammableFISM.OnRecordFISMChanged // (Final|Native|Public) // @ game+0x16d4ae0
	void OnFlammableInstanceFLODTick(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds); // Function Icarus.FlammableFISM.OnFlammableInstanceFLODTick // (Native|Event|Public|BlueprintEvent) // @ game+0x16d4930
	bool HasValidFISM(); // Function Icarus.FlammableFISM.HasValidFISM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d4070
	struct UFLODRecord* GetRegisteredRecord(); // Function Icarus.FlammableFISM.GetRegisteredRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3990
	struct FTransform GetInstanceWorldTransform(int32_t InstanceIndex); // Function Icarus.FlammableFISM.GetInstanceWorldTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d36f0
	struct FBoxSphereBounds GetInstanceLocalBounds(int32_t InstanceIndex); // Function Icarus.FlammableFISM.GetInstanceLocalBounds // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16d3630
	struct FFlammableRepState GetInstanceFlammableState(int32_t InstanceIndex); // Function Icarus.FlammableFISM.GetInstanceFlammableState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3570
	struct TMap<int32_t, struct FFlammableFISMVisualData> GetInstanceCustomPrimitiveData(); // Function Icarus.FlammableFISM.GetInstanceCustomPrimitiveData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3470
	struct TMap<int32_t, struct UFlammableInstanceFLOD*> GetFlammableInstances(); // Function Icarus.FlammableFISM.GetFlammableInstances // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d3370
	struct UFLODRecord* FindReplacementBurntRecord(); // Function Icarus.FlammableFISM.FindReplacementBurntRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d2af0
};

// Class Icarus.FlammableInstance
// Size: 0x2c0 (Inherited: 0x28)
struct UFlammableInstance : UObject {
	char pad_28[0x80]; // 0x28(0x80)
	struct TMap<int32_t, struct UFlammableInstance*> QueuedAsyncPayloadInstances; // 0xa8(0x50)
	bool bForceNextTickTemperatureUpdate; // 0xf8(0x01)
	bool bDebugInstance; // 0xf9(0x01)
	char pad_FA[0xe]; // 0xfa(0x0e)
	struct UFlammableComponent* FlammableComponent; // 0x108(0x08)
	struct FFlammableTargetIgnite IgnitionTarget; // 0x110(0x30)
	float CurrentInstanceTime; // 0x140(0x04)
	float LastInstanceTime; // 0x144(0x04)
	float CurrentTemperature; // 0x148(0x04)
	float LastTemperatureUpdate; // 0x14c(0x04)
	float CombustionFuelMass; // 0x150(0x04)
	float CurrentHeatRate; // 0x154(0x04)
	struct FBiomesRowHandle CurrentBiome; // 0x158(0x18)
	float EnvironmentTemperature; // 0x170(0x04)
	float ExtinguishStartTime; // 0x174(0x04)
	float ExtinguishRampTimeAmount; // 0x178(0x04)
	float ExtinguishTimeAmount; // 0x17c(0x04)
	struct UFlammableState* CurrentFlammableState; // 0x180(0x08)
	bool bHasInitialized; // 0x188(0x01)
	bool bHasStaticMovement; // 0x189(0x01)
	bool bHeatRateAffectedByTouching; // 0x18a(0x01)
	char pad_18B[0x5]; // 0x18b(0x05)
	struct TMap<enum class EFlammableState, struct UFlammableState*> FlammableStates; // 0x190(0x50)
	struct FBoxSphereBounds CachedWorldBounds; // 0x1e0(0x1c)
	struct FBoxSphereBounds CachedLocalBounds; // 0x1fc(0x1c)
	char pad_218[0x8]; // 0x218(0x08)
	struct FTransform CachedWorldTransform; // 0x220(0x30)
	struct TMap<struct UFlammableInstance*, struct FBox> CachedInstanceTouchingBoxes; // 0x250(0x50)
	char pad_2A0[0x20]; // 0x2a0(0x20)

	void SetFlammableState(enum class EFlammableState FlammableState, bool bAllowClient); // Function Icarus.FlammableInstance.SetFlammableState // (Final|Native|Public|BlueprintCallable) // @ game+0x16de4c0
	bool IsValidFlammable(); // Function Icarus.FlammableInstance.IsValidFlammable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xa123e0
	bool IsExtinguished(); // Function Icarus.FlammableInstance.IsExtinguished // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dd060
	bool IsCurrentState(enum class EFlammableState FlammableState); // Function Icarus.FlammableInstance.IsCurrentState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dcfd0
	struct FTransform GetFlammableWorldTransform(); // Function Icarus.FlammableInstance.GetFlammableWorldTransform // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dce60
	struct FBoxSphereBounds GetFlammableWorldBounds(); // Function Icarus.FlammableInstance.GetFlammableWorldBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dcd60
	struct UFlammableState* GetFlammableState(enum class EFlammableState FlammableState); // Function Icarus.FlammableInstance.GetFlammableState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dcb40
	struct FBoxSphereBounds GetFlammablePropagationBounds(); // Function Icarus.FlammableInstance.GetFlammablePropagationBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dcaf0
	struct FBoxSphereBounds GetFlammableLocalBounds(); // Function Icarus.FlammableInstance.GetFlammableLocalBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dcab0
	struct UFireControllerComponent* GetFireController(); // Function Icarus.FlammableInstance.GetFireController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dc920
	float GetCurrentFlammableStateElapsedTime(); // Function Icarus.FlammableInstance.GetCurrentFlammableStateElapsedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dc8f0
	float GetCombustionTemperature(); // Function Icarus.FlammableInstance.GetCombustionTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dc8c0
	float GetCombustionMaximumTemperature(); // Function Icarus.FlammableInstance.GetCombustionMaximumTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dc890
	struct TArray<struct UFlammableState*> GetAllFlammableStates(); // Function Icarus.FlammableInstance.GetAllFlammableStates // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16dc810
	void Extinguish(float InExtinguishRampTimeAmount, float InExtinguishTimeAmount, bool bStopCombustionImmediately); // Function Icarus.FlammableInstance.Extinguish // (Final|Native|Public|BlueprintCallable) // @ game+0x16dc550
	void DebugVisualStats(float DeltaSeconds); // Function Icarus.FlammableInstance.DebugVisualStats // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x16dc180
};

// Class Icarus.FlammableInstanceFLOD
// Size: 0x2d0 (Inherited: 0x2c0)
struct UFlammableInstanceFLOD : UFlammableInstance {
	struct UFlammableFISM* FlammableFISMComponent; // 0x2b8(0x08)
	int32_t InstanceIndex; // 0x2c0(0x04)
	struct UFlammableActorFLOD* FlammableFLODActor; // 0x2c8(0x08)
};

// Class Icarus.FlammableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFlammableLibrary : URowLibrary {

	struct FFlammableRowHandle StructToRowHandle(struct FFlammableEnum EnumValue); // Function Icarus.FlammableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de6d0
	struct UE4::FName StructToName(struct FFlammableEnum EnumValue); // Function Icarus.FlammableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de630
	int32_t StructToInt(struct FFlammableEnum EnumValue); // Function Icarus.FlammableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de590
	struct FFlammableEnum RowHandleToStruct(struct FFlammableRowHandle RowHandle); // Function Icarus.FlammableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de400
	void RemoveRowFromFlammableTable(struct UE4::FName Name); // Function Icarus.FlammableLibrary.RemoveRowFromFlammableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16de380
	void RefreshConstants(); // Function Icarus.FlammableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16de360
	int32_t NumRows(); // Function Icarus.FlammableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de330
	bool NotEqual_EnumName(struct FFlammableEnum A, struct UE4::FName B); // Function Icarus.FlammableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de120
	bool NotEqual_EnumEnum(struct FFlammableEnum A, struct FFlammableEnum B); // Function Icarus.FlammableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16de030
	struct FFlammableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FlammableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ddfa0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FlammableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16ddf10
	struct FFlammableRowHandle MakeLiteralFlammable(struct FFlammableRowHandle RowHandle); // Function Icarus.FlammableLibrary.MakeLiteralFlammable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dde40
	struct FFlammableRowHandle MakeFlammableFromIndex(int32_t Index); // Function Icarus.FlammableLibrary.MakeFlammableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd240
	struct FFlammableEnum MakeFlammableEnum(struct FFlammableEnum Enum); // Function Icarus.FlammableLibrary.MakeFlammableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd1c0
	struct FFlammableRowHandle MakeFlammable(struct UE4::FName RowName); // Function Icarus.FlammableLibrary.MakeFlammable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd120
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FlammableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16dd090
	struct FFlammableEnum IntToStruct(int32_t IntValue); // Function Icarus.FlammableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dcf40
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FlammableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16dceb0
	void GetFlammableStruct(struct FFlammableRowHandle RowHandle, struct FFlammableData& Flammable, enum class EValid& Paths); // Function Icarus.FlammableLibrary.GetFlammableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16dcbd0
	bool EqualEqual_FFlammableRowHandleFFlammableRowHandle(struct FFlammableRowHandle RowHandleA, struct FFlammableRowHandle RowHandleB); // Function Icarus.FlammableLibrary.EqualEqual_FFlammableRowHandleFFlammableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc2f0
	bool EqualEqual_EnumEnum(struct FFlammableEnum A, struct FFlammableEnum B); // Function Icarus.FlammableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc200
	struct FFlammableRowHandle CastToFlammableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FlammableLibrary.CastToFlammableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16dc060
	void BreakFlammableEnum(struct FFlammableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FlammableLibrary.BreakFlammableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dbe00
	void AddRowToFlammableTable(struct UE4::FName Name, struct FFlammableData Data, struct FFlammableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FlammableLibrary.AddRowToFlammableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16dbc20
};

// Class Icarus.FlammableState
// Size: 0x30 (Inherited: 0x28)
struct UFlammableState : UObject {
	struct FMulticastSparseDelegate OnInit; // 0x28(0x01)
	struct FMulticastSparseDelegate OnEnter; // 0x29(0x01)
	struct FMulticastSparseDelegate OnExit; // 0x2a(0x01)
	struct FMulticastSparseDelegate OnTick; // 0x2b(0x01)
	float EnterStateTime; // 0x2c(0x04)

	enum class EFlammableState GetFlammableState(); // Function Icarus.FlammableState.GetFlammableState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x112a560
};

// Class Icarus.FlammableState_Detached
// Size: 0x30 (Inherited: 0x30)
struct UFlammableState_Detached : UFlammableState {
};

// Class Icarus.FlammableState_Pyrolysis
// Size: 0x30 (Inherited: 0x30)
struct UFlammableState_Pyrolysis : UFlammableState {
};

// Class Icarus.FlammableState_Combusting
// Size: 0x40 (Inherited: 0x30)
struct UFlammableState_Combusting : UFlammableState {
	float FuelMassRemaining; // 0x30(0x04)
	float NextPropagateSelfTime; // 0x34(0x04)
	float HeatOfCombustion; // 0x38(0x04)
	bool bInfiniteCombustionFuel; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Icarus.FlammableState_Combusted
// Size: 0x38 (Inherited: 0x30)
struct UFlammableState_Combusted : UFlammableState {
	bool bDetachAfterCombusted; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Icarus.FlammableState_Destroyed
// Size: 0x30 (Inherited: 0x30)
struct UFlammableState_Destroyed : UFlammableState {
};

// Class Icarus.FlammableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFlammableTable : UIcarusDataTable {
};

// Class Icarus.FlammableTargetFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFlammableTargetFunctionLibrary : UBlueprintFunctionLibrary {

	bool TryIgniteFlammableTarget(struct UObject* WorldContextObject, struct FFlammableTargetIgnite& Target, struct UFlammableInstance*& OutInstance); // Function Icarus.FlammableTargetFunctionLibrary.TryIgniteFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16de8e0
	enum class EFireExtinguishResult TryExtinguishFlammableTarget(struct UObject* WorldContextObject, struct FFlammableTargetExtinguish& Target, struct UFlammableInstance*& OutFlammableInstance); // Function Icarus.FlammableTargetFunctionLibrary.TryExtinguishFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16de780
	bool NotEqual_FlammableTargetFlammableTarget(struct FFlammableTarget& A, struct FFlammableTarget& B); // Function Icarus.FlammableTargetFunctionLibrary.NotEqual_FlammableTargetFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16de210
	struct FFlammableTargetIgnite MakeFlammableTargetIgniteFromInstance(struct AActor* Causer, struct UFlammableInstance* Instance, float DesiredTemperatureValue, bool bFromPropagation); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetIgniteFromInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ddcb0
	struct FFlammableTargetIgnite MakeFlammableTargetIgniteFromHitResult(struct AActor* Causer, struct FHitResult HitResult, float DesiredTemperatureValue, bool bFromPropagation); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetIgniteFromHitResult // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dda90
	struct FFlammableTargetIgnite MakeFlammableTargetIgniteFromActor(struct AActor* Causer, struct AActor* Actor, float DesiredTemperatureValue, bool bFromPropagation); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetIgniteFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd900
	struct FFlammableTargetExtinguish MakeFlammableTargetExtinguishFromInstance(struct AActor* Causer, struct UFlammableInstance* Instance, float ExtinguishRampTime, float ExtinguishTime, bool bStopCombustionImmediately); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetExtinguishFromInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd720
	struct FFlammableTargetExtinguish MakeFlammableTargetExtinguishFromHitResult(struct AActor* Causer, struct FHitResult HitResult, float ExtinguishRampTime, float ExtinguishTime, bool bStopCombustionImmediately); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetExtinguishFromHitResult // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd4b0
	struct FFlammableTargetExtinguish MakeFlammableTargetExtinguishFromActor(struct AActor* Causer, struct AActor* Actor, float ExtinguishRampTime, float ExtinguishTime, bool bStopCombustionImmediately); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetExtinguishFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd2d0
	struct FBoxSphereBounds GetFlammableWorldBoundsFromTarget(struct FFlammableTarget& Target); // Function Icarus.FlammableTargetFunctionLibrary.GetFlammableWorldBoundsFromTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x16dcda0
	struct UFlammableInstance* GetFlammableInstanceFromTarget(struct FFlammableTarget& Target); // Function Icarus.FlammableTargetFunctionLibrary.GetFlammableInstanceFromTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dca00
	struct UFlammableComponent* GetFlammableComponentFromTarget(struct FFlammableTarget& Target); // Function Icarus.FlammableTargetFunctionLibrary.GetFlammableComponentFromTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dc950
	struct FFlammableTarget FlammableTargetIgniteToFlammableTarget(struct FFlammableTargetIgnite& Target); // Function Icarus.FlammableTargetFunctionLibrary.FlammableTargetIgniteToFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dc740
	struct FFlammableTarget FlammableTargetExtinguishToFlammableTarget(struct FFlammableTargetExtinguish& Target); // Function Icarus.FlammableTargetFunctionLibrary.FlammableTargetExtinguishToFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dc670
	bool EqualEqual_FlammableTargetFlammableTarget(struct FFlammableTarget& A, struct FFlammableTarget& B); // Function Icarus.FlammableTargetFunctionLibrary.EqualEqual_FlammableTargetFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dc430
	bool CanIgniteFlammableTarget(struct UObject* WorldContextObject, struct FFlammableTargetIgnite& Target); // Function Icarus.FlammableTargetFunctionLibrary.CanIgniteFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16dbf60
};

// Class Icarus.FloatableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFloatableLibrary : URowLibrary {

	struct FFloatableRowHandle StructToRowHandle(struct FFloatableEnum EnumValue); // Function Icarus.FloatableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e4220
	struct UE4::FName StructToName(struct FFloatableEnum EnumValue); // Function Icarus.FloatableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e40d0
	int32_t StructToInt(struct FFloatableEnum EnumValue); // Function Icarus.FloatableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3f90
	struct FFloatableEnum RowHandleToStruct(struct FFloatableRowHandle RowHandle); // Function Icarus.FloatableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3e30
	void RemoveRowFromFloatableTable(struct UE4::FName Name); // Function Icarus.FloatableLibrary.RemoveRowFromFloatableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e3950
	void RefreshConstants(); // Function Icarus.FloatableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16e3800
	int32_t NumRows(); // Function Icarus.FloatableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3580
	bool NotEqual_EnumName(struct FFloatableEnum A, struct UE4::FName B); // Function Icarus.FloatableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3460
	bool NotEqual_EnumEnum(struct FFloatableEnum A, struct FFloatableEnum B); // Function Icarus.FloatableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3280
	struct FFloatableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FloatableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3100
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FloatableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16e2fe0
	struct FFloatableRowHandle MakeLiteralFloatable(struct FFloatableRowHandle RowHandle); // Function Icarus.FloatableLibrary.MakeLiteralFloatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2e80
	struct FFloatableRowHandle MakeFloatableFromIndex(int32_t Index); // Function Icarus.FloatableLibrary.MakeFloatableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2d20
	struct FFloatableEnum MakeFloatableEnum(struct FFloatableEnum Enum); // Function Icarus.FloatableLibrary.MakeFloatableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2ca0
	struct FFloatableRowHandle MakeFloatable(struct UE4::FName RowName); // Function Icarus.FloatableLibrary.MakeFloatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2c00
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FloatableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16e29c0
	struct FFloatableEnum IntToStruct(int32_t IntValue); // Function Icarus.FloatableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2870
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FloatableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16e2750
	void GetFloatableStruct(struct FFloatableRowHandle RowHandle, struct FFloatableData& Floatable, enum class EValid& Paths); // Function Icarus.FloatableLibrary.GetFloatableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e2450
	bool EqualEqual_FFloatableRowHandleFFloatableRowHandle(struct FFloatableRowHandle RowHandleA, struct FFloatableRowHandle RowHandleB); // Function Icarus.FloatableLibrary.EqualEqual_FFloatableRowHandleFFloatableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1ec0
	bool EqualEqual_EnumEnum(struct FFloatableEnum A, struct FFloatableEnum B); // Function Icarus.FloatableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1c90
	struct FFloatableRowHandle CastToFloatableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FloatableLibrary.CastToFloatableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1980
	void BreakFloatableEnum(struct FFloatableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FloatableLibrary.BreakFloatableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e1700
	void AddRowToFloatableTable(struct UE4::FName Name, struct FFloatableData Data, struct FFloatableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FloatableLibrary.AddRowToFloatableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1330
};

// Class Icarus.FloatableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFloatableTable : UIcarusDataTable {
};

// Class Icarus.FLOD
// Size: 0x2f0 (Inherited: 0x220)
struct AFLOD : AInfo {
	struct TArray<struct FFLODDescription> Descriptions; // 0x220(0x10)
	bool bDebugStats; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	struct UE4::FName DebugTileName; // 0x234(0x08)
	bool bDisabled; // 0x23c(0x01)
	char pad_23D[0x3]; // 0x23d(0x03)
	struct AFLODTile* TileClass; // 0x240(0x08)
	struct TArray<struct AFLODTile*> Tiles; // 0x248(0x10)
	struct TArray<struct UFLODActorPool*> ActorPools; // 0x258(0x10)
	struct TArray<struct UFLODInfluenceComponent*> RegisteredInfluences; // 0x268(0x10)
	struct TSet<struct FFLODInstanceInfluence> PreviousActiveInfluencedInstances; // 0x278(0x50)
	bool bHasInitialisedDescriptions; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct TArray<struct FPendingRegisterFISM> PendingRegisterFISMs; // 0x2d0(0x10)
	struct FTimerHandle ResolvePendingRegisterFISMsCallTimer; // 0x2e0(0x08)
	struct UFLODRecorderComponent* Recorder; // 0x2e8(0x08)

	void OnRep_FLODTileActors(); // Function Icarus.FLOD.OnRep_FLODTileActors // (Final|Native|Protected) // @ game+0x16e3730
	void OnPooledActorSpawned(struct UFLODActorPool* ActorPool, struct FFLODLevelDescription& LevelDesc, struct AActor* SpawnedPooledActor); // Function Icarus.FLOD.OnPooledActorSpawned // (Final|Native|Public|HasOutParms) // @ game+0x16e35b0
	bool IsReady(); // Function Icarus.FLOD.IsReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16e2900
	struct TArray<struct AFLODTile*> GetWithinBoundsFLODTiles(struct FVector& Location); // Function Icarus.FLOD.GetWithinBoundsFLODTiles // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x16e25e0
	struct FFLODDescriptionDVInfo GetDescriptionDataValidation(struct FFLODDescription& Description); // Function Icarus.FLOD.GetDescriptionDataValidation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e20a0
	struct FFLODDescription FindFLODDescriptionForFISM(struct UFLODFISMComponent* FISM); // Function Icarus.FLOD.FindFLODDescriptionForFISM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16e2000
};

// Class Icarus.FLODActorComponent
// Size: 0x128 (Inherited: 0xb0)
struct UFLODActorComponent : UActorComponent {
	bool bSpawnedFromPool; // 0xb0(0x01)
	enum class EFLODActorState CurrentFLODState; // 0xb1(0x01)
	bool bIsReservingInstance; // 0xb2(0x01)
	char pad_B3[0x1]; // 0xb3(0x01)
	struct FFLODActorRecordInstance RecordInstance; // 0xb4(0x1c)
	struct FMulticastInlineDelegate OnRecordInstanceAssigned; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnRevealing; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnReveal; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnConcealing; // 0x100(0x10)
	struct FMulticastInlineDelegate OnConceal; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	bool RevealingImpl(struct FTransform& Transform); // Function Icarus.FLODActorComponent.RevealingImpl // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x16e3c90
	void Revealing(struct FTransform& Transform); // Function Icarus.FLODActorComponent.Revealing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x16e3bb0
	bool RevealImpl(struct FTransform& Transform); // Function Icarus.FLODActorComponent.RevealImpl // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x16e3ad0
	void Reveal(struct FTransform& Transform); // Function Icarus.FLODActorComponent.Reveal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x16e39f0
	void ReserveInstance(); // Function Icarus.FLODActorComponent.ReserveInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x16e39d0
	void ReleaseInstance(); // Function Icarus.FLODActorComponent.ReleaseInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x16e3820
	bool ConcealingImpl(); // Function Icarus.FLODActorComponent.ConcealingImpl // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16b1800
	void Concealing(); // Function Icarus.FLODActorComponent.Concealing // (Final|Native|Public|BlueprintCallable) // @ game+0x16e1ae0
	bool ConcealImpl(); // Function Icarus.FLODActorComponent.ConcealImpl // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1636c70
	void Conceal(); // Function Icarus.FLODActorComponent.Conceal // (Final|Native|Public|BlueprintCallable) // @ game+0x16e1ac0
};

// Class Icarus.FLODActorPool
// Size: 0x48 (Inherited: 0x28)
struct UFLODActorPool : UObject {
	struct AActor* ActorClass; // 0x28(0x08)
	int32_t InstancesInUse; // 0x30(0x04)
	int32_t InitBucketSize; // 0x34(0x04)
	struct TArray<struct AActor*> FreeBucket; // 0x38(0x10)

	void OnRetrievedActorDestroyed(struct AActor* DestroyedActor); // Function Icarus.FLODActorPool.OnRetrievedActorDestroyed // (Final|Native|Protected) // @ game+0x16e3750
	struct UFLODActorPool* DeterminePoolForActorClass(struct AActor*& ActorClass); // Function Icarus.FLODActorPool.DeterminePoolForActorClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1b00
};

// Class Icarus.FLODTreePrefabPool
// Size: 0x50 (Inherited: 0x48)
struct UFLODTreePrefabPool : UFLODActorPool {
	struct ATreePrefab* TreePrefab; // 0x48(0x08)
};

// Class Icarus.UFLODItemActorPool
// Size: 0x48 (Inherited: 0x48)
struct UUFLODItemActorPool : UFLODActorPool {
};

// Class Icarus.FLODDescriptionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFLODDescriptionsLibrary : URowLibrary {

	struct FFLODDescriptionsRowHandle StructToRowHandle(struct FFLODDescriptionsEnum EnumValue); // Function Icarus.FLODDescriptionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e4170
	struct UE4::FName StructToName(struct FFLODDescriptionsEnum EnumValue); // Function Icarus.FLODDescriptionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e4030
	int32_t StructToInt(struct FFLODDescriptionsEnum EnumValue); // Function Icarus.FLODDescriptionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3ef0
	struct FFLODDescriptionsEnum RowHandleToStruct(struct FFLODDescriptionsRowHandle RowHandle); // Function Icarus.FLODDescriptionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3d70
	void RemoveRowFromFLODDescriptionsTable(struct UE4::FName Name); // Function Icarus.FLODDescriptionsLibrary.RemoveRowFromFLODDescriptionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e38d0
	void RefreshConstants(); // Function Icarus.FLODDescriptionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16e37e0
	int32_t NumRows(); // Function Icarus.FLODDescriptionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3550
	bool NotEqual_EnumName(struct FFLODDescriptionsEnum A, struct UE4::FName B); // Function Icarus.FLODDescriptionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3370
	bool NotEqual_EnumEnum(struct FFLODDescriptionsEnum A, struct FFLODDescriptionsEnum B); // Function Icarus.FLODDescriptionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3190
	struct FFLODDescriptionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FLODDescriptionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3070
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FLODDescriptionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16e2f50
	struct FFLODDescriptionsRowHandle MakeLiteralFLODDescriptions(struct FFLODDescriptionsRowHandle RowHandle); // Function Icarus.FLODDescriptionsLibrary.MakeLiteralFLODDescriptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2db0
	struct FFLODDescriptionsRowHandle MakeFLODDescriptionsFromIndex(int32_t Index); // Function Icarus.FLODDescriptionsLibrary.MakeFLODDescriptionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2b70
	struct FFLODDescriptionsEnum MakeFLODDescriptionsEnum(struct FFLODDescriptionsEnum Enum); // Function Icarus.FLODDescriptionsLibrary.MakeFLODDescriptionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2af0
	struct FFLODDescriptionsRowHandle MakeFLODDescriptions(struct UE4::FName RowName); // Function Icarus.FLODDescriptionsLibrary.MakeFLODDescriptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2a50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FLODDescriptionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16e2930
	struct FFLODDescriptionsEnum IntToStruct(int32_t IntValue); // Function Icarus.FLODDescriptionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e27e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FLODDescriptionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16e26c0
	void GetFLODDescriptionsStruct(struct FFLODDescriptionsRowHandle RowHandle, struct FFLODDescription& FLODDescriptions, enum class EValid& Paths); // Function Icarus.FLODDescriptionsLibrary.GetFLODDescriptionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e2150
	bool EqualEqual_FFLODDescriptionsRowHandleFFLODDescriptionsRowHandle(struct FFLODDescriptionsRowHandle RowHandleA, struct FFLODDescriptionsRowHandle RowHandleB); // Function Icarus.FLODDescriptionsLibrary.EqualEqual_FFLODDescriptionsRowHandleFFLODDescriptionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1d80
	bool EqualEqual_EnumEnum(struct FFLODDescriptionsEnum A, struct FFLODDescriptionsEnum B); // Function Icarus.FLODDescriptionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1ba0
	struct FFLODDescriptionsRowHandle CastToFLODDescriptionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FLODDescriptionsLibrary.CastToFLODDescriptionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1860
	void BreakFLODDescriptionsEnum(struct FFLODDescriptionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FLODDescriptionsLibrary.BreakFLODDescriptionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e15a0
	void AddRowToFLODDescriptionsTable(struct UE4::FName Name, struct FFLODDescription Data, struct FFLODDescriptionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FLODDescriptionsLibrary.AddRowToFLODDescriptionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1160
};

// Class Icarus.FLODDescriptionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFLODDescriptionsTable : UIcarusDataTable {
};

// Class Icarus.FLODFISMComponent
// Size: 0x750 (Inherited: 0x6a0)
struct UFLODFISMComponent : UFoliageInstancedStaticMeshComponent {
	int32_t RegisteredRecordIndex; // 0x6a0(0x04)
	struct TWeakObjectPtr<struct AFLODTile> RegisteredFLODTile; // 0x6a4(0x08)
	struct TWeakObjectPtr<struct UFlammableFISM> RegisteredFlammable; // 0x6ac(0x08)
	char pad_6B4[0x4]; // 0x6b4(0x04)
	struct FGameplayTagContainer GameplayTags; // 0x6b8(0x20)
	struct UFoliageType* CachedFoliageType; // 0x6d8(0x08)
	char pad_6E0[0x70]; // 0x6e0(0x70)

	bool HasRegisteredToFLOD(); // Function Icarus.FLODFISMComponent.HasRegisteredToFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16edde0
	struct UE4::FName GetLevelTileName(); // Function Icarus.FLODFISMComponent.GetLevelTileName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16edd10
};

// Class Icarus.FLODInfluenceComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UFLODInfluenceComponent : UActorComponent {
	bool bTryRegisterSelf; // 0xb0(0x01)
	bool bHasRegisteredAsInfluence; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
	struct TArray<struct FFLODInstanceInfluence> ActiveInstanceInfluences; // 0xb8(0x10)

	void UpdateActiveInfluences(); // Function Icarus.FLODInfluenceComponent.UpdateActiveInfluences // (Native|Event|Protected|BlueprintEvent) // @ game+0x16e42d0
	void UpdateActiveInfluencedInstance(struct FFLODInstanceID& InstanceId, int32_t InfluenceLevelIndex, float TimeoutDuration); // Function Icarus.FLODInfluenceComponent.UpdateActiveInfluencedInstance // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x16ee590
	void UnregisterInfluence(); // Function Icarus.FLODInfluenceComponent.UnregisterInfluence // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1613bb0
	bool RemoveActiveInstanceInfluence(struct FFLODInstanceInfluence& InstanceInfluence); // Function Icarus.FLODInfluenceComponent.RemoveActiveInstanceInfluence // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x16ee210
	bool RegisterInfluence(); // Function Icarus.FLODInfluenceComponent.RegisterInfluence // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x16ee1e0
	void OnActiveInfluencedInstanceUpdated(struct FFLODInstanceInfluence& InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceUpdated // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16ee0f0
	void OnActiveInfluencedInstanceTimeout(struct FFLODInstanceInfluence& InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceTimeout // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16ee040
	void OnActiveInfluencedInstanceRemoved(struct FFLODInstanceInfluence& InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceRemoved // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16edf90
	void OnActiveInfluencedInstanceAdded(struct FFLODInstanceInfluence& InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceAdded // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16edee0
	bool HasRegisteredToFLOD(); // Function Icarus.FLODInfluenceComponent.HasRegisteredToFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ede10
	struct TArray<struct FFLODInstanceInfluence> GetActiveInstanceInfluences(); // Function Icarus.FLODInfluenceComponent.GetActiveInstanceInfluences // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ed970
};

// Class Icarus.FLODInfluenceDistance
// Size: 0xd0 (Inherited: 0xc8)
struct UFLODInfluenceDistance : UFLODInfluenceComponent {
	float DistanceInfluenceTimeout; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Icarus.FLODInfluencePlayer
// Size: 0xe0 (Inherited: 0xd0)
struct UFLODInfluencePlayer : UFLODInfluenceDistance {
	float ViewTraceInfluenceTimeout; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct AIcarusPlayerController* RegisteredIcarusPlayerController; // 0xd8(0x08)
};

// Class Icarus.FLODLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFLODLibrary : UBlueprintFunctionLibrary {

	struct TArray<struct FFLODInstanceID> GetFLODInstancesOverlappingSphere(struct UObject* WorldContextObject, struct FVector& Location, float Radius, struct FGameplayTagQuery& TagQuery, bool bIncludeDestroyed); // Function Icarus.FLODLibrary.GetFLODInstancesOverlappingSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x16edad0
	struct AFLOD* GetFLOD(struct UObject* WorldContextObject); // Function Icarus.FLODLibrary.GetFLOD // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16eda40
	struct AActor* FindActorFromInstanceID(struct FFLODInstanceID& InstanceId, char StateMask); // Function Icarus.FLODLibrary.FindActorFromInstanceID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ed730
	bool EqualEqual_FFLODInstanceIDFFLODInstanceID(struct FFLODInstanceID A, struct FFLODInstanceID B); // Function Icarus.FLODLibrary.EqualEqual_FFLODInstanceIDFFLODInstanceID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed630
	bool EqualEqual_FFLODInstanceFFLODInstance(struct FFLODRecordInstance A, struct FFLODRecordInstance B); // Function Icarus.FLODLibrary.EqualEqual_FFLODInstanceFFLODInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed4c0
};

// Class Icarus.FLODRecord
// Size: 0x5b8 (Inherited: 0x28)
struct UFLODRecord : UObject {
	struct FMulticastSparseDelegate OnRecordFISMChanged; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t RecordIndex; // 0x2c(0x04)
	struct AFLODTile* Owner; // 0x30(0x08)
	struct TWeakObjectPtr<struct UFLODFISMComponent> RegisteredFISM; // 0x38(0x08)
	struct TArray<int32_t> ActorPoolIndices; // 0x40(0x10)
	struct TArray<struct FFLODRecordInstanceIndices> DesiredLevelStates; // 0x50(0x10)
	struct FFLODRecordStateView CurrentStateView; // 0x60(0xc0)
	struct FFLODRecordStateView TargetStateView; // 0x120(0xc0)
	struct FFLODRecordStateView PristineStateView; // 0x1e0(0xc0)
	bool bHasInitialized; // 0x2a0(0x01)
	enum class ENetRole RecordRole; // 0x2a1(0x01)
	char pad_2A2[0x6]; // 0x2a2(0x06)
	struct TArray<uint32_t> DestroyedInstanceData; // 0x2a8(0x10)
	struct FFLODRecordInstanceArray ReplicatedInstanceArray; // 0x2b8(0x148)
	struct TArray<struct FFLODRecordInstance> SanitizedInstances; // 0x400(0x10)
	struct FFLODRecordDynamicInstanceArray ReplicatedDynamicInstanceArray; // 0x410(0x148)
	struct TArray<struct FFLODRecordDynamicInstance> SanitizedDynamicInstances; // 0x558(0x10)
	bool bCheckPendingInstanceChanges; // 0x568(0x01)
	char pad_569[0x3]; // 0x569(0x03)
	int32_t CheckPendingInstanceChangesFrame; // 0x56c(0x04)
	struct TArray<struct FFLODRecordPendingInstanceChange> PendingInstanceChanges; // 0x570(0x10)
	struct FFLODRecordInstanceChangeSet ActiveInstanceChangeSet; // 0x580(0x30)
	char pad_5B0[0x8]; // 0x5b0(0x08)

	void SetPristineStateViewModified(); // Function Icarus.FLODRecord.SetPristineStateViewModified // (Final|Native|Public|BlueprintCallable) // @ game+0x16ee460
	void RestoreInstances(struct TArray<int32_t> RestoreIndices); // Function Icarus.FLODRecord.RestoreInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x16ee2d0
	void OnRep_DestroyedInstanceData(); // Function Icarus.FLODRecord.OnRep_DestroyedInstanceData // (Final|Native|Private) // @ game+0x16ee1a0
	bool HasRegisteredFISM(); // Function Icarus.FLODRecord.HasRegisteredFISM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16eddb0
	struct AFLOD* GetOwnerFLOD(); // Function Icarus.FLODRecord.GetOwnerFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16edd80
	struct FFLODDescription GetDescription(); // Function Icarus.FLODRecord.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16eda00
	void DestroyInstances(struct TArray<int32_t> DestroyIndices); // Function Icarus.FLODRecord.DestroyInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x16ed3c0
	int32_t AddDynamicInstance(struct FTransform& Transform); // Function Icarus.FLODRecord.AddDynamicInstance // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x16ed210
};

// Class Icarus.FLODRecorderComponent
// Size: 0xe0 (Inherited: 0xd8)
struct UFLODRecorderComponent : UIcarusStateRecorderComponent {
	struct FFLODRecorderRecord Record; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class Icarus.FLODRewardComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UFLODRewardComponent : UActorComponent {
	struct FItemRewardsRowHandle ItemRewards; // 0xb0(0x18)
};

// Class Icarus.FLODTile
// Size: 0x2d8 (Inherited: 0x220)
struct AFLODTile : AInfo {
	struct UE4::FName TileName; // 0x220(0x08)
	float RelevanceRadius; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct AFLODTileBehaviourHarness* BehaviourHarness; // 0x230(0x08)
	struct TMap<int32_t, struct UFLODRecord*> Records; // 0x238(0x50)
	bool bDebugInstancesCurrent; // 0x288(0x01)
	bool bDebugInstancesCurrentAdv; // 0x289(0x01)
	bool bDebugStats; // 0x28a(0x01)
	char pad_28B[0x1]; // 0x28b(0x01)
	int32_t DebugRecordIndex; // 0x28c(0x04)
	struct TArray<struct UMaterialInterface*> DebugInstanceCurrentMaterials; // 0x290(0x10)
	char pad_2A0[0x18]; // 0x2a0(0x18)
	struct TArray<struct UFLODRecord*> ReplicatedRecords; // 0x2b8(0x10)
	bool bReadingGameStateFromDatabase; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UFLODTileRecorderComponent* Recorder; // 0x2d0(0x08)

	int32_t SwapRecordInstance(struct UFLODRecord* SourceRecord, struct UFLODRecord* TargetRecord, int32_t InstanceIndex); // Function Icarus.FLODTile.SwapRecordInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x16ee480
	void SetDebugInstancesCurrent(bool bState); // Function Icarus.FLODTile.SetDebugInstancesCurrent // (Final|Native|Public|BlueprintCallable) // @ game+0x16ee3d0
	void OnRep_ReplicatedRecords(); // Function Icarus.FLODTile.OnRep_ReplicatedRecords // (Final|Native|Protected) // @ game+0x16ee1c0
	bool IsBasedOnLandscapeProxy(struct ALandscapeProxy* LandscapeProxy); // Function Icarus.FLODTile.IsBasedOnLandscapeProxy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ede40
	struct AFLOD* GetOwnerFLOD(); // Function Icarus.FLODTile.GetOwnerFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16edd50
	struct UFLODRecord* FindRecordByRecordIndex(int32_t RecordIndex); // Function Icarus.FLODTile.FindRecordByRecordIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ed8d0
	struct UFLODFISMComponent* FindFISMFromRecordIndex(int32_t RecordIndex); // Function Icarus.FLODTile.FindFISMFromRecordIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16ed830
	void DebugDestroyAllInstances(int32_t RecordIndex, bool bRestore); // Function Icarus.FLODTile.DebugDestroyAllInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x16ed2f0
};

// Class Icarus.FLODTileBehaviourHarness
// Size: 0x238 (Inherited: 0x220)
struct AFLODTileBehaviourHarness : AActor {
	struct AFLODTile* OwnerTile; // 0x220(0x08)
	struct TArray<struct UFlammableFISM*> FlammableComponents; // 0x228(0x10)
};

// Class Icarus.FLODTileRecorderComponent
// Size: 0x140 (Inherited: 0xd8)
struct UFLODTileRecorderComponent : UIcarusStateRecorderComponent {
	char pad_D8[0x8]; // 0xd8(0x08)
	struct FFLODTileRecorderRecord Record; // 0xe0(0x60)
};

// Class Icarus.FMODParameterFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFMODParameterFunctionLibrary : UBlueprintFunctionLibrary {

	void SetGlobalVolumeSoundeffectsParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeSoundeffectsParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f9190
	void SetGlobalVolumeMusicParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeMusicParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f9110
	void SetGlobalVolumeMasterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeMasterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f9090
	void SetGlobalVolumeDialogueParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeDialogueParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f9010
	void SetGlobalVolumeCharacterVoiceParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeCharacterVoiceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8f90
	void SetGlobalVolumeAmbientParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeAmbientParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8f10
	void SetGlobalPlayerZPositionParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerZPositionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8e90
	void SetGlobalPlayerUnderwaterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerUnderwaterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8e10
	void SetGlobalPlayerStaminaParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerStaminaParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8d90
	void SetGlobalPlayerShelterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerShelterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8d10
	void SetGlobalPlayerReflectionFRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionFRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8c90
	void SetGlobalPlayerReflectionFLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionFLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8c10
	void SetGlobalPlayerReflectionBRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionBRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8b90
	void SetGlobalPlayerReflectionBLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionBLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8b10
	void SetGlobalPlayerMatFRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatFRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8a90
	void SetGlobalPlayerMatFLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatFLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8a10
	void SetGlobalPlayerMatBRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatBRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8990
	void SetGlobalPlayerMatBLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatBLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8910
	void SetGlobalPlayerKillcamParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerKillcamParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8890
	void SetGlobalPlayerHealthParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerHealthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8810
	void SetGlobalPlayerDeadParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerDeadParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8790
	void SetGlobalPlayerClosestReflectionParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerClosestReflectionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8710
	void SetGlobalPlayerCharacterVoiceParameter(enum class EGlobalPlayerCharacterVoiceFMODParam GlobalPlayerCharacterVoiceValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerCharacterVoiceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f86a0
	void SetGlobalPlayerAverageReflectionParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerAverageReflectionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8620
	void SetGlobalPlayerAsleepParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerAsleepParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f85a0
	void SetGlobalMusicIcarusThemePlayCountParameter(int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalMusicIcarusThemePlayCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8520
	void SetGlobalLoadingScreenStateParameter(enum class EGlobalLoadingScreenStateFMODParam GlobalLoadingScreenStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalLoadingScreenStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f84b0
	void SetGlobalHabMasterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalHabMasterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8430
	void SetGlobalFoliageTreeCountParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalFoliageTreeCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f83b0
	void SetGlobalFoliageBushCountParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalFoliageBushCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8330
	void SetGlobalEnvironmentWindParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentWindParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f82b0
	void SetGlobalEnvironmentWindExposureParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentWindExposureParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8230
	void SetGlobalEnvironmentTimeParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentTimeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f81b0
	void SetGlobalEnvironmentThunderParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentThunderParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8130
	void SetGlobalEnvironmentStormParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentStormParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f80b0
	void SetGlobalEnvironmentSnowstormParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentSnowstormParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8030
	void SetGlobalEnvironmentSnowParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentSnowParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7fb0
	void SetGlobalEnvironmentSandstormParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentSandstormParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7f30
	void SetGlobalEnvironmentRainParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentRainParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7eb0
	void SetGlobalEnvironmentOvercastParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentOvercastParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7e30
	void SetGlobalEnvironmentFireIntensityParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentFireIntensityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7db0
	void SetGlobalEnvironmentDebrisParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentDebrisParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7d30
	void SetGlobalEnvironmentCrevasseDepthParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentCrevasseDepthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7cb0
	void SetGlobalEnvironmentCaveParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentCaveParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7c30
	void SetGlobalEnvironmentBiomeParameter(enum class EGlobalEnvironmentBiomeFMODParam GlobalEnvironmentBiomeValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentBiomeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7bc0
	void SetGlobalDropStateParameter(enum class EGlobalDropStateFMODParam GlobalDropStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalDropStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7b50
	void SetEventWeaponReloadingParameter(struct FFMODEventInstance EventInstance, enum class EWeaponReloadingFMODParam WeaponReloadingValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponReloadingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7aa0
	void SetEventWeaponChargingParameter(struct FFMODEventInstance EventInstance, enum class EWeaponChargingFMODParam WeaponChargingValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponChargingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f79f0
	void SetEventWeaponChargeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponChargeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7930
	void SetEventWeaponBallisticLaunchVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponBallisticLaunchVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7870
	void SetEventWeaponAmmoParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponAmmoParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f77b0
	void SetEventWeaponAimingParameter(struct FFMODEventInstance EventInstance, enum class EWeaponAimingFMODParam WeaponAimingValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponAimingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7700
	void SetEventWaterWaterfallWidthParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterWaterfallWidthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7640
	void SetEventWaterWaterfallHeightParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterWaterfallHeightParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7580
	void SetEventWaterProximityInfluenceParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterProximityInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f74c0
	void SetEventWaterPlayerZPositionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterPlayerZPositionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7400
	void SetEventWaterImmersionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterImmersionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7340
	void SetEventWaterEnvelopmentParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterEnvelopmentParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7280
	void SetEventUiMapZoomRocParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventUiMapZoomRocParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f71c0
	void SetEventUiCharacterLevelParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventUiCharacterLevelParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7100
	void SetEventTreeVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f7040
	void SetEventTreeSplitPiecesParameter(struct FFMODEventInstance EventInstance, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeSplitPiecesParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6f80
	void SetEventTreeMassParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeMassParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6ec0
	void SetEventTreeFallSpeedParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeFallSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6e00
	void SetEventTreeFallAmountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeFallAmountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6d40
	void SetEventTreeDetachContextParameter(struct FFMODEventInstance EventInstance, enum class ETreeDetachContextFMODParam TreeDetachContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeDetachContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6c90
	void SetEventTreeBranchBreaksParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeBranchBreaksParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6bd0
	void SetEventSurveyTransmitParameter(struct FFMODEventInstance EventInstance, enum class ESurveyTransmitFMODParam SurveyTransmitValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventSurveyTransmitParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6b20
	void SetEventSurveyLaserParameter(struct FFMODEventInstance EventInstance, enum class ESurveyLaserFMODParam SurveyLaserValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventSurveyLaserParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6a70
	void SetEventSurfaceParameter(struct FFMODEventInstance EventInstance, enum class ESurfaceFMODParam SurfaceValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventSurfaceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f69c0
	void SetEventStationCollisionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventStationCollisionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6900
	void SetEventPlayerWaterDepthParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerWaterDepthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6840
	void SetEventPlayerVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6780
	void SetEventPlayerTypeParameter(struct FFMODEventInstance EventInstance, enum class EPlayerTypeFMODParam PlayerTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f66d0
	void SetEventPlayerStanceParameter(struct FFMODEventInstance EventInstance, enum class EPlayerStanceFMODParam PlayerStanceValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerStanceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6620
	void SetEventPlayerModifierStackSizeParameter(struct FFMODEventInstance EventInstance, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerModifierStackSizeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6560
	void SetEventPlayerGroundStateParameter(struct FFMODEventInstance EventInstance, enum class EPlayerGroundStateFMODParam PlayerGroundStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerGroundStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f64b0
	void SetEventPlayerFoliageParameter(struct FFMODEventInstance EventInstance, enum class EPlayerFoliageFMODParam PlayerFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6400
	void SetEventPlayerFloorSlopeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerFloorSlopeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6340
	void SetEventPlayerDamageParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6280
	void SetEventPlayerClothCollisionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerClothCollisionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f61c0
	void SetEventPlayerBoneVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerBoneVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6100
	void SetEventPlayerArmourTypeParameter(struct FFMODEventInstance EventInstance, enum class EPlayerArmourTypeFMODParam PlayerArmourTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerArmourTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f6050
	void SetEventParticleCountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventParticleCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5f90
	void SetEventOcclusionShelterContextParameter(struct FFMODEventInstance EventInstance, enum class EOcclusionShelterContextFMODParam OcclusionShelterContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventOcclusionShelterContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5ee0
	void SetEventOcclusionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventOcclusionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5e20
	void SetEventMusicFadeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventMusicFadeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5d60
	void SetEventMultiPointSpreadParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventMultiPointSpreadParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5ca0
	void SetEventMultiPointCountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventMultiPointCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5be0
	void SetEventItemWeatherExposureParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemWeatherExposureParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5b20
	void SetEventItemHitSuccessParameter(struct FFMODEventInstance EventInstance, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemHitSuccessParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5a60
	void SetEventItemHealthParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemHealthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f59a0
	void SetEventItemFlameMovementParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemFlameMovementParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f58e0
	void SetEventItemDamageParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5820
	void SetEventItemCraftingTypeParameter(struct FFMODEventInstance EventInstance, enum class EItemCraftingTypeFMODParam ItemCraftingTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemCraftingTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5770
	void SetEventItemCraftingCountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemCraftingCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f56b0
	void SetEventIntensityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventIntensityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f55f0
	void SetEventFireStateParameter(struct FFMODEventInstance EventInstance, enum class EFireStateFMODParam FireStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventFireStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5540
	void SetEventEnvironmentLightningTargetParameter(struct FFMODEventInstance EventInstance, enum class EEnvironmentLightningTargetFMODParam EnvironmentLightningTargetValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventEnvironmentLightningTargetParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5490
	void SetEventEnvironmentBiomeInfluenceParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventEnvironmentBiomeInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f53d0
	void SetEventDropshipOcclusionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventDropshipOcclusionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5310
	void SetEventDropshipDescentStateParameter(struct FFMODEventInstance EventInstance, enum class EDropshipDescentStateFMODParam DropshipDescentStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventDropshipDescentStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5260
	void SetEventDepOxitedBalloonsizeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventDepOxitedBalloonsizeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f51a0
	void SetEventDamageTypeParameter(struct FFMODEventInstance EventInstance, enum class EDamageTypeFMODParam DamageTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventDamageTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f50f0
	void SetEventCreatureVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCreatureVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f5030
	void SetEventCreatureFootstepTypeParameter(struct FFMODEventInstance EventInstance, enum class ECreatureFootstepTypeFMODParam CreatureFootstepTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCreatureFootstepTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4f80
	void SetEventCreatureFoliageParameter(struct FFMODEventInstance EventInstance, enum class ECreatureFoliageFMODParam CreatureFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCreatureFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4ed0
	void SetEventCaveListenerCorrelationParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCaveListenerCorrelationParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4e10
	void SetEventCaveContextParameter(struct FFMODEventInstance EventInstance, enum class ECaveContextFMODParam CaveContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCaveContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4d60
	void SetEventBuildingUnzipParameter(struct FFMODEventInstance EventInstance, enum class EBuildingUnzipFMODParam BuildingUnzipValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingUnzipParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4cb0
	void SetEventBuildingStabilityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingStabilityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4bf0
	void SetEventBuildingSnowParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingSnowParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4b30
	void SetEventBuildingOpenParameter(struct FFMODEventInstance EventInstance, enum class EBuildingOpenFMODParam BuildingOpenValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingOpenParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4a80
	void SetEventAnimStateParameter(struct FFMODEventInstance EventInstance, enum class EAnimStateFMODParam AnimStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventAnimStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f49d0
	void SetEventAnimSpeedParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventAnimSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4910
	void SetComponentWeaponReloadingParameter(struct UFMODAudioComponent* AudioComponent, enum class EWeaponReloadingFMODParam WeaponReloadingValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponReloadingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4850
	void SetComponentWeaponChargingParameter(struct UFMODAudioComponent* AudioComponent, enum class EWeaponChargingFMODParam WeaponChargingValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponChargingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4790
	void SetComponentWeaponChargeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponChargeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f46d0
	void SetComponentWeaponBallisticLaunchVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponBallisticLaunchVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4610
	void SetComponentWeaponAmmoParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponAmmoParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4550
	void SetComponentWeaponAimingParameter(struct UFMODAudioComponent* AudioComponent, enum class EWeaponAimingFMODParam WeaponAimingValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponAimingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4490
	void SetComponentWaterWaterfallWidthParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterWaterfallWidthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f43d0
	void SetComponentWaterWaterfallHeightParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterWaterfallHeightParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4310
	void SetComponentWaterProximityInfluenceParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterProximityInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4250
	void SetComponentWaterPlayerZPositionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterPlayerZPositionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4190
	void SetComponentWaterImmersionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterImmersionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f40d0
	void SetComponentWaterEnvelopmentParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterEnvelopmentParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4010
	void SetComponentUiMapZoomRocParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentUiMapZoomRocParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3f50
	void SetComponentUiCharacterLevelParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentUiCharacterLevelParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3e90
	void SetComponentTreeVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3dd0
	void SetComponentTreeSplitPiecesParameter(struct UFMODAudioComponent* AudioComponent, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeSplitPiecesParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3d10
	void SetComponentTreeMassParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeMassParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3c50
	void SetComponentTreeFallSpeedParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeFallSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3b90
	void SetComponentTreeFallAmountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeFallAmountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3ad0
	void SetComponentTreeDetachContextParameter(struct UFMODAudioComponent* AudioComponent, enum class ETreeDetachContextFMODParam TreeDetachContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeDetachContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3a10
	void SetComponentTreeBranchBreaksParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeBranchBreaksParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3950
	void SetComponentSurveyTransmitParameter(struct UFMODAudioComponent* AudioComponent, enum class ESurveyTransmitFMODParam SurveyTransmitValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentSurveyTransmitParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3890
	void SetComponentSurveyLaserParameter(struct UFMODAudioComponent* AudioComponent, enum class ESurveyLaserFMODParam SurveyLaserValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentSurveyLaserParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f37d0
	void SetComponentSurfaceParameter(struct UFMODAudioComponent* AudioComponent, enum class ESurfaceFMODParam SurfaceValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentSurfaceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3710
	void SetComponentStationCollisionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentStationCollisionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3650
	void SetComponentPlayerWaterDepthParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerWaterDepthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3590
	void SetComponentPlayerVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f34d0
	void SetComponentPlayerTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerTypeFMODParam PlayerTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3410
	void SetComponentPlayerStanceParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerStanceFMODParam PlayerStanceValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerStanceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3350
	void SetComponentPlayerModifierStackSizeParameter(struct UFMODAudioComponent* AudioComponent, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerModifierStackSizeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3290
	void SetComponentPlayerGroundStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerGroundStateFMODParam PlayerGroundStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerGroundStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f31d0
	void SetComponentPlayerFoliageParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerFoliageFMODParam PlayerFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3110
	void SetComponentPlayerFloorSlopeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerFloorSlopeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f3050
	void SetComponentPlayerDamageParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2f90
	void SetComponentPlayerClothCollisionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerClothCollisionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2ed0
	void SetComponentPlayerBoneVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerBoneVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2e10
	void SetComponentPlayerArmourTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerArmourTypeFMODParam PlayerArmourTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerArmourTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2d50
	void SetComponentParticleCountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentParticleCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2c90
	void SetComponentOcclusionShelterContextParameter(struct UFMODAudioComponent* AudioComponent, enum class EOcclusionShelterContextFMODParam OcclusionShelterContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentOcclusionShelterContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2bd0
	void SetComponentOcclusionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentOcclusionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2b10
	void SetComponentMusicFadeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentMusicFadeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2a50
	void SetComponentMultiPointSpreadParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentMultiPointSpreadParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2990
	void SetComponentMultiPointCountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentMultiPointCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f28d0
	void SetComponentItemWeatherExposureParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemWeatherExposureParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2810
	void SetComponentItemHitSuccessParameter(struct UFMODAudioComponent* AudioComponent, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemHitSuccessParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2750
	void SetComponentItemHealthParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemHealthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2690
	void SetComponentItemFlameMovementParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemFlameMovementParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f25d0
	void SetComponentItemDamageParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2510
	void SetComponentItemCraftingTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EItemCraftingTypeFMODParam ItemCraftingTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemCraftingTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2450
	void SetComponentItemCraftingCountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemCraftingCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2390
	void SetComponentIntensityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentIntensityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f22d0
	void SetComponentFireStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EFireStateFMODParam FireStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentFireStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2210
	void SetComponentEnvironmentLightningTargetParameter(struct UFMODAudioComponent* AudioComponent, enum class EEnvironmentLightningTargetFMODParam EnvironmentLightningTargetValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentEnvironmentLightningTargetParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2150
	void SetComponentEnvironmentBiomeInfluenceParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentEnvironmentBiomeInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f2090
	void SetComponentDropshipOcclusionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentDropshipOcclusionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1fd0
	void SetComponentDropshipDescentStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EDropshipDescentStateFMODParam DropshipDescentStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentDropshipDescentStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1f10
	void SetComponentDepOxitedBalloonsizeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentDepOxitedBalloonsizeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1e50
	void SetComponentDamageTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EDamageTypeFMODParam DamageTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentDamageTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1d90
	void SetComponentCreatureVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCreatureVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1cd0
	void SetComponentCreatureFootstepTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class ECreatureFootstepTypeFMODParam CreatureFootstepTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCreatureFootstepTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1c10
	void SetComponentCreatureFoliageParameter(struct UFMODAudioComponent* AudioComponent, enum class ECreatureFoliageFMODParam CreatureFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCreatureFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1b50
	void SetComponentCaveListenerCorrelationParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCaveListenerCorrelationParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1a90
	void SetComponentCaveContextParameter(struct UFMODAudioComponent* AudioComponent, enum class ECaveContextFMODParam CaveContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCaveContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f19d0
	void SetComponentBuildingUnzipParameter(struct UFMODAudioComponent* AudioComponent, enum class EBuildingUnzipFMODParam BuildingUnzipValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingUnzipParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1910
	void SetComponentBuildingStabilityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingStabilityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1850
	void SetComponentBuildingSnowParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingSnowParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1790
	void SetComponentBuildingOpenParameter(struct UFMODAudioComponent* AudioComponent, enum class EBuildingOpenFMODParam BuildingOpenValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingOpenParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f16d0
	void SetComponentAnimStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EAnimStateFMODParam AnimStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentAnimStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1610
	void SetComponentAnimSpeedParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentAnimSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f1550
};

// Class Icarus.FocusableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UFocusableComponent : UTraitComponent {
	bool IsFocused; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)

	void Unfocus(); // Function Icarus.FocusableComponent.Unfocus // (Final|Native|Public|BlueprintCallable) // @ game+0x16ff290
	void OnUnfocused(); // Function Icarus.FocusableComponent.OnUnfocused // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1613bb0
	void OnRep_IsFocused(); // Function Icarus.FocusableComponent.OnRep_IsFocused // (Final|Native|Private) // @ game+0x16fe880
	void OnFocused(); // Function Icarus.FocusableComponent.OnFocused // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1613f90
	struct AActor* GetInvokingActor(); // Function Icarus.FocusableComponent.GetInvokingActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16fd230
	bool GetFocusableData(struct FFocusableData& OutData); // Function Icarus.FocusableComponent.GetFocusableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16fca80
	void Focus(); // Function Icarus.FocusableComponent.Focus // (Final|Native|Public|BlueprintCallable) // @ game+0x16fca60
};

// Class Icarus.FocusableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFocusableLibrary : URowLibrary {

	struct FFocusableRowHandle StructToRowHandle(struct FFocusableEnum EnumValue); // Function Icarus.FocusableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff080
	struct UE4::FName StructToName(struct FFocusableEnum EnumValue); // Function Icarus.FocusableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16feea0
	int32_t StructToInt(struct FFocusableEnum EnumValue); // Function Icarus.FocusableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fecc0
	struct FFocusableEnum RowHandleToStruct(struct FFocusableRowHandle RowHandle); // Function Icarus.FocusableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fea80
	void RemoveRowFromFocusableTable(struct UE4::FName Name); // Function Icarus.FocusableLibrary.RemoveRowFromFocusableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16fe900
	void RefreshConstants(); // Function Icarus.FocusableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16fe8a0
	int32_t NumRows(); // Function Icarus.FocusableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe7f0
	bool NotEqual_EnumName(struct FFocusableEnum A, struct UE4::FName B); // Function Icarus.FocusableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe520
	bool NotEqual_EnumEnum(struct FFocusableEnum A, struct FFocusableEnum B); // Function Icarus.FocusableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe250
	struct FFocusableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FocusableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe0a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FocusableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16fdef0
	struct FFocusableRowHandle MakeLiteralFocusable(struct FFocusableRowHandle RowHandle); // Function Icarus.FocusableLibrary.MakeLiteralFocusable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fdc80
	struct FFocusableRowHandle MakeFocusableFromIndex(int32_t Index); // Function Icarus.FocusableLibrary.MakeFocusableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd890
	struct FFocusableEnum MakeFocusableEnum(struct FFocusableEnum Enum); // Function Icarus.FocusableLibrary.MakeFocusableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd810
	struct FFocusableRowHandle MakeFocusable(struct UE4::FName RowName); // Function Icarus.FocusableLibrary.MakeFocusable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd770
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FocusableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16fd5c0
	struct FFocusableEnum IntToStruct(int32_t IntValue); // Function Icarus.FocusableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd410
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FocusableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16fd260
	void GetFocusableStruct(struct FFocusableRowHandle RowHandle, struct FFocusableData& Focusable, enum class EValid& Paths); // Function Icarus.FocusableLibrary.GetFocusableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fcbf0
	bool EqualEqual_FFocusableRowHandleFFocusableRowHandle(struct FFocusableRowHandle RowHandleA, struct FFocusableRowHandle RowHandleB); // Function Icarus.FocusableLibrary.EqualEqual_FFocusableRowHandleFFocusableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fc6a0
	bool EqualEqual_EnumEnum(struct FFocusableEnum A, struct FFocusableEnum B); // Function Icarus.FocusableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fc3d0
	struct FFocusableRowHandle CastToFocusableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FocusableLibrary.CastToFocusableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fc070
	void BreakFocusableEnum(struct FFocusableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FocusableLibrary.BreakFocusableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16fbc50
	void AddRowToFocusableTable(struct UE4::FName Name, struct FFocusableData Data, struct FFocusableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FocusableLibrary.AddRowToFocusableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fb610
};

// Class Icarus.FocusableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFocusableTable : UIcarusDataTable {
};

// Class Icarus.FoodTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFoodTypesLibrary : URowLibrary {

	struct FFoodTypesRowHandle StructToRowHandle(struct FFoodTypesEnum EnumValue); // Function Icarus.FoodTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff130
	struct UE4::FName StructToName(struct FFoodTypesEnum EnumValue); // Function Icarus.FoodTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fef40
	int32_t StructToInt(struct FFoodTypesEnum EnumValue); // Function Icarus.FoodTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fed60
	struct FFoodTypesEnum RowHandleToStruct(struct FFoodTypesRowHandle RowHandle); // Function Icarus.FoodTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16feb40
	void RemoveRowFromFoodTypesTable(struct UE4::FName Name); // Function Icarus.FoodTypesLibrary.RemoveRowFromFoodTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16fe980
	void RefreshConstants(); // Function Icarus.FoodTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16fe8c0
	int32_t NumRows(); // Function Icarus.FoodTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe820
	bool NotEqual_EnumName(struct FFoodTypesEnum A, struct UE4::FName B); // Function Icarus.FoodTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe610
	bool NotEqual_EnumEnum(struct FFoodTypesEnum A, struct FFoodTypesEnum B); // Function Icarus.FoodTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe340
	struct FFoodTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FoodTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe130
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FoodTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16fdf80
	struct FFoodTypesRowHandle MakeLiteralFoodTypes(struct FFoodTypesRowHandle RowHandle); // Function Icarus.FoodTypesLibrary.MakeLiteralFoodTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fdd50
	struct FFoodTypesRowHandle MakeFoodTypesFromIndex(int32_t Index); // Function Icarus.FoodTypesLibrary.MakeFoodTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fda40
	struct FFoodTypesEnum MakeFoodTypesEnum(struct FFoodTypesEnum Enum); // Function Icarus.FoodTypesLibrary.MakeFoodTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd9c0
	struct FFoodTypesRowHandle MakeFoodTypes(struct UE4::FName RowName); // Function Icarus.FoodTypesLibrary.MakeFoodTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd920
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FoodTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16fd650
	struct FFoodTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.FoodTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd4a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FoodTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16fd2f0
	void GetFoodTypesStruct(struct FFoodTypesRowHandle RowHandle, struct FIcarusFoodType& FoodTypes, enum class EValid& Paths); // Function Icarus.FoodTypesLibrary.GetFoodTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fcd90
	bool EqualEqual_FFoodTypesRowHandleFFoodTypesRowHandle(struct FFoodTypesRowHandle RowHandleA, struct FFoodTypesRowHandle RowHandleB); // Function Icarus.FoodTypesLibrary.EqualEqual_FFoodTypesRowHandleFFoodTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fc7e0
	bool EqualEqual_EnumEnum(struct FFoodTypesEnum A, struct FFoodTypesEnum B); // Function Icarus.FoodTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fc4c0
	struct FFoodTypesRowHandle CastToFoodTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FoodTypesLibrary.CastToFoodTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fc190
	void BreakFoodTypesEnum(struct FFoodTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FoodTypesLibrary.BreakFoodTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16fbdb0
	void AddRowToFoodTypesTable(struct UE4::FName Name, struct FIcarusFoodType Data, struct FFoodTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FoodTypesLibrary.AddRowToFoodTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fb7f0
};

// Class Icarus.FoodTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFoodTypesTable : UIcarusDataTable {
};

// Class Icarus.FuelComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UFuelComponent : UResourceNetworkComponent {

	bool GetFuelData(struct FFuelData& OutData); // Function Icarus.FuelComponent.GetFuelData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16fcf20
};

// Class Icarus.FuelLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFuelLibrary : URowLibrary {

	struct FFuelRowHandle StructToRowHandle(struct FFuelEnum EnumValue); // Function Icarus.FuelLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff1e0
	struct UE4::FName StructToName(struct FFuelEnum EnumValue); // Function Icarus.FuelLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fefe0
	int32_t StructToInt(struct FFuelEnum EnumValue); // Function Icarus.FuelLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fee00
	struct FFuelEnum RowHandleToStruct(struct FFuelRowHandle RowHandle); // Function Icarus.FuelLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fec00
	void RemoveRowFromFuelTable(struct UE4::FName Name); // Function Icarus.FuelLibrary.RemoveRowFromFuelTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16fea00
	void RefreshConstants(); // Function Icarus.FuelLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16fe8e0
	int32_t NumRows(); // Function Icarus.FuelLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe850
	bool NotEqual_EnumName(struct FFuelEnum A, struct UE4::FName B); // Function Icarus.FuelLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe700
	bool NotEqual_EnumEnum(struct FFuelEnum A, struct FFuelEnum B); // Function Icarus.FuelLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe430
	struct FFuelEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.FuelLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe1c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.FuelLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16fe010
	struct FFuelRowHandle MakeLiteralFuel(struct FFuelRowHandle RowHandle); // Function Icarus.FuelLibrary.MakeLiteralFuel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fde20
	struct FFuelRowHandle MakeFuelFromIndex(int32_t Index); // Function Icarus.FuelLibrary.MakeFuelFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fdbf0
	struct FFuelEnum MakeFuelEnum(struct FFuelEnum Enum); // Function Icarus.FuelLibrary.MakeFuelEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fdb70
	struct FFuelRowHandle MakeFuel(struct UE4::FName RowName); // Function Icarus.FuelLibrary.MakeFuel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fdad0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.FuelLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16fd6e0
	struct FFuelEnum IntToStruct(int32_t IntValue); // Function Icarus.FuelLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd530
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.FuelLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16fd380
	void GetFuelStruct(struct FFuelRowHandle RowHandle, struct FFuelData& Fuel, enum class EValid& Paths); // Function Icarus.FuelLibrary.GetFuelStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fd0b0
	bool EqualEqual_FFuelRowHandleFFuelRowHandle(struct FFuelRowHandle RowHandleA, struct FFuelRowHandle RowHandleB); // Function Icarus.FuelLibrary.EqualEqual_FFuelRowHandleFFuelRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fc920
	bool EqualEqual_EnumEnum(struct FFuelEnum A, struct FFuelEnum B); // Function Icarus.FuelLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fc5b0
	struct FFuelRowHandle CastToFuelRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.FuelLibrary.CastToFuelRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fc2b0
	void BreakFuelEnum(struct FFuelEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.FuelLibrary.BreakFuelEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16fbf10
	void AddRowToFuelTable(struct UE4::FName Name, struct FFuelData Data, struct FFuelRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.FuelLibrary.AddRowToFuelTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fba20
};

// Class Icarus.FuelTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFuelTable : UIcarusDataTable {
};

// Class Icarus.GameModeStateRecorderComponent
// Size: 0x190 (Inherited: 0x160)
struct UGameModeStateRecorderComponent : UActorStateRecorderComponent {
	struct FGameModeRecord GameModeRecord; // 0x158(0x30)
};

// Class Icarus.GameUserSettingsSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UGameUserSettingsSubsystem : UGameInstanceSubsystem {

	bool RebindAxis(struct FKeybindContextsRowHandle& Context, struct FInputAxisKeyMapping& NewMapping, bool bController); // Function Icarus.GameUserSettingsSubsystem.RebindAxis // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1707620
	bool RebindAction(struct FKeybindContextsRowHandle& Context, struct FInputActionKeyMapping& NewMapping, bool bController); // Function Icarus.GameUserSettingsSubsystem.RebindAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1707420
	struct FInputAxisKeyMapping GetDefaultAxisMapping(struct FKeybindContextsRowHandle& Context, struct FKeybindingsRowHandle RowHandle, bool bController, enum class EValid& Paths); // Function Icarus.GameUserSettingsSubsystem.GetDefaultAxisMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1703050
	struct FInputActionKeyMapping GetDefaultActionMapping(struct FKeybindContextsRowHandle& Context, struct FKeybindingsRowHandle RowHandle, bool bController, enum class EValid& Paths); // Function Icarus.GameUserSettingsSubsystem.GetDefaultActionMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1702e00
	void GetCurrentAxisMapping(struct FKeybindingsRowHandle RowHandle, struct FInputAxisKeyMapping& Out, enum class EValid& Paths); // Function Icarus.GameUserSettingsSubsystem.GetCurrentAxisMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1702be0
	void GetCurrentActionMapping(struct FKeybindingsRowHandle RowHandle, struct FInputActionKeyMapping& Out, enum class EValid& Paths); // Function Icarus.GameUserSettingsSubsystem.GetCurrentActionMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17029d0
	bool CheckForExistingMapping(struct FKey& Key, struct FKeybindContextsRowHandle& Context, struct FKeybindingsRowHandle& RowHandle, struct FKeybindContextsRowHandle& ConflictingInputContext, struct FKeybindingsRowHandle& ConflictingKeybind); // Function Icarus.GameUserSettingsSubsystem.CheckForExistingMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17023c0
};

// Class Icarus.GatheringSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UGatheringSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnFoliageResourceCollectedNotify; // 0x30(0x10)

	void BroadcastFoliageResourceCollectedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GatheringSubsystem.BroadcastFoliageResourceCollectedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1701d00
};

// Class Icarus.GeneratedPlayerTrackerListener
// Size: 0x30 (Inherited: 0x28)
struct UGeneratedPlayerTrackerListener : UObject {
	struct UPlayerTrackerSubsystem* PlayerTrackerSubsystem; // 0x28(0x08)

	void OnVoxelResourceMinedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnVoxelResourceMinedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x17069e0
	void OnVoxelHitNotify(struct AIcarusPlayerCharacter* Player, struct AVoxelResource* Voxel); // Function Icarus.GeneratedPlayerTrackerListener.OnVoxelHitNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1706910
	void OnVoxelCompletedNotify(struct AIcarusPlayerCharacter* Player, struct AVoxelResource* Voxel); // Function Icarus.GeneratedPlayerTrackerListener.OnVoxelCompletedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1706840
	void OnTreeResourceCollectedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnTreeResourceCollectedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1706330
	void OnTreeFelledNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnTreeFelledNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x17062a0
	void OnTimeSurvivedNotify(struct AIcarusPlayerCharacter* Player, int32_t MinutesSurvived, enum class EProspectLocation Biome); // Function Icarus.GeneratedPlayerTrackerListener.OnTimeSurvivedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1706190
	void OnProspectMissionCompleteNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnProspectMissionCompleteNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x17060e0
	void OnProjectileFiredNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusItem* Projectile); // Function Icarus.GeneratedPlayerTrackerListener.OnProjectileFiredNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1706010
	void OnPlayerRevivedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnPlayerRevivedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705f80
	void OnPlayerRespawnedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnPlayerRespawnedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705ef0
	void OnPlayerPerformedStealthAttackNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnPlayerPerformedStealthAttackNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705e60
	void OnPlayerPerformedCriticalHitNotify(struct AIcarusPlayerCharacter* Player, struct FVector HitLocation); // Function Icarus.GeneratedPlayerTrackerListener.OnPlayerPerformedCriticalHitNotify // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1705d80
	void OnPlayerDownedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnPlayerDownedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705cf0
	void OnOtherPlayerRevivedNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusPlayerCharacter* OtherPlayer); // Function Icarus.GeneratedPlayerTrackerListener.OnOtherPlayerRevivedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705c20
	void OnNightSkippedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnNightSkippedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x16238a0
	void OnLevelUpdatedNotify(struct AIcarusPlayerCharacter* Player, int32_t CurrentLevel); // Function Icarus.GeneratedPlayerTrackerListener.OnLevelUpdatedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705b50
	void OnItemHarvestedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnItemHarvestedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705640
	void OnItemCraftedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnItemCraftedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1705130
	void OnItemConsumedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnItemConsumedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1704c20
	void OnFoliageResourceCollectedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnFoliageResourceCollectedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1704710
	void OnFireExtinguishedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.GeneratedPlayerTrackerListener.OnFireExtinguishedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1704680
	void OnDistanceTraveledNotify(struct AIcarusPlayerCharacter* Player, int32_t Distance, enum class EProspectLocation Biome); // Function Icarus.GeneratedPlayerTrackerListener.OnDistanceTraveledNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1704570
	void OnCreatureSkinnedNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusCorpse* Corpse); // Function Icarus.GeneratedPlayerTrackerListener.OnCreatureSkinnedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x17044a0
	void OnCreatureKilledNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Causer, struct AActor* Creature); // Function Icarus.GeneratedPlayerTrackerListener.OnCreatureKilledNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1704390
	void OnCorpseItemRemovedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.GeneratedPlayerTrackerListener.OnCorpseItemRemovedNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1703e80
};

// Class Icarus.GeneratorComponent
// Size: 0x1a8 (Inherited: 0xd0)
struct UGeneratorComponent : UTraitComponent {
	char pad_D0[0x8]; // 0xd0(0x08)
	bool bGeneratorActive; // 0xd8(0x01)
	char pad_D9[0x3]; // 0xd9(0x03)
	int32_t CurrentGenerationRate; // 0xdc(0x04)
	struct FMulticastSparseDelegate OnGeneratorActiveStateUpdated; // 0xe0(0x01)
	struct FMulticastSparseDelegate OnGeneratorOutOfFuel; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)
	struct UInventory* TransmutationInventory; // 0xe8(0x08)
	struct TArray<struct UInventory*> AdditionalInventories; // 0xf0(0x10)
	struct FItemData CurrentTransmutationItem; // 0x100(0xa0)
	float PartialTransmuationResource; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)

	bool TransmuteItems(float Delta); // Function Icarus.GeneratorComponent.TransmuteItems // (Final|Native|Public) // @ game+0x1707b80
	void ProduceByproduct(struct FItemData Item); // Function Icarus.GeneratorComponent.ProduceByproduct // (Final|Native|Public) // @ game+0x1706f70
	void ProcessGenerator(float Delta); // Function Icarus.GeneratorComponent.ProcessGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x1706ef0
	void OnRep_GeneratorActive(); // Function Icarus.GeneratorComponent.OnRep_GeneratorActive // (Final|Native|Public) // @ game+0x1706170
	void InitialiseComponent(struct UInventory* NewTransmutationInventory, struct TArray<struct UInventory*> NewAdditionalInventories); // Function Icarus.GeneratorComponent.InitialiseComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x17035f0
	bool GetGeneratorData(struct FGeneratorData& OutData); // Function Icarus.GeneratorComponent.GetGeneratorData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1703260
	float GetAdjustedRequiredTransmutationUnits(float CurrentUnits); // Function Icarus.GeneratorComponent.GetAdjustedRequiredTransmutationUnits // (Final|Native|Public|Const) // @ game+0x1702930
	void GeneratorOutOfFuel(); // Function Icarus.GeneratorComponent.GeneratorOutOfFuel // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x16e42d0
	bool GenerateResource(float Delta); // Function Icarus.GeneratorComponent.GenerateResource // (Final|Native|Public) // @ game+0x17028a0
	void DeactivateGenerator(); // Function Icarus.GeneratorComponent.DeactivateGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x1702650
	bool ActivateGenerator(); // Function Icarus.GeneratorComponent.ActivateGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x1701850
};

// Class Icarus.GeneratorLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGeneratorLibrary : URowLibrary {

	struct FGeneratorRowHandle StructToRowHandle(struct FGeneratorEnum EnumValue); // Function Icarus.GeneratorLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1707ad0
	struct UE4::FName StructToName(struct FGeneratorEnum EnumValue); // Function Icarus.GeneratorLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1707a30
	int32_t StructToInt(struct FGeneratorEnum EnumValue); // Function Icarus.GeneratorLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1707990
	struct FGeneratorEnum RowHandleToStruct(struct FGeneratorRowHandle RowHandle); // Function Icarus.GeneratorLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17078d0
	void RemoveRowFromGeneratorTable(struct UE4::FName Name); // Function Icarus.GeneratorLibrary.RemoveRowFromGeneratorTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1707850
	void RefreshConstants(); // Function Icarus.GeneratorLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1707830
	int32_t NumRows(); // Function Icarus.GeneratorLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703e50
	bool NotEqual_EnumName(struct FGeneratorEnum A, struct UE4::FName B); // Function Icarus.GeneratorLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703d60
	bool NotEqual_EnumEnum(struct FGeneratorEnum A, struct FGeneratorEnum B); // Function Icarus.GeneratorLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703c70
	struct FGeneratorEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GeneratorLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703be0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GeneratorLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1703b50
	struct FGeneratorRowHandle MakeLiteralGenerator(struct FGeneratorRowHandle RowHandle); // Function Icarus.GeneratorLibrary.MakeLiteralGenerator // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703a80
	struct FGeneratorRowHandle MakeGeneratorFromIndex(int32_t Index); // Function Icarus.GeneratorLibrary.MakeGeneratorFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17039f0
	struct FGeneratorEnum MakeGeneratorEnum(struct FGeneratorEnum Enum); // Function Icarus.GeneratorLibrary.MakeGeneratorEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703970
	struct FGeneratorRowHandle MakeGenerator(struct UE4::FName RowName); // Function Icarus.GeneratorLibrary.MakeGenerator // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17038d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GeneratorLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1703840
	struct FGeneratorEnum IntToStruct(int32_t IntValue); // Function Icarus.GeneratorLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17037b0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GeneratorLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1703720
	void GetGeneratorStruct(struct FGeneratorRowHandle RowHandle, struct FGeneratorData& Generator, enum class EValid& Paths); // Function Icarus.GeneratorLibrary.GetGeneratorStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1703420
	bool EqualEqual_FGeneratorRowHandleFGeneratorRowHandle(struct FGeneratorRowHandle RowHandleA, struct FGeneratorRowHandle RowHandleB); // Function Icarus.GeneratorLibrary.EqualEqual_FGeneratorRowHandleFGeneratorRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1702760
	bool EqualEqual_EnumEnum(struct FGeneratorEnum A, struct FGeneratorEnum B); // Function Icarus.GeneratorLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1702670
	struct FGeneratorRowHandle CastToGeneratorRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GeneratorLibrary.CastToGeneratorRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17022a0
	void BreakGeneratorEnum(struct FGeneratorEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GeneratorLibrary.BreakGeneratorEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1701ba0
	void AddRowToGeneratorTable(struct UE4::FName Name, struct FGeneratorData Data, struct FGeneratorRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GeneratorLibrary.AddRowToGeneratorTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1701880
};

// Class Icarus.GeneratorTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGeneratorTable : UIcarusDataTable {
};

// Class Icarus.GenericAITargetComponent
// Size: 0x100 (Inherited: 0xb0)
struct UGenericAITargetComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct UAIPerceptionStimuliSourceComponent* PerceptionComponent; // 0xc0(0x08)
	struct FAIRelationshipsRowHandle TargetableRelationship; // 0xc8(0x18)
	struct USceneComponent* TargetComponent; // 0xe0(0x08)
	struct FVector ActorRootPerceptionTargetOffset; // 0xe8(0x0c)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct UActorState* ActorState; // 0xf8(0x08)
};

// Class Icarus.GenericResourceBase
// Size: 0x2c8 (Inherited: 0x2b0)
struct AGenericResourceBase : AIcarusActor {
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct USceneComponent* ViewPointOverrideComponent; // 0x2b8(0x08)
	struct UE4::FName ViewPointOverrideSocket; // 0x2c0(0x08)
};

// Class Icarus.GOAPActionAnimNotify
// Size: 0x48 (Inherited: 0x38)
struct UGOAPActionAnimNotify : UAnimNotify {
	struct FString NotifyName; // 0x38(0x10)
};

// Class Icarus.GOAPActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPActionsLibrary : URowLibrary {

	struct FGOAPActionsRowHandle StructToRowHandle(struct FGOAPActionsEnum EnumValue); // Function Icarus.GOAPActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170dad0
	struct UE4::FName StructToName(struct FGOAPActionsEnum EnumValue); // Function Icarus.GOAPActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d8f0
	int32_t StructToInt(struct FGOAPActionsEnum EnumValue); // Function Icarus.GOAPActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d710
	struct FGOAPActionsEnum RowHandleToStruct(struct FGOAPActionsRowHandle RowHandle); // Function Icarus.GOAPActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d4d0
	void RemoveRowFromGOAPActionsTable(struct UE4::FName Name); // Function Icarus.GOAPActionsLibrary.RemoveRowFromGOAPActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x170d350
	void RefreshConstants(); // Function Icarus.GOAPActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x170d2f0
	int32_t NumRows(); // Function Icarus.GOAPActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d260
	bool NotEqual_EnumName(struct FGOAPActionsEnum A, struct UE4::FName B); // Function Icarus.GOAPActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cf90
	bool NotEqual_EnumEnum(struct FGOAPActionsEnum A, struct FGOAPActionsEnum B); // Function Icarus.GOAPActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ccc0
	struct FGOAPActionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GOAPActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cb10
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GOAPActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x170c960
	struct FGOAPActionsRowHandle MakeLiteralGOAPActions(struct FGOAPActionsRowHandle RowHandle); // Function Icarus.GOAPActionsLibrary.MakeLiteralGOAPActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c6f0
	struct FGOAPActionsRowHandle MakeGOAPActionsFromIndex(int32_t Index); // Function Icarus.GOAPActionsLibrary.MakeGOAPActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c300
	struct FGOAPActionsEnum MakeGOAPActionsEnum(struct FGOAPActionsEnum Enum); // Function Icarus.GOAPActionsLibrary.MakeGOAPActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c280
	struct FGOAPActionsRowHandle MakeGOAPActions(struct UE4::FName RowName); // Function Icarus.GOAPActionsLibrary.MakeGOAPActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c1e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GOAPActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x170c030
	struct FGOAPActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170be80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GOAPActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x170bcd0
	void GetGOAPActionsStruct(struct FGOAPActionsRowHandle RowHandle, struct FGOAPAction& GOAPActions, enum class EValid& Paths); // Function Icarus.GOAPActionsLibrary.GetGOAPActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170b7f0
	bool EqualEqual_FGOAPActionsRowHandleFGOAPActionsRowHandle(struct FGOAPActionsRowHandle RowHandleA, struct FGOAPActionsRowHandle RowHandleB); // Function Icarus.GOAPActionsLibrary.EqualEqual_FGOAPActionsRowHandleFGOAPActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170b430
	bool EqualEqual_EnumEnum(struct FGOAPActionsEnum A, struct FGOAPActionsEnum B); // Function Icarus.GOAPActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170b160
	struct FGOAPActionsRowHandle CastToGOAPActionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GOAPActionsLibrary.CastToGOAPActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170ae00
	void BreakGOAPActionsEnum(struct FGOAPActionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GOAPActionsLibrary.BreakGOAPActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x170a9e0
	void AddRowToGOAPActionsTable(struct UE4::FName Name, struct FGOAPAction Data, struct FGOAPActionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GOAPActionsLibrary.AddRowToGOAPActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170a3a0
};

// Class Icarus.GOAPActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPActionsTable : UIcarusDataTable {
};

// Class Icarus.GOAPGoalsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPGoalsLibrary : URowLibrary {

	struct FGOAPGoalsRowHandle StructToRowHandle(struct FGOAPGoalsEnum EnumValue); // Function Icarus.GOAPGoalsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170db80
	struct UE4::FName StructToName(struct FGOAPGoalsEnum EnumValue); // Function Icarus.GOAPGoalsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d990
	int32_t StructToInt(struct FGOAPGoalsEnum EnumValue); // Function Icarus.GOAPGoalsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d7b0
	struct FGOAPGoalsEnum RowHandleToStruct(struct FGOAPGoalsRowHandle RowHandle); // Function Icarus.GOAPGoalsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d590
	void RemoveRowFromGOAPGoalsTable(struct UE4::FName Name); // Function Icarus.GOAPGoalsLibrary.RemoveRowFromGOAPGoalsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x170d3d0
	void RefreshConstants(); // Function Icarus.GOAPGoalsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x170d310
	int32_t NumRows(); // Function Icarus.GOAPGoalsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d290
	bool NotEqual_EnumName(struct FGOAPGoalsEnum A, struct UE4::FName B); // Function Icarus.GOAPGoalsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d080
	bool NotEqual_EnumEnum(struct FGOAPGoalsEnum A, struct FGOAPGoalsEnum B); // Function Icarus.GOAPGoalsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cdb0
	struct FGOAPGoalsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GOAPGoalsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cba0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GOAPGoalsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x170c9f0
	struct FGOAPGoalsRowHandle MakeLiteralGOAPGoals(struct FGOAPGoalsRowHandle RowHandle); // Function Icarus.GOAPGoalsLibrary.MakeLiteralGOAPGoals // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c7c0
	struct FGOAPGoalsRowHandle MakeGOAPGoalsFromIndex(int32_t Index); // Function Icarus.GOAPGoalsLibrary.MakeGOAPGoalsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c4b0
	struct FGOAPGoalsEnum MakeGOAPGoalsEnum(struct FGOAPGoalsEnum Enum); // Function Icarus.GOAPGoalsLibrary.MakeGOAPGoalsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c430
	struct FGOAPGoalsRowHandle MakeGOAPGoals(struct UE4::FName RowName); // Function Icarus.GOAPGoalsLibrary.MakeGOAPGoals // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c390
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GOAPGoalsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x170c0c0
	struct FGOAPGoalsEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPGoalsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170bf10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GOAPGoalsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x170bd60
	void GetGOAPGoalsStruct(struct FGOAPGoalsRowHandle RowHandle, struct FGOAPGoal& GOAPGoals, enum class EValid& Paths); // Function Icarus.GOAPGoalsLibrary.GetGOAPGoalsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170b990
	bool EqualEqual_FGOAPGoalsRowHandleFGOAPGoalsRowHandle(struct FGOAPGoalsRowHandle RowHandleA, struct FGOAPGoalsRowHandle RowHandleB); // Function Icarus.GOAPGoalsLibrary.EqualEqual_FGOAPGoalsRowHandleFGOAPGoalsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170b570
	bool EqualEqual_EnumEnum(struct FGOAPGoalsEnum A, struct FGOAPGoalsEnum B); // Function Icarus.GOAPGoalsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170b250
	struct FGOAPGoalsRowHandle CastToGOAPGoalsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GOAPGoalsLibrary.CastToGOAPGoalsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170af20
	void BreakGOAPGoalsEnum(struct FGOAPGoalsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GOAPGoalsLibrary.BreakGOAPGoalsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x170ab40
	void AddRowToGOAPGoalsTable(struct UE4::FName Name, struct FGOAPGoal Data, struct FGOAPGoalsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GOAPGoalsLibrary.AddRowToGOAPGoalsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170a570
};

// Class Icarus.GOAPGoalsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPGoalsTable : UIcarusDataTable {
};

// Class Icarus.GOAPMotivationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPMotivationsLibrary : URowLibrary {

	struct FGOAPMotivationsRowHandle StructToRowHandle(struct FGOAPMotivationsEnum EnumValue); // Function Icarus.GOAPMotivationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170dc30
	struct UE4::FName StructToName(struct FGOAPMotivationsEnum EnumValue); // Function Icarus.GOAPMotivationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170da30
	int32_t StructToInt(struct FGOAPMotivationsEnum EnumValue); // Function Icarus.GOAPMotivationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d850
	struct FGOAPMotivationsEnum RowHandleToStruct(struct FGOAPMotivationsRowHandle RowHandle); // Function Icarus.GOAPMotivationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d650
	void RemoveRowFromGOAPMotivationsTable(struct UE4::FName Name); // Function Icarus.GOAPMotivationsLibrary.RemoveRowFromGOAPMotivationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x170d450
	void RefreshConstants(); // Function Icarus.GOAPMotivationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x170d330
	int32_t NumRows(); // Function Icarus.GOAPMotivationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d2c0
	bool NotEqual_EnumName(struct FGOAPMotivationsEnum A, struct UE4::FName B); // Function Icarus.GOAPMotivationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170d170
	bool NotEqual_EnumEnum(struct FGOAPMotivationsEnum A, struct FGOAPMotivationsEnum B); // Function Icarus.GOAPMotivationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cea0
	struct FGOAPMotivationsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GOAPMotivationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cc30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GOAPMotivationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x170ca80
	struct FGOAPMotivationsRowHandle MakeLiteralGOAPMotivations(struct FGOAPMotivationsRowHandle RowHandle); // Function Icarus.GOAPMotivationsLibrary.MakeLiteralGOAPMotivations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c890
	struct FGOAPMotivationsRowHandle MakeGOAPMotivationsFromIndex(int32_t Index); // Function Icarus.GOAPMotivationsLibrary.MakeGOAPMotivationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c660
	struct FGOAPMotivationsEnum MakeGOAPMotivationsEnum(struct FGOAPMotivationsEnum Enum); // Function Icarus.GOAPMotivationsLibrary.MakeGOAPMotivationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c5e0
	struct FGOAPMotivationsRowHandle MakeGOAPMotivations(struct UE4::FName RowName); // Function Icarus.GOAPMotivationsLibrary.MakeGOAPMotivations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170c540
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GOAPMotivationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x170c150
	struct FGOAPMotivationsEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPMotivationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170bfa0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GOAPMotivationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x170bdf0
	void GetGOAPMotivationsStruct(struct FGOAPMotivationsRowHandle RowHandle, struct FGOAPMotivation& GOAPMotivations, enum class EValid& Paths); // Function Icarus.GOAPMotivationsLibrary.GetGOAPMotivationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170bb30
	bool EqualEqual_FGOAPMotivationsRowHandleFGOAPMotivationsRowHandle(struct FGOAPMotivationsRowHandle RowHandleA, struct FGOAPMotivationsRowHandle RowHandleB); // Function Icarus.GOAPMotivationsLibrary.EqualEqual_FGOAPMotivationsRowHandleFGOAPMotivationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170b6b0
	bool EqualEqual_EnumEnum(struct FGOAPMotivationsEnum A, struct FGOAPMotivationsEnum B); // Function Icarus.GOAPMotivationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170b340
	struct FGOAPMotivationsRowHandle CastToGOAPMotivationsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GOAPMotivationsLibrary.CastToGOAPMotivationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170b040
	void BreakGOAPMotivationsEnum(struct FGOAPMotivationsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GOAPMotivationsLibrary.BreakGOAPMotivationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x170aca0
	void AddRowToGOAPMotivationsTable(struct UE4::FName Name, struct FGOAPMotivation Data, struct FGOAPMotivationsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GOAPMotivationsLibrary.AddRowToGOAPMotivationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170a810
};

// Class Icarus.GOAPMotivationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPMotivationsTable : UIcarusDataTable {
};

// Class Icarus.GOAPPropertiesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPPropertiesLibrary : URowLibrary {

	struct FGOAPPropertiesRowHandle StructToRowHandle(struct FGOAPPropertiesEnum EnumValue); // Function Icarus.GOAPPropertiesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17143b0
	struct UE4::FName StructToName(struct FGOAPPropertiesEnum EnumValue); // Function Icarus.GOAPPropertiesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17141d0
	int32_t StructToInt(struct FGOAPPropertiesEnum EnumValue); // Function Icarus.GOAPPropertiesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713ff0
	struct FGOAPPropertiesEnum RowHandleToStruct(struct FGOAPPropertiesRowHandle RowHandle); // Function Icarus.GOAPPropertiesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713db0
	void RemoveRowFromGOAPPropertiesTable(struct UE4::FName Name); // Function Icarus.GOAPPropertiesLibrary.RemoveRowFromGOAPPropertiesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1713c30
	void RefreshConstants(); // Function Icarus.GOAPPropertiesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1713bd0
	int32_t NumRows(); // Function Icarus.GOAPPropertiesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713b40
	bool NotEqual_EnumName(struct FGOAPPropertiesEnum A, struct UE4::FName B); // Function Icarus.GOAPPropertiesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713870
	bool NotEqual_EnumEnum(struct FGOAPPropertiesEnum A, struct FGOAPPropertiesEnum B); // Function Icarus.GOAPPropertiesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17135a0
	struct FGOAPPropertiesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GOAPPropertiesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17133f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GOAPPropertiesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1713240
	struct FGOAPPropertiesRowHandle MakeLiteralGOAPProperties(struct FGOAPPropertiesRowHandle RowHandle); // Function Icarus.GOAPPropertiesLibrary.MakeLiteralGOAPProperties // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712fd0
	struct FGOAPPropertiesRowHandle MakeGOAPPropertiesFromIndex(int32_t Index); // Function Icarus.GOAPPropertiesLibrary.MakeGOAPPropertiesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712be0
	struct FGOAPPropertiesEnum MakeGOAPPropertiesEnum(struct FGOAPPropertiesEnum Enum); // Function Icarus.GOAPPropertiesLibrary.MakeGOAPPropertiesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712b60
	struct FGOAPPropertiesRowHandle MakeGOAPProperties(struct UE4::FName RowName); // Function Icarus.GOAPPropertiesLibrary.MakeGOAPProperties // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712ac0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GOAPPropertiesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1712910
	struct FGOAPPropertiesEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPPropertiesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712760
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GOAPPropertiesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17125b0
	void GetGOAPPropertiesStruct(struct FGOAPPropertiesRowHandle RowHandle, struct FGOAPProperties& GOAPProperties, enum class EValid& Paths); // Function Icarus.GOAPPropertiesLibrary.GetGOAPPropertiesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17120a0
	bool EqualEqual_FGOAPPropertiesRowHandleFGOAPPropertiesRowHandle(struct FGOAPPropertiesRowHandle RowHandleA, struct FGOAPPropertiesRowHandle RowHandleB); // Function Icarus.GOAPPropertiesLibrary.EqualEqual_FGOAPPropertiesRowHandleFGOAPPropertiesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1711ce0
	bool EqualEqual_EnumEnum(struct FGOAPPropertiesEnum A, struct FGOAPPropertiesEnum B); // Function Icarus.GOAPPropertiesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1711a10
	struct FGOAPPropertiesRowHandle CastToGOAPPropertiesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GOAPPropertiesLibrary.CastToGOAPPropertiesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17116b0
	void BreakGOAPPropertiesEnum(struct FGOAPPropertiesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GOAPPropertiesLibrary.BreakGOAPPropertiesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1711290
	void AddRowToGOAPPropertiesTable(struct UE4::FName Name, struct FGOAPProperties Data, struct FGOAPPropertiesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GOAPPropertiesLibrary.AddRowToGOAPPropertiesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1710a40
};

// Class Icarus.GOAPPropertiesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPPropertiesTable : UIcarusDataTable {
};

// Class Icarus.GOAPSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPSetupLibrary : URowLibrary {

	struct FGOAPSetupRowHandle StructToRowHandle(struct FGOAPSetupEnum EnumValue); // Function Icarus.GOAPSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714460
	struct UE4::FName StructToName(struct FGOAPSetupEnum EnumValue); // Function Icarus.GOAPSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714270
	int32_t StructToInt(struct FGOAPSetupEnum EnumValue); // Function Icarus.GOAPSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714090
	struct FGOAPSetupEnum RowHandleToStruct(struct FGOAPSetupRowHandle RowHandle); // Function Icarus.GOAPSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713e70
	void RemoveRowFromGOAPSetupTable(struct UE4::FName Name); // Function Icarus.GOAPSetupLibrary.RemoveRowFromGOAPSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1713cb0
	void RefreshConstants(); // Function Icarus.GOAPSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1713bf0
	int32_t NumRows(); // Function Icarus.GOAPSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713b70
	bool NotEqual_EnumName(struct FGOAPSetupEnum A, struct UE4::FName B); // Function Icarus.GOAPSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713960
	bool NotEqual_EnumEnum(struct FGOAPSetupEnum A, struct FGOAPSetupEnum B); // Function Icarus.GOAPSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713690
	struct FGOAPSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GOAPSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713480
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GOAPSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17132d0
	struct FGOAPSetupRowHandle MakeLiteralGOAPSetup(struct FGOAPSetupRowHandle RowHandle); // Function Icarus.GOAPSetupLibrary.MakeLiteralGOAPSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17130a0
	struct FGOAPSetupRowHandle MakeGOAPSetupFromIndex(int32_t Index); // Function Icarus.GOAPSetupLibrary.MakeGOAPSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712d90
	struct FGOAPSetupEnum MakeGOAPSetupEnum(struct FGOAPSetupEnum Enum); // Function Icarus.GOAPSetupLibrary.MakeGOAPSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712d10
	struct FGOAPSetupRowHandle MakeGOAPSetup(struct UE4::FName RowName); // Function Icarus.GOAPSetupLibrary.MakeGOAPSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712c70
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GOAPSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17129a0
	struct FGOAPSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17127f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GOAPSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1712640
	void GetGOAPSetupStruct(struct FGOAPSetupRowHandle RowHandle, struct FGOAPSetup& GOAPSetup, enum class EValid& Paths); // Function Icarus.GOAPSetupLibrary.GetGOAPSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1712220
	bool EqualEqual_FGOAPSetupRowHandleFGOAPSetupRowHandle(struct FGOAPSetupRowHandle RowHandleA, struct FGOAPSetupRowHandle RowHandleB); // Function Icarus.GOAPSetupLibrary.EqualEqual_FGOAPSetupRowHandleFGOAPSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1711e20
	bool EqualEqual_EnumEnum(struct FGOAPSetupEnum A, struct FGOAPSetupEnum B); // Function Icarus.GOAPSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1711b00
	struct FGOAPSetupRowHandle CastToGOAPSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GOAPSetupLibrary.CastToGOAPSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17117d0
	void BreakGOAPSetupEnum(struct FGOAPSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GOAPSetupLibrary.BreakGOAPSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17113f0
	void AddRowToGOAPSetupTable(struct UE4::FName Name, struct FGOAPSetup Data, struct FGOAPSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GOAPSetupLibrary.AddRowToGOAPSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1710c50
};

// Class Icarus.GOAPSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPSetupTable : UIcarusDataTable {
};

// Class Icarus.GrantedAurasLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGrantedAurasLibrary : URowLibrary {

	struct FGrantedAurasRowHandle StructToRowHandle(struct FGrantedAurasEnum EnumValue); // Function Icarus.GrantedAurasLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714510
	struct UE4::FName StructToName(struct FGrantedAurasEnum EnumValue); // Function Icarus.GrantedAurasLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714310
	int32_t StructToInt(struct FGrantedAurasEnum EnumValue); // Function Icarus.GrantedAurasLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714130
	struct FGrantedAurasEnum RowHandleToStruct(struct FGrantedAurasRowHandle RowHandle); // Function Icarus.GrantedAurasLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713f30
	void RemoveRowFromGrantedAurasTable(struct UE4::FName Name); // Function Icarus.GrantedAurasLibrary.RemoveRowFromGrantedAurasTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1713d30
	void RefreshConstants(); // Function Icarus.GrantedAurasLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1713c10
	int32_t NumRows(); // Function Icarus.GrantedAurasLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713ba0
	bool NotEqual_EnumName(struct FGrantedAurasEnum A, struct UE4::FName B); // Function Icarus.GrantedAurasLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713a50
	bool NotEqual_EnumEnum(struct FGrantedAurasEnum A, struct FGrantedAurasEnum B); // Function Icarus.GrantedAurasLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713780
	struct FGrantedAurasEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.GrantedAurasLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713510
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.GrantedAurasLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1713360
	struct FGrantedAurasRowHandle MakeLiteralGrantedAuras(struct FGrantedAurasRowHandle RowHandle); // Function Icarus.GrantedAurasLibrary.MakeLiteralGrantedAuras // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1713170
	struct FGrantedAurasRowHandle MakeGrantedAurasFromIndex(int32_t Index); // Function Icarus.GrantedAurasLibrary.MakeGrantedAurasFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712f40
	struct FGrantedAurasEnum MakeGrantedAurasEnum(struct FGrantedAurasEnum Enum); // Function Icarus.GrantedAurasLibrary.MakeGrantedAurasEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712ec0
	struct FGrantedAurasRowHandle MakeGrantedAuras(struct UE4::FName RowName); // Function Icarus.GrantedAurasLibrary.MakeGrantedAuras // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712e20
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.GrantedAurasLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1712a30
	struct FGrantedAurasEnum IntToStruct(int32_t IntValue); // Function Icarus.GrantedAurasLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1712880
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.GrantedAurasLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17126d0
	void GetGrantedAurasStruct(struct FGrantedAurasRowHandle RowHandle, struct FAuraInfo& GrantedAuras, enum class EValid& Paths); // Function Icarus.GrantedAurasLibrary.GetGrantedAurasStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1712410
	bool EqualEqual_FGrantedAurasRowHandleFGrantedAurasRowHandle(struct FGrantedAurasRowHandle RowHandleA, struct FGrantedAurasRowHandle RowHandleB); // Function Icarus.GrantedAurasLibrary.EqualEqual_FGrantedAurasRowHandleFGrantedAurasRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1711f60
	bool EqualEqual_EnumEnum(struct FGrantedAurasEnum A, struct FGrantedAurasEnum B); // Function Icarus.GrantedAurasLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1711bf0
	struct FGrantedAurasRowHandle CastToGrantedAurasRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.GrantedAurasLibrary.CastToGrantedAurasRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17118f0
	void BreakGrantedAurasEnum(struct FGrantedAurasEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.GrantedAurasLibrary.BreakGrantedAurasEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1711550
	void AddRowToGrantedAurasTable(struct UE4::FName Name, struct FAuraInfo Data, struct FGrantedAurasRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.GrantedAurasLibrary.AddRowToGrantedAurasTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1711040
};

// Class Icarus.GrantedAurasTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGrantedAurasTable : UIcarusDataTable {
};

// Class Icarus.SkeletalItem
// Size: 0x400 (Inherited: 0x3f0)
struct ASkeletalItem : AIcarusItem {
	struct USkeletalMeshComponent* SkeletalMeshRoot; // 0x3f0(0x08)
	char pad_3F8[0x8]; // 0x3f8(0x08)
};

// Class Icarus.IcarusCorpse
// Size: 0x420 (Inherited: 0x400)
struct AIcarusCorpse : ASkeletalItem {
	struct UAnimSequence* FPCarryAnim; // 0x3f8(0x08)
	struct UAnimSequence* TPCarryAnim; // 0x400(0x08)
	struct FAISetupRowHandle AISetupRowHandle; // 0x408(0x18)

	void HideInstigator(); // Function Icarus.IcarusCorpse.HideInstigator // (Native|Event|Public|BlueprintEvent) // @ game+0x1734890
	struct FPoseSnapshot GetRagdollPose(); // Function Icarus.IcarusCorpse.GetRagdollPose // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x17338d0
	struct UAnimSequence* GetCarryAnim(); // Function Icarus.IcarusCorpse.GetCarryAnim // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1731bf0
};


// Class Icarus.GravestoneBase
// Size: 0x4f0 (Inherited: 0x420)
struct AGravestoneBase : AIcarusCorpse {
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x420(0x18)
	struct TArray<struct FName> RagdollHitEventBones; // 0x438(0x10)
	struct FGravestoneData GravestoneData; // 0x448(0x88)
	struct TArray<struct FArmourRowHandle> PlayerArmour; // 0x4d0(0x10)
	bool bWasReloaded; // 0x4e0(0x01)
	char pad_4E1[0xf]; // 0x4e1(0x0f)

	void SetPlayerArmour(struct TArray<struct FArmourRowHandle> InArmour); // Function Icarus.GravestoneBase.SetPlayerArmour // (Final|Native|Public|BlueprintCallable) // @ game+0x171a130
	void SetHitEventsEnabled(bool bEnabled); // Function Icarus.GravestoneBase.SetHitEventsEnabled // (Final|Native|Protected|BlueprintCallable) // @ game+0x171a0a0
	void SetGravestoneData(struct FGravestoneData& InData); // Function Icarus.GravestoneBase.SetGravestoneData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1719e70
	void OnRep_PlayerArmour(); // Function Icarus.GravestoneBase.OnRep_PlayerArmour // (Native|Event|Protected|BlueprintEvent) // @ game+0x910a50
	void OnRep_GravestoneData(); // Function Icarus.GravestoneBase.OnRep_GravestoneData // (Native|Event|Protected|BlueprintEvent) // @ game+0x1719b90
	void OnRep_AssignedPlayerCharacterID(); // Function Icarus.GravestoneBase.OnRep_AssignedPlayerCharacterID // (Native|Event|Protected|BlueprintEvent) // @ game+0x1719b70
};

// Class Icarus.GravestoneRecorderComponent
// Size: 0x310 (Inherited: 0x1c0)
struct UGravestoneRecorderComponent : UItemStateRecorderComponent {
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x1c0(0x18)
	struct FGravestoneDataRecord GravestoneData; // 0x1d8(0x120)
	struct TArray<struct FName> PlayerArmour; // 0x2f8(0x10)
	char pad_308[0x8]; // 0x308(0x08)
};

// Class Icarus.GridObjectPlacementComponent
// Size: 0x108 (Inherited: 0xb0)
struct UGridObjectPlacementComponent : UActorComponent {
	float GridUnitSize; // 0xb0(0x04)
	char pad_B4[0x54]; // 0xb4(0x54)

	struct AActor* AddObject(struct FVector& GridCenter, struct FVector& GridSize); // Function Icarus.GridObjectPlacementComponent.AddObject // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1be0000
	void AddLocation(struct FVector& Location); // Function Icarus.GridObjectPlacementComponent.AddLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1717310
};

// Class Icarus.HighlightableComponent
// Size: 0xe8 (Inherited: 0xd0)
struct UHighlightableComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnHighlightChanged; // 0xd0(0x01)
	char pad_D1[0x17]; // 0xd1(0x17)

	void SetHighlight(struct UPrimitiveComponent* Component, bool bHighlighted, int32_t StencilValue); // Function Icarus.HighlightableComponent.SetHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x1719f90
	bool IsHighlighted(); // Function Icarus.HighlightableComponent.IsHighlighted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1718ec0
	bool GetHighlightableData(struct FHighlightableData& OutData); // Function Icarus.HighlightableComponent.GetHighlightableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1718630
	bool CanHighlight(); // Function Icarus.HighlightableComponent.CanHighlight // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1613120
};

// Class Icarus.HighlightableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHighlightableLibrary : URowLibrary {

	struct FHighlightableRowHandle StructToRowHandle(struct FHighlightableEnum EnumValue); // Function Icarus.HighlightableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171a4b0
	struct UE4::FName StructToName(struct FHighlightableEnum EnumValue); // Function Icarus.HighlightableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171a370
	int32_t StructToInt(struct FHighlightableEnum EnumValue); // Function Icarus.HighlightableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171a230
	struct FHighlightableEnum RowHandleToStruct(struct FHighlightableRowHandle RowHandle); // Function Icarus.HighlightableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719cf0
	void RemoveRowFromHighlightableTable(struct UE4::FName Name); // Function Icarus.HighlightableLibrary.RemoveRowFromHighlightableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1719bf0
	void RefreshConstants(); // Function Icarus.HighlightableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1719bb0
	int32_t NumRows(); // Function Icarus.HighlightableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719b10
	bool NotEqual_EnumName(struct FHighlightableEnum A, struct UE4::FName B); // Function Icarus.HighlightableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719930
	bool NotEqual_EnumEnum(struct FHighlightableEnum A, struct FHighlightableEnum B); // Function Icarus.HighlightableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719750
	struct FHighlightableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.HighlightableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719630
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.HighlightableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1719510
	struct FHighlightableRowHandle MakeLiteralHighlightable(struct FHighlightableRowHandle RowHandle); // Function Icarus.HighlightableLibrary.MakeLiteralHighlightable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719370
	struct FHighlightableRowHandle MakeHighlightableFromIndex(int32_t Index); // Function Icarus.HighlightableLibrary.MakeHighlightableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719130
	struct FHighlightableEnum MakeHighlightableEnum(struct FHighlightableEnum Enum); // Function Icarus.HighlightableLibrary.MakeHighlightableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17190b0
	struct FHighlightableRowHandle MakeHighlightable(struct UE4::FName RowName); // Function Icarus.HighlightableLibrary.MakeHighlightable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719010
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.HighlightableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1718ef0
	struct FHighlightableEnum IntToStruct(int32_t IntValue); // Function Icarus.HighlightableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1718da0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.HighlightableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1718c80
	void GetHighlightableStruct(struct FHighlightableRowHandle RowHandle, struct FHighlightableData& Highlightable, enum class EValid& Paths); // Function Icarus.HighlightableLibrary.GetHighlightableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1718790
	bool EqualEqual_FHighlightableRowHandleFHighlightableRowHandle(struct FHighlightableRowHandle RowHandleA, struct FHighlightableRowHandle RowHandleB); // Function Icarus.HighlightableLibrary.EqualEqual_FHighlightableRowHandleFHighlightableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17183b0
	bool EqualEqual_EnumEnum(struct FHighlightableEnum A, struct FHighlightableEnum B); // Function Icarus.HighlightableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17181d0
	struct FHighlightableRowHandle CastToHighlightableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.HighlightableLibrary.CastToHighlightableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1717d80
	void BreakHighlightableEnum(struct FHighlightableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.HighlightableLibrary.BreakHighlightableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17178b0
	void AddRowToHighlightableTable(struct UE4::FName Name, struct FHighlightableData Data, struct FHighlightableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.HighlightableLibrary.AddRowToHighlightableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17173a0
};

// Class Icarus.HighlightableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHighlightableTable : UIcarusDataTable {
};

// Class Icarus.HintsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHintsLibrary : URowLibrary {

	struct FHintsRowHandle StructToRowHandle(struct FHintsEnum EnumValue); // Function Icarus.HintsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171a560
	struct UE4::FName StructToName(struct FHintsEnum EnumValue); // Function Icarus.HintsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171a410
	int32_t StructToInt(struct FHintsEnum EnumValue); // Function Icarus.HintsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171a2d0
	struct FHintsEnum RowHandleToStruct(struct FHintsRowHandle RowHandle); // Function Icarus.HintsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719db0
	void RemoveRowFromHintsTable(struct UE4::FName Name); // Function Icarus.HintsLibrary.RemoveRowFromHintsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1719c70
	void RefreshConstants(); // Function Icarus.HintsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1719bd0
	int32_t NumRows(); // Function Icarus.HintsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719b40
	bool NotEqual_EnumName(struct FHintsEnum A, struct UE4::FName B); // Function Icarus.HintsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719a20
	bool NotEqual_EnumEnum(struct FHintsEnum A, struct FHintsEnum B); // Function Icarus.HintsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719840
	struct FHintsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.HintsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17196c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.HintsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17195a0
	struct FHintsRowHandle MakeLiteralHints(struct FHintsRowHandle RowHandle); // Function Icarus.HintsLibrary.MakeLiteralHints // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719440
	struct FHintsRowHandle MakeHintsFromIndex(int32_t Index); // Function Icarus.HintsLibrary.MakeHintsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17192e0
	struct FHintsEnum MakeHintsEnum(struct FHintsEnum Enum); // Function Icarus.HintsLibrary.MakeHintsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1719260
	struct FHintsRowHandle MakeHints(struct UE4::FName RowName); // Function Icarus.HintsLibrary.MakeHints // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17191c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.HintsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1718f80
	struct FHintsEnum IntToStruct(int32_t IntValue); // Function Icarus.HintsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1718e30
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.HintsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1718d10
	void GetHintsStruct(struct FHintsRowHandle RowHandle, struct FHintsData& Hints, enum class EValid& Paths); // Function Icarus.HintsLibrary.GetHintsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1718910
	bool EqualEqual_FHintsRowHandleFHintsRowHandle(struct FHintsRowHandle RowHandleA, struct FHintsRowHandle RowHandleB); // Function Icarus.HintsLibrary.EqualEqual_FHintsRowHandleFHintsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17184f0
	bool EqualEqual_EnumEnum(struct FHintsEnum A, struct FHintsEnum B); // Function Icarus.HintsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17182c0
	struct FHintsRowHandle CastToHintsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.HintsLibrary.CastToHintsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1717ea0
	void BreakHintsEnum(struct FHintsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.HintsLibrary.BreakHintsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1717a10
	void AddRowToHintsTable(struct UE4::FName Name, struct FHintsData Data, struct FHintsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.HintsLibrary.AddRowToHintsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1717640
};

// Class Icarus.HintsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHintsTable : UIcarusDataTable {
};

// Class Icarus.HitableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UHitableComponent : UTraitComponent {

	void OnHit(); // Function Icarus.HitableComponent.OnHit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16e42d0
	void Hitable(); // Function Icarus.HitableComponent.Hitable // (Final|Native|Public|BlueprintCallable) // @ game+0xe3ae30
	bool GetHitableData(struct FHitableData& OutData); // Function Icarus.HitableComponent.GetHitableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1718ad0
	bool ConsumeHit(struct UActorState* ActorStateIn, struct FIcarusDamagePacket DamagePacket); // Function Icarus.HitableComponent.ConsumeHit // (Native|Event|Public|BlueprintEvent) // @ game+0x1717fc0
	bool CanConsumeHit(struct UActorState* ActorStateIn, struct FIcarusDamagePacket DamagePacket); // Function Icarus.HitableComponent.CanConsumeHit // (Native|Event|Public|BlueprintEvent) // @ game+0x1717b70
};

// Class Icarus.HitableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHitableLibrary : URowLibrary {

	struct FHitableRowHandle StructToRowHandle(struct FHitableEnum EnumValue); // Function Icarus.HitableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fe80
	struct UE4::FName StructToName(struct FHitableEnum EnumValue); // Function Icarus.HitableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fca0
	int32_t StructToInt(struct FHitableEnum EnumValue); // Function Icarus.HitableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fac0
	struct FHitableEnum RowHandleToStruct(struct FHitableRowHandle RowHandle); // Function Icarus.HitableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f880
	void RemoveRowFromHitableTable(struct UE4::FName Name); // Function Icarus.HitableLibrary.RemoveRowFromHitableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x171f700
	void RefreshConstants(); // Function Icarus.HitableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x171f6a0
	int32_t NumRows(); // Function Icarus.HitableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f610
	bool NotEqual_EnumName(struct FHitableEnum A, struct UE4::FName B); // Function Icarus.HitableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f340
	bool NotEqual_EnumEnum(struct FHitableEnum A, struct FHitableEnum B); // Function Icarus.HitableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f070
	struct FHitableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.HitableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171eec0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.HitableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x171ed10
	struct FHitableRowHandle MakeLiteralHitable(struct FHitableRowHandle RowHandle); // Function Icarus.HitableLibrary.MakeLiteralHitable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171eaa0
	struct FHitableRowHandle MakeHitableFromIndex(int32_t Index); // Function Icarus.HitableLibrary.MakeHitableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e6b0
	struct FHitableEnum MakeHitableEnum(struct FHitableEnum Enum); // Function Icarus.HitableLibrary.MakeHitableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e630
	struct FHitableRowHandle MakeHitable(struct UE4::FName RowName); // Function Icarus.HitableLibrary.MakeHitable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e590
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.HitableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x171e3e0
	struct FHitableEnum IntToStruct(int32_t IntValue); // Function Icarus.HitableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e230
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.HitableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x171e080
	void GetHitableStruct(struct FHitableRowHandle RowHandle, struct FHitableData& Hitable, enum class EValid& Paths); // Function Icarus.HitableLibrary.GetHitableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171dbc0
	bool EqualEqual_FHitableRowHandleFHitableRowHandle(struct FHitableRowHandle RowHandleA, struct FHitableRowHandle RowHandleB); // Function Icarus.HitableLibrary.EqualEqual_FHitableRowHandleFHitableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171d800
	bool EqualEqual_EnumEnum(struct FHitableEnum A, struct FHitableEnum B); // Function Icarus.HitableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171d530
	struct FHitableRowHandle CastToHitableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.HitableLibrary.CastToHitableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171d1d0
	void BreakHitableEnum(struct FHitableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.HitableLibrary.BreakHitableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x171cdb0
	void AddRowToHitableTable(struct UE4::FName Name, struct FHitableData Data, struct FHitableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.HitableLibrary.AddRowToHitableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171c710
};

// Class Icarus.HitableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHitableTable : UIcarusDataTable {
};

// Class Icarus.HuntingClue
// Size: 0x2b0 (Inherited: 0x2b0)
struct AHuntingClue : AIcarusActor {
};

// Class Icarus.HuntingClueSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHuntingClueSetupLibrary : URowLibrary {

	struct FHuntingClueSetupRowHandle StructToRowHandle(struct FHuntingClueSetupEnum EnumValue); // Function Icarus.HuntingClueSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171ff30
	struct UE4::FName StructToName(struct FHuntingClueSetupEnum EnumValue); // Function Icarus.HuntingClueSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fd40
	int32_t StructToInt(struct FHuntingClueSetupEnum EnumValue); // Function Icarus.HuntingClueSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fb60
	struct FHuntingClueSetupEnum RowHandleToStruct(struct FHuntingClueSetupRowHandle RowHandle); // Function Icarus.HuntingClueSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f940
	void RemoveRowFromHuntingClueSetupTable(struct UE4::FName Name); // Function Icarus.HuntingClueSetupLibrary.RemoveRowFromHuntingClueSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x171f780
	void RefreshConstants(); // Function Icarus.HuntingClueSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x171f6c0
	int32_t NumRows(); // Function Icarus.HuntingClueSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f640
	bool NotEqual_EnumName(struct FHuntingClueSetupEnum A, struct UE4::FName B); // Function Icarus.HuntingClueSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f430
	bool NotEqual_EnumEnum(struct FHuntingClueSetupEnum A, struct FHuntingClueSetupEnum B); // Function Icarus.HuntingClueSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f160
	struct FHuntingClueSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.HuntingClueSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171ef50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.HuntingClueSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x171eda0
	struct FHuntingClueSetupRowHandle MakeLiteralHuntingClueSetup(struct FHuntingClueSetupRowHandle RowHandle); // Function Icarus.HuntingClueSetupLibrary.MakeLiteralHuntingClueSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171eb70
	struct FHuntingClueSetupRowHandle MakeHuntingClueSetupFromIndex(int32_t Index); // Function Icarus.HuntingClueSetupLibrary.MakeHuntingClueSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e860
	struct FHuntingClueSetupEnum MakeHuntingClueSetupEnum(struct FHuntingClueSetupEnum Enum); // Function Icarus.HuntingClueSetupLibrary.MakeHuntingClueSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e7e0
	struct FHuntingClueSetupRowHandle MakeHuntingClueSetup(struct UE4::FName RowName); // Function Icarus.HuntingClueSetupLibrary.MakeHuntingClueSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e740
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.HuntingClueSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x171e470
	struct FHuntingClueSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.HuntingClueSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e2c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.HuntingClueSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x171e110
	void GetHuntingClueSetupStruct(struct FHuntingClueSetupRowHandle RowHandle, struct FHuntingClueSetup& HuntingClueSetup, enum class EValid& Paths); // Function Icarus.HuntingClueSetupLibrary.GetHuntingClueSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171dd50
	bool EqualEqual_FHuntingClueSetupRowHandleFHuntingClueSetupRowHandle(struct FHuntingClueSetupRowHandle RowHandleA, struct FHuntingClueSetupRowHandle RowHandleB); // Function Icarus.HuntingClueSetupLibrary.EqualEqual_FHuntingClueSetupRowHandleFHuntingClueSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171d940
	bool EqualEqual_EnumEnum(struct FHuntingClueSetupEnum A, struct FHuntingClueSetupEnum B); // Function Icarus.HuntingClueSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171d620
	struct FHuntingClueSetupRowHandle CastToHuntingClueSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.HuntingClueSetupLibrary.CastToHuntingClueSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171d2f0
	void BreakHuntingClueSetupEnum(struct FHuntingClueSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.HuntingClueSetupLibrary.BreakHuntingClueSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x171cf10
	void AddRowToHuntingClueSetupTable(struct UE4::FName Name, struct FHuntingClueSetup Data, struct FHuntingClueSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.HuntingClueSetupLibrary.AddRowToHuntingClueSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171c950
};

// Class Icarus.HuntingClueSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHuntingClueSetupTable : UIcarusDataTable {
};

// Class Icarus.HuntingSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHuntingSetupLibrary : URowLibrary {

	struct FHuntingSetupRowHandle StructToRowHandle(struct FHuntingSetupEnum EnumValue); // Function Icarus.HuntingSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171ffe0
	struct UE4::FName StructToName(struct FHuntingSetupEnum EnumValue); // Function Icarus.HuntingSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fde0
	int32_t StructToInt(struct FHuntingSetupEnum EnumValue); // Function Icarus.HuntingSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fc00
	struct FHuntingSetupEnum RowHandleToStruct(struct FHuntingSetupRowHandle RowHandle); // Function Icarus.HuntingSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171fa00
	void RemoveRowFromHuntingSetupTable(struct UE4::FName Name); // Function Icarus.HuntingSetupLibrary.RemoveRowFromHuntingSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x171f800
	void RefreshConstants(); // Function Icarus.HuntingSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x171f6e0
	int32_t NumRows(); // Function Icarus.HuntingSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f670
	bool NotEqual_EnumName(struct FHuntingSetupEnum A, struct UE4::FName B); // Function Icarus.HuntingSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f520
	bool NotEqual_EnumEnum(struct FHuntingSetupEnum A, struct FHuntingSetupEnum B); // Function Icarus.HuntingSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171f250
	struct FHuntingSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.HuntingSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171efe0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.HuntingSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x171ee30
	struct FHuntingSetupRowHandle MakeLiteralHuntingSetup(struct FHuntingSetupRowHandle RowHandle); // Function Icarus.HuntingSetupLibrary.MakeLiteralHuntingSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171ec40
	struct FHuntingSetupRowHandle MakeHuntingSetupFromIndex(int32_t Index); // Function Icarus.HuntingSetupLibrary.MakeHuntingSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171ea10
	struct FHuntingSetupEnum MakeHuntingSetupEnum(struct FHuntingSetupEnum Enum); // Function Icarus.HuntingSetupLibrary.MakeHuntingSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e990
	struct FHuntingSetupRowHandle MakeHuntingSetup(struct UE4::FName RowName); // Function Icarus.HuntingSetupLibrary.MakeHuntingSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e8f0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.HuntingSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x171e500
	struct FHuntingSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.HuntingSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171e350
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.HuntingSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x171e1a0
	void GetHuntingSetupStruct(struct FHuntingSetupRowHandle RowHandle, struct FHuntingSetup& HuntingSetup, enum class EValid& Paths); // Function Icarus.HuntingSetupLibrary.GetHuntingSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171def0
	bool EqualEqual_FHuntingSetupRowHandleFHuntingSetupRowHandle(struct FHuntingSetupRowHandle RowHandleA, struct FHuntingSetupRowHandle RowHandleB); // Function Icarus.HuntingSetupLibrary.EqualEqual_FHuntingSetupRowHandleFHuntingSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171da80
	bool EqualEqual_EnumEnum(struct FHuntingSetupEnum A, struct FHuntingSetupEnum B); // Function Icarus.HuntingSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x171d710
	struct FHuntingSetupRowHandle CastToHuntingSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.HuntingSetupLibrary.CastToHuntingSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171d410
	void BreakHuntingSetupEnum(struct FHuntingSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.HuntingSetupLibrary.BreakHuntingSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x171d070
	void AddRowToHuntingSetupTable(struct UE4::FName Name, struct FHuntingSetup Data, struct FHuntingSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.HuntingSetupLibrary.AddRowToHuntingSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x171cb40
};

// Class Icarus.HuntingSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHuntingSetupTable : UIcarusDataTable {
};

// Class Icarus.HuntingWidget
// Size: 0x260 (Inherited: 0x260)
struct UHuntingWidget : UUserWidget {
};

// Class Icarus.IcarusActorUIDInterface
// Size: 0x28 (Inherited: 0x28)
struct UIcarusActorUIDInterface : UInterface {

	void SetIcarusUID(int32_t UID); // Function Icarus.IcarusActorUIDInterface.SetIcarusUID // (Native|Public|BlueprintCallable) // @ game+0x1724100
	int32_t GetIcarusUID(); // Function Icarus.IcarusActorUIDInterface.GetIcarusUID // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17227a0
};

// Class Icarus.IcarusActorUIDLibrary
// Size: 0x38 (Inherited: 0x28)
struct UIcarusActorUIDLibrary : UObject {
	char pad_28[0x10]; // 0x28(0x10)

	bool FreeUniqueID(int32_t IDToRemove); // Function Icarus.IcarusActorUIDLibrary.FreeUniqueID // (Final|Native|Public|BlueprintCallable) // @ game+0x17222e0
	int32_t ClaimUniqueID(int32_t SuggestedID); // Function Icarus.IcarusActorUIDLibrary.ClaimUniqueID // (Final|Native|Public|BlueprintCallable) // @ game+0x1722090
};

// Class Icarus.IcarusAIBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAIBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	struct AActor* SpawnNewAI(struct UObject* WorldContextObject, struct FAISetupRowHandle& AISetup, struct FEpicCreaturesRowHandle& EpicCreatureSetup, struct FTransform SpawnTransform, int32_t BaseLevel, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingMethod); // Function Icarus.IcarusAIBlueprintFunctionLibrary.SpawnNewAI // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1724220
	bool SetBaseLevel(struct AActor* AI, int32_t Level); // Function Icarus.IcarusAIBlueprintFunctionLibrary.SetBaseLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1723c60
	bool IsTargetHidden(struct UObject* TargetObject); // Function Icarus.IcarusAIBlueprintFunctionLibrary.IsTargetHidden // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1723760
	bool IsTargetAlive(struct UObject* TargetObject); // Function Icarus.IcarusAIBlueprintFunctionLibrary.IsTargetAlive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17236d0
	bool InitGrowthStats(struct AActor* AI); // Function Icarus.IcarusAIBlueprintFunctionLibrary.InitGrowthStats // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1723490
	bool InitAISetup(struct AActor* AI, struct FAISetupRowHandle& AISetup, struct FEpicCreaturesRowHandle& EpicCreatureSetup); // Function Icarus.IcarusAIBlueprintFunctionLibrary.InitAISetup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1723320
	bool GetProspectSpawnConfig(struct UObject* WorldContextObject, struct FAISpawnConfigData& SpawnConfig); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetProspectSpawnConfig // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1722ff0
	int32_t GetNPCStatWithDefaultValue(struct AActor* SpawnableAI, struct FStatsEnum Stat, int32_t DefaultValue); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetNPCStatWithDefaultValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1722e00
	bool GetLastPerceivedTargetLocation(struct AAIController* Controller, struct AActor* Target, struct FVector& LastSensedLocation, struct FAIStimulus& LastSensedStimulus, bool bUseExactStimulusLocation, bool bProjectResult, enum class ETraceTypeQuery TraceChannel, struct FVector ProjectionExtent); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetLastPerceivedTargetLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17227d0
	struct AActor* GetClosestValidEnemyTarget(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetClosestValidEnemyTarget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17225b0
	struct AActor* GetBestValidEnemyTarget(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetBestValidEnemyTarget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1722520
	struct UObject* GetBestTargetableObject(struct UObject* TargetObject); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetBestTargetableObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1722490
	struct FNavAgentProperties GetBestNavPropertiesForAgent(struct FNavAgentProperties& InAgentProperties); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetBestNavPropertiesForAgent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1722380
};

// Class Icarus.IcarusAISpawnFilter
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAISpawnFilter : UObject {

	bool IsSpawnLocationValid(struct AActor* WorldContext, struct FVector& InLocation, struct TMap<struct FString, int32_t>& FilterParams); // Function Icarus.IcarusAISpawnFilter.IsSpawnLocationValid // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1723520
};

// Class Icarus.IcarusAnimBPFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAnimBPFunctionLibrary : UBlueprintFunctionLibrary {

	float GetMontageSlotWeight(struct UAnimInstance* AnimInstance, struct UE4::FName SlotName, bool bLocalWeight); // Function Icarus.IcarusAnimBPFunctionLibrary.GetMontageSlotWeight // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1722cf0
	bool GetMontageSectionLength(struct UAnimMontage* AnimMontage, struct UE4::FName SectionName, float& Length); // Function Icarus.IcarusAnimBPFunctionLibrary.GetMontageSectionLength // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1722be0
};

// Class Icarus.IcarusAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UIcarusAnimInstance : UAnimInstance {
	struct AIcarusActor* OwningIcarusActor; // 0x2b8(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	bool DoesCurveExist(struct UE4::FName CurveName); // Function Icarus.IcarusAnimInstance.DoesCurveExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17221c0
};

// Class Icarus.IcarusAnimMetaData
// Size: 0x30 (Inherited: 0x28)
struct UIcarusAnimMetaData : UAnimMetaData {
	float SectionWeight; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Icarus.IcarusAnimNotify
// Size: 0x58 (Inherited: 0x38)
struct UIcarusAnimNotify : UAnimNotify {
	struct UTraitComponent* TargetComponent; // 0x38(0x08)
	struct FString NotifyName; // 0x40(0x10)
	bool TriggerWhenMontageReversed; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Icarus.IcarusAnimNotify_UpdateNPCStance
// Size: 0x40 (Inherited: 0x38)
struct UIcarusAnimNotify_UpdateNPCStance : UAnimNotify {
	enum class EGOAPCharacterStance NewStance; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Icarus.IcarusAudioFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAudioFunctionLibrary : UBlueprintFunctionLibrary {

	void StopAllEvents(); // Function Icarus.IcarusAudioFunctionLibrary.StopAllEvents // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17244b0
	void SetEventAudioContextParameters(struct AActor* ContextActor, struct FFMODEventInstance EventInstance, bool bUseOcclusion, struct UE4::FName TracePoint, bool bUseWaterImmersion); // Function Icarus.IcarusAudioFunctionLibrary.SetEventAudioContextParameters // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1723ed0
	void SetComponentAudioContextParameters(struct AActor* ContextActor, struct UFMODAudioComponent* AudioComponent, bool bUseOcclusion, struct UE4::FName TracePoint, bool bUseWaterImmersion); // Function Icarus.IcarusAudioFunctionLibrary.SetComponentAudioContextParameters // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1723d30
	void SetAudioComponentPlayState(struct UFMODAudioComponent* AudioComponent, bool bShouldPlay); // Function Icarus.IcarusAudioFunctionLibrary.SetAudioComponentPlayState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1723ba0
	void RegisterEventInstanceToUseListenerRotation(struct FFMODEventInstance Instance); // Function Icarus.IcarusAudioFunctionLibrary.RegisterEventInstanceToUseListenerRotation // (Final|Native|Static|Public) // @ game+0x1723b30
	void PlayReplicatedOneShot(struct UObject* WorldContext, struct UFMODEvent* Event, struct FTransform Transform, bool bUseListenerRotation, bool bUseOcclusion); // Function Icarus.IcarusAudioFunctionLibrary.PlayReplicatedOneShot // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17238f0
	bool LocationIsInAudibleRangeOfEvent(struct FVector Location, struct UFMODEvent* Event); // Function Icarus.IcarusAudioFunctionLibrary.LocationIsInAudibleRangeOfEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17237f0
	float GetSimpleOcclusionOnce(struct UObject* WorldContextObject, struct FVector Location, struct AActor* IgnoreActor); // Function Icarus.IcarusAudioFunctionLibrary.GetSimpleOcclusionOnce // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x17231b0
	struct FTransform GetNearestListenerTransform(struct FVector TargetLocation); // Function Icarus.IcarusAudioFunctionLibrary.GetNearestListenerTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1722f20
	struct UAudioContextComponent* GetLocalPlayerAudioContext(struct UObject* WorldContextObject); // Function Icarus.IcarusAudioFunctionLibrary.GetLocalPlayerAudioContext // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1722b50
	struct FVector GetListenerLocation(struct UObject* WorldContextObject); // Function Icarus.IcarusAudioFunctionLibrary.GetListenerLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1722ab0
	float GetEventMaxDistance(struct UFMODEvent* Event); // Function Icarus.IcarusAudioFunctionLibrary.GetEventMaxDistance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17226d0
	float GetEventLengthInSeconds(struct UFMODEvent* Event); // Function Icarus.IcarusAudioFunctionLibrary.GetEventLengthInSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1722640
	bool EventInstanceIsInAudibleRange(struct FFMODEventInstance EventInstance); // Function Icarus.IcarusAudioFunctionLibrary.EventInstanceIsInAudibleRange // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1722260
};

// Class Icarus.IcarusFirearmAnimInstance
// Size: 0xb10 (Inherited: 0x2d0)
struct UIcarusFirearmAnimInstance : UIcarusAnimInstance {
	struct UActionableBehaviour* ActionableBehaviour; // 0x2d0(0x08)
	bool bAnimDataLoaded; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	struct FFirearmData FirearmData; // 0x2e0(0x6f0)
	struct FFirearmAnimData AnimData; // 0x9d0(0x130)
	float CurrentCharge; // 0xb00(0x04)
	bool bIsADS; // 0xb04(0x01)
	char pad_B05[0x3]; // 0xb05(0x03)
	float CurrentAimAlpha; // 0xb08(0x04)
	char pad_B0C[0x4]; // 0xb0c(0x04)
};

// Class Icarus.IcarusBowAnimInstance
// Size: 0xb10 (Inherited: 0xb10)
struct UIcarusBowAnimInstance : UIcarusFirearmAnimInstance {

	bool IsHandConnectedToString(); // Function Icarus.IcarusBowAnimInstance.IsHandConnectedToString // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x17286e0
};

// Class Icarus.IcarusCameraSpringArm
// Size: 0x2b0 (Inherited: 0x280)
struct UIcarusCameraSpringArm : USpringArmComponent {
	bool bThirdPerson; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FVector ThirdPersonOffset; // 0x284(0x0c)
	struct FVector FirstPersonOffset; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct AController* DesiredRotationController; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	void UpdateArmPosition(); // Function Icarus.IcarusCameraSpringArm.UpdateArmPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x172be80
	void ToggleCameraMode(); // Function Icarus.IcarusCameraSpringArm.ToggleCameraMode // (Final|Native|Public|BlueprintCallable) // @ game+0x172bc40
	void StopRecording(); // Function Icarus.IcarusCameraSpringArm.StopRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x172bb70
	void StartRecording(); // Function Icarus.IcarusCameraSpringArm.StartRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x172baa0
	void SetRotationLock(bool Locked); // Function Icarus.IcarusCameraSpringArm.SetRotationLock // (Final|Native|Public|BlueprintCallable) // @ game+0x172b980
	void ReadRecording(); // Function Icarus.IcarusCameraSpringArm.ReadRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x172b730
};

// Class Icarus.IcarusSessionBase
// Size: 0x320 (Inherited: 0x30)
struct UIcarusSessionBase : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x260]; // 0x50(0x260)
	struct UConfirmationPopupBase* ConfirmationPopup; // 0x2b0(0x08)
	struct UFindSessionsCallbackProxyAdvanced* FindSessionsCallbackProxy; // 0x2b8(0x08)
	struct UJoinSessionCallbackProxyAdvanced* JoinSessionCallbackProxy; // 0x2c0(0x08)
	struct UDestroySessionCallbackProxyAdvanced* DestroySessionCallbackProxy; // 0x2c8(0x08)
	struct UCancelFindSessionsCallbackProxy* CancelFindSessionsCallbackProxy; // 0x2d0(0x08)
	bool bFindSessionsRetry; // 0x2d8(0x01)
	char pad_2D9[0x3]; // 0x2d9(0x03)
	int32_t FindSessionRetryAttempts; // 0x2dc(0x04)
	int32_t FindSessionRetryAttemptsMax; // 0x2e0(0x04)
	float FindSessionsRetryTime; // 0x2e4(0x04)
	float FindSessionsRetryMaxTime; // 0x2e8(0x04)
	float SessionNodeTime; // 0x2ec(0x04)
	float SessionNodeMaxTime; // 0x2f0(0x04)
	char pad_2F4[0x24]; // 0x2f4(0x24)
	struct UResetCharacterProspectStateCallbackProxyGen* ResetCharacterProspectStateCallback; // 0x318(0x08)

	bool SessionTick(float DeltaSeconds); // Function Icarus.IcarusSessionBase.SessionTick // (Native|Protected) // @ game+0x176b960
	void ResetCharacterProspectStateCallbackSuccess(struct FResResetCharacterProspectState& Response); // Function Icarus.IcarusSessionBase.ResetCharacterProspectStateCallbackSuccess // (Final|Native|Public|HasOutParms) // @ game+0x176b890
	void ResetCharacterProspectStateCallbackFailure(struct FResResetCharacterProspectState& Response); // Function Icarus.IcarusSessionBase.ResetCharacterProspectStateCallbackFailure // (Final|Native|Public|HasOutParms) // @ game+0x176b890
	void OnPackagedLoadoutUpdated(); // Function Icarus.IcarusSessionBase.OnPackagedLoadoutUpdated // (Final|Native|Protected) // @ game+0x176b2e0
	void OnPackagedLoadoutSuccess(); // Function Icarus.IcarusSessionBase.OnPackagedLoadoutSuccess // (Native|Protected) // @ game+0x176b2c0
	void OnPackagedLoadoutFailure(); // Function Icarus.IcarusSessionBase.OnPackagedLoadoutFailure // (Native|Protected) // @ game+0x176b2a0
	void OnJoinedSessionSuccess(); // Function Icarus.IcarusSessionBase.OnJoinedSessionSuccess // (Native|Protected) // @ game+0x176b280
	void OnJoinedSessionFailure(); // Function Icarus.IcarusSessionBase.OnJoinedSessionFailure // (Native|Protected) // @ game+0x176b260
	void OnFindHostedSessionSuccess(struct TArray<struct FBlueprintSessionResult>& Results); // Function Icarus.IcarusSessionBase.OnFindHostedSessionSuccess // (Native|Protected|HasOutParms) // @ game+0x176b190
	void OnFindHostedSessionFailure(struct TArray<struct FBlueprintSessionResult>& Results); // Function Icarus.IcarusSessionBase.OnFindHostedSessionFailure // (Native|Protected|HasOutParms) // @ game+0x176b0c0
	void OnDestroyedSessionSuccess(); // Function Icarus.IcarusSessionBase.OnDestroyedSessionSuccess // (Native|Protected) // @ game+0x176af00
	void OnDestroyedSessionFailure(); // Function Icarus.IcarusSessionBase.OnDestroyedSessionFailure // (Native|Protected) // @ game+0x176aee0
	void OnCancelFindSessionsSuccess(); // Function Icarus.IcarusSessionBase.OnCancelFindSessionsSuccess // (Native|Protected) // @ game+0x176aec0
	void OnCancelFindSessionsFailure(); // Function Icarus.IcarusSessionBase.OnCancelFindSessionsFailure // (Native|Protected) // @ game+0x176aea0
};

// Class Icarus.IcarusCanJoinSession
// Size: 0x328 (Inherited: 0x320)
struct UIcarusCanJoinSession : UIcarusSessionBase {
	struct UCanJoinProspectCallbackProxyGen* CanJoinProspectCallbackProxy; // 0x320(0x08)

	void OnCanJoinProspectSuccess(struct FResCanJoinProspect& Result); // Function Icarus.IcarusCanJoinSession.OnCanJoinProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x1728c00
	void OnCanJoinProspectFailure(struct FResCanJoinProspect& Result); // Function Icarus.IcarusCanJoinSession.OnCanJoinProspectFailure // (Native|Protected|HasOutParms) // @ game+0x1728b60
	struct UIcarusCanJoinSession* IcarusCanJoinSession(struct UObject* WorldContextObject, struct FProspectInfo& ProspectInfo, struct APlayerController* PlayerController); // Function Icarus.IcarusCanJoinSession.IcarusCanJoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1727c90
};

// Class Icarus.IcarusCaveAISpawner
// Size: 0x278 (Inherited: 0x220)
struct AIcarusCaveAISpawner : AActor {
	struct TMap<struct AActor*, struct FCaveSpawnConfig> CaveActorSpawnMap; // 0x220(0x50)
	struct UIcarusStatContainer* StatContainer; // 0x270(0x08)

	void WorldStatsSet(); // Function Icarus.IcarusCaveAISpawner.WorldStatsSet // (Final|Native|Private) // @ game+0x172bea0
};

// Class Icarus.IcarusCharacter
// Size: 0x5c0 (Inherited: 0x4c0)
struct AIcarusCharacter : ACharacter {
	char pad_4C0[0x28]; // 0x4c0(0x28)
	struct UIcarusStatContainer* StatContainer; // 0x4e8(0x08)
	struct UCharacterState* ActorState; // 0x4f0(0x08)
	struct FAIRelationshipsRowHandle AIRelationshipTableRowNew; // 0x4f8(0x18)
	float MinFallTime; // 0x510(0x04)
	char pad_514[0x4]; // 0x514(0x04)
	struct UCurveFloat* FallDamageCurve; // 0x518(0x08)
	float PlayerNoiseInterpSpeed; // 0x520(0x04)
	float PlayerNoiseInterpDelay; // 0x524(0x04)
	float ReferenceLoudnessRange; // 0x528(0x04)
	float PlayerNoise; // 0x52c(0x04)
	char pad_530[0x10]; // 0x530(0x10)
	struct FGameplayTagContainer GameplayTags; // 0x540(0x20)
	char bIsSprinting : 1; // 0x560(0x01)
	char bIsAiming : 1; // 0x560(0x01)
	char bIsReloading : 1; // 0x560(0x01)
	char pad_560_3 : 5; // 0x560(0x01)
	char pad_561[0x7]; // 0x561(0x07)
	struct ULadderComponent* LadderReference; // 0x568(0x08)
	char pad_570[0x50]; // 0x570(0x50)

	void TryApplyFallDamage(enum class EMovementMode PreviousMoveMode); // Function Icarus.IcarusCharacter.TryApplyFallDamage // (Final|Native|Public) // @ game+0x172be00
	void StopSprint(bool bClientSimulation); // Function Icarus.IcarusCharacter.StopSprint // (Native|Public|BlueprintCallable) // @ game+0x172bbb0
	void StopReloading(); // Function Icarus.IcarusCharacter.StopReloading // (Native|Public|BlueprintCallable) // @ game+0x172bb90
	void StopAim(bool bClientSimulation); // Function Icarus.IcarusCharacter.StopAim // (Native|Public|BlueprintCallable) // @ game+0x172bae0
	void StartReloading(); // Function Icarus.IcarusCharacter.StartReloading // (Native|Public|BlueprintCallable) // @ game+0x172bac0
	void Sprint(bool bClientSimulation); // Function Icarus.IcarusCharacter.Sprint // (Native|Public|BlueprintCallable) // @ game+0x172ba10
	void SpawnHitEffects(struct FTransform SpawnTransform, enum class EPhysicalSurface HitSurface, struct AActor* HitActor); // Function Icarus.IcarusCharacter.SpawnHitEffects // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void ReportCharacterNoiseEvent(struct FVector NoiseLocation, float Loudness, struct AActor* InstigatingActor, float MaxRange, struct UE4::FName Tag); // Function Icarus.IcarusCharacter.ReportCharacterNoiseEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x172b750
	void OnTakeCollisionDamage(float Damage, struct AController* DamageInstigator, struct AActor* DamageCauser, struct FHitResult Hit); // Function Icarus.IcarusCharacter.OnTakeCollisionDamage // (Native|Event|Public|BlueprintEvent) // @ game+0x172b3a0
	void OnStatContainerUpdated_Internal(); // Function Icarus.IcarusCharacter.OnStatContainerUpdated_Internal // (Final|Native|Public) // @ game+0x172b380
	void OnRep_IsSprinting(); // Function Icarus.IcarusCharacter.OnRep_IsSprinting // (Native|Protected) // @ game+0x1728ff0
	void OnRep_IsReloading(); // Function Icarus.IcarusCharacter.OnRep_IsReloading // (Final|Native|Protected) // @ game+0x1728fd0
	void OnRep_IsAiming(); // Function Icarus.IcarusCharacter.OnRep_IsAiming // (Final|Native|Protected) // @ game+0x1728fb0
	void OnFallDamageApplied(float DamageApplied, float FallSpeed, float FallStrength); // Function Icarus.IcarusCharacter.OnFallDamageApplied // (Native|Event|Public|BlueprintEvent) // @ game+0x1728e50
	void OnCharacterDamaged(struct FIcarusDamagePacket DamagePacket); // Function Icarus.IcarusCharacter.OnCharacterDamaged // (Native|Event|Public|BlueprintEvent) // @ game+0x1728ca0
	void Multicast_StopReplicatedMontage(struct UAnimMontage* Montage); // Function Icarus.IcarusCharacter.Multicast_StopReplicatedMontage // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0xef15c0
	void Multicast_SpawnHitEffects(struct FTransform SpawnTransform, enum class EPhysicalSurface HitSurface, struct AActor* HitActor); // Function Icarus.IcarusCharacter.Multicast_SpawnHitEffects // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x17289d0
	void Multicast_PlayReplicatedMontage(struct UAnimMontage* Montage, struct UE4::FName StartingSection, float PlayRate, bool bSkipServer); // Function Icarus.IcarusCharacter.Multicast_PlayReplicatedMontage // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x1728870
	void Multicast_JumpToMontageSection(struct UAnimMontage* Montage, struct UE4::FName Section); // Function Icarus.IcarusCharacter.Multicast_JumpToMontageSection // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x17287a0
	bool IsSprinting(); // Function Icarus.IcarusCharacter.IsSprinting // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1728770
	bool IsReloading(); // Function Icarus.IcarusCharacter.IsReloading // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1728740
	bool IsAiming(); // Function Icarus.IcarusCharacter.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17286b0
	struct FVector GetDamageSourceLocation(); // Function Icarus.IcarusCharacter.GetDamageSourceLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1727c10
	void Aim(bool bClientSimulation); // Function Icarus.IcarusCharacter.Aim // (Native|Public|BlueprintCallable) // @ game+0x1727650
};

// Class Icarus.IcarusCharacterAnimInstance
// Size: 0x2e0 (Inherited: 0x2d0)
struct UIcarusCharacterAnimInstance : UIcarusAnimInstance {
	struct AIcarusItem* FocusedItem; // 0x2d0(0x08)
	struct AIcarusPlayerCharacter* OwningCharacter; // 0x2d8(0x08)

	void SetFocusedItem(struct AIcarusItem* Item); // Function Icarus.IcarusCharacterAnimInstance.SetFocusedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x172b8f0
	void OnFocusedItemUpdated(struct AIcarusItem* Item); // Function Icarus.IcarusCharacterAnimInstance.OnFocusedItemUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x1728f40
};

// Class Icarus.IcarusCharacterFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusCharacterFunctionLibrary : UBlueprintFunctionLibrary {

	int32_t CalculatePlayerLevel(int32_t ExperiencePoints, struct FCharacterGrowthRowHandle GrowthRowHandle); // Function Icarus.IcarusCharacterFunctionLibrary.CalculatePlayerLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17276e0
};

// Class Icarus.IcarusCheatManager
// Size: 0x78 (Inherited: 0x78)
struct UIcarusCheatManager : UCheatManager {
};

// Class Icarus.IcarusCheatsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusCheatsFunctionLibrary : UBlueprintFunctionLibrary {

	void QueueAutomationScript(struct UObject* WorldContextObject, struct FName& ScriptName, struct FLatentActionInfo LatentInfo); // Function Icarus.IcarusCheatsFunctionLibrary.QueueAutomationScript // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x172b5e0
	bool IsCheatsEnabled(); // Function Icarus.IcarusCheatsFunctionLibrary.IsCheatsEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x9643a0
	void IfCheatsEnabled(enum class ECheatsEnabled& Paths); // Function Icarus.IcarusCheatsFunctionLibrary.IfCheatsEnabled // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1728630
	struct ACheatController* GetCheatController(struct UObject* WorldContextObject, int32_t PlayerIndex, enum class EValid& Paths); // Function Icarus.IcarusCheatsFunctionLibrary.GetCheatController // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1727b00
	void EvaluateCheatScript(struct UObject* WorldContextObject, struct TArray<struct FString>& ScriptLines, struct FLatentActionInfo LatentInfo); // Function Icarus.IcarusCheatsFunctionLibrary.EvaluateCheatScript // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1727990
	void EvaluateAutomationScript(struct UObject* WorldContextObject, struct TArray<struct FString>& ScriptLines, struct FLatentActionInfo LatentInfo); // Function Icarus.IcarusCheatsFunctionLibrary.EvaluateAutomationScript // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1727990
};

// Class Icarus.IcarusClaimLaunchSession
// Size: 0x370 (Inherited: 0x320)
struct UIcarusClaimLaunchSession : UIcarusSessionBase {
	struct TMap<enum class EIcarusClaimLaunchConfirmationStep, struct FConfirmationPopupDetails> ConfirmationSetups; // 0x320(0x50)

	struct UIcarusClaimLaunchSession* IcarusClaimLaunchSession(struct UObject* WorldContextObject, struct FProspectInfo& ProspectInfo, struct APlayerController* PlayerController, struct FOnlineProfileCharacter OnlineProfileCharacter, struct UConfirmationPopupBase* InConfirmationPopup, struct TMap<enum class EIcarusClaimLaunchConfirmationStep, struct FConfirmationPopupDetails> ConfirmationSetups); // Function Icarus.IcarusClaimLaunchSession.IcarusClaimLaunchSession // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x1727e90
	void ClaimProspectResult(bool Success, struct FProspectInfo& ProspectInfo); // Function Icarus.IcarusClaimLaunchSession.ClaimProspectResult // (Final|Native|Protected|HasOutParms) // @ game+0x17277d0
};

// Class Icarus.IcarusContainerManagerRecorderComponent
// Size: 0x170 (Inherited: 0x160)
struct UIcarusContainerManagerRecorderComponent : UActorStateRecorderComponent {
	int32_t NumInventories; // 0x158(0x04)
	struct TArray<struct FSavedInventoryContainerData> SavedInventoryContainers; // 0x160(0x10)
};

// Class Icarus.IcarusController
// Size: 0x598 (Inherited: 0x590)
struct AIcarusController : APlayerController {
	struct FMulticastSparseDelegate OnItemGained; // 0x590(0x01)
	char pad_591[0x7]; // 0x591(0x07)

	void TriggerQuickMoveType(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusController.TriggerQuickMoveType // (Final|Native|Public|BlueprintCallable) // @ game+0x172bd30
	void TriggerQuickMove(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusController.TriggerQuickMove // (Final|Native|Public|BlueprintCallable) // @ game+0x172bc60
	bool PickupAll(struct UInventory* Inventory); // Function Icarus.IcarusController.PickupAll // (Final|Native|Public|BlueprintCallable) // @ game+0x172b540
	void OnServer_UseItemAuto(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use); // Function Icarus.IcarusController.OnServer_UseItemAuto // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172b210
	void OnServer_UseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use); // Function Icarus.IcarusController.OnServer_UseItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172b0a0
	void OnServer_TransferAllOfType(struct UInventory* FromInventory, struct UInventory* ToInventory, struct FItemsStaticRowHandle Type); // Function Icarus.IcarusController.OnServer_TransferAllOfType // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172af00
	void OnServer_TransferAll(struct UInventory* FromInventory, struct UInventory* ToInventory); // Function Icarus.IcarusController.OnServer_TransferAll // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172ae00
	void OnServer_TakeAll(struct UInventory* Inventory); // Function Icarus.IcarusController.OnServer_TakeAll // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172ad40
	void OnServer_ShiftItemAuto(struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory); // Function Icarus.IcarusController.OnServer_ShiftItemAuto // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172abf0
	void OnServer_ShiftItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory, int32_t DestinationLocation, int32_t Amount); // Function Icarus.IcarusController.OnServer_ShiftItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x172aa30
	void OnServer_QuickMoveType(struct UInventory* Inventory, int32_t Slot, struct UInventoryComponent* LinkedActorInventory); // Function Icarus.IcarusController.OnServer_QuickMoveType // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x172a8e0
	void OnServer_QuickMoveItem(struct UInventory* Inventory, int32_t Slot, struct UInventoryComponent* LinkedActorInventory); // Function Icarus.IcarusController.OnServer_QuickMoveItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x172a790
	void OnServer_BounceItem(struct FItemData Item); // Function Icarus.IcarusController.OnServer_BounceItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1729fd0
	void OnServer_AddItemCheat(struct UInventory* SourceInventory, struct FItemData ItemData); // Function Icarus.IcarusController.OnServer_AddItemCheat // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17297d0
	void OnServer_AddItem(struct FItemData ItemTemplate); // Function Icarus.IcarusController.OnServer_AddItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1729010
	bool IsOnProspect(); // Function Icarus.IcarusController.IsOnProspect // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1728710
	struct UInventoryComponent* GetDynamicWidgetInventory(); // Function Icarus.IcarusController.GetDynamicWidgetInventory // (Native|Event|Public|BlueprintEvent) // @ game+0x1727c60
};

// Class Icarus.IcarusCorpseAnimInstance
// Size: 0x320 (Inherited: 0x2d0)
struct UIcarusCorpseAnimInstance : UIcarusAnimInstance {
	struct AIcarusCorpse* OwningCorpse; // 0x2d0(0x08)
	struct UAnimSequence* CarryAnim; // 0x2d8(0x08)
	struct FPoseSnapshot RagdollPose; // 0x2e0(0x38)
	bool bIsThirdPerson; // 0x318(0x01)
	bool bIsCarried; // 0x319(0x01)
	char pad_31A[0x6]; // 0x31a(0x06)
};

// Class Icarus.IcarusCreatureAnimInstance
// Size: 0x350 (Inherited: 0x2d0)
struct UIcarusCreatureAnimInstance : UIcarusAnimInstance {
	bool bIsSwimming; // 0x2d0(0x01)
	char pad_2D1[0x3]; // 0x2d1(0x03)
	float PawnVelocity; // 0x2d4(0x04)
	float PawnDirection; // 0x2d8(0x04)
	float IKStrength; // 0x2dc(0x04)
	bool bIKEnabled; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	struct UE4::FName DisableIKCurveName; // 0x2e4(0x08)
	enum class ELookAtType LookAtType; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	float LookYaw; // 0x2f0(0x04)
	float LookPitch; // 0x2f4(0x04)
	struct FVector LookLocation; // 0x2f8(0x0c)
	bool bWithinViewAngle; // 0x304(0x01)
	bool bShouldRagdoll; // 0x305(0x01)
	char pad_306[0x2]; // 0x306(0x02)
	struct FPoseSnapshot RagdollPose; // 0x308(0x38)
	enum class EMovementState CurrentMovementState; // 0x340(0x01)
	char pad_341[0xf]; // 0x341(0x0f)

	void UpdateLookAtValues(); // Function Icarus.IcarusCreatureAnimInstance.UpdateLookAtValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1736550
	float UpdateIKStrength(float DeltaSeconds); // Function Icarus.IcarusCreatureAnimInstance.UpdateIKStrength // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x17364b0
	void OnIKSettingsUpdated(bool bNewIKEnabled); // Function Icarus.IcarusCreatureAnimInstance.OnIKSettingsUpdated // (Final|Native|Protected) // @ game+0x1734ca0
};

// Class Icarus.IcarusCriticalHitComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UIcarusCriticalHitComponent : UActorComponent {

	void SetLuckyBuffer(float NewLuckyBuffer); // Function Icarus.IcarusCriticalHitComponent.SetLuckyBuffer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1735f30
	void SetIgnoreDamage(bool bIgnore); // Function Icarus.IcarusCriticalHitComponent.SetIgnoreDamage // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1735de0
	void SetDebug(bool bDebug); // Function Icarus.IcarusCriticalHitComponent.SetDebug // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1735ae0
	void SetCriticalHitConfig(struct FName& Name); // Function Icarus.IcarusCriticalHitComponent.SetCriticalHitConfig // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	float GetLuckyBuffer(); // Function Icarus.IcarusCriticalHitComponent.GetLuckyBuffer // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	bool GetIgnoreDamage(); // Function Icarus.IcarusCriticalHitComponent.GetIgnoreDamage // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	bool GetDebug(); // Function Icarus.IcarusCriticalHitComponent.GetDebug // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void BP_SetLuckyBuffer(float NewLuckyBuffer); // Function Icarus.IcarusCriticalHitComponent.BP_SetLuckyBuffer // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void BP_SetIgnoreDamage(bool bIgnore); // Function Icarus.IcarusCriticalHitComponent.BP_SetIgnoreDamage // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void BP_SetDebug(bool bDebug); // Function Icarus.IcarusCriticalHitComponent.BP_SetDebug // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusDamageType
// Size: 0x48 (Inherited: 0x40)
struct UIcarusDamageType : UDamageType {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Icarus.PureDamage
// Size: 0x48 (Inherited: 0x48)
struct UPureDamage : UIcarusDamageType {
};

// Class Icarus.PhysicalDamage
// Size: 0x48 (Inherited: 0x48)
struct UPhysicalDamage : UIcarusDamageType {
};

// Class Icarus.FireDamage
// Size: 0x48 (Inherited: 0x48)
struct UFireDamage : UIcarusDamageType {
};

// Class Icarus.FallDamage
// Size: 0x48 (Inherited: 0x48)
struct UFallDamage : UIcarusDamageType {
};

// Class Icarus.CollisionDamage
// Size: 0x48 (Inherited: 0x48)
struct UCollisionDamage : UIcarusDamageType {
};

// Class Icarus.PoisonDamage
// Size: 0x48 (Inherited: 0x48)
struct UPoisonDamage : UIcarusDamageType {
};

// Class Icarus.WindDamage
// Size: 0x48 (Inherited: 0x48)
struct UWindDamage : UIcarusDamageType {
};

// Class Icarus.IcarusDataTableGenerationLibrary
// Size: 0x118 (Inherited: 0x118)
struct UIcarusDataTableGenerationLibrary : UDataTableValidationLibrary {
};

// Class Icarus.IcarusEQSTestingPawn
// Size: 0x560 (Inherited: 0x550)
struct AIcarusEQSTestingPawn : AEQSTestingPawn {
	struct FMulticastInlineDelegate OnEQSQueryComplete; // 0x550(0x10)

	void SetEQS(struct UEnvQuery* Template); // Function Icarus.IcarusEQSTestingPawn.SetEQS // (Final|Native|Public|BlueprintCallable) // @ game+0x1735b70
	void RunEQSQueryTest(); // Function Icarus.IcarusEQSTestingPawn.RunEQSQueryTest // (Final|Native|Public|BlueprintCallable) // @ game+0x1735120
	bool GetEQSResultsAsLocations(struct TArray<struct FVector>& OutLocations); // Function Icarus.IcarusEQSTestingPawn.GetEQSResultsAsLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1732450
};

// Class Icarus.IcarusErrorSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UIcarusErrorSubsystem : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)

	void RequestErrorsForAction(enum class EErrorAction Action); // Function Icarus.IcarusErrorSubsystem.RequestErrorsForAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1734fb0
	void PushError(struct FErrorCodesEnum ErrorCode, enum class EErrorTarget Target, enum class EErrorAction ErrorAction); // Function Icarus.IcarusErrorSubsystem.PushError // (Final|Native|Public|BlueprintCallable) // @ game+0x1734d30
};

// Class Icarus.IcarusFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusFunctionLibrary : UBlueprintFunctionLibrary {

	struct FVector2D WorldLocationToHeatmapUV(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.WorldLocationToHeatmapUV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1736570
	bool TriggerExperienceEvent(struct AActor* Target, enum class EExperienceSource Type, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.TriggerExperienceEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17363b0
	int32_t TriggerAfflictionChance(struct AActor* Parent, struct FAfflictionChanceRowHandle Affliction, struct AActor* Causer, struct AController* Instigator); // Function Icarus.IcarusFunctionLibrary.TriggerAfflictionChance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1736210
	struct FColor TemperatureToColor(int32_t Temperature); // Function Icarus.IcarusFunctionLibrary.TemperatureToColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1736180
	void SetWidgetNavigation(bool AllowAnalog, bool AllowKey, bool AllowTab); // Function Icarus.IcarusFunctionLibrary.SetWidgetNavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1736070
	void SetPrimitveNeverDistanceCull(struct UPrimitiveComponent* PrimitveComponent, bool NewState); // Function Icarus.IcarusFunctionLibrary.SetPrimitveNeverDistanceCull // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1735fb0
	void SetLandscapeCollisionProfile(struct ALandscapeProxy* Landscape, struct UE4::FName ProfileName); // Function Icarus.IcarusFunctionLibrary.SetLandscapeCollisionProfile // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1735e70
	bool SetGameplayTagContainer(struct UObject* InAsset, struct FGameplayTagContainer& InContainer); // Function Icarus.IcarusFunctionLibrary.SetGameplayTagContainer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1735cd0
	bool SetFarShadowsForComponent(struct UPrimitiveComponent* Component, bool bFarShadowsEnabled); // Function Icarus.IcarusFunctionLibrary.SetFarShadowsForComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1735c00
	bool SetContactShadowsForComponent(struct UPrimitiveComponent* Component, bool bContactShadowsEnabled); // Function Icarus.IcarusFunctionLibrary.SetContactShadowsForComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1735a10
	struct FColor SampleTemperatureColorAtLocation(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleTemperatureColorAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1735930
	int32_t SampleTemperatureAtLocation(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleTemperatureAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1735860
	bool SampleLocationOutOfBounds(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleLocationOutOfBounds // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1735790
	struct FColor SampleHeatmapWithUV(struct UGameplayTexture* Texture, struct FVector2D& UV); // Function Icarus.IcarusFunctionLibrary.SampleHeatmapWithUV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17356c0
	struct FColor SampleHeatmapWithLocation(struct UGameplayTexture* Texture, struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleHeatmapWithLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17355b0
	int32_t SampleEnvironmentalTemperature(struct UObject* WorldContextObject, struct FBoxSphereBounds& Bounds, struct AActor* Caller, struct FBiomesRowHandle Biome, bool bExcludeFire); // Function Icarus.IcarusFunctionLibrary.SampleEnvironmentalTemperature // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17353e0
	struct FColor SampleBoundsColorAtLocation(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleBoundsColorAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1735300
	struct FColor SampleBiomeColorAtLocation(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleBiomeColorAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1735220
	struct FBiomesRowHandle SampleBiomeAtLocation(struct UObject* WorldContext, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.SampleBiomeAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1735140
	char RowHandleToEnum(struct FRowHandle InRowHandle, struct UEnum* InEnum); // Function Icarus.IcarusFunctionLibrary.RowHandleToEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1735030
	bool RemoveModifierState(struct AActor* Parent, struct FModifierStatesRowHandle InModifierFilter, int32_t UID); // Function Icarus.IcarusFunctionLibrary.RemoveModifierState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1734e60
	bool IsUsingControllerInput(); // Function Icarus.IcarusFunctionLibrary.IsUsingControllerInput // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1734c70
	bool IsMouseNavigation(struct FFocusEvent& InFocusEvent); // Function Icarus.IcarusFunctionLibrary.IsMouseNavigation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1734bd0
	bool IsLocationLoaded(struct UObject* WorldContextObject, struct FVector& Location, struct TSoftObjectPtr<UWorld>& Heightmap); // Function Icarus.IcarusFunctionLibrary.IsLocationLoaded // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1734a60
	bool IsFLODMesh(struct UStaticMeshComponent* Mesh); // Function Icarus.IcarusFunctionLibrary.IsFLODMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17349d0
	bool IsEditorOnlyActor(struct AActor* Actor); // Function Icarus.IcarusFunctionLibrary.IsEditorOnlyActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1734940
	bool IsConstraining(struct UPhysicsConstraintComponent* PhysicsConstraint); // Function Icarus.IcarusFunctionLibrary.IsConstraining // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17348b0
	bool HasModifierState(struct AActor* Parent, struct FModifierStatesRowHandle InModifierFilter); // Function Icarus.IcarusFunctionLibrary.HasModifierState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17347a0
	bool GrantSharedExperience(struct AActor* Source, int32_t Experience); // Function Icarus.IcarusFunctionLibrary.GrantSharedExperience // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17346d0
	bool GrantExperienceToActorWithMultiplier(struct AActor* Target, struct FExperienceEventsRowHandle& Event, float Multiplier, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GrantExperienceToActorWithMultiplier // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1734530
	bool GrantExperienceToActor(struct AActor* Target, struct FExperienceEventsRowHandle Event, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GrantExperienceToActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17343e0
	bool GrantExactExperienceToActor(struct AActor* Target, struct FExperienceEventsRowHandle& Event, int32_t ExperienceGranted, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GrantExactExperienceToActor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1734250
	struct AWorldSettings* GetWorldSettings(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWorldSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17341c0
	bool GetWorldData(struct UObject* WorldContextObject, struct FWorldDataRowHandle& WorldData); // Function Icarus.IcarusFunctionLibrary.GetWorldData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17340e0
	struct AWorldBossManager* GetWorldBossManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWorldBossManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1734050
	struct UWeatherManagerComponent* GetWeatherManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWeatherManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733fc0
	struct AWeatherController* GetWeatherController(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWeatherController // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733f30
	struct FString GetVoxelCacheFilePath(struct AVoxelResource* VoxelBlueprint); // Function Icarus.IcarusFunctionLibrary.GetVoxelCacheFilePath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733e60
	bool GetTerrainData(struct UObject* WorldContextObject, struct FTerrainsRowHandle& TerrainData); // Function Icarus.IcarusFunctionLibrary.GetTerrainData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1733d80
	struct ULevelStreamingDynamic* GetStreamedLevelAtLocation(struct UObject* WorldContextObject, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.GetStreamedLevelAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1733cb0
	struct UStaticMesh* GetStaticMeshFromFoliageISM(struct UObject* FoliageType); // Function Icarus.IcarusFunctionLibrary.GetStaticMeshFromFoliageISM // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733c20
	struct TArray<struct FStaticMeshCapsuleCollider> GetStaticMeshCapsuleGeo(struct UStaticMesh* StaticMesh); // Function Icarus.IcarusFunctionLibrary.GetStaticMeshCapsuleGeo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733b50
	struct UE4::FName GetRootBoneName(struct USkeletalMesh* Mesh); // Function Icarus.IcarusFunctionLibrary.GetRootBoneName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733ac0
	int32_t GetRemainingProspectTime(int32_t ElapsedTimeSeconds, struct FProspectListRowHandle Prospect); // Function Icarus.IcarusFunctionLibrary.GetRemainingProspectTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17339d0
	struct AQuestManager* GetQuestManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetQuestManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733840
	void GetPlayerCharacterState(struct UObject* WorldContextObject, int32_t PlayerIndex, struct UPlayerCharacterState*& PlayerCharacterState, bool& bSuccess); // Function Icarus.IcarusFunctionLibrary.GetPlayerCharacterState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17336e0
	void GetObjectInteraction(struct AActor* Source, struct AActor* Target, struct FValidInteractQueriesRowHandle& RowHandle, bool& bValidInteract); // Function Icarus.IcarusFunctionLibrary.GetObjectInteraction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1733560
	int32_t GetNearestTileIndex(struct UObject* WorldContextObject, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.GetNearestTileIndex // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1733490
	struct TArray<struct FName> GetMontageSections(struct UAnimMontage* Montage); // Function Icarus.IcarusFunctionLibrary.GetMontageSections // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17333c0
	struct UAnimMetaData* GetMontageSectionMetaDataByClass(struct UAnimMetaData* Class, struct UAnimMontage* Montage, bool& Success, struct UE4::FName MontageSection); // Function Icarus.IcarusFunctionLibrary.GetMontageSectionMetaDataByClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1733260
	struct UModifierStateComponent* GetModifierStateByUID(struct AActor* Parent, int32_t UID); // Function Icarus.IcarusFunctionLibrary.GetModifierStateByUID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1733190
	bool GetMapVersions(struct UObject* WorldContextObject, struct TSoftObjectPtr<UWorld>& LevelAsset, int32_t& MapVersion, int32_t& GeneratedVersion); // Function Icarus.IcarusFunctionLibrary.GetMapVersions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732ff0
	void GetLinearDriveParams(struct UPhysicsConstraintComponent* PhysicsConstraint, float& PositionStrength, float& VelocityStrength); // Function Icarus.IcarusFunctionLibrary.GetLinearDriveParams // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1732ed0
	int32_t GetLevelIndexAtLocation(struct UObject* WorldContextObject, struct FVector& Location); // Function Icarus.IcarusFunctionLibrary.GetLevelIndexAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1732e00
	struct AInventoryContainerManager* GetInventoryContainerManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetInventoryContainerManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1732d70
	struct AIcarusPlayerController* GetIcarusPlayerController(struct UObject* WorldContextObject, int32_t PlayerIndex, enum class EValid& IsValid); // Function Icarus.IcarusFunctionLibrary.GetIcarusPlayerController // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732c60
	struct AIcarusPlayerCharacter* GetIcarusPlayerCharacter(struct UObject* WorldContextObject, int32_t PlayerIndex, enum class EValid& IsValid); // Function Icarus.IcarusFunctionLibrary.GetIcarusPlayerCharacter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732b50
	struct AIcarusGameStateSurvival* GetIcarusGameStateSurvival(struct UObject* WorldContextObject, bool& bValid); // Function Icarus.IcarusFunctionLibrary.GetIcarusGameStateSurvival // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732a70
	struct AIcarusGameStateSpace* GetIcarusGameStateSpace(struct UObject* WorldContextObject, bool& bValid); // Function Icarus.IcarusFunctionLibrary.GetIcarusGameStateSpace // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732990
	bool GetGameplayTagContainer(struct UObject* InAsset, struct FGameplayTagContainer& OutContainer); // Function Icarus.IcarusFunctionLibrary.GetGameplayTagContainer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732880
	int32_t GetExperienceGrantedFromRecipe(struct FProcessorRecipe& Recipe, struct FRecipeSet& RecipeSet); // Function Icarus.IcarusFunctionLibrary.GetExperienceGrantedFromRecipe // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732650
	int32_t GetExperienceGrantedFromEvent(struct AActor* Target, struct FExperienceEventsRowHandle& Event, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GetExperienceGrantedFromEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1732510
	struct ADisasterController* GetDisasterController(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetDisasterController // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17323c0
	struct UDialogueSystem* GetDialogueSystem(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetDialogueSystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1732330
	struct FVector4 GetCustomPrimitiveDataVector4(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataVector4 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1732250
	struct FVector GetCustomPrimitiveDataVector3(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataVector3 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1732170
	struct FVector2D GetCustomPrimitiveDataVector2(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataVector2 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x17320a0
	float GetCustomPrimitiveDataFloatISM(struct UInstancedStaticMeshComponent* ISM, int32_t InstanceIndex, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataFloatISM // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1731fa0
	float GetCustomPrimitiveDataFloat(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1731ed0
	bool GetCurrentProspectDifficultySetup(struct UObject* WorldContextObject, struct FDifficultySetup& DifficultySetup); // Function Icarus.IcarusFunctionLibrary.GetCurrentProspectDifficultySetup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1731d80
	enum class EMissionDifficulty GetCurrentProspectDifficulty(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetCurrentProspectDifficulty // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1731cf0
	struct UPrimitiveComponent* GetConstrainedComponent(struct UPhysicsConstraintComponent* PhysicsConstraint, enum class EConstraintFrame Frame); // Function Icarus.IcarusFunctionLibrary.GetConstrainedComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1731c20
	struct FTransform GetBoneTransform(struct USkeletalMesh* Mesh, struct UE4::FName BoneName); // Function Icarus.IcarusFunctionLibrary.GetBoneTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1731af0
	void GetBackendProxyComponent(struct UObject* WorldContextObject, int32_t PlayerIndex, struct UBackendProxyComponent*& BackendProxyComponent, bool& bSuccess); // Function Icarus.IcarusFunctionLibrary.GetBackendProxyComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1731990
	struct UAuraManagerComponent* GetAuraManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetAuraManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1731900
	void FlushLandscapeProxy(struct ALandscapeProxy* Proxy); // Function Icarus.IcarusFunctionLibrary.FlushLandscapeProxy // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1731880
	void FixModifierActivation(struct AActor* Parent, struct FModifierStatesRowHandle& RowHandle); // Function Icarus.IcarusFunctionLibrary.FixModifierActivation // (Final|Native|Static|Public|HasOutParms) // @ game+0x17317a0
	float FindPositionFromDistanceCurve(struct UAnimSequenceBase* InAnimSequence, struct UE4::FName AnimationCurveName, float Distance); // Function Icarus.IcarusFunctionLibrary.FindPositionFromDistanceCurve // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1731690
	struct TArray<struct AActor*> FilterActorsByBiome(struct TArray<struct AActor*>& Actors, struct FBiomesRowHandle Biome); // Function Icarus.IcarusFunctionLibrary.FilterActorsByBiome // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1731530
	struct UE4::FName EnumToRowName(char EnumValue, struct UEnum* InEnum); // Function Icarus.IcarusFunctionLibrary.EnumToRowName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1731460
	bool DoesFoliageTypeHaveValidCollisionSetup(struct UFoliageType_InstancedStaticMesh* InFoliageTypeISM, struct FString& FailureReason); // Function Icarus.IcarusFunctionLibrary.DoesFoliageTypeHaveValidCollisionSetup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1731370
	bool DoesBoneExist(struct USkeletalMesh* Mesh, struct UE4::FName BoneName); // Function Icarus.IcarusFunctionLibrary.DoesBoneExist // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17312a0
	int32_t ConvertToEpoch(struct FDateTime Time); // Function Icarus.IcarusFunctionLibrary.ConvertToEpoch // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1731220
	struct FDateTime ConvertToDateTime(int32_t EpochTime); // Function Icarus.IcarusFunctionLibrary.ConvertToDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1731190
	int32_t ColorToTemperature(struct FColor& Color); // Function Icarus.IcarusFunctionLibrary.ColorToTemperature // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1731100
	struct FBiomesRowHandle ColorToBiome(struct FColor& Color); // Function Icarus.IcarusFunctionLibrary.ColorToBiome // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1731060
	bool CheckDeathEvent(struct AActor* Target, struct AActor* Source, struct FExperienceData Data); // Function Icarus.IcarusFunctionLibrary.CheckDeathEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1730dd0
	bool CapsuleTraceSingleRotated(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FRotator& Orientation, float Radius, float HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*>& ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult& OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Icarus.IcarusFunctionLibrary.CapsuleTraceSingleRotated // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17308b0
	bool CapsuleTraceMultiRotated(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FRotator& Orientation, float Radius, float HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*>& ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Icarus.IcarusFunctionLibrary.CapsuleTraceMultiRotated // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17303c0
	void CanHitWithSuccessType(struct AActor* Source, struct AActor* Target, enum class ECanHitResult& Result, struct FValidHitTypesRowHandle& Out_ValidHitType); // Function Icarus.IcarusFunctionLibrary.CanHitWithSuccessType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1730240
	bool CanHit(struct AActor* Source, struct AActor* Target); // Function Icarus.IcarusFunctionLibrary.CanHit // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1730170
	struct FColor BiomeToColor(struct FBiomesRowHandle& BiomesRow); // Function Icarus.IcarusFunctionLibrary.BiomeToColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17300b0
	void AddTraitComponent(struct AActor* Owner, struct UTraitComponent* TraitComponentClass, struct FRowHandle TraitData, struct UTraitComponent*& OutComponent); // Function Icarus.IcarusFunctionLibrary.AddTraitComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x172ff20
	int32_t AddModifierState(struct AActor* Parent, struct FModifier InModifier, struct AActor* Causer, struct AController* Instigator); // Function Icarus.IcarusFunctionLibrary.AddModifierState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x172fd90
};

// Class Icarus.IcarusGameEngine
// Size: 0xe30 (Inherited: 0xe30)
struct UIcarusGameEngine : UGameEngine {
};

// Class Icarus.IcarusGameInstance
// Size: 0x558 (Inherited: 0x1a8)
struct UIcarusGameInstance : UGameInstance {
	bool bLoginAttempted; // 0x1a8(0x01)
	char pad_1A9[0x3]; // 0x1a9(0x03)
	int32_t MapVersion; // 0x1ac(0x04)
	int32_t MapGeneratedVersion; // 0x1b0(0x04)
	char pad_1B4[0x14]; // 0x1b4(0x14)
	struct ULobbyMessageCallbackProxyGen* LobbyMessageCallback; // 0x1c8(0x08)
	char pad_1D0[0x48]; // 0x1d0(0x48)
	struct FMulticastInlineDelegate LoadingScreenChanged; // 0x218(0x10)
	struct UScopedViewportBlocker* ProspectLoadViewportBlocker; // 0x228(0x08)
	int32_t ViewportBlockerCount; // 0x230(0x04)
	char pad_234[0x114]; // 0x234(0x114)
	struct FMulticastInlineDelegate OnWindowReceivedFocus; // 0x348(0x10)
	struct FMulticastInlineDelegate OnWindowLostFocus; // 0x358(0x10)
	struct FText PresenceHabitatLocationText; // 0x368(0x18)
	struct FText PresenceProspectLocationText; // 0x380(0x18)
	char pad_398[0x48]; // 0x398(0x48)
	struct FBlueprintSessionResult SessionToJoin; // 0x3e0(0x108)
	char pad_4E8[0x18]; // 0x4e8(0x18)
	struct TWeakObjectPtr<struct UUserWidget> InBetweenLoadingScreen; // 0x500(0x08)
	char pad_508[0x8]; // 0x508(0x08)
	struct FMaintenanceStatus CurrentMaintenanceStatus; // 0x510(0x20)
	struct FMulticastInlineDelegate MaintenanceStatusUpdated; // 0x530(0x10)
	struct FMulticastInlineDelegate LobbyQueueLoginUpdated; // 0x540(0x10)
	int32_t CurrentQueueSize; // 0x550(0x04)
	float CurrentQueueSecondsRemaining; // 0x554(0x04)

	void UpdatePresence(struct APlayerController* PlayerController, struct FText NewLocation, struct UE4::FName SessionName); // Function Icarus.IcarusGameInstance.UpdatePresence // (Final|Native|Public|BlueprintCallable) // @ game+0x173c030
	void SetLocalSelectedCharacter(struct FOnlineProfileCharacter& NewLocalSelectedCharacter); // Function Icarus.IcarusGameInstance.SetLocalSelectedCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x173b980
	void ResetLocalSelectedCharacter(); // Function Icarus.IcarusGameInstance.ResetLocalSelectedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x173b5f0
	void OnSessionInviteAcceptedEvent(int32_t ControllerId, struct FBlueprintSessionResult& InviteResult); // Function Icarus.IcarusGameInstance.OnSessionInviteAcceptedEvent // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void OnLobbyMessageComplete(struct FResLobbyMessage& Response); // Function Icarus.IcarusGameInstance.OnLobbyMessageComplete // (Final|Native|Protected|HasOutParms) // @ game+0x173b090
	void LoginIcarus(); // Function Icarus.IcarusGameInstance.LoginIcarus // (Final|Native|Protected|BlueprintCallable) // @ game+0x173adc0
	void Login(); // Function Icarus.IcarusGameInstance.Login // (Final|Native|Public|BlueprintCallable) // @ game+0x173ada0
	bool IsViewportBlockerActive(); // Function Icarus.IcarusGameInstance.IsViewportBlockerActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173ad70
	bool IsInBetweenLoadingScreenShowing(); // Function Icarus.IcarusGameInstance.IsInBetweenLoadingScreenShowing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173ad10
	bool HasLocalSelectedCharacter(); // Function Icarus.IcarusGameInstance.HasLocalSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173abe0
	void HandlePreLoadMap(struct FString MapName); // Function Icarus.IcarusGameInstance.HandlePreLoadMap // (Final|Native|Protected) // @ game+0x173ab30
	void HandlePostLoadMap(struct UWorld* World); // Function Icarus.IcarusGameInstance.HandlePostLoadMap // (Final|Native|Protected) // @ game+0x173aaa0
	void HandleHostMigrationAttemptJoin(struct FHostMigrationInfo& BackupHostInfo); // Function Icarus.IcarusGameInstance.HandleHostMigrationAttemptJoin // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void HandleHostMigrationAttemptHost(struct FHostMigrationInfo& BackupHostInfo); // Function Icarus.IcarusGameInstance.HandleHostMigrationAttemptHost // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	struct FOnlineProfileCharacter GetLocalSelectedCharacter(); // Function Icarus.IcarusGameInstance.GetLocalSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173a6a0
};

// Class Icarus.IcarusGameModeBase
// Size: 0x308 (Inherited: 0x308)
struct AIcarusGameModeBase : AGameMode {

	void SendServerMessage(struct FString Message); // Function Icarus.IcarusGameModeBase.SendServerMessage // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x173b750
	void OnConnectedPlayerInitialised(struct FConnectedPlayer& ConnectedPlayer); // Function Icarus.IcarusGameModeBase.OnConnectedPlayerInitialised // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x173ae70
	void ForceErrorCmd(int32_t InErrorNumber, int32_t ErrorDestination, int32_t ErrorAction); // Function Icarus.IcarusGameModeBase.ForceErrorCmd // (Final|Exec|Native|Public) // @ game+0x173a4b0
};

// Class Icarus.IcarusGameModeSpace
// Size: 0x308 (Inherited: 0x308)
struct AIcarusGameModeSpace : AIcarusGameModeBase {
};

// Class Icarus.IcarusGameModeSurvival
// Size: 0x520 (Inherited: 0x308)
struct AIcarusGameModeSurvival : AIcarusGameModeBase {
	char pad_308[0x8]; // 0x308(0x08)
	struct TSet<struct FString> ApprovedPlayerIDs; // 0x310(0x50)
	char pad_360[0x8]; // 0x360(0x08)
	struct FMulticastInlineDelegate OnPreEndProspectSession; // 0x368(0x10)
	struct FProspectInfo TestProspectInfo; // 0x378(0x88)
	bool bDebugPlayerInitialisationDropships; // 0x400(0x01)
	enum class EEndProspectSessionContext EndProspectSessionContext; // 0x401(0x01)
	bool bForceLastSaveProspectState; // 0x402(0x01)
	bool bForceUpdateUnrealSession; // 0x403(0x01)
	char pad_404[0x4]; // 0x404(0x04)
	float LastProspectSaveStateTime; // 0x408(0x04)
	float LastProspectHeartbeatTime; // 0x40c(0x04)
	float LastSessionUpdateTime; // 0x410(0x04)
	int32_t UpdateProspectStateFailedCounter; // 0x414(0x04)
	char pad_418[0x8]; // 0x418(0x08)
	int32_t UpdateUnrealSessionFailedCounter; // 0x420(0x04)
	char pad_424[0xc]; // 0x424(0x0c)
	struct UIcarusGameStateRecorder* GameStateRecorder; // 0x430(0x08)
	struct UUpdateProspectCallbackProxyGen* UpdateProspectCallbackProxy; // 0x438(0x08)
	char pad_440[0x8]; // 0x440(0x08)
	bool bCurrentUpdateProspectIsSaving; // 0x448(0x01)
	char pad_449[0x7]; // 0x449(0x07)
	struct UIcarusHostSession* HostSessionCallbackProxy; // 0x450(0x08)
	struct UIcarusUpdateSession* UpdateSessionCallbackProxy; // 0x458(0x08)
	char pad_460[0x8]; // 0x460(0x08)
	struct UGameModeStateRecorderComponent* GameModeRecorderComponent; // 0x468(0x08)
	struct UProspectExpiredCallbackProxyGen* ProspectExpiredCallbackProxy; // 0x470(0x08)
	float ProspectExpiredShutdownDelayTime; // 0x478(0x04)
	char pad_47C[0x14]; // 0x47c(0x14)
	struct AWeatherController* WeatherController; // 0x490(0x08)
	struct TSoftClassPtr<UObject> WeatherControllerClass; // 0x498(0x28)
	struct AMapManagerBase* MapManager; // 0x4c0(0x08)
	struct TSoftClassPtr<UObject> MapManagerClass; // 0x4c8(0x28)
	struct AWorldBossManager* WorldBossManager; // 0x4f0(0x08)
	struct TSoftClassPtr<UObject> WorldBossManagerClass; // 0x4f8(0x28)

	bool TryResolveRecorderForOwner(struct AActor* SpawnedActor, bool bActorSpawned); // Function Icarus.IcarusGameModeSurvival.TryResolveRecorderForOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173bf60
	struct AActor* SpawnSplineActorFromSavedState(struct FTransform& Transform, int32_t SplineTypeEnum); // Function Icarus.IcarusGameModeSurvival.SpawnSplineActorFromSavedState // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1be0000
	void ShutdownAfterProspectExpired(); // Function Icarus.IcarusGameModeSurvival.ShutdownAfterProspectExpired // (Final|Native|Protected) // @ game+0x173bde0
	bool ShouldRestoreFoliageEntity(struct AActor* FoliageActor, struct FVector FoliageLocation, float FoliageRadius); // Function Icarus.IcarusGameModeSurvival.ShouldRestoreFoliageEntity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x173bcc0
	bool SetupTestProspectInfo(); // Function Icarus.IcarusGameModeSurvival.SetupTestProspectInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x173bc90
	void SaveDeveloperProspect(struct FString ProspectFileName); // Function Icarus.IcarusGameModeSurvival.SaveDeveloperProspect // (Final|Native|Protected|BlueprintCallable) // @ game+0x173b6a0
	void RaiseTheCurtain(); // Function Icarus.IcarusGameModeSurvival.RaiseTheCurtain // (Native|Event|Public|BlueprintEvent) // @ game+0x173b540
	void OnUpdateUnrealSessionSuccess(struct FErrorCodesEnum Result); // Function Icarus.IcarusGameModeSurvival.OnUpdateUnrealSessionSuccess // (Final|Native|Protected) // @ game+0x173b4a0
	void OnUpdateUnrealSessionFailure(struct FErrorCodesEnum Result); // Function Icarus.IcarusGameModeSurvival.OnUpdateUnrealSessionFailure // (Final|Native|Protected) // @ game+0x173b400
	void OnUpdateProspectSuccess(struct FResUpdateProspect& Response); // Function Icarus.IcarusGameModeSurvival.OnUpdateProspectSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x173b370
	void OnUpdateProspectFailed(struct FResUpdateProspect& Response); // Function Icarus.IcarusGameModeSurvival.OnUpdateProspectFailed // (Final|Native|Protected|HasOutParms) // @ game+0x173b2e0
	void OnProspectExpiredSuccess(struct FResProspectExpired& Response); // Function Icarus.IcarusGameModeSurvival.OnProspectExpiredSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x173b1d0
	void OnProspectExpiredFailed(struct FResProspectExpired& Response); // Function Icarus.IcarusGameModeSurvival.OnProspectExpiredFailed // (Final|Native|Protected|HasOutParms) // @ game+0x173b140
	void OnHostUnrealSessionSuccess(struct FErrorCodesEnum Result); // Function Icarus.IcarusGameModeSurvival.OnHostUnrealSessionSuccess // (Final|Native|Protected) // @ game+0x173aff0
	void OnHostUnrealSessionFailure(struct FErrorCodesEnum Result); // Function Icarus.IcarusGameModeSurvival.OnHostUnrealSessionFailure // (Final|Native|Protected) // @ game+0x173af50
	void OnActorSpawned(struct AActor* SpawnedActor); // Function Icarus.IcarusGameModeSurvival.OnActorSpawned // (Final|Native|Public|Const) // @ game+0x173ade0
	void IcarusBeginPlay(); // Function Icarus.IcarusGameModeSurvival.IcarusBeginPlay // (Native|Event|Public|BlueprintEvent) // @ game+0x173acf0
	bool HasProspectSessionEnded(); // Function Icarus.IcarusGameModeSurvival.HasProspectSessionEnded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173ac10
	float GetProspectGameTime(); // Function Icarus.IcarusGameModeSurvival.GetProspectGameTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173a8a0
	int32_t GetNewPlayerColor(); // Function Icarus.IcarusGameModeSurvival.GetNewPlayerColor // (Final|Native|Public|BlueprintCallable) // @ game+0x173a870
	struct UIcarusGameStateRecorder* GetGameStateRecorder(); // Function Icarus.IcarusGameModeSurvival.GetGameStateRecorder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x173a650
	void FinishManagerInit(); // Function Icarus.IcarusGameModeSurvival.FinishManagerInit // (Final|Native|Protected) // @ game+0x173a490
	void EndProspectSession(enum class EEndProspectSessionContext Context); // Function Icarus.IcarusGameModeSurvival.EndProspectSession // (Final|Native|Public|BlueprintCallable) // @ game+0x173a410
	void DatabaseReloadComplete(); // Function Icarus.IcarusGameModeSurvival.DatabaseReloadComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x173a360
	void DatabaseReloadBegin(); // Function Icarus.IcarusGameModeSurvival.DatabaseReloadBegin // (Final|Native|Public) // @ game+0x173a340
	void CreateAndFillOverflowBag(struct FTransform& Transform, struct TArray<struct FItemData>& ItemData, bool bIsGravestone, struct AIcarusActor* ActorOverride); // Function Icarus.IcarusGameModeSurvival.CreateAndFillOverflowBag // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusGameStateBase
// Size: 0x2c8 (Inherited: 0x290)
struct AIcarusGameStateBase : AGameState {
	struct UConnectedPlayers* ConnectedPlayers; // 0x290(0x08)
	struct UDialogueSystem* DialogueSystem; // 0x298(0x08)
	struct FHostMigrationInfo BackupHostMigrationInfo; // 0x2a0(0x28)

	void OnRep_BackupHostMigrationInfo(); // Function Icarus.IcarusGameStateBase.OnRep_BackupHostMigrationInfo // (Final|Native|Public) // @ game+0x173b260
};

// Class Icarus.IcarusGameStateRecorder
// Size: 0x38 (Inherited: 0x28)
struct UIcarusGameStateRecorder : UObject {
	struct TArray<struct UIcarusStateRecorderComponent*> RecorderComponents; // 0x28(0x10)
};

// Class Icarus.IcarusGameStateSpace
// Size: 0x2c8 (Inherited: 0x2c8)
struct AIcarusGameStateSpace : AIcarusGameStateBase {
};

// Class Icarus.IcarusGameStateSurvival
// Size: 0x450 (Inherited: 0x2c8)
struct AIcarusGameStateSurvival : AIcarusGameStateBase {
	struct UWeatherManagerComponent* WeatherManager; // 0x2c8(0x08)
	struct UAuraManagerComponent* AuraManager; // 0x2d0(0x08)
	struct AQuestManager* QuestManager; // 0x2d8(0x08)
	struct AInventoryContainerManager* InventoryContainerManager; // 0x2e0(0x08)
	struct UCurveFloat* TimeOfDayEnumCurve; // 0x2e8(0x08)
	bool DebugLogging; // 0x2f0(0x01)
	bool GOAPDebugging; // 0x2f1(0x01)
	bool bThermalComponentDebugging; // 0x2f2(0x01)
	char pad_2F3[0x1]; // 0x2f3(0x01)
	int32_t GlobalEnvTempModifier; // 0x2f4(0x04)
	char pad_2F8[0x10]; // 0x2f8(0x10)
	struct FMulticastInlineDelegate OnSeedInitialised; // 0x308(0x10)
	int32_t Seed; // 0x318(0x04)
	bool bSeedInitialised; // 0x31c(0x01)
	char pad_31D[0x3]; // 0x31d(0x03)
	struct AFLOD* FLOD; // 0x320(0x08)
	struct ADisasterController* DisasterController; // 0x328(0x08)
	float TimeOfDay; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	int64_t ProspectEndTime; // 0x338(0x08)
	struct FGlobalCheatData GlobalCheatData; // 0x340(0x02)
	char pad_342[0x6]; // 0x342(0x06)
	struct TArray<struct UThermalComponent*> ThermalComponents; // 0x348(0x10)
	struct TArray<struct FSessionFlagsRowHandle> SessionFlags; // 0x358(0x10)
	struct FProspectInfo ReplicatedActiveProspect; // 0x368(0x88)
	struct FNetworkingStatus NetworkingStatus; // 0x3f0(0x60)

	void SpawnFloatingDamageNumbers(struct AActor* Actor, struct FIcarusDamagePacket& DamagePacket); // Function Icarus.IcarusGameStateSurvival.SpawnFloatingDamageNumbers // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x173be00
	void SetSessionFlag(struct FSessionFlagsRowHandle& Flag, bool State); // Function Icarus.IcarusGameStateSurvival.SetSessionFlag // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x173bba0
	void SetSeed(int32_t NewSeed); // Function Icarus.IcarusGameStateSurvival.SetSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x173bb10
	void ServerUpdateActiveProspect(struct FProspectInfo& InProspectInfo); // Function Icarus.IcarusGameStateSurvival.ServerUpdateActiveProspect // (Final|Native|Public|HasOutParms) // @ game+0x173b800
	void RegisterThermalComponent(struct UThermalComponent* NewComponent); // Function Icarus.IcarusGameStateSurvival.RegisterThermalComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x173b560
	void OnRep_SessionFlags(); // Function Icarus.IcarusGameStateSurvival.OnRep_SessionFlags // (Final|Native|Public) // @ game+0x173b2c0
	void OnRep_Seed(); // Function Icarus.IcarusGameStateSurvival.OnRep_Seed // (Final|Native|Protected) // @ game+0x173b2a0
	void OnRep_ReplicatedActiveProspect(); // Function Icarus.IcarusGameStateSurvival.OnRep_ReplicatedActiveProspect // (Final|Native|Private) // @ game+0x173b280
	bool IsInLastMomentsOfSession(); // Function Icarus.IcarusGameStateSurvival.IsInLastMomentsOfSession // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x173ad40
	bool HasSessionFlag(struct FSessionFlagsRowHandle& Flag); // Function Icarus.IcarusGameStateSurvival.HasSessionFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x173ac40
	int32_t GetTemperatureEffectAtLocation(struct FVector WorldLocation, struct AActor* Querier); // Function Icarus.IcarusGameStateSurvival.GetTemperatureEffectAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x173a9b0
	void GetSessionEndTime(int64_t& UTCTime, bool& bInitialised); // Function Icarus.IcarusGameStateSurvival.GetSessionEndTime // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x173a8d0
	void GenerateResourceTypeForVoxelActor(struct AVoxelResource* VoxelResourceActor); // Function Icarus.IcarusGameStateSurvival.GenerateResourceTypeForVoxelActor // (Final|Native|Public|BlueprintCallable) // @ game+0x173a5c0
	void DeregisterThermalComponent(struct UThermalComponent* Component); // Function Icarus.IcarusGameStateSurvival.DeregisterThermalComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x173a380
};

// Class Icarus.IcarusGameUserSettingsPreGen
// Size: 0x150 (Inherited: 0x120)
struct UIcarusGameUserSettingsPreGen : UGameUserSettings {
	struct FMulticastSparseDelegate OnRestartRequested; // 0x120(0x01)
	char pad_121[0x17]; // 0x121(0x17)
	struct UGameUserSettingsSubsystem* Subsystem; // 0x138(0x08)
	char pad_140[0x8]; // 0x140(0x08)
	struct UStringTable* StringTable; // 0x148(0x08)

	void PushLock_BP(); // Function Icarus.IcarusGameUserSettingsPreGen.PushLock_BP // (Final|Native|Protected|BlueprintCallable) // @ game+0x174b1f0
	void PopLock_BP(bool bApplyOnRelease); // Function Icarus.IcarusGameUserSettingsPreGen.PopLock_BP // (Final|Native|Protected|BlueprintCallable) // @ game+0x174b160
	struct FText FindText(struct FString Key); // Function Icarus.IcarusGameUserSettingsPreGen.FindText // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x17499d0
};

// Class Icarus.IcarusGameUserSettingsGen
// Size: 0x220 (Inherited: 0x150)
struct UIcarusGameUserSettingsGen : UIcarusGameUserSettingsPreGen {
	struct FMulticastSparseDelegate OnVSyncApplied; // 0x150(0x01)
	struct FMulticastSparseDelegate OnFrameLimitApplied; // 0x151(0x01)
	struct FMulticastSparseDelegate OnResolutionScaleApplied; // 0x152(0x01)
	struct FMulticastSparseDelegate OnMotionBlurApplied; // 0x153(0x01)
	struct FMulticastSparseDelegate OnOverallApplied; // 0x154(0x01)
	struct FMulticastSparseDelegate OnViewDistanceApplied; // 0x155(0x01)
	struct FMulticastSparseDelegate OnLODBiasApplied; // 0x156(0x01)
	struct FMulticastSparseDelegate OnPostProcessingApplied; // 0x157(0x01)
	struct FMulticastSparseDelegate OnShadowsApplied; // 0x158(0x01)
	struct FMulticastSparseDelegate OnMaxShadowCascadesApplied; // 0x159(0x01)
	struct FMulticastSparseDelegate OnContactShadowsApplied; // 0x15a(0x01)
	struct FMulticastSparseDelegate OnTexturesApplied; // 0x15b(0x01)
	struct FMulticastSparseDelegate OnTextureStreamingPoolsizeApplied; // 0x15c(0x01)
	struct FMulticastSparseDelegate OnEffectsApplied; // 0x15d(0x01)
	struct FMulticastSparseDelegate OnFoliageApplied; // 0x15e(0x01)
	struct FMulticastSparseDelegate OnShadingApplied; // 0x15f(0x01)
	struct FMulticastSparseDelegate OnAntiAliasingApplied; // 0x160(0x01)
	struct FMulticastSparseDelegate OnUseSimpleBuildingShadowsApplied; // 0x161(0x01)
	struct FMulticastSparseDelegate OnDisableLightningEffectsApplied; // 0x162(0x01)
	struct FMulticastSparseDelegate OnTessellationApplied; // 0x163(0x01)
	struct FMulticastSparseDelegate OnTerrainDeformationExperimentalApplied; // 0x164(0x01)
	struct FMulticastSparseDelegate OnVolumetricCloudsApplied; // 0x165(0x01)
	struct FMulticastSparseDelegate OnDisablePlayerLightShadowsApplied; // 0x166(0x01)
	struct FMulticastSparseDelegate OnShadowFilterMethodApplied; // 0x167(0x01)
	struct FMulticastSparseDelegate OnDLSSModeApplied; // 0x168(0x01)
	struct FMulticastSparseDelegate OnDLSSSharpnessApplied; // 0x169(0x01)
	struct FMulticastSparseDelegate OnFSRModeApplied; // 0x16a(0x01)
	struct FMulticastSparseDelegate OnFSRSharpnessApplied; // 0x16b(0x01)
	struct FMulticastSparseDelegate OnRTXEnabledApplied; // 0x16c(0x01)
	struct FMulticastSparseDelegate OnGlobalIlluminationApplied; // 0x16d(0x01)
	struct FMulticastSparseDelegate OnMasterVolumeApplied; // 0x16e(0x01)
	struct FMulticastSparseDelegate OnAmbientVolumeApplied; // 0x16f(0x01)
	struct FMulticastSparseDelegate OnMusicVolumeApplied; // 0x170(0x01)
	struct FMulticastSparseDelegate OnSFXVolumeApplied; // 0x171(0x01)
	struct FMulticastSparseDelegate OnDialogueVolumeApplied; // 0x172(0x01)
	struct FMulticastSparseDelegate OnCharacterVoiceVolumeApplied; // 0x173(0x01)
	struct FMulticastSparseDelegate OnLanguageApplied; // 0x174(0x01)
	struct FMulticastSparseDelegate OnFieldOfViewApplied; // 0x175(0x01)
	struct FMulticastSparseDelegate OnEquipmentFieldOfViewApplied; // 0x176(0x01)
	struct FMulticastSparseDelegate OnKillcamApplied; // 0x177(0x01)
	struct FMulticastSparseDelegate OnPlayerMarkerApplied; // 0x178(0x01)
	struct FMulticastSparseDelegate OnClothSimulationApplied; // 0x179(0x01)
	struct FMulticastSparseDelegate OnCreatureIKApplied; // 0x17a(0x01)
	struct FMulticastSparseDelegate OnShowAimCrosshairApplied; // 0x17b(0x01)
	struct FMulticastSparseDelegate OnShowDamageNumbersApplied; // 0x17c(0x01)
	struct FMulticastSparseDelegate OnShowBloodEffectsApplied; // 0x17d(0x01)
	struct FMulticastSparseDelegate OnMultiplayerGhostBuildingApplied; // 0x17e(0x01)
	struct FMulticastSparseDelegate OnShowTutorialProspectApplied; // 0x17f(0x01)
	struct FMulticastSparseDelegate OnShowItemHighlightsApplied; // 0x180(0x01)
	struct FMulticastSparseDelegate OnBlueprintTooltipOpenAnimationsApplied; // 0x181(0x01)
	struct FMulticastSparseDelegate OnWorkshopTooltipOpenAnimationsApplied; // 0x182(0x01)
	struct FMulticastSparseDelegate OnSkipStartupMoviesApplied; // 0x183(0x01)
	struct FMulticastSparseDelegate OnDisplayTemperatureApplied; // 0x184(0x01)
	struct FMulticastSparseDelegate OnInputTypeApplied; // 0x185(0x01)
	struct FMulticastSparseDelegate OnControllerIconsApplied; // 0x186(0x01)
	struct FMulticastSparseDelegate OnMouseSensitivityXApplied; // 0x187(0x01)
	struct FMulticastSparseDelegate OnMouseSensitivityYApplied; // 0x188(0x01)
	struct FMulticastSparseDelegate OnToggleCrouchApplied; // 0x189(0x01)
	struct FMulticastSparseDelegate OnToggleSprintApplied; // 0x18a(0x01)
	struct FMulticastSparseDelegate OnToggleAimApplied; // 0x18b(0x01)
	struct FMulticastSparseDelegate OnInvertYAxisApplied; // 0x18c(0x01)
	struct FMulticastSparseDelegate OnAimSensitivityApplied; // 0x18d(0x01)
	bool bVSync; // 0x18e(0x01)
	char pad_18F[0x1]; // 0x18f(0x01)
	float FrameLimit; // 0x190(0x04)
	float ResolutionScale; // 0x194(0x04)
	float MotionBlur; // 0x198(0x04)
	enum class EOverallSetting Overall; // 0x19c(0x01)
	enum class EViewDistanceSetting ViewDistance; // 0x19d(0x01)
	char pad_19E[0x2]; // 0x19e(0x02)
	float LODBias; // 0x1a0(0x04)
	enum class EPostProcessingSetting PostProcessing; // 0x1a4(0x01)
	enum class EShadowsSetting Shadows; // 0x1a5(0x01)
	char pad_1A6[0x2]; // 0x1a6(0x02)
	float MaxShadowCascades; // 0x1a8(0x04)
	bool bContactShadows; // 0x1ac(0x01)
	enum class ETexturesSetting Textures; // 0x1ad(0x01)
	char pad_1AE[0x2]; // 0x1ae(0x02)
	float TextureStreamingPoolsize; // 0x1b0(0x04)
	enum class EEffectsSetting Effects; // 0x1b4(0x01)
	enum class EFoliageSetting Foliage; // 0x1b5(0x01)
	enum class EShadingSetting Shading; // 0x1b6(0x01)
	enum class EAntiAliasingSetting AntiAliasing; // 0x1b7(0x01)
	bool bUseSimpleBuildingShadows; // 0x1b8(0x01)
	bool bDisableLightningEffects; // 0x1b9(0x01)
	bool bTessellation; // 0x1ba(0x01)
	bool bTerrainDeformationExperimental; // 0x1bb(0x01)
	bool bVolumetricClouds; // 0x1bc(0x01)
	bool bDisablePlayerLightShadows; // 0x1bd(0x01)
	enum class EShadowFilterMethodSetting ShadowFilterMethod; // 0x1be(0x01)
	enum class EDLSSModeSetting DLSSMode; // 0x1bf(0x01)
	float DLSSSharpness; // 0x1c0(0x04)
	enum class EFSRModeSetting FSRMode; // 0x1c4(0x01)
	char pad_1C5[0x3]; // 0x1c5(0x03)
	float FSRSharpness; // 0x1c8(0x04)
	bool bRTXEnabled; // 0x1cc(0x01)
	bool bGlobalIllumination; // 0x1cd(0x01)
	char pad_1CE[0x2]; // 0x1ce(0x02)
	float MasterVolume; // 0x1d0(0x04)
	float AmbientVolume; // 0x1d4(0x04)
	float MusicVolume; // 0x1d8(0x04)
	float SFXVolume; // 0x1dc(0x04)
	float DialogueVolume; // 0x1e0(0x04)
	float CharacterVoiceVolume; // 0x1e4(0x04)
	struct FString Language; // 0x1e8(0x10)
	float FieldOfView; // 0x1f8(0x04)
	float EquipmentFieldOfView; // 0x1fc(0x04)
	bool bKillCam; // 0x200(0x01)
	bool bPlayerMarker; // 0x201(0x01)
	bool bClothSimulation; // 0x202(0x01)
	bool bCreatureIK; // 0x203(0x01)
	bool bShowAimCrosshair; // 0x204(0x01)
	bool bShowDamageNumbers; // 0x205(0x01)
	bool bShowBloodEffects; // 0x206(0x01)
	bool bMultiplayerGhostBuilding; // 0x207(0x01)
	bool bShowTutorialProspect; // 0x208(0x01)
	bool bShowItemHighlights; // 0x209(0x01)
	bool bBlueprintTooltipOpenAnimations; // 0x20a(0x01)
	bool bWorkshopTooltipOpenAnimations; // 0x20b(0x01)
	bool bSkipStartupMovies; // 0x20c(0x01)
	enum class EDisplayTemperatureSetting DisplayTemperature; // 0x20d(0x01)
	enum class EInputTypeSetting InputType; // 0x20e(0x01)
	enum class EControllerIconsSetting ControllerIcons; // 0x20f(0x01)
	float MouseSensitivityX; // 0x210(0x04)
	float MouseSensitivityY; // 0x214(0x04)
	bool bToggleCrouch; // 0x218(0x01)
	bool bToggleSprint; // 0x219(0x01)
	bool bToggleAim; // 0x21a(0x01)
	bool bInvertYAxis; // 0x21b(0x01)
	float AimSensitivity; // 0x21c(0x04)

	void SetWorkshopTooltipOpenAnimations(bool bInWorkshopTooltipOpenAnimations); // Function Icarus.IcarusGameUserSettingsGen.SetWorkshopTooltipOpenAnimations // (Native|Public|BlueprintCallable) // @ game+0x1744f70
	void SetVSync(bool bInVSync); // Function Icarus.IcarusGameUserSettingsGen.SetVSync // (Native|Public|BlueprintCallable) // @ game+0x16439b0
	void SetVolumetricClouds(bool bInVolumetricClouds); // Function Icarus.IcarusGameUserSettingsGen.SetVolumetricClouds // (Native|Public|BlueprintCallable) // @ game+0x1744ee0
	void SetViewDistance(enum class EViewDistanceSetting InViewDistance); // Function Icarus.IcarusGameUserSettingsGen.SetViewDistance // (Native|Public|BlueprintCallable) // @ game+0x1744e60
	void SetUseSimpleBuildingShadows(bool bInUseSimpleBuildingShadows); // Function Icarus.IcarusGameUserSettingsGen.SetUseSimpleBuildingShadows // (Native|Public|BlueprintCallable) // @ game+0x1744dd0
	void SetToggleSprint(bool bInToggleSprint); // Function Icarus.IcarusGameUserSettingsGen.SetToggleSprint // (Native|Public|BlueprintCallable) // @ game+0x1744d40
	void SetToggleCrouch(bool bInToggleCrouch); // Function Icarus.IcarusGameUserSettingsGen.SetToggleCrouch // (Native|Public|BlueprintCallable) // @ game+0x1744cb0
	void SetToggleAim(bool bInToggleAim); // Function Icarus.IcarusGameUserSettingsGen.SetToggleAim // (Native|Public|BlueprintCallable) // @ game+0x1744c20
	bool SettingRequiresRestart(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.SettingRequiresRestart // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1745000
	void SetTextureStreamingPoolsize(float InTextureStreamingPoolsize); // Function Icarus.IcarusGameUserSettingsGen.SetTextureStreamingPoolsize // (Native|Public|BlueprintCallable) // @ game+0x1744b10
	void SetTextures(enum class ETexturesSetting InTextures); // Function Icarus.IcarusGameUserSettingsGen.SetTextures // (Native|Public|BlueprintCallable) // @ game+0x1744ba0
	void SetTessellation(bool bInTessellation); // Function Icarus.IcarusGameUserSettingsGen.SetTessellation // (Native|Public|BlueprintCallable) // @ game+0x1744a80
	void SetTerrainDeformationExperimental(bool bInTerrainDeformationExperimental); // Function Icarus.IcarusGameUserSettingsGen.SetTerrainDeformationExperimental // (Native|Public|BlueprintCallable) // @ game+0x17449f0
	void SetSkipStartupMovies(bool bInSkipStartupMovies); // Function Icarus.IcarusGameUserSettingsGen.SetSkipStartupMovies // (Native|Public|BlueprintCallable) // @ game+0xef85e0
	void SetShowTutorialProspect(bool bInShowTutorialProspect); // Function Icarus.IcarusGameUserSettingsGen.SetShowTutorialProspect // (Native|Public|BlueprintCallable) // @ game+0x1744960
	void SetShowItemHighlights(bool bInShowItemHighlights); // Function Icarus.IcarusGameUserSettingsGen.SetShowItemHighlights // (Native|Public|BlueprintCallable) // @ game+0xef8670
	void SetShowDamageNumbers(bool bInShowDamageNumbers); // Function Icarus.IcarusGameUserSettingsGen.SetShowDamageNumbers // (Native|Public|BlueprintCallable) // @ game+0x17448d0
	void SetShowBloodEffects(bool bInShowBloodEffects); // Function Icarus.IcarusGameUserSettingsGen.SetShowBloodEffects // (Native|Public|BlueprintCallable) // @ game+0x1744840
	void SetShowAimCrosshair(bool bInShowAimCrosshair); // Function Icarus.IcarusGameUserSettingsGen.SetShowAimCrosshair // (Native|Public|BlueprintCallable) // @ game+0x17447b0
	void SetShadows(enum class EShadowsSetting InShadows); // Function Icarus.IcarusGameUserSettingsGen.SetShadows // (Native|Public|BlueprintCallable) // @ game+0x1744730
	void SetShadowFilterMethod(enum class EShadowFilterMethodSetting InShadowFilterMethod); // Function Icarus.IcarusGameUserSettingsGen.SetShadowFilterMethod // (Native|Public|BlueprintCallable) // @ game+0x17446b0
	void SetShading(enum class EShadingSetting InShading); // Function Icarus.IcarusGameUserSettingsGen.SetShading // (Native|Public|BlueprintCallable) // @ game+0x1744630
	void SetSFXVolume(float InSFXVolume); // Function Icarus.IcarusGameUserSettingsGen.SetSFXVolume // (Native|Public|BlueprintCallable) // @ game+0x1744200
	void SetSettingValue_String(struct UE4::FName SettingName, struct FString NewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_String // (Final|Native|Protected|BlueprintCallable) // @ game+0x1744500
	void SetSettingValue_Index(struct UE4::FName SettingName, int32_t NewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_Index // (Final|Native|Protected|BlueprintCallable) // @ game+0x1744430
	void SetSettingValue_Float(struct UE4::FName SettingName, float NewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_Float // (Final|Native|Protected|BlueprintCallable) // @ game+0x1744360
	void SetSettingValue_Bool(struct UE4::FName SettingName, bool bNewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_Bool // (Final|Native|Protected|BlueprintCallable) // @ game+0x1744290
	void SetRTXEnabled(bool bInRTXEnabled); // Function Icarus.IcarusGameUserSettingsGen.SetRTXEnabled // (Native|Public|BlueprintCallable) // @ game+0x17440e0
	void SetResolutionScale(float InResolutionScale); // Function Icarus.IcarusGameUserSettingsGen.SetResolutionScale // (Native|Public|BlueprintCallable) // @ game+0x1744170
	void SetPostProcessing(enum class EPostProcessingSetting InPostProcessing); // Function Icarus.IcarusGameUserSettingsGen.SetPostProcessing // (Native|Public|BlueprintCallable) // @ game+0x1744060
	void SetPlayerMarker(bool bInPlayerMarker); // Function Icarus.IcarusGameUserSettingsGen.SetPlayerMarker // (Native|Public|BlueprintCallable) // @ game+0x1743fd0
	void SetOverall(enum class EOverallSetting InOverall); // Function Icarus.IcarusGameUserSettingsGen.SetOverall // (Native|Public|BlueprintCallable) // @ game+0x1743f50
	void SetMusicVolume(float InMusicVolume); // Function Icarus.IcarusGameUserSettingsGen.SetMusicVolume // (Native|Public|BlueprintCallable) // @ game+0x1743ec0
	void SetMultiplayerGhostBuilding(bool bInMultiplayerGhostBuilding); // Function Icarus.IcarusGameUserSettingsGen.SetMultiplayerGhostBuilding // (Native|Public|BlueprintCallable) // @ game+0xef83e0
	void SetMouseSensitivityY(float InMouseSensitivityY); // Function Icarus.IcarusGameUserSettingsGen.SetMouseSensitivityY // (Native|Public|BlueprintCallable) // @ game+0x1743e30
	void SetMouseSensitivityX(float InMouseSensitivityX); // Function Icarus.IcarusGameUserSettingsGen.SetMouseSensitivityX // (Native|Public|BlueprintCallable) // @ game+0x1743da0
	void SetMotionBlur(float InMotionBlur); // Function Icarus.IcarusGameUserSettingsGen.SetMotionBlur // (Native|Public|BlueprintCallable) // @ game+0x1743d10
	void SetMaxShadowCascades(float InMaxShadowCascades); // Function Icarus.IcarusGameUserSettingsGen.SetMaxShadowCascades // (Native|Public|BlueprintCallable) // @ game+0x1743c80
	void SetMasterVolume(float InMasterVolume); // Function Icarus.IcarusGameUserSettingsGen.SetMasterVolume // (Native|Public|BlueprintCallable) // @ game+0x1743bf0
	void SetLODBias(float InLODBias); // Function Icarus.IcarusGameUserSettingsGen.SetLODBias // (Native|Public|BlueprintCallable) // @ game+0x1743a60
	void SetLanguage(struct FString InLanguage); // Function Icarus.IcarusGameUserSettingsGen.SetLanguage // (Native|Public|BlueprintCallable) // @ game+0x1743af0
	void SetKillcam(bool bInKillcam); // Function Icarus.IcarusGameUserSettingsGen.SetKillcam // (Native|Public|BlueprintCallable) // @ game+0x17439d0
	void SetInvertYAxis(bool bInInvertYAxis); // Function Icarus.IcarusGameUserSettingsGen.SetInvertYAxis // (Native|Public|BlueprintCallable) // @ game+0x1743940
	void SetInputType(enum class EInputTypeSetting InInputType); // Function Icarus.IcarusGameUserSettingsGen.SetInputType // (Native|Public|BlueprintCallable) // @ game+0x17438c0
	void SetGlobalIllumination(bool bInGlobalIllumination); // Function Icarus.IcarusGameUserSettingsGen.SetGlobalIllumination // (Native|Public|BlueprintCallable) // @ game+0x1743830
	void SetFSRSharpness(float InFSRSharpness); // Function Icarus.IcarusGameUserSettingsGen.SetFSRSharpness // (Native|Public|BlueprintCallable) // @ game+0x1743600
	void SetFSRMode(enum class EFSRModeSetting InFSRMode); // Function Icarus.IcarusGameUserSettingsGen.SetFSRMode // (Native|Public|BlueprintCallable) // @ game+0x1743580
	void SetFrameLimit(float InFrameLimit); // Function Icarus.IcarusGameUserSettingsGen.SetFrameLimit // (Native|Public|BlueprintCallable) // @ game+0x17437a0
	void SetFoliage(enum class EFoliageSetting InFoliage); // Function Icarus.IcarusGameUserSettingsGen.SetFoliage // (Native|Public|BlueprintCallable) // @ game+0x1743720
	void SetFieldOfView(float InFieldOfView); // Function Icarus.IcarusGameUserSettingsGen.SetFieldOfView // (Native|Public|BlueprintCallable) // @ game+0x1743690
	void SetEquipmentFieldOfView(float InEquipmentFieldOfView); // Function Icarus.IcarusGameUserSettingsGen.SetEquipmentFieldOfView // (Native|Public|BlueprintCallable) // @ game+0x17434f0
	void SetEffects(enum class EEffectsSetting InEffects); // Function Icarus.IcarusGameUserSettingsGen.SetEffects // (Native|Public|BlueprintCallable) // @ game+0x1743470
	void SetDLSSSharpness(float InDLSSSharpness); // Function Icarus.IcarusGameUserSettingsGen.SetDLSSSharpness // (Native|Public|BlueprintCallable) // @ game+0x17431b0
	void SetDLSSMode(enum class EDLSSModeSetting InDLSSMode); // Function Icarus.IcarusGameUserSettingsGen.SetDLSSMode // (Native|Public|BlueprintCallable) // @ game+0x1743130
	void SetDisplayTemperature(enum class EDisplayTemperatureSetting InDisplayTemperature); // Function Icarus.IcarusGameUserSettingsGen.SetDisplayTemperature // (Native|Public|BlueprintCallable) // @ game+0x17433f0
	void SetDisablePlayerLightShadows(bool bInDisablePlayerLightShadows); // Function Icarus.IcarusGameUserSettingsGen.SetDisablePlayerLightShadows // (Native|Public|BlueprintCallable) // @ game+0x1743360
	void SetDisableLightningEffects(bool bInDisableLightningEffects); // Function Icarus.IcarusGameUserSettingsGen.SetDisableLightningEffects // (Native|Public|BlueprintCallable) // @ game+0x17432d0
	void SetDialogueVolume(float InDialogueVolume); // Function Icarus.IcarusGameUserSettingsGen.SetDialogueVolume // (Native|Public|BlueprintCallable) // @ game+0x1743240
	void SetCreatureIK(bool bInCreatureIK); // Function Icarus.IcarusGameUserSettingsGen.SetCreatureIK // (Native|Public|BlueprintCallable) // @ game+0x17430a0
	void SetControllerIcons(enum class EControllerIconsSetting InControllerIcons); // Function Icarus.IcarusGameUserSettingsGen.SetControllerIcons // (Native|Public|BlueprintCallable) // @ game+0x1743020
	void SetContactShadows(bool bInContactShadows); // Function Icarus.IcarusGameUserSettingsGen.SetContactShadows // (Native|Public|BlueprintCallable) // @ game+0x1742f90
	void SetClothSimulation(bool bInClothSimulation); // Function Icarus.IcarusGameUserSettingsGen.SetClothSimulation // (Native|Public|BlueprintCallable) // @ game+0x1742f00
	void SetCharacterVoiceVolume(float InCharacterVoiceVolume); // Function Icarus.IcarusGameUserSettingsGen.SetCharacterVoiceVolume // (Native|Public|BlueprintCallable) // @ game+0x1742e70
	void SetBlueprintTooltipOpenAnimations(bool bInBlueprintTooltipOpenAnimations); // Function Icarus.IcarusGameUserSettingsGen.SetBlueprintTooltipOpenAnimations // (Native|Public|BlueprintCallable) // @ game+0x1742de0
	void SetAntiAliasing(enum class EAntiAliasingSetting InAntiAliasing); // Function Icarus.IcarusGameUserSettingsGen.SetAntiAliasing // (Native|Public|BlueprintCallable) // @ game+0x1742d60
	void SetAmbientVolume(float InAmbientVolume); // Function Icarus.IcarusGameUserSettingsGen.SetAmbientVolume // (Native|Public|BlueprintCallable) // @ game+0x1742cd0
	void SetAimSensitivity(float InAimSensitivity); // Function Icarus.IcarusGameUserSettingsGen.SetAimSensitivity // (Native|Public|BlueprintCallable) // @ game+0x1742c40
	void RevertSetting(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.RevertSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1742bb0
	void RevertDisplayMode(); // Function Icarus.IcarusGameUserSettingsGen.RevertDisplayMode // (Native|Public|BlueprintCallable) // @ game+0x1742b90
	void ResetSettingsForSection(struct UE4::FName CategoryName, struct UE4::FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.ResetSettingsForSection // (Final|Native|Protected|BlueprintCallable) // @ game+0x1742ac0
	void ResetSettingsForCategory(struct UE4::FName CategoryName); // Function Icarus.IcarusGameUserSettingsGen.ResetSettingsForCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x1742a30
	void ResetGameplaySettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetGameplaySettings // (Native|Public|BlueprintCallable) // @ game+0x1742a10
	void ResetDisplaySettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetDisplaySettings // (Native|Public|BlueprintCallable) // @ game+0x17429f0
	void ResetControlsSettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetControlsSettings // (Native|Public|BlueprintCallable) // @ game+0x17429d0
	void ResetAudioSettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetAudioSettings // (Native|Public|BlueprintCallable) // @ game+0x17429b0
	bool IsSettingEnabledForEdit(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.IsSettingEnabledForEdit // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1742910
	bool IsSectionUsingDefaultValues(struct UE4::FName CategoryName, struct UE4::FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.IsSectionUsingDefaultValues // (Final|Native|Protected|BlueprintCallable) // @ game+0x1742840
	bool IsSectionEnabledForEdit(struct UE4::FName CategoryName, struct UE4::FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.IsSectionEnabledForEdit // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1742770
	bool IsCategoryUsingDefaultValues(struct UE4::FName CategoryName); // Function Icarus.IcarusGameUserSettingsGen.IsCategoryUsingDefaultValues // (Final|Native|Protected|BlueprintCallable) // @ game+0x17426d0
	bool GetWorkshopTooltipOpenAnimations(); // Function Icarus.IcarusGameUserSettingsGen.GetWorkshopTooltipOpenAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17426b0
	bool GetVSync(); // Function Icarus.IcarusGameUserSettingsGen.GetVSync // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742650
	bool GetVolumetricClouds(); // Function Icarus.IcarusGameUserSettingsGen.GetVolumetricClouds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742690
	enum class EViewDistanceSetting GetViewDistance(); // Function Icarus.IcarusGameUserSettingsGen.GetViewDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742670
	bool GetUseSimpleBuildingShadows(); // Function Icarus.IcarusGameUserSettingsGen.GetUseSimpleBuildingShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742630
	bool GetToggleSprint(); // Function Icarus.IcarusGameUserSettingsGen.GetToggleSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742610
	bool GetToggleCrouch(); // Function Icarus.IcarusGameUserSettingsGen.GetToggleCrouch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17425f0
	bool GetToggleAim(); // Function Icarus.IcarusGameUserSettingsGen.GetToggleAim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17425d0
	float GetTextureStreamingPoolsize(); // Function Icarus.IcarusGameUserSettingsGen.GetTextureStreamingPoolsize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742590
	enum class ETexturesSetting GetTextures(); // Function Icarus.IcarusGameUserSettingsGen.GetTextures // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17425b0
	bool GetTessellation(); // Function Icarus.IcarusGameUserSettingsGen.GetTessellation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742570
	bool GetTerrainDeformationExperimental(); // Function Icarus.IcarusGameUserSettingsGen.GetTerrainDeformationExperimental // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742550
	bool GetSkipStartupMovies(); // Function Icarus.IcarusGameUserSettingsGen.GetSkipStartupMovies // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742530
	bool GetShowTutorialProspect(); // Function Icarus.IcarusGameUserSettingsGen.GetShowTutorialProspect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742510
	bool GetShowItemHighlights(); // Function Icarus.IcarusGameUserSettingsGen.GetShowItemHighlights // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17424f0
	bool GetShowDamageNumbers(); // Function Icarus.IcarusGameUserSettingsGen.GetShowDamageNumbers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17424d0
	bool GetShowBloodEffects(); // Function Icarus.IcarusGameUserSettingsGen.GetShowBloodEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17424b0
	bool GetShowAimCrosshair(); // Function Icarus.IcarusGameUserSettingsGen.GetShowAimCrosshair // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742490
	enum class EShadowsSetting GetShadows(); // Function Icarus.IcarusGameUserSettingsGen.GetShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742470
	enum class EShadowFilterMethodSetting GetShadowFilterMethod(); // Function Icarus.IcarusGameUserSettingsGen.GetShadowFilterMethod // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742450
	enum class EShadingSetting GetShading(); // Function Icarus.IcarusGameUserSettingsGen.GetShading // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742430
	float GetSFXVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetSFXVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17420b0
	struct FString GetSettingValue_String(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_String // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1742350
	int32_t GetSettingValue_Index(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_Index // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x17422b0
	float GetSettingValue_Float(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_Float // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1742210
	bool GetSettingValue_Bool(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_Bool // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1742170
	enum class ESettingType GetSettingType(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingType // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x17420d0
	bool GetRTXEnabled(); // Function Icarus.IcarusGameUserSettingsGen.GetRTXEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742070
	float GetResolutionScale(); // Function Icarus.IcarusGameUserSettingsGen.GetResolutionScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742090
	enum class EPostProcessingSetting GetPostProcessing(); // Function Icarus.IcarusGameUserSettingsGen.GetPostProcessing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742050
	bool GetPlayerMarker(); // Function Icarus.IcarusGameUserSettingsGen.GetPlayerMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742030
	enum class EOverallSetting GetOverall(); // Function Icarus.IcarusGameUserSettingsGen.GetOverall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742010
	float GetMusicVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetMusicVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ff0
	bool GetMultiplayerGhostBuilding(); // Function Icarus.IcarusGameUserSettingsGen.GetMultiplayerGhostBuilding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741fd0
	float GetMouseSensitivityY(); // Function Icarus.IcarusGameUserSettingsGen.GetMouseSensitivityY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741fb0
	float GetMouseSensitivityX(); // Function Icarus.IcarusGameUserSettingsGen.GetMouseSensitivityX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741f90
	float GetMotionBlur(); // Function Icarus.IcarusGameUserSettingsGen.GetMotionBlur // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741f70
	float GetMinTextureStreamingPoolsizeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinTextureStreamingPoolsizeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741f50
	float GetMinSFXVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinSFXVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinMusicVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMusicVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinMouseSensitivityYValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMouseSensitivityYValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ef0
	float GetMinMouseSensitivityXValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMouseSensitivityXValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ef0
	float GetMinMotionBlurValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMotionBlurValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinMaxShadowCascadesValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMaxShadowCascadesValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741dd0
	float GetMinMasterVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMasterVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinLODBiasValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinLODBiasValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ef0
	float GetMinFSRSharpnessValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinFSRSharpnessValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinFrameLimitValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinFrameLimitValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741f30
	float GetMinFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741f10
	float GetMinEquipmentFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinEquipmentFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741df0
	float GetMinDLSSSharpnessValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinDLSSSharpnessValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinDialogueVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinDialogueVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinCharacterVoiceVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinCharacterVoiceVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinAmbientVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinAmbientVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe29ff0
	float GetMinAimSensitivityValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinAimSensitivityValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ef0
	float GetMaxTextureStreamingPoolsizeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxTextureStreamingPoolsizeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ed0
	float GetMaxShadowCascades(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxShadowCascades // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741eb0
	float GetMaxSFXVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxSFXVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741db0
	float GetMaxMusicVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMusicVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741db0
	float GetMaxMouseSensitivityYValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMouseSensitivityYValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741d90
	float GetMaxMouseSensitivityXValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMouseSensitivityXValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741d90
	float GetMaxMotionBlurValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMotionBlurValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741e90
	float GetMaxMaxShadowCascadesValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMaxShadowCascadesValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741e70
	float GetMaxMasterVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMasterVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741db0
	float GetMaxLODBiasValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxLODBiasValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741e50
	float GetMaxFSRSharpnessValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxFSRSharpnessValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741dd0
	float GetMaxFrameLimitValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxFrameLimitValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741e30
	float GetMaxFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741e10
	float GetMaxEquipmentFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxEquipmentFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741df0
	float GetMaxDLSSSharpnessValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxDLSSSharpnessValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741dd0
	float GetMaxDialogueVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxDialogueVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741db0
	float GetMaxCharacterVoiceVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxCharacterVoiceVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741db0
	float GetMaxAmbientVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxAmbientVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741db0
	float GetMaxAimSensitivityValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxAimSensitivityValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741d90
	float GetMasterVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetMasterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741d70
	float GetLODBias(); // Function Icarus.IcarusGameUserSettingsGen.GetLODBias // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741c80
	struct FString GetLanguage(); // Function Icarus.IcarusGameUserSettingsGen.GetLanguage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ca0
	bool GetKillcam(); // Function Icarus.IcarusGameUserSettingsGen.GetKillcam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741c60
	bool GetInvertYAxis(); // Function Icarus.IcarusGameUserSettingsGen.GetInvertYAxis // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741c40
	enum class EInputTypeSetting GetInputType(); // Function Icarus.IcarusGameUserSettingsGen.GetInputType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741c20
	bool GetGlobalIllumination(); // Function Icarus.IcarusGameUserSettingsGen.GetGlobalIllumination // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741c00
	float GetFSRSharpness(); // Function Icarus.IcarusGameUserSettingsGen.GetFSRSharpness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741b80
	enum class EFSRModeSetting GetFSRMode(); // Function Icarus.IcarusGameUserSettingsGen.GetFSRMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741b60
	float GetFrameLimit(); // Function Icarus.IcarusGameUserSettingsGen.GetFrameLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741be0
	enum class EFoliageSetting GetFoliage(); // Function Icarus.IcarusGameUserSettingsGen.GetFoliage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741bc0
	float GetFieldOfView(); // Function Icarus.IcarusGameUserSettingsGen.GetFieldOfView // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741ba0
	float GetEquipmentFieldOfView(); // Function Icarus.IcarusGameUserSettingsGen.GetEquipmentFieldOfView // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741b40
	enum class EEffectsSetting GetEffects(); // Function Icarus.IcarusGameUserSettingsGen.GetEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741b20
	float GetDLSSSharpness(); // Function Icarus.IcarusGameUserSettingsGen.GetDLSSSharpness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741960
	enum class EDLSSModeSetting GetDLSSMode(); // Function Icarus.IcarusGameUserSettingsGen.GetDLSSMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741940
	enum class EDisplayTemperatureSetting GetDisplayTemperature(); // Function Icarus.IcarusGameUserSettingsGen.GetDisplayTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741b00
	struct TArray<struct FText> GetDisplayModeList(); // Function Icarus.IcarusGameUserSettingsGen.GetDisplayModeList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17419e0
	bool GetDisablePlayerLightShadows(); // Function Icarus.IcarusGameUserSettingsGen.GetDisablePlayerLightShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17419c0
	bool GetDisableLightningEffects(); // Function Icarus.IcarusGameUserSettingsGen.GetDisableLightningEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17419a0
	float GetDialogueVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetDialogueVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741980
	bool GetCreatureIK(); // Function Icarus.IcarusGameUserSettingsGen.GetCreatureIK // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741920
	enum class EControllerIconsSetting GetControllerIcons(); // Function Icarus.IcarusGameUserSettingsGen.GetControllerIcons // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741900
	bool GetContactShadows(); // Function Icarus.IcarusGameUserSettingsGen.GetContactShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17418e0
	bool GetClothSimulation(); // Function Icarus.IcarusGameUserSettingsGen.GetClothSimulation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17418c0
	float GetCharacterVoiceVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetCharacterVoiceVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17418a0
	bool GetBlueprintTooltipOpenAnimations(); // Function Icarus.IcarusGameUserSettingsGen.GetBlueprintTooltipOpenAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741880
	enum class EAntiAliasingSetting GetAntiAliasing(); // Function Icarus.IcarusGameUserSettingsGen.GetAntiAliasing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741860
	float GetAmbientVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetAmbientVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741840
	float GetAimSensitivity(); // Function Icarus.IcarusGameUserSettingsGen.GetAimSensitivity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741820
	void ConfirmSetting(struct UE4::FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.ConfirmSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1741790
	void ConfirmDisplayMode(); // Function Icarus.IcarusGameUserSettingsGen.ConfirmDisplayMode // (Native|Public|BlueprintCallable) // @ game+0x1741770
	bool CheckWorkshopTooltipOpenAnimationsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckWorkshopTooltipOpenAnimationsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckVSyncCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckVSyncCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckVolumetricCloudsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckVolumetricCloudsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckViewDistanceCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckViewDistanceCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckUseSimpleBuildingShadowsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckUseSimpleBuildingShadowsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckToggleSprintCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckToggleSprintCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckToggleCrouchCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckToggleCrouchCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckToggleAimCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckToggleAimCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckTextureStreamingPoolsizeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckTextureStreamingPoolsizeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckTexturesCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckTexturesCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckTessellationCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckTessellationCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckTerrainDeformationExperimentalCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckTerrainDeformationExperimentalCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17416d0
	bool CheckSkipStartupMoviesCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckSkipStartupMoviesCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShowTutorialProspectCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShowTutorialProspectCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShowItemHighlightsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShowItemHighlightsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShowDamageNumbersCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShowDamageNumbersCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShowBloodEffectsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShowBloodEffectsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShowAimCrosshairCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShowAimCrosshairCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShadowsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShadowsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShadowFilterMethodCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShadowFilterMethodCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckShadingCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckShadingCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckSFXVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckSFXVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckSettingCondition(struct UE4::FName SettingName, int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckSettingCondition // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741600
	bool CheckSectionCondition(struct UE4::FName CategoryName, struct UE4::FName SectionName, int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckSectionCondition // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x17414f0
	bool CheckRTXEnabledCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckRTXEnabledCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17413b0
	bool CheckResolutionScaleCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckResolutionScaleCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741450
	bool CheckPostProcessingCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckPostProcessingCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckPlayerMarkerCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckPlayerMarkerCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckOverallCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckOverallCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMusicVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMusicVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMultiplayerGhostBuildingCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMultiplayerGhostBuildingCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMouseSensitivityYCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMouseSensitivityYCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMouseSensitivityXCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMouseSensitivityXCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMotionBlurCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMotionBlurCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMaxShadowCascadesCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMaxShadowCascadesCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckMasterVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckMasterVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckLODBiasCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckLODBiasCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckLanguageCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckLanguageCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckKillcamCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckKillcamCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckInvertYAxisCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckInvertYAxisCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckInputTypeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckInputTypeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckGlobalIlluminationCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckGlobalIlluminationCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741310
	bool CheckGameplayUserInterfaceCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckGameplayUserInterfaceCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckGameplayLanguageCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckGameplayLanguageCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckGameplayGeneralCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckGameplayGeneralCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckFSRSharpnessCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckFSRSharpnessCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741270
	bool CheckFSRModeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckFSRModeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckFrameLimitCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckFrameLimitCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckFoliageCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckFoliageCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckFieldOfViewCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckFieldOfViewCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckEquipmentFieldOfViewCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckEquipmentFieldOfViewCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17411d0
	bool CheckEffectsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckEffectsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDLSSSharpnessCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDLSSSharpnessCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740ff0
	bool CheckDLSSModeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDLSSModeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisplayWindowCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayWindowCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisplayVideoCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayVideoCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisplayTemperatureCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayTemperatureCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisplayRayTracingCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayRayTracingCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741130
	bool CheckDisplayQualityCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayQualityCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisplayNVIDIADLSSCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayNVIDIADLSSCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740e10
	bool CheckDisplayModeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayModeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisplayAMDFidelityFXCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisplayAMDFidelityFXCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1741090
	bool CheckDisablePlayerLightShadowsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisablePlayerLightShadowsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDisableLightningEffectsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDisableLightningEffectsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckDialogueVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckDialogueVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckCreatureIKCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckCreatureIKCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckControlsKeybindingsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckControlsKeybindingsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740f50
	bool CheckControlsGeneralCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckControlsGeneralCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckControllerIconsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckControllerIconsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740eb0
	bool CheckContactShadowsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckContactShadowsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckClothSimulationCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckClothSimulationCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckCharacterVoiceVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckCharacterVoiceVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckBlueprintTooltipOpenAnimationsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckBlueprintTooltipOpenAnimationsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckAudioVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckAudioVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckAntiAliasingCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckAntiAliasingCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740e10
	bool CheckAmbientVolumeCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckAmbientVolumeCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckAimSensitivityCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckAimSensitivityCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	bool CheckActionsCondition(int32_t Index); // Function Icarus.IcarusGameUserSettingsGen.CheckActionsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1740d70
	void ApplySettingsForSection(struct UE4::FName CategoryName, struct UE4::FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.ApplySettingsForSection // (Final|Native|Protected|BlueprintCallable) // @ game+0x1740ca0
	void ApplyGameplaySettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyGameplaySettings // (Native|Public|BlueprintCallable) // @ game+0x1740c10
	void ApplyDisplaySettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyDisplaySettings // (Native|Public|BlueprintCallable) // @ game+0x1740b80
	void ApplyControlsSettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyControlsSettings // (Native|Public|BlueprintCallable) // @ game+0x1740af0
	void ApplyAudioSettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyAudioSettings // (Native|Public|BlueprintCallable) // @ game+0x1740a60
};

// Class Icarus.IcarusGameUserSettings
// Size: 0x298 (Inherited: 0x220)
struct UIcarusGameUserSettings : UIcarusGameUserSettingsGen {
	struct FMulticastSparseDelegate OnMouseSensitivityChanged; // 0x220(0x01)
	char pad_221[0x1b]; // 0x221(0x1b)
	uint32_t PatchVersion; // 0x23c(0x04)
	char pad_240[0x8]; // 0x240(0x08)
	struct TMap<struct FName, struct USettingWidget*> SettingWidgets; // 0x248(0x50)

	void RevertChangesFromUI(struct USettingsSection* Section); // Function Icarus.IcarusGameUserSettings.RevertChangesFromUI // (Final|Native|Public|BlueprintCallable) // @ game+0x173b610
	void OnDirty(); // Function Icarus.IcarusGameUserSettings.OnDirty // (Final|Native|Protected) // @ game+0x173af30
	bool IsPlayerUsingControllerStatic(); // Function Icarus.IcarusGameUserSettings.IsPlayerUsingControllerStatic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1734c70
	void GetMouseSensitivityParameters(float& Yaw, float& Pitch, float& AimYaw, float& AimPitch); // Function Icarus.IcarusGameUserSettings.GetMouseSensitivityParameters // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x173a6d0
	struct UIcarusGameUserSettings* GetIcarusGameUserSettings(); // Function Icarus.IcarusGameUserSettings.GetIcarusGameUserSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x173a670
	struct USettingsView* CreateWidgetsForCategory(struct UUserWidget* OwningWidget, struct UObject* SettingsViewClass, enum class ESettingsCategory Category); // Function Icarus.IcarusGameUserSettings.CreateWidgetsForCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x173a230
	void ConfirmChangesFromUI(struct USettingsSection* Section); // Function Icarus.IcarusGameUserSettings.ConfirmChangesFromUI // (Final|Native|Public|BlueprintCallable) // @ game+0x173a1a0
	void ApplyChangesFromUI(struct USettingsSection* Section); // Function Icarus.IcarusGameUserSettings.ApplyChangesFromUI // (Final|Native|Public|BlueprintCallable) // @ game+0x173a110
};

// Class Icarus.IcarusGameViewportClient
// Size: 0x370 (Inherited: 0x360)
struct UIcarusGameViewportClient : UGameViewportClient {
	char pad_360[0x10]; // 0x360(0x10)
};

// Class Icarus.IcarusGOAPAction
// Size: 0x80 (Inherited: 0x28)
struct UIcarusGOAPAction : UObject {
	char pad_28[0x28]; // 0x28(0x28)
	struct AActor* Target; // 0x50(0x08)
	struct AIcarusNPCGOAPController* CachedController; // 0x58(0x08)
	char pad_60[0x20]; // 0x60(0x20)

	bool UpdateCost(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.UpdateCost // (Native|Event|Public|BlueprintEvent) // @ game+0x174b980
	bool PlanAction(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.PlanAction // (Native|Event|Public|BlueprintEvent) // @ game+0x174b0c0
	bool IsInRange(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.IsInRange // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174ab10
	bool GOAPAnimNotify(struct FString NotifyName, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.GOAPAnimNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x1749ae0
	bool GetActionStats(struct TMap<struct FBaseStatsEnum, int32_t>& ActionStats); // Function Icarus.IcarusGOAPAction.GetActionStats // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1749d30
	struct FGOAPAction GetActionData(); // Function Icarus.IcarusGOAPAction.GetActionData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1749bc0
	bool ExecutionComplete(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.ExecutionComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17498f0
	bool Execute(struct AIcarusNPCGOAPController* Controller, float Delta); // Function Icarus.IcarusGOAPAction.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x1749810
	bool CheckContextualPreconditions(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.CheckContextualPreconditions // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1749420
	bool ArePreconditionsSatisfied(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.ArePreconditionsSatisfied // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1749380
	bool AreEffectsSatisfied(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.AreEffectsSatisfied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17492e0
	bool ActionReset(bool Interrupted); // Function Icarus.IcarusGOAPAction.ActionReset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1749220
};

// Class Icarus.IcarusGOAPAIMemory
// Size: 0xd0 (Inherited: 0xb0)
struct UIcarusGOAPAIMemory : UActorComponent {
	struct TArray<struct FIcarusGOAPAIFact> InteractableObjectMemories; // 0xb0(0x10)
	struct AIcarusNPCGOAPController* CurrentController; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	void UpdateObject(enum class EGOAPObjectType ObjectType, struct AActor* Object, struct FAIStimulus NewAIStimulus, enum class EGOAPFactSource FactSource); // Function Icarus.IcarusGOAPAIMemory.UpdateObject // (Final|Native|Public|BlueprintCallable) // @ game+0x174bb00
	struct TArray<struct FIcarusGOAPAIFact> GetKnownIteractablesOfType(enum class EGOAPObjectType ObjectType, bool bOnlyCurrentlyPerceived); // Function Icarus.IcarusGOAPAIMemory.GetKnownIteractablesOfType // (Final|Native|Public|BlueprintCallable) // @ game+0x174a530
	bool GetFactForObject(struct AActor* Object, struct FIcarusGOAPAIFact& FoundFact); // Function Icarus.IcarusGOAPAIMemory.GetFactForObject // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x174a200
	struct TArray<struct FIcarusGOAPAIFact> GetDistanceSortedKnownInteractables(struct AActor* Actor, enum class EGOAPObjectType ObjectType, bool bOnlyCurrentlyPerceived); // Function Icarus.IcarusGOAPAIMemory.GetDistanceSortedKnownInteractables // (Final|Native|Public|BlueprintCallable) // @ game+0x174a0a0
	struct FIcarusGOAPAIFact GetClosestKnownInteractable(struct AActor* Actor, enum class EGOAPObjectType ObjectType, bool bOnlyCurrentlyPerceived); // Function Icarus.IcarusGOAPAIMemory.GetClosestKnownInteractable // (Final|Native|Public|BlueprintCallable) // @ game+0x1749eb0
};

// Class Icarus.IcarusGOAPAIState
// Size: 0xc0 (Inherited: 0xb0)
struct UIcarusGOAPAIState : UActorComponent {
	struct AActor* CurrentTarget; // 0xb0(0x08)
	enum class EGOAPObjectType SearchingInteractableType; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	bool ClearAIState(); // Function Icarus.IcarusGOAPAIState.ClearAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x17494c0
};

// Class Icarus.IcarusGOAPCorpseBase
// Size: 0x420 (Inherited: 0x420)
struct AIcarusGOAPCorpseBase : AIcarusCorpse {

	void SetupCorpseSettleTime(float NewMaxCorpseSettleTime); // Function Icarus.IcarusGOAPCorpseBase.SetupCorpseSettleTime // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusGOAPGoal
// Size: 0x40 (Inherited: 0x28)
struct UIcarusGOAPGoal : UObject {
	struct FGOAPGoalsRowHandle CachedRowHandle; // 0x28(0x18)

	bool SetWorkingData(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPGoal.SetWorkingData // (Native|Event|Public|BlueprintEvent) // @ game+0x174b0c0
	bool SetInitialState(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPGoal.SetInitialState // (Native|Event|Public|BlueprintEvent) // @ game+0x174b750
	struct FGOAPGoal GetGoalData(); // Function Icarus.IcarusGOAPGoal.GetGoalData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x174a310
};

// Class Icarus.IcarusGOAPInteractableComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UIcarusGOAPInteractableComponent : UActorComponent {
	enum class EGOAPObjectType Type; // 0xb0(0x01)
	bool InUse; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	float InteractTime; // 0xb4(0x04)
	struct UIcarusGOAPAction* CurrentAction; // 0xb8(0x08)
	struct AIcarusNPCGOAPController* CurrentInteractionController; // 0xc0(0x08)
	struct FMulticastSparseDelegate OnInteraction; // 0xc8(0x01)
	struct FMulticastSparseDelegate OnAbort; // 0xc9(0x01)
	struct FMulticastSparseDelegate OnInteractionComplete; // 0xca(0x01)
	char pad_CB[0x5]; // 0xcb(0x05)

	bool Interact(struct UIcarusGOAPAction* Action, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPInteractableComponent.Interact // (Final|Native|Public|BlueprintCallable) // @ game+0x174aa40
	bool CompleteInteraction(); // Function Icarus.IcarusGOAPInteractableComponent.CompleteInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x17494f0
	bool Abort(); // Function Icarus.IcarusGOAPInteractableComponent.Abort // (Final|Native|Public|BlueprintCallable) // @ game+0x17491f0
};

// Class Icarus.IcarusGOAPInteractableObject
// Size: 0x220 (Inherited: 0x220)
struct AIcarusGOAPInteractableObject : AActor {
};

// Class Icarus.IcarusGOAPMotivation
// Size: 0x60 (Inherited: 0x28)
struct UIcarusGOAPMotivation : UObject {
	struct FGOAPMotivationsRowHandle CachedRowHandle; // 0x28(0x18)
	int32_t CurrentValue; // 0x40(0x04)
	char pad_44[0x1c]; // 0x44(0x1c)

	bool UpdateCost(float Delta, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPMotivation.UpdateCost // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174ba20
	bool Update(float Delta, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPMotivation.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x174b8b0
	bool SetMotivation(int32_t NewValue); // Function Icarus.IcarusGOAPMotivation.SetMotivation // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x174b7f0
	void OnMotivationTriggerEvent(struct AIcarusNPCGOAPController* Controller, struct FGOAPMotivationTrigger& TriggeredEvent, bool bWasTriggered); // Function Icarus.IcarusGOAPMotivation.OnMotivationTriggerEvent // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	struct FGOAPMotivation GetMotivationData(); // Function Icarus.IcarusGOAPMotivation.GetMotivationData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x174a640
};

// Class Icarus.IcarusGOAPPlanner
// Size: 0xb0 (Inherited: 0xb0)
struct UIcarusGOAPPlanner : UActorComponent {
};

// Class Icarus.IcarusHostMigrationSubsystem
// Size: 0x88 (Inherited: 0x30)
struct UIcarusHostMigrationSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate AttemptHost; // 0x30(0x10)
	struct FMulticastInlineDelegate AttemptJoin; // 0x40(0x10)
	bool bHostMigrationEnabled; // 0x50(0x01)
	enum class EHostMigrationStatus HostMigrationStatus; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
	struct FHostMigrationInfo BackupHostMigrationInfo; // 0x58(0x28)
	struct UHostCandidateCallbackProxyGen* HostCandidateCallbackProxy; // 0x80(0x08)

	void ResetHostMigration(); // Function Icarus.IcarusHostMigrationSubsystem.ResetHostMigration // (Final|Native|Public|BlueprintCallable) // @ game+0x174b300
	void OnHostCandidateSuccess(struct FResHostCandidate& Response); // Function Icarus.IcarusHostMigrationSubsystem.OnHostCandidateSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x174ad30
	void OnHostCandidateFailed(struct FResHostCandidate& Response); // Function Icarus.IcarusHostMigrationSubsystem.OnHostCandidateFailed // (Final|Native|Protected|HasOutParms) // @ game+0x174ac50
	enum class EHostMigrationStatus GetHostMigrationStatus(); // Function Icarus.IcarusHostMigrationSubsystem.GetHostMigrationStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x174a450
	struct FHostMigrationInfo GetBackupHostMigrationInfo(); // Function Icarus.IcarusHostMigrationSubsystem.GetBackupHostMigrationInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1749e60
	void FindBestBackupHostForMigration(); // Function Icarus.IcarusHostMigrationSubsystem.FindBestBackupHostForMigration // (Final|Native|Public|BlueprintCallable) // @ game+0x17499b0
};

// Class Icarus.IcarusUpdateSession
// Size: 0x330 (Inherited: 0x320)
struct UIcarusUpdateSession : UIcarusSessionBase {
	struct UGetProspectCallbackProxyGen* GetProspectCallbackProxy; // 0x320(0x08)
	struct UUpdateSessionCallbackProxyAdvanced* UpdateSessionCallbackProxy; // 0x328(0x08)

	void OnUpdateSessionSuccess(); // Function Icarus.IcarusUpdateSession.OnUpdateSessionSuccess // (Native|Protected) // @ game+0x17706b0
	void OnUpdateSessionFailure(); // Function Icarus.IcarusUpdateSession.OnUpdateSessionFailure // (Native|Protected) // @ game+0x1770690
	struct UIcarusUpdateSession* IcarusUpdateSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController); // Function Icarus.IcarusUpdateSession.IcarusUpdateSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1770220
	void GetProspectInfoSuccess(struct FResGetProspect& Response); // Function Icarus.IcarusUpdateSession.GetProspectInfoSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x176fed0
	void GetProspectInfoFailure(struct FResGetProspect& Response); // Function Icarus.IcarusUpdateSession.GetProspectInfoFailure // (Final|Native|Protected|HasOutParms) // @ game+0x176fd50
};

// Class Icarus.IcarusHostSession
// Size: 0x350 (Inherited: 0x330)
struct UIcarusHostSession : UIcarusUpdateSession {
	bool bHostSessionRetry; // 0x330(0x01)
	char pad_331[0x3]; // 0x331(0x03)
	int32_t HostSessionRetryAttempts; // 0x334(0x04)
	int32_t HostSessionRetryAttemptsMax; // 0x338(0x04)
	float HostSessionRetryTime; // 0x33c(0x04)
	float HostSessionRetryTimeMax; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct UCreateSessionCallbackProxyAdvanced* CreateSessionCallbackProxy; // 0x348(0x08)

	void OnCreateSessionSuccess(); // Function Icarus.IcarusHostSession.OnCreateSessionSuccess // (Final|Native|Protected) // @ game+0x174abf0
	void OnCreateSessionFailure(); // Function Icarus.IcarusHostSession.OnCreateSessionFailure // (Final|Native|Protected) // @ game+0x174abd0
	struct UIcarusHostSession* IcarusHostSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController); // Function Icarus.IcarusHostSession.IcarusHostSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x174a970
};

// Class Icarus.IcarusHUD
// Size: 0x310 (Inherited: 0x310)
struct AIcarusHUD : AHUD {

	void ToggleDrawWeather(); // Function Icarus.IcarusHUD.ToggleDrawWeather // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetBiomeWeatherData(struct TMap<struct FWeatherBiomeGroupsEnum, struct FWeatherBiomeGroupForecast>& BiomeGroupForecast); // Function Icarus.IcarusHUD.SetBiomeWeatherData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusItemFactory
// Size: 0x28 (Inherited: 0x28)
struct UIcarusItemFactory : UBlueprintFunctionLibrary {

	struct AIcarusItem* SpawnItemActor(struct UObject* WorldContextObject, struct FItemData& ItemData, enum class EIcarusItemContext ItemContext, struct FTransform& SpawnTransform, struct FIcarusItemSpawnParameters& SpawnParameters, bool bAllowSpawningByClient); // Function Icarus.IcarusItemFactory.SpawnItemActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1750c10
	bool GetItemDataContextParams(struct FItemData& ItemData, enum class EIcarusItemContext ItemContext, struct AIcarusItem*& OutActorClass, struct TSoftObjectPtr<UStreamableRenderAsset>& OutMeshPtr); // Function Icarus.IcarusItemFactory.GetItemDataContextParams // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x174f200
	struct AIcarusItem* FinishSpawningItemActor(struct AIcarusItem* SpawnedItem, struct FTransform& SpawnTransform); // Function Icarus.IcarusItemFactory.FinishSpawningItemActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x174f050
};

// Class Icarus.IcarusJoinSession
// Size: 0x380 (Inherited: 0x320)
struct UIcarusJoinSession : UIcarusSessionBase {
	struct UJoinProspectCallbackProxyGen* JoinProspectCallbackProxy; // 0x320(0x08)
	struct TMap<enum class EIcarusJoinConfirmationStep, struct FConfirmationPopupDetails> ConfirmationSetups; // 0x328(0x50)
	bool bJoinCancelled; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)

	void OnJoinProspectSuccess(struct FResJoinProspect& Result); // Function Icarus.IcarusJoinSession.OnJoinProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x1750120
	void OnJoinProspectFailure(struct FResJoinProspect& Result); // Function Icarus.IcarusJoinSession.OnJoinProspectFailure // (Native|Protected|HasOutParms) // @ game+0x174ff90
	void OnConfirmationCancel(); // Function Icarus.IcarusJoinSession.OnConfirmationCancel // (Final|Native|Protected) // @ game+0x174ff70
	struct UIcarusJoinSession* IcarusJoinSession(struct UObject* WorldContextObject, struct FIcarusSession& IcarusSession, struct APlayerController* PlayerController, struct FOnlineProfileCharacter OnlineProfileCharacter, struct UConfirmationPopupBase* InConfirmationPopup, struct TMap<enum class EIcarusJoinConfirmationStep, struct FConfirmationPopupDetails> ConfirmationSetups); // Function Icarus.IcarusJoinSession.IcarusJoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x174f500
};

// Class Icarus.IcarusLinkedActorPanelBase
// Size: 0x260 (Inherited: 0x260)
struct UIcarusLinkedActorPanelBase : UUserWidget {
};

// Class Icarus.MapIconWidgetInterface
// Size: 0x28 (Inherited: 0x28)
struct UMapIconWidgetInterface : UInterface {

	bool ShouldOverrideWidgetLocation(struct FVector& Location); // Function Icarus.MapIconWidgetInterface.ShouldOverrideWidgetLocation // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool ShouldOverrideVisibility(enum class ESlateVisibility& ForcedVisibility); // Function Icarus.MapIconWidgetInterface.ShouldOverrideVisibility // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void InitialiseIconWidget(struct FMapIconsRowHandle MapIconData, struct AActor* OwningActor); // Function Icarus.MapIconWidgetInterface.InitialiseIconWidget // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusMapIconComponent
// Size: 0x1d8 (Inherited: 0xb0)
struct UIcarusMapIconComponent : UActorComponent {
	struct FMapIconsRowHandle MapIconData; // 0xb0(0x18)
	bool bSetupIconAutomatically; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct AActor* IconParentActor; // 0xd0(0x08)
	struct UUserWidget* GeneratedIconWidget; // 0xd8(0x08)
	char pad_E0[0xf8]; // 0xe0(0xf8)

	void TrySetupMapIcon(); // Function Icarus.IcarusMapIconComponent.TrySetupMapIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x1751020
	void SetupMapIcon(); // Function Icarus.IcarusMapIconComponent.SetupMapIcon // (Final|Native|Protected) // @ game+0x17508b0
};

// Class Icarus.IcarusNavigationDirtier
// Size: 0xf0 (Inherited: 0xb0)
struct UIcarusNavigationDirtier : UActorComponent {
	bool bTryDirtyOnTick; // 0xb0(0x01)
	bool bRegenerateOnDirty; // 0xb1(0x01)
	enum class EDirtierMode DirtierMode; // 0xb2(0x01)
	bool bHasDirtied; // 0xb3(0x01)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct TArray<struct UObject*> AffectedObjects; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnPreDirtyNavmesh; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnPostDirtyNavmesh; // 0xd8(0x10)
	struct AIcarusActor* IcarusActorOwner; // 0xe8(0x08)

	bool TryDirtyNavmesh(); // Function Icarus.IcarusNavigationDirtier.TryDirtyNavmesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1750ff0
	void SetTryDirtyOnTick(bool bNewTryDirty); // Function Icarus.IcarusNavigationDirtier.SetTryDirtyOnTick // (Final|Native|Public|BlueprintCallable) // @ game+0x1750820
	void RemoveAffectedObject(struct UObject* Object); // Function Icarus.IcarusNavigationDirtier.RemoveAffectedObject // (Final|Native|Public|BlueprintCallable) // @ game+0x17504a0
	struct AIcarusActor* GetOwningIcarusActor(); // Function Icarus.IcarusNavigationDirtier.GetOwningIcarusActor // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x174f4d0
	void ClearAffectedObjects(); // Function Icarus.IcarusNavigationDirtier.ClearAffectedObjects // (Final|Native|Public|BlueprintCallable) // @ game+0x174f010
	void AddAffectedObject(struct UObject* Object); // Function Icarus.IcarusNavigationDirtier.AddAffectedObject // (Final|Native|Public|BlueprintCallable) // @ game+0x174eea0
};

// Class Icarus.IcarusNavigationFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusNavigationFunctionLibrary : UBlueprintFunctionLibrary {

	void SpawnIcarusNavLink(struct AActor* WorldContextObject, struct FTransform SpawnTransform, struct FVector LeftLinkLocation, struct FVector RightLinkLocation, struct AActor*& OutNavLink, enum class ENavLinkDirection LinkDirection, struct AIcarusNavLink* LinkClass, struct UNavArea* AreaClass, bool bDirtyNavigationOnBeginPlay); // Function Icarus.IcarusNavigationFunctionLibrary.SpawnIcarusNavLink // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17508d0
};

// Class Icarus.LevelStreamingDelegateManager
// Size: 0x40 (Inherited: 0x28)
struct ULevelStreamingDelegateManager : UObject {
	struct ULevelStreaming* StreamingLevel; // 0x28(0x08)
	struct FMulticastInlineDelegate OnLevelStreamingStateUpdated; // 0x30(0x10)

	void OnStreamingLevelStateUpdated(); // Function Icarus.LevelStreamingDelegateManager.OnStreamingLevelStateUpdated // (Final|Native|Public) // @ game+0x17502b0
	void OnLevelUnloaded(); // Function Icarus.LevelStreamingDelegateManager.OnLevelUnloaded // (Final|Native|Private) // @ game+0x17502b0
	void OnLevelShown(); // Function Icarus.LevelStreamingDelegateManager.OnLevelShown // (Final|Native|Private) // @ game+0x17502b0
	void OnLevelLoaded(); // Function Icarus.LevelStreamingDelegateManager.OnLevelLoaded // (Final|Native|Private) // @ game+0x17502b0
	void OnLevelHidden(); // Function Icarus.LevelStreamingDelegateManager.OnLevelHidden // (Final|Native|Private) // @ game+0x17502b0
};

// Class Icarus.IcarusNavigationSystem
// Size: 0x1690 (Inherited: 0x15e0)
struct UIcarusNavigationSystem : UNavigationSystemV1 {
	struct TSet<struct ULevelStreaming*> CompositionStreamingLevels; // 0x15e0(0x50)
	struct TSet<struct ULevelStreaming*> BlockingStreamingLevels; // 0x1630(0x50)
	struct TArray<struct ULevelStreamingDelegateManager*> LevelStreamingManagers; // 0x1680(0x10)

	void UpdateNavOctreeBounds_BP(struct AActor* Actor); // Function Icarus.IcarusNavigationSystem.UpdateNavOctreeBounds_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x1751300
	void UpdateComponentInNavOctree_BP(struct UActorComponent* Comp); // Function Icarus.IcarusNavigationSystem.UpdateComponentInNavOctree_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x17511e0
	void UpdateActorInNavOctree_BP(struct AActor* Actor); // Function Icarus.IcarusNavigationSystem.UpdateActorInNavOctree_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x17510d0
	void UnregisterActorAndComponentsInOctree(struct AActor* Actor); // Function Icarus.IcarusNavigationSystem.UnregisterActorAndComponentsInOctree // (Final|Native|Public|BlueprintCallable) // @ game+0x1751040
	void OnStreamingLevelStateUpdated(struct ULevelStreaming* UpdatedStreamingLevel, bool bIsVisible); // Function Icarus.IcarusNavigationSystem.OnStreamingLevelStateUpdated // (Final|Native|Protected) // @ game+0x17503d0
	struct UIcarusNavigationSystem* GetIcarusNavigationSystem(struct UObject* WorldContextObject); // Function Icarus.IcarusNavigationSystem.GetIcarusNavigationSystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x174f170
	void AddDirtyArea_BP(struct FVector& Origin, struct FVector& Extent); // Function Icarus.IcarusNavigationSystem.AddDirtyArea_BP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x174ef30
};

// Class Icarus.IcarusNavigationSystemConfig
// Size: 0x58 (Inherited: 0x58)
struct UIcarusNavigationSystemConfig : UNavigationSystemModuleConfig {
};

// Class Icarus.IcarusNavLink
// Size: 0x2a0 (Inherited: 0x270)
struct AIcarusNavLink : ANavLinkProxy {
	struct FVector LeftLinkLocation; // 0x270(0x0c)
	struct FVector RightLinkLocation; // 0x27c(0x0c)
	enum class ENavLinkDirection LinkDirection; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UNavArea* AreaClass; // 0x290(0x08)
	bool bDirtyNavigationOnBeginPlay; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)

	void InitialiseNavLink(); // Function Icarus.IcarusNavLink.InitialiseNavLink // (Final|Native|Public|BlueprintCallable) // @ game+0x174fe10
};

// Class Icarus.IcarusNavQueryFilter
// Size: 0x50 (Inherited: 0x48)
struct UIcarusNavQueryFilter : UNavigationQueryFilter {
	int32_t MaxNavPathSearchNodes; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Icarus.IcarusNotfiyState
// Size: 0x30 (Inherited: 0x30)
struct UIcarusNotfiyState : UAnimNotifyState {
};

// Class Icarus.IcarusNPCCharacter
// Size: 0x670 (Inherited: 0x5c0)
struct AIcarusNPCCharacter : AIcarusCharacter {
	bool implementsVisionSense; // 0x5c0(0x01)
	bool ImplementsSoundSense; // 0x5c1(0x01)
	bool ImplementsDamageSense; // 0x5c2(0x01)
	bool PerceptionLogging; // 0x5c3(0x01)
	struct UE4::FName EyeSocket; // 0x5c4(0x08)
	char pad_5CC[0x4]; // 0x5cc(0x04)
	struct TMap<enum class EMovementState, struct FMovementStateData> MoveSpeedMapping; // 0x5d0(0x50)
	enum class EMovementState MovementStateSet; // 0x620(0x01)
	char pad_621[0x7]; // 0x621(0x07)
	struct UBehaviorTree* NpcBehaviourTree; // 0x628(0x08)
	bool bForceMaxLODWhenNotRendered; // 0x630(0x01)
	bool bDrownNPCIfStuckInWater; // 0x631(0x01)
	char pad_632[0x2]; // 0x632(0x02)
	int32_t DrownDelayInSeconds; // 0x634(0x04)
	bool bUseMeshBoundsAsGoalRadius; // 0x638(0x01)
	char pad_639[0x3]; // 0x639(0x03)
	float MeshBoundsScaleMultiplier; // 0x63c(0x04)
	bool bDebugGoalRadius; // 0x640(0x01)
	char pad_641[0x1f]; // 0x641(0x1f)
	struct UCreatureAudioThreatComponent* AudioThreatComponent; // 0x660(0x08)
	char pad_668[0x8]; // 0x668(0x08)

	void UpdateVisibilityBasedAnimTickOption(); // Function Icarus.IcarusNPCCharacter.UpdateVisibilityBasedAnimTickOption // (Native|Event|Protected|BlueprintEvent) // @ game+0x1175210
	void UpdateCharacterMoveSpeed(float walk_speed); // Function Icarus.IcarusNPCCharacter.UpdateCharacterMoveSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x1751160
	void SetIsDrowning(bool NewIsDrowning); // Function Icarus.IcarusNPCCharacter.SetIsDrowning // (Final|Native|Public|BlueprintCallable) // @ game+0x17506f0
	void ScheduleNextAnimTickOptionUpdate(float DistSqrToPlayer); // Function Icarus.IcarusNPCCharacter.ScheduleNextAnimTickOptionUpdate // (Final|Native|Protected) // @ game+0x1750530
	void OnActorDeath(struct UActorState* ActorStateIn); // Function Icarus.IcarusNPCCharacter.OnActorDeath // (Native|Event|Public|BlueprintEvent) // @ game+0x174fe30
};

// Class Icarus.IcarusNPCController
// Size: 0x380 (Inherited: 0x328)
struct AIcarusNPCController : AAIController {
	char pad_328[0x28]; // 0x328(0x28)
	struct UBlackboardComponent* AiBlackboardComponent; // 0x350(0x08)
	struct UBehaviorTreeComponent* AiBehaviourTreeComponent; // 0x358(0x08)
	char pad_360[0x8]; // 0x360(0x08)
	bool bAutoSmoothPathFollowing; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	float MinCurvePawnVelocity; // 0x36c(0x04)
	float MaxCurvePawnVelocity; // 0x370(0x04)
	float MaxFirstPointDistance; // 0x374(0x04)
	int32_t PathInterpolationFactor; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)

	bool ShouldAddCurveToNavigationPath(); // Function Icarus.IcarusNPCController.ShouldAddCurveToNavigationPath // (Native|Event|Protected|BlueprintEvent) // @ game+0xe2a010
	bool SetNewBehaviourTree(struct UBehaviorTree* NewBehaviourTree); // Function Icarus.IcarusNPCController.SetNewBehaviourTree // (Final|Native|Public|BlueprintCallable) // @ game+0x1750780
	void OnStimulusDetected(struct TArray<struct AActor*>& detected); // Function Icarus.IcarusNPCController.OnStimulusDetected // (Final|Native|Private|HasOutParms) // @ game+0x1750320
	void CustomizeSenses(); // Function Icarus.IcarusNPCController.CustomizeSenses // (Final|Native|Private) // @ game+0x174f030
};

// Class Icarus.IcarusNPCGOAPCharacter
// Size: 0x7e0 (Inherited: 0x670)
struct AIcarusNPCGOAPCharacter : AIcarusNPCCharacter {
	struct FAISetupRowHandle AISetup; // 0x668(0x18)
	struct FEpicCreaturesRowHandle EpicCreature; // 0x680(0x18)
	struct FText EpicCreatureName; // 0x698(0x18)
	struct TMap<struct TSoftClassPtr<UObject>, struct FActionAnimData> ActionAnimMapping; // 0x6b0(0x50)
	struct FMulticastInlineDelegate CharacterStanceUpdated; // 0x700(0x10)
	struct TArray<struct AIcarusNPCGOAPCharacter*> NPCChildren; // 0x710(0x10)
	struct UAnimMontage* JumpMontage; // 0x720(0x08)
	float MaxJumpDistance; // 0x728(0x04)
	float JumpArc; // 0x72c(0x04)
	int32_t CurrentLevel; // 0x730(0x04)
	struct FMulticastInlineDelegate OnObstacleJumpStarted; // 0x738(0x10)
	struct FMulticastInlineDelegate OnObstacleJumpFinished; // 0x748(0x10)
	struct AActor* CurrentTarget; // 0x758(0x08)
	bool bBeginDeathRagdoll; // 0x760(0x01)
	char pad_765[0x3]; // 0x765(0x03)
	struct FPoseSnapshot DeathRagdollPose; // 0x768(0x38)
	struct FMulticastInlineDelegate GOAPMovementBlocked; // 0x7a0(0x10)
	struct FMulticastInlineDelegate CreatureLevelUpdated; // 0x7b0(0x10)
	struct AActor* LastDamageCauser; // 0x7c0(0x08)
	struct AActor* LastDamageInstigator; // 0x7c8(0x08)
	enum class EGOAPCharacterStance CurrentStance; // 0x7d0(0x01)
	char pad_7D1[0xf]; // 0x7d1(0x0f)

	void WorldStatsSet(); // Function Icarus.IcarusNPCGOAPCharacter.WorldStatsSet // (Final|Native|Protected) // @ game+0x1751390
	bool UpdateMovementState(enum class EMovementState NewState); // Function Icarus.IcarusNPCGOAPCharacter.UpdateMovementState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1751270
	bool TryJumpOverObstacle(); // Function Icarus.IcarusNPCGOAPCharacter.TryJumpOverObstacle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x173bc90
	void StatContainerUpdated(); // Function Icarus.IcarusNPCGOAPCharacter.StatContainerUpdated // (Final|Native|Public) // @ game+0x1750fd0
	void SetHitEventsEnabled(bool bEnabled); // Function Icarus.IcarusNPCGOAPCharacter.SetHitEventsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x1750660
	bool SetCurrentStance(enum class EGOAPCharacterStance NewStance); // Function Icarus.IcarusNPCGOAPCharacter.SetCurrentStance // (Native|Event|Public|BlueprintEvent) // @ game+0x17505b0
	void OnRep_Level(); // Function Icarus.IcarusNPCGOAPCharacter.OnRep_Level // (Final|Native|Public) // @ game+0x1750300
	void OnCharacterStanceUpdated(enum class EGOAPCharacterStance PreviousStance, enum class EGOAPCharacterStance NewStance); // Function Icarus.IcarusNPCGOAPCharacter.OnCharacterStanceUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x174fec0
	struct UE4::FName GetNextAttackMontageSection(struct AActor* AttackTarget); // Function Icarus.IcarusNPCGOAPCharacter.GetNextAttackMontageSection // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool GetMontageForAction(struct TSoftClassPtr<UObject>& Action, struct TSoftObjectPtr<UAnimMontage>& ActionMontage, struct FName& MontageSection, struct FName& MontageNotify); // Function Icarus.IcarusNPCGOAPCharacter.GetMontageForAction // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusNPCGOAPController
// Size: 0x4e0 (Inherited: 0x380)
struct AIcarusNPCGOAPController : AIcarusNPCController {
	bool bCurrentActionComplete; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	struct UIcarusGOAPInteractableComponent* CurrentInteractable; // 0x388(0x08)
	struct UBlackboardData* DefaultBlackboard; // 0x390(0x08)
	struct FMulticastInlineDelegate OnGOAPStateUpdated; // 0x398(0x10)
	struct FMulticastInlineDelegate OnNewActionSet; // 0x3a8(0x10)
	enum class EGOAPControllerState CurrentControllerState; // 0x3b8(0x01)
	char pad_3B9[0x3]; // 0x3b9(0x03)
	struct FRandomStream SeededRandomStream; // 0x3bc(0x08)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct FMulticastInlineDelegate OnRandomStreamUpdated; // 0x3c8(0x10)
	struct FGOAPState CurrentState; // 0x3d8(0x10)
	struct UIcarusGOAPGoal* CurrentGoal; // 0x3e8(0x08)
	struct UIcarusGOAPAction* CurrentAction; // 0x3f0(0x08)
	struct TArray<struct UIcarusGOAPGoal*> PotentialGoals; // 0x3f8(0x10)
	struct TArray<struct UIcarusGOAPAction*> PotentialActions; // 0x408(0x10)
	struct TArray<struct UIcarusGOAPMotivation*> Motivations; // 0x418(0x10)
	struct UIcarusGOAPPlanner* Planner; // 0x428(0x08)
	struct AIcarusNPCGOAPCharacter* NpcCharacter; // 0x430(0x08)
	struct UIcarusGOAPAIState* AIState; // 0x438(0x08)
	struct UIcarusGOAPAIMemory* AIMemory; // 0x440(0x08)
	struct UIcarusGOAPGoal* DefaultGoal; // 0x448(0x08)
	char pad_450[0x10]; // 0x450(0x10)
	struct TMap<struct TSoftClassPtr<UObject>, float> LastGoalExecutionTimes; // 0x460(0x50)
	char pad_4B0[0x30]; // 0x4b0(0x30)

	bool UpdateMotivationValue(struct FGOAPMotivationsRowHandle Motivation, int32_t NewValue); // Function Icarus.IcarusNPCGOAPController.UpdateMotivationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1759d70
	bool UpdateCurrentState(struct FGOAPPropertiesRowHandle Property, bool Value); // Function Icarus.IcarusNPCGOAPController.UpdateCurrentState // (Final|Native|Public|BlueprintCallable) // @ game+0x1759860
	bool TryCompleteCurrentAction(); // Function Icarus.IcarusNPCGOAPController.TryCompleteCurrentAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1759730
	void SeedRandomStream(int32_t NewSeed); // Function Icarus.IcarusNPCGOAPController.SeedRandomStream // (Final|Native|Public) // @ game+0x1759090
	void RecordAIMemory(enum class EGOAPObjectType ObjectType, struct AActor* Object, struct FAIStimulus NewAIStimulus, enum class EGOAPFactSource FactSource); // Function Icarus.IcarusNPCGOAPController.RecordAIMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x1758e90
	bool RecalculateGOAPState(); // Function Icarus.IcarusNPCGOAPController.RecalculateGOAPState // (Native|Event|Public|BlueprintEvent) // @ game+0x174ac10
	bool RecalculateGoal(bool bForceNewGoal); // Function Icarus.IcarusNPCGOAPController.RecalculateGoal // (Final|Native|Public|BlueprintCallable) // @ game+0x1758df0
	bool OnProcessedNoise(struct AActor* PerceivedActor, struct FAIStimulus EventStimulus); // Function Icarus.IcarusNPCGOAPController.OnProcessedNoise // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17585f0
	bool OnProcessedDamage(struct AActor* PerceivedActor, struct FAIStimulus EventStimulus); // Function Icarus.IcarusNPCGOAPController.OnProcessedDamage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17585f0
	bool MoveToAction(struct UIcarusGOAPAction* Action); // Function Icarus.IcarusNPCGOAPController.MoveToAction // (Native|Event|Public|BlueprintEvent) // @ game+0x17579f0
	struct AIcarusNPCGOAPCharacter* GetNPCCharacter(); // Function Icarus.IcarusNPCGOAPController.GetNPCCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1757360
	float GetMotivationValue(struct FGOAPMotivationsRowHandle Motivation); // Function Icarus.IcarusNPCGOAPController.GetMotivationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1757220
	struct TArray<struct UIcarusGOAPMotivation*> GetMotivations(); // Function Icarus.IcarusNPCGOAPController.GetMotivations // (Final|Native|Public|BlueprintCallable) // @ game+0x17572e0
	bool GetMotivationObject(struct FGOAPMotivationsRowHandle Motivation, struct UIcarusGOAPMotivation*& ObjectReference); // Function Icarus.IcarusNPCGOAPController.GetMotivationObject // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1757110
	struct FGOAPState GetGOAPState(); // Function Icarus.IcarusNPCGOAPController.GetGOAPState // (Final|Native|Public|BlueprintCallable) // @ game+0x1756f70
	struct TArray<struct UIcarusGOAPGoal*> GetGoals(); // Function Icarus.IcarusNPCGOAPController.GetGoals // (Final|Native|Public|BlueprintCallable) // @ game+0x1756ff0
	bool GetCurrentPropertyState(struct FGOAPPropertiesRowHandle Property); // Function Icarus.IcarusNPCGOAPController.GetCurrentPropertyState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1756b70
	struct FString GetCurrentPlanDebug(); // Function Icarus.IcarusNPCGOAPController.GetCurrentPlanDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1756af0
	struct FString GetCurrentGoalDebug(); // Function Icarus.IcarusNPCGOAPController.GetCurrentGoalDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1756a70
	struct FString GetCurrentActionName(); // Function Icarus.IcarusNPCGOAPController.GetCurrentActionName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x17569f0
	struct UIcarusGOAPAction* GetCurrentAction(); // Function Icarus.IcarusNPCGOAPController.GetCurrentAction // (Final|Native|Public|BlueprintCallable) // @ game+0x17569c0
	struct TArray<struct FString> GetAvaliableGoals(); // Function Icarus.IcarusNPCGOAPController.GetAvaliableGoals // (Final|Native|Public|BlueprintCallable) // @ game+0x1756940
	struct TArray<struct FString> GetAvaliableActions(); // Function Icarus.IcarusNPCGOAPController.GetAvaliableActions // (Final|Native|Public|BlueprintCallable) // @ game+0x17568c0
	struct UIcarusGOAPAIState* GetAIState(); // Function Icarus.IcarusNPCGOAPController.GetAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x1756690
	struct UIcarusGOAPAIMemory* GetAIMemory(); // Function Icarus.IcarusNPCGOAPController.GetAIMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x1756660
	float GetActorThreat(struct AActor* PerceivedActor, bool bIgnoreRelationships); // Function Icarus.IcarusNPCGOAPController.GetActorThreat // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1756750
	struct TArray<struct UIcarusGOAPAction*> GetActions(); // Function Icarus.IcarusNPCGOAPController.GetActions // (Final|Native|Public|BlueprintCallable) // @ game+0x17566c0
	bool CompleteCurrentAction(bool Succeeded); // Function Icarus.IcarusNPCGOAPController.CompleteCurrentAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1756160
	bool AddTemporaryStatsForAction(struct TMap<struct FBaseStatsEnum, int32_t> TemporaryStats); // Function Icarus.IcarusNPCGOAPController.AddTemporaryStatsForAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1755b80
};

// Class Icarus.IcarusNPCPredatorController
// Size: 0x380 (Inherited: 0x380)
struct AIcarusNPCPredatorController : AIcarusNPCController {
};

// Class Icarus.IcarusNPCPreyController
// Size: 0x380 (Inherited: 0x380)
struct AIcarusNPCPreyController : AIcarusNPCController {
};

// Class Icarus.OrchestrationEvent
// Size: 0xd8 (Inherited: 0x28)
struct UOrchestrationEvent : UObject {
	char pad_28[0xb0]; // 0x28(0xb0)
};

// Class Icarus.IcarusOrchestrationSubsystem
// Size: 0xc8 (Inherited: 0x30)
struct UIcarusOrchestrationSubsystem : UWorldSubsystem {
	struct TArray<struct UOrchestrationEvent*> OrchestrationEvents; // 0x30(0x10)
	char pad_40[0x28]; // 0x40(0x28)
	struct TArray<struct TWeakObjectPtr<struct AActor>> AllActors; // 0x68(0x10)
	char pad_78[0x50]; // 0x78(0x50)

	void MarkOrchestrationFlag(struct FOrchestrationStateFlagsEnum OrchestrationFlagEnum); // Function Icarus.IcarusOrchestrationSubsystem.MarkOrchestrationFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1757940
	struct UOrchestrationEvent* GetOrchestrationEvent(struct FOrchestrationEventsEnum EventToGet); // Function Icarus.IcarusOrchestrationSubsystem.GetOrchestrationEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1757390
	bool CheckOrchestrationFlag(struct FOrchestrationStateFlagsEnum OrchestrationFlag); // Function Icarus.IcarusOrchestrationSubsystem.CheckOrchestrationFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1755fb0
	bool CheckEvent(struct FOrchestrationEventsEnum& EventToCheck); // Function Icarus.IcarusOrchestrationSubsystem.CheckEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1755ef0
	void BindToOrchestrationEvent(struct FDelegate Delegate, struct FOrchestrationEventsEnum EventToBind); // Function Icarus.IcarusOrchestrationSubsystem.BindToOrchestrationEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1755cd0
};

// Class Icarus.IcarusPawn
// Size: 0x3c0 (Inherited: 0x280)
struct AIcarusPawn : APawn {
	char pad_280[0x28]; // 0x280(0x28)
	bool bCriticalHitDisabled; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	struct FAISetupRowHandle AISetup; // 0x2ac(0x18)
	struct FEpicCreaturesRowHandle EpicCreature; // 0x2c4(0x18)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct FText EpicCreatureName; // 0x2e0(0x18)
	struct UIcarusStatContainer* StatContainer; // 0x2f8(0x08)
	struct UActorState* ActorState; // 0x300(0x08)
	struct FAIRelationshipsRowHandle AIRelationshipTableRowNew; // 0x308(0x18)
	bool bReplicateControlRotation; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	struct FRotator ReplicatedControlRotation; // 0x324(0x0c)
	int32_t CurrentLevel; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	struct FMulticastInlineDelegate PawnLevelUpdated; // 0x338(0x10)
	char pad_348[0x8]; // 0x348(0x08)
	struct FGameplayTagContainer GameplayTags; // 0x350(0x20)
	char pad_370[0x50]; // 0x370(0x50)

	void SetDamageEnabled(bool bEnabled); // Function Icarus.IcarusPawn.SetDamageEnabled // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void OnStatContainerUpdated_Internal(); // Function Icarus.IcarusPawn.OnStatContainerUpdated_Internal // (Final|Native|Public) // @ game+0x1758a30
	void OnRep_Level(); // Function Icarus.IcarusPawn.OnRep_Level // (Final|Native|Public) // @ game+0x1758760
	void Multicast_PlayReplicatedMontage(struct UAnimMontage* Montage, struct UE4::FName StartingSection, float PlayRate, float StartPosition, bool bSkipServer); // Function Icarus.IcarusPawn.Multicast_PlayReplicatedMontage // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x1757a70
	struct FVector GetDamageSourceLocation(); // Function Icarus.IcarusPawn.GetDamageSourceLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1727c10
	struct USkeletalMeshComponent* GetAnimatedMeshComponent(); // Function Icarus.IcarusPawn.GetAnimatedMeshComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1756830
	bool CanHitDamageTarget(struct AActor* TargetActor, struct FHitResult InHit); // Function Icarus.IcarusPawn.CanHitDamageTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1755dd0
};

// Class Icarus.IcarusPayload
// Size: 0x2c8 (Inherited: 0x220)
struct AIcarusPayload : AActor {
	struct AController* PayloadInstigator; // 0x220(0x08)
	struct AActor* Causer; // 0x228(0x08)
	struct AActor* HitActor; // 0x230(0x08)
	struct FHitResult HitResult; // 0x238(0x8c)
	bool WasBounce; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
};

// Class Icarus.IcarusPlayerCharacter
// Size: 0xa30 (Inherited: 0x5c0)
struct AIcarusPlayerCharacter : AIcarusCharacter {
	float NextAllowedInteractTime; // 0x5c0(0x04)
	struct FMulticastSparseDelegate OnFocusedItemUpdated; // 0x5c4(0x01)
	char pad_5C5[0x3]; // 0x5c5(0x03)
	struct UInventoryComponent* InventoryComponent; // 0x5c8(0x08)
	struct UInventory* EquipmentInventory; // 0x5d0(0x08)
	struct ASeatBase* AttachedToSeat; // 0x5d8(0x08)
	struct TWeakObjectPtr<struct APawn> PossessedPhotoCamera; // 0x5e0(0x08)
	bool BlockInputActions; // 0x5e8(0x01)
	char pad_5E9[0x3]; // 0x5e9(0x03)
	struct FRotator ReplicatedControlRotation; // 0x5ec(0x0c)
	bool bDisableActiveInteractable; // 0x5f8(0x01)
	char pad_5F9[0x3]; // 0x5f9(0x03)
	struct FHitResult CachedActiveInteractableHit; // 0x5fc(0x8c)
	struct FHitResult CachedActiveHighlightableHit; // 0x688(0x8c)
	struct FHitResult CachedContextImageHit; // 0x714(0x8c)
	struct FInteractableHitLookup CachedInteractableHitLookup; // 0x7a0(0xa0)
	float InteractionTraceDistance; // 0x840(0x04)
	struct FCharacterStartingStatsRowHandle CharacterSetup; // 0x844(0x18)
	char pad_85C[0x4]; // 0x85c(0x04)
	struct TMap<int32_t, struct FArmourComponentData> EquippedArmourData; // 0x860(0x50)
	struct FMulticastInlineDelegate OnArmourEquipmentUpdated; // 0x8b0(0x10)
	bool IsMale; // 0x8c0(0x01)
	char pad_8C1[0x7]; // 0x8c1(0x07)
	struct FFocusedItemData FocusedItemData; // 0x8c8(0x10)
	struct UAudioContextPlayerComponent* AudioContext; // 0x8d8(0x08)
	struct UPlayerVocalisationComponent* VocalisationComponent; // 0x8e0(0x08)
	struct UPlayerModifierAudioComponent* ModifierAudioComponent; // 0x8e8(0x08)
	struct UPlayerFeedbackAudioComponent* PlayerFeedbackAudioComponent; // 0x8f0(0x08)
	struct FCharacterVoicesRowHandle Voice; // 0x8f8(0x18)
	int32_t RespawnCount; // 0x910(0x04)
	bool HasGrantedLoadout; // 0x914(0x01)
	char pad_915[0x3]; // 0x915(0x03)
	struct FMulticastInlineDelegate PlayerCrouchUpdated; // 0x918(0x10)
	struct ADeployable* CurrentlyInteractingWithDeployable; // 0x928(0x08)
	struct UIcarusMapIconComponent* PlayerMapIcon; // 0x930(0x08)
	char pad_938[0xf8]; // 0x938(0xf8)

	void WorldStatsSet(); // Function Icarus.IcarusPlayerCharacter.WorldStatsSet // (Final|Native|Protected) // @ game+0x175a050
	enum class EViewTraceResultPriority ViewTraceActiveInteractableResultPredicate(struct FViewTraceResult& Result); // Function Icarus.IcarusPlayerCharacter.ViewTraceActiveInteractableResultPredicate // (Final|Native|Public|HasOutParms) // @ game+0x1759f60
	enum class EViewTraceResultPriority ViewTraceActiveHighlightableResultPredicate(struct FViewTraceResult& Result); // Function Icarus.IcarusPlayerCharacter.ViewTraceActiveHighlightableResultPredicate // (Final|Native|Public|HasOutParms) // @ game+0x1759e70
	void UpdateHeldItem(struct FItemData& Item); // Function Icarus.IcarusPlayerCharacter.UpdateHeldItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1759bd0
	bool UpdateEquipmentForSlot(int32_t SlotNum, struct FArmourRowHandle& DataRow, struct FItemData& Item); // Function Icarus.IcarusPlayerCharacter.UpdateEquipmentForSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1759970
	void UpdateCameraPerspective(); // Function Icarus.IcarusPlayerCharacter.UpdateCameraPerspective // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xe3ae30
	void UpdateCachedActiveInteractableHit(struct FHitResult& NewHit); // Function Icarus.IcarusPlayerCharacter.UpdateCachedActiveInteractableHit // (Final|Native|Public|HasOutParms) // @ game+0x1759780
	void UpdateAllEquipment(); // Function Icarus.IcarusPlayerCharacter.UpdateAllEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x1759760
	void StopInteractingWithDeployable(); // Function Icarus.IcarusPlayerCharacter.StopInteractingWithDeployable // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1759710
	void SetVoice(struct FCharacterVoicesRowHandle VoiceRowHandle); // Function Icarus.IcarusPlayerCharacter.SetVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x1759640
	void SetupCharacterCosmetics(); // Function Icarus.IcarusPlayerCharacter.SetupCharacterCosmetics // (Native|Event|Public|BlueprintEvent) // @ game+0x17596f0
	void SetPlayerMovementLocked(bool bLocked); // Function Icarus.IcarusPlayerCharacter.SetPlayerMovementLocked // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17595b0
	void SetMontagePlayRate(float PlayRate); // Function Icarus.IcarusPlayerCharacter.SetMontagePlayRate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1759540
	void SetInteractingWithDeployable(struct ADeployable* Deployable); // Function Icarus.IcarusPlayerCharacter.SetInteractingWithDeployable // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17594b0
	void Server_SetCachedInteractableHitLookup(struct FInteractableHitLookup LookUp); // Function Icarus.IcarusPlayerCharacter.Server_SetCachedInteractableHitLookup // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1759340
	void Server_SetCachedActiveInteractableHit(struct FHitResult Hit); // Function Icarus.IcarusPlayerCharacter.Server_SetCachedActiveInteractableHit // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17591a0
	void Server_OnInteract(enum class EInteractType InteractType); // Function Icarus.IcarusPlayerCharacter.Server_OnInteract // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1759120
	void RequestSwapGender(); // Function Icarus.IcarusPlayerCharacter.RequestSwapGender // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x173a360
	void RecalculateArmourSetBonus(struct UInventory* Inventory); // Function Icarus.IcarusPlayerCharacter.RecalculateArmourSetBonus // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x1758d60
	void PlayMontage(struct UAnimMontage* Montage, struct UAnimMontage* FP_Montage, bool LockMotion, struct UE4::FName StartingSection, struct UE4::FName FP_StartingSection, float PlaySpeed); // Function Icarus.IcarusPlayerCharacter.PlayMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1758bb0
	bool PickupItem(struct AIcarusItem* Item); // Function Icarus.IcarusPlayerCharacter.PickupItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1758b10
	void OnViewTraceResultsUpdated(struct AIcarusPlayerController* RegisteredController); // Function Icarus.IcarusPlayerCharacter.OnViewTraceResultsUpdated // (Final|Native|Public) // @ game+0x1758a80
	bool OnUnFocusItem(); // Function Icarus.IcarusPlayerCharacter.OnUnFocusItem // (Native|Event|Public|BlueprintEvent) // @ game+0x1758a50
	void OnServer_UnFocusItem(); // Function Icarus.IcarusPlayerCharacter.OnServer_UnFocusItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1758a10
	void OnServer_SetStartingStats(struct FCharacterStartingStatsRowHandle CharacterStartingStatsRowHandle); // Function Icarus.IcarusPlayerCharacter.OnServer_SetStartingStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1758950
	void OnServer_FocusItem(struct UInventory* Inventory, int32_t Location); // Function Icarus.IcarusPlayerCharacter.OnServer_FocusItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1758880
	void OnServer_DropItem(struct UInventory* Inventory, int32_t Location, int32_t Count); // Function Icarus.IcarusPlayerCharacter.OnServer_DropItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1758780
	void OnRep_Gender(); // Function Icarus.IcarusPlayerCharacter.OnRep_Gender // (Final|Native|Public) // @ game+0x1758740
	void OnRep_FocusedItemDataUpdated(); // Function Icarus.IcarusPlayerCharacter.OnRep_FocusedItemDataUpdated // (Final|Native|Public) // @ game+0x1758720
	void OnRep_CharacterVoice(); // Function Icarus.IcarusPlayerCharacter.OnRep_CharacterVoice // (Final|Native|Private|Const) // @ game+0x1758700
	void OnPlayerStateSet(struct APlayerState* NewPlayerState); // Function Icarus.IcarusPlayerCharacter.OnPlayerStateSet // (Native|Event|Public|BlueprintEvent) // @ game+0x1758560
	void OnOwner_ItemUseFailed(struct FItemsStaticRowHandle ItemData, struct FUsesRowHandle Use); // Function Icarus.IcarusPlayerCharacter.OnOwner_ItemUseFailed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x17582e0
	void OnOwner_ItemUsed(struct FItemsStaticRowHandle ItemData, struct FUsesRowHandle Use); // Function Icarus.IcarusPlayerCharacter.OnOwner_ItemUsed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1758420
	void OnOwner_ConsumableExpired(struct FItemsStaticRowHandle ItemData); // Function Icarus.IcarusPlayerCharacter.OnOwner_ConsumableExpired // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1758220
	void OnItemUseFailed(struct FItemsStaticRowHandle ItemData, struct FUsesRowHandle Use); // Function Icarus.IcarusPlayerCharacter.OnItemUseFailed // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnItemUsed(struct FItemsStaticRowHandle ItemData, struct FUsesRowHandle Use); // Function Icarus.IcarusPlayerCharacter.OnItemUsed // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	bool OnInteractableLineTraceHit(struct FHitResult& HitResult); // Function Icarus.IcarusPlayerCharacter.OnInteractableLineTraceHit // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1758130
	void OnInteract(enum class EInteractType InteractType); // Function Icarus.IcarusPlayerCharacter.OnInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x17580b0
	bool OnFocusItem(struct FItemData& InventoryItem); // Function Icarus.IcarusPlayerCharacter.OnFocusItem // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1757ef0
	void OnEquipmentInventoryUpdated(int32_t UpdatedSlot); // Function Icarus.IcarusPlayerCharacter.OnEquipmentInventoryUpdated // (Final|Native|Protected|BlueprintCallable) // @ game+0x1757e60
	void OnControllerThirdPersonToggled(bool bIsThirdPerson); // Function Icarus.IcarusPlayerCharacter.OnControllerThirdPersonToggled // (Final|Native|Private) // @ game+0x1757dd0
	void OnConsumableExpired(struct FItemsStaticRowHandle ItemData); // Function Icarus.IcarusPlayerCharacter.OnConsumableExpired // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnConnectedPlayersConnectedPlayerInitialised(struct FConnectedPlayer& ConnectedPlayer); // Function Icarus.IcarusPlayerCharacter.OnConnectedPlayersConnectedPlayerInitialised // (Final|Native|Protected|HasOutParms) // @ game+0x1757d10
	void OnConnectedPlayerInitialised(); // Function Icarus.IcarusPlayerCharacter.OnConnectedPlayerInitialised // (Native|Event|Protected|BlueprintEvent) // @ game+0x1175210
	void OnAttachedToSeatChanged(struct ASeatBase* PreviousSeat); // Function Icarus.IcarusPlayerCharacter.OnAttachedToSeatChanged // (Native|Event|Public|BlueprintEvent) // @ game+0x1757c80
	void OnActorHiddenStateUpdated(bool bIsHidden); // Function Icarus.IcarusPlayerCharacter.OnActorHiddenStateUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x1757c10
	void MarkNeedsCosmeticArmourUpdate(); // Function Icarus.IcarusPlayerCharacter.MarkNeedsCosmeticArmourUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1757920
	void MarkEquipmentInventoryUpdated(); // Function Icarus.IcarusPlayerCharacter.MarkEquipmentInventoryUpdated // (Final|Native|Public|BlueprintCallable) // @ game+0x1757900
	void MarkEquipmentInventorySlotUpdated(struct UInventory* Inventory, int32_t UpdatedSlotNum); // Function Icarus.IcarusPlayerCharacter.MarkEquipmentInventorySlotUpdated // (Final|Native|Public) // @ game+0x1757840
	void JumpToMontageSection(struct UAnimMontage* TPMontage, struct UAnimMontage* FPMontage, struct UE4::FName NewTPSection, struct UE4::FName NewFPSection); // Function Icarus.IcarusPlayerCharacter.JumpToMontageSection // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17576e0
	void ItemRemovedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerCharacter.ItemRemovedDelagate // (Final|Native|Public) // @ game+0x1757610
	void ItemAddedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerCharacter.ItemAddedDelagate // (Final|Native|Public) // @ game+0x1757540
	bool IsSeated(); // Function Icarus.IcarusPlayerCharacter.IsSeated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1757510
	bool IsHabCharacter(); // Function Icarus.IcarusPlayerCharacter.IsHabCharacter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xe2a010
	bool IsDrivingVehicle(); // Function Icarus.IcarusPlayerCharacter.IsDrivingVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17574e0
	bool IsClothSimEnabled(); // Function Icarus.IcarusPlayerCharacter.IsClothSimEnabled // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x17574b0
	bool IsAttachedToVehicle(); // Function Icarus.IcarusPlayerCharacter.IsAttachedToVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1757480
	struct USkeletalMeshComponent* GetVisibleCharacterMesh(); // Function Icarus.IcarusPlayerCharacter.GetVisibleCharacterMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x97df60
	struct USkeletalMeshComponent* GetThirdPersonMesh(); // Function Icarus.IcarusPlayerCharacter.GetThirdPersonMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x97df60
	struct UPlayerCharacterState* GetPlayerCharacterState(); // Function Icarus.IcarusPlayerCharacter.GetPlayerCharacterState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1757450
	struct UItemManipulationComponent* GetItemManipulationComponent(); // Function Icarus.IcarusPlayerCharacter.GetItemManipulationComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct FItemData GetItem(int32_t InventoryID, int32_t InventorySlot); // Function Icarus.IcarusPlayerCharacter.GetItem // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	float GetInteractCooldown(); // Function Icarus.IcarusPlayerCharacter.GetInteractCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x17570e0
	struct AIcarusPlayerState* GetIcarusPlayerState(); // Function Icarus.IcarusPlayerCharacter.GetIcarusPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17570b0
	struct AIcarusPlayerController* GetIcarusPlayerController(); // Function Icarus.IcarusPlayerCharacter.GetIcarusPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1757080
	void GetHoldTimer(struct FKeybindingsRowHandle KeyBind, struct FTimerHandle& TimerHandle, bool& bValid); // Function Icarus.IcarusPlayerCharacter.GetHoldTimer // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void GetFocusedItemInventoryAndSlot(struct UInventory*& FocusedItemInventory, int32_t& FocusedItemSlot, enum class EDataValidity& Validity); // Function Icarus.IcarusPlayerCharacter.GetFocusedItemInventoryAndSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1756e30
	struct FItemData GetFocusedItemData(enum class EDataValidity& Validity); // Function Icarus.IcarusPlayerCharacter.GetFocusedItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1756cf0
	struct AIcarusItem* GetFocusedItemActor(); // Function Icarus.IcarusPlayerCharacter.GetFocusedItemActor // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct USkeletalMeshComponent* GetFirstPersonMesh(); // Function Icarus.IcarusPlayerCharacter.GetFirstPersonMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x97df60
	struct UCameraComponent* GetFirstPersonCamera(); // Function Icarus.IcarusPlayerCharacter.GetFirstPersonCamera // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct USkeletalMeshComponent* GetFirstPersonBodyMesh(); // Function Icarus.IcarusPlayerCharacter.GetFirstPersonBodyMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x97df60
	int32_t GetEquippedArmourSet(struct FArmourSetsRowHandle ArmourSet); // Function Icarus.IcarusPlayerCharacter.GetEquippedArmourSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1756c30
	struct AVehicleBase* GetAttachedToVehicle(); // Function Icarus.IcarusPlayerCharacter.GetAttachedToVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1756890
	struct ASeatBase* GetAttachedToSeat(); // Function Icarus.IcarusPlayerCharacter.GetAttachedToSeat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1756860
	void FocusAndUseItemFromMenu(struct UInventory* Inventory, int32_t Slot, struct FUsesEnum Use); // Function Icarus.IcarusPlayerCharacter.FocusAndUseItemFromMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct TArray<struct USkeletalMeshComponent*> FindOrCreateEquipmentComponent(int32_t ForSlot); // Function Icarus.IcarusPlayerCharacter.FindOrCreateEquipmentComponent // (Final|Native|Protected) // @ game+0x1756580
	bool EquipItem(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerCharacter.EquipItem // (Final|Native|Public) // @ game+0x17564b0
	void EndMontage(struct UAnimMontage* Montage, struct UAnimMontage* FP_Montage, float BleedOutTime); // Function Icarus.IcarusPlayerCharacter.EndMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17563c0
	bool DropItem(struct FItemData& InventoryItem); // Function Icarus.IcarusPlayerCharacter.DropItem // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1756200
	bool ConsumeFocusedItem(int32_t Amount); // Function Icarus.IcarusPlayerCharacter.ConsumeFocusedItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17411d0
	void ClearEquipmentInventory(); // Function Icarus.IcarusPlayerCharacter.ClearEquipmentInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1756140
	void CheckShouldRefreshEquipmentInventory(struct UInventory* Inventory, int32_t UpdatedSlotNum); // Function Icarus.IcarusPlayerCharacter.CheckShouldRefreshEquipmentInventory // (Final|Native|Public) // @ game+0x1756070
};

// Class Icarus.IcarusPlayerCharacterSpace
// Size: 0xa30 (Inherited: 0xa30)
struct AIcarusPlayerCharacterSpace : AIcarusPlayerCharacter {
	struct UInventory* MainInventory; // 0xa28(0x08)
};

// Class Icarus.IcarusPlayerCharacterSurvival
// Size: 0xc20 (Inherited: 0xa30)
struct AIcarusPlayerCharacterSurvival : AIcarusPlayerCharacter {
	bool bIsHoldingJump; // 0xa28(0x01)
	char pad_A31[0x47]; // 0xa31(0x47)
	bool bClientFrozenMovement; // 0xa78(0x01)
	bool bServerFrozenMovement; // 0xa79(0x01)
	bool bActualFrozenMovement; // 0xa7a(0x01)
	char pad_A7B[0x5]; // 0xa7b(0x05)
	struct UScopedViewportBlocker* FrozenMovementViewportBlocker; // 0xa80(0x08)
	bool bIsSpectateTarget; // 0xa88(0x01)
	char pad_A89[0x3]; // 0xa89(0x03)
	float base_turn_rate; // 0xa8c(0x04)
	float base_look_up_rate; // 0xa90(0x04)
	float PlayerPitch; // 0xa94(0x04)
	float PlayerYaw; // 0xa98(0x04)
	char pad_A9C[0x4]; // 0xa9c(0x04)
	struct UInventory* EnvirosuitInventory; // 0xaa0(0x08)
	struct UInventory* BackpackInventory; // 0xaa8(0x08)
	struct UInventory* QuickbarInventory; // 0xab0(0x08)
	struct UInventory* UpgradeInventory; // 0xab8(0x08)
	struct UInventory* VisionInventory; // 0xac0(0x08)
	int32_t FocusedQuickbarSlot; // 0xac8(0x04)
	bool bSmoothMouseInput; // 0xacc(0x01)
	char pad_ACD[0x3]; // 0xacd(0x03)
	float InputSmoothSpeed; // 0xad0(0x04)
	int32_t TickMovementStaminaUpdateHz; // 0xad4(0x04)
	struct FStaminaActionCostsRowHandle SprintAction; // 0xad8(0x18)
	struct FStaminaActionCostsRowHandle SprintJumpAction; // 0xaf0(0x18)
	struct FStaminaActionCostsRowHandle JumpAction; // 0xb08(0x18)
	struct FStaminaActionCostsRowHandle CrouchAction; // 0xb20(0x18)
	struct FStaminaActionCostsRowHandle WalkAction; // 0xb38(0x18)
	struct UFLODInfluencePlayer* FLODInfluence; // 0xb50(0x08)
	struct UStomachComponent* StomachComponent; // 0xb58(0x08)
	struct UPlayerTerrainAnchorComponent* TerrainAnchor; // 0xb60(0x08)
	char pad_B68[0x60]; // 0xb68(0x60)
	struct TArray<struct ADDGIVolume*> RTXGIVolumes; // 0xbc8(0x10)
	struct UPlayerStateRecorderComponent* Recorder; // 0xbd8(0x08)
	struct FMulticastInlineDelegate OnAttachedSeatChanged; // 0xbe0(0x10)
	struct FMulticastInlineDelegate OnPlayersSlept; // 0xbf0(0x10)
	struct FMulticastInlineDelegate OnInventoryWeightChanged; // 0xc00(0x10)
	struct FMulticastInlineDelegate OnPerspectiveUpdated; // 0xc10(0x10)

	void UpdateMetaResources(); // Function Icarus.IcarusPlayerCharacterSurvival.UpdateMetaResources // (Final|Native|Public|BlueprintCallable) // @ game+0x175fe60
	void UpdateFrozenMovement(); // Function Icarus.IcarusPlayerCharacterSurvival.UpdateFrozenMovement // (Final|Native|Protected) // @ game+0x175fe40
	bool TickMovementStaminaCost(float DeltaTime); // Function Icarus.IcarusPlayerCharacterSurvival.TickMovementStaminaCost // (Native|Event|Public|BlueprintEvent) // @ game+0x175fd80
	void StopJump(); // Function Icarus.IcarusPlayerCharacterSurvival.StopJump // (Final|Native|Public|BlueprintCallable) // @ game+0x175fd60
	void StartJump(); // Function Icarus.IcarusPlayerCharacterSurvival.StartJump // (Final|Native|Public|BlueprintCallable) // @ game+0x175fd40
	void StartCrouch(); // Function Icarus.IcarusPlayerCharacterSurvival.StartCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x175fd20
	void StaminaMovementTickFunction(); // Function Icarus.IcarusPlayerCharacterSurvival.StaminaMovementTickFunction // (Final|Native|Public) // @ game+0x175fd00
	void SetThermalVisionActive(bool bActive); // Function Icarus.IcarusPlayerCharacterSurvival.SetThermalVisionActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetSpectateTarget(bool bState); // Function Icarus.IcarusPlayerCharacterSurvival.SetSpectateTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x175fc70
	void SetIsTravellingInDropship(bool bIsInDropship); // Function Icarus.IcarusPlayerCharacterSurvival.SetIsTravellingInDropship // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetAimVignetteIntensity(float NewIntensityTarget, float InterpSpeed); // Function Icarus.IcarusPlayerCharacterSurvival.SetAimVignetteIntensity // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetAimSpaceValues(float Pitch, float Yaw); // Function Icarus.IcarusPlayerCharacterSurvival.SetAimSpaceValues // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x175fb70
	void SetADSOffset(struct FTransform& NewOffset); // Function Icarus.IcarusPlayerCharacterSurvival.SetADSOffset // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void ServerUpdateClientFrozenMovement(bool bFreezeMovement); // Function Icarus.IcarusPlayerCharacterSurvival.ServerUpdateClientFrozenMovement // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x175f9c0
	void ServerPlayerLeftByDropship(); // Function Icarus.IcarusPlayerCharacterSurvival.ServerPlayerLeftByDropship // (Final|Native|Public|BlueprintCallable) // @ game+0x175f6e0
	void Respawn(); // Function Icarus.IcarusPlayerCharacterSurvival.Respawn // (Final|Native|Private) // @ game+0x175f4f0
	void OnWaterLevelUpdated(int32_t WaterLevel); // Function Icarus.IcarusPlayerCharacterSurvival.OnWaterLevelUpdated // (Final|Native|Public) // @ game+0x175f1e0
	void OnWaterConsumed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnWaterConsumed // (Final|Native|Private|BlueprintCallable) // @ game+0x175f1c0
	void OnTerrainAnchorStateChanged(); // Function Icarus.IcarusPlayerCharacterSurvival.OnTerrainAnchorStateChanged // (Final|Native|Protected) // @ game+0x175f1a0
	void OnTemperatureUpdated(int32_t Temperature); // Function Icarus.IcarusPlayerCharacterSurvival.OnTemperatureUpdated // (Final|Native|Public) // @ game+0x175f110
	void OnServer_ExitLadder(); // Function Icarus.IcarusPlayerCharacterSurvival.OnServer_ExitLadder // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x175f0a0
	void OnPlayerDeath(struct UActorState* ActorStateIn); // Function Icarus.IcarusPlayerCharacterSurvival.OnPlayerDeath // (Final|Native|Private|BlueprintCallable) // @ game+0x175e9a0
	void OnOxygenLevelUpdated(int32_t OxygenLevel); // Function Icarus.IcarusPlayerCharacterSurvival.OnOxygenLevelUpdated // (Final|Native|Public) // @ game+0x175e8f0
	void OnOxygenConsumed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnOxygenConsumed // (Final|Native|Private|BlueprintCallable) // @ game+0x175e8d0
	void OnJumpFailed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnJumpFailed // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnInventoryBouncedItem(struct FItemData& Item); // Function Icarus.IcarusPlayerCharacterSurvival.OnInventoryBouncedItem // (Final|Native|Protected|HasOutParms) // @ game+0x175e730
	void OnFrozenMovementChanged(); // Function Icarus.IcarusPlayerCharacterSurvival.OnFrozenMovementChanged // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x175e4d0
	void OnFoodLevelUpdated(int32_t FoodLevel); // Function Icarus.IcarusPlayerCharacterSurvival.OnFoodLevelUpdated // (Final|Native|Public) // @ game+0x175e440
	void OnFoodConsumed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnFoodConsumed // (Final|Native|Private|BlueprintCallable) // @ game+0x175e420
	void OnBiomeUpdated(); // Function Icarus.IcarusPlayerCharacterSurvival.OnBiomeUpdated // (Final|Native|Private|BlueprintCallable) // @ game+0x175e3e0
	void NotifyPlayersSlept(); // Function Icarus.IcarusPlayerCharacterSurvival.NotifyPlayersSlept // (Final|Native|Protected|BlueprintCallable) // @ game+0x175e3b0
	void NotifyPerspectiveUpdated(); // Function Icarus.IcarusPlayerCharacterSurvival.NotifyPerspectiveUpdated // (Final|Native|Protected|BlueprintCallable) // @ game+0x175e380
	void NotifyInventoryWeightChanged(int32_t NewWeight); // Function Icarus.IcarusPlayerCharacterSurvival.NotifyInventoryWeightChanged // (Final|Native|Protected|BlueprintCallable) // @ game+0x175e2f0
	void NotifyAttachedSeatChanged(); // Function Icarus.IcarusPlayerCharacterSurvival.NotifyAttachedSeatChanged // (Final|Native|Protected|BlueprintCallable) // @ game+0x175e2c0
	void NotifyAddedMovementInput(struct FVector WorldDirection, float ScaleValue, bool bForce); // Function Icarus.IcarusPlayerCharacterSurvival.NotifyAddedMovementInput // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1be0000
	void MoveRight(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.MoveRight // (Final|Native|Public) // @ game+0x175e240
	void MoveForward(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.MoveForward // (Final|Native|Public) // @ game+0x175e1c0
	bool IsAlive(); // Function Icarus.IcarusPlayerCharacterSurvival.IsAlive // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x175e0d0
	void InventoryUpdated(struct UInventory* Inventory, int32_t Location); // Function Icarus.IcarusPlayerCharacterSurvival.InventoryUpdated // (Final|Native|Public) // @ game+0x175dfd0
	bool HasCraftingRequirements(struct FTalentsRowHandle Talent); // Function Icarus.IcarusPlayerCharacterSurvival.HasCraftingRequirements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool GetThermalVisionActive(); // Function Icarus.IcarusPlayerCharacterSurvival.GetThermalVisionActive // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct TArray<struct FItemData> GetLoadout(); // Function Icarus.IcarusPlayerCharacterSurvival.GetLoadout // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool GetIsInCave(); // Function Icarus.IcarusPlayerCharacterSurvival.GetIsInCave // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void GetFPCameraOrientation(struct FVector& OutPosition, struct FVector& OutForward); // Function Icarus.IcarusPlayerCharacterSurvival.GetFPCameraOrientation // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct AIcarusItem* GetFocusedItem(); // Function Icarus.IcarusPlayerCharacterSurvival.GetFocusedItem // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	enum class EProspectLocation GetCurrentProspectLocation(); // Function Icarus.IcarusPlayerCharacterSurvival.GetCurrentProspectLocation // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x175dbc0
	int32_t GetCurrentInventoryWeight(); // Function Icarus.IcarusPlayerCharacterSurvival.GetCurrentInventoryWeight // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct USphereComponent* GetAudioCollider(); // Function Icarus.IcarusPlayerCharacterSurvival.GetAudioCollider // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void EndCrouch(); // Function Icarus.IcarusPlayerCharacterSurvival.EndCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x175d7e0
	void Debug_SetGOAPWorldStatsActive(bool bActive); // Function Icarus.IcarusPlayerCharacterSurvival.Debug_SetGOAPWorldStatsActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool Debug_GetGOAPWorldStatsActive(); // Function Icarus.IcarusPlayerCharacterSurvival.Debug_GetGOAPWorldStatsActive // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void Debug_DrawArmourComponent(); // Function Icarus.IcarusPlayerCharacterSurvival.Debug_DrawArmourComponent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void AddYaw(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.AddYaw // (Final|Native|Public) // @ game+0x175d250
	void AddPitch(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.AddPitch // (Final|Native|Public) // @ game+0x175d1d0
};

// Class Icarus.IcarusPlayerController
// Size: 0x768 (Inherited: 0x598)
struct AIcarusPlayerController : AIcarusController {
	char pad_598[0x8]; // 0x598(0x08)
	struct AIcarusPlayerCharacter* IcarusPlayerCharacter; // 0x5a0(0x08)
	struct AContextMenuFactory* ContextMenuFactoryClass; // 0x5a8(0x08)
	char pad_5B0[0x4]; // 0x5b0(0x04)
	float InputAimYawScale; // 0x5b4(0x04)
	float InputAimPitchScale; // 0x5b8(0x04)
	bool bFreeLook; // 0x5bc(0x01)
	char pad_5BD[0x3]; // 0x5bd(0x03)
	struct FRotator FreeLookInput; // 0x5c0(0x0c)
	char pad_5CC[0x4]; // 0x5cc(0x04)
	struct FMulticastInlineDelegate OnToggleThirdPerson; // 0x5d0(0x10)
	bool bIsThirdPerson; // 0x5e0(0x01)
	char pad_5E1[0x7]; // 0x5e1(0x07)
	struct FMulticastInlineDelegate OnChatMessageReceived; // 0x5e8(0x10)
	struct FMulticastInlineDelegate OnServerMessageReceived; // 0x5f8(0x10)
	struct FMulticastInlineDelegate OnLocalMessageReceived; // 0x608(0x10)
	struct FMulticastInlineDelegate OnViewTraceResultsUpdated; // 0x618(0x10)
	bool bCaptureViewTraces; // 0x628(0x01)
	char pad_629[0x7]; // 0x629(0x07)
	struct TMap<struct UObject*, struct FViewTraceRegistration> ViewTraceRegistrations; // 0x630(0x50)
	struct TArray<struct FViewTraceResult> ViewTraceResults; // 0x680(0x10)
	float ViewTraceCapsuleRadius; // 0x690(0x04)
	int32_t ViewTraceIterationCount; // 0x694(0x04)
	bool bDebugCaptureViewTraceResultsStats; // 0x698(0x01)
	char pad_699[0x3]; // 0x699(0x03)
	struct UE4::FName DebugCaptureViewTraceResultsTag; // 0x69c(0x08)
	char pad_6A4[0x4]; // 0x6a4(0x04)
	struct UBackendProxyComponent* BackendProxyComponent; // 0x6a8(0x08)
	struct FMulticastInlineDelegate OnServerFriendsUpdated; // 0x6b0(0x10)
	struct UGetFriendsCallbackProxy* GetFriendsListCallBackProxy; // 0x6c0(0x08)
	struct TArray<struct FBPFriendInfo> ClientFriendsList; // 0x6c8(0x10)
	struct TArray<struct FString> FriendIds; // 0x6d8(0x10)
	bool bClientFriendsListReady; // 0x6e8(0x01)
	bool bServerFriendsReady; // 0x6e9(0x01)
	bool bClientIsInitialisingPlayerProfile; // 0x6ea(0x01)
	char pad_6EB[0x11]; // 0x6eb(0x11)
	float SyncBackendStateCooldown; // 0x6fc(0x04)
	struct FMulticastSparseDelegate OnCharacterProgressionSynced; // 0x700(0x01)
	char pad_701[0x17]; // 0x701(0x17)
	struct FMulticastSparseDelegate OnCharacterTalentsSynced; // 0x718(0x01)
	char pad_719[0x17]; // 0x719(0x17)
	struct FMulticastSparseDelegate OnAccountTalentsSynced; // 0x730(0x01)
	char pad_731[0x17]; // 0x731(0x17)
	struct FGameplayTagContainer GameplayTags; // 0x748(0x20)

	bool ViewTraceByChannel(struct FViewTraceResult& Result, enum class ECollisionChannel TraceChannel, struct FViewTraceParams& ViewTraceParams); // Function Icarus.IcarusPlayerController.ViewTraceByChannel // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x175fe80
	void ToggleThirdPerson(); // Function Icarus.IcarusPlayerController.ToggleThirdPerson // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x175fe20
	void SetUIVisibility(bool bHide, bool bHideDebug); // Function Icarus.IcarusPlayerController.SetUIVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void ServerUpdateCharacterTalents(bool bSkipDelay); // Function Icarus.IcarusPlayerController.ServerUpdateCharacterTalents // (Final|Native|Public|BlueprintCallable) // @ game+0x175f930
	void ServerUpdateCharacterProgression(bool bSkipDelay); // Function Icarus.IcarusPlayerController.ServerUpdateCharacterProgression // (Final|Native|Public|BlueprintCallable) // @ game+0x175f8a0
	void ServerUpdateAccountTalents(bool bSkipDelay); // Function Icarus.IcarusPlayerController.ServerUpdateAccountTalents // (Final|Native|Public|BlueprintCallable) // @ game+0x175f810
	void ServerSyncCharacterTalents(); // Function Icarus.IcarusPlayerController.ServerSyncCharacterTalents // (Final|Native|Public) // @ game+0x175f7f0
	void ServerSyncCharacterProgression(); // Function Icarus.IcarusPlayerController.ServerSyncCharacterProgression // (Final|Native|Public) // @ game+0x175f7d0
	void ServerSyncAccountTalents(); // Function Icarus.IcarusPlayerController.ServerSyncAccountTalents // (Final|Native|Public) // @ game+0x175f7b0
	void ServerSendChatMessage(struct FString Message); // Function Icarus.IcarusPlayerController.ServerSendChatMessage // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x175f700
	void ServerFriendsListUpdated(struct TArray<struct FString> NewFriendIds); // Function Icarus.IcarusPlayerController.ServerFriendsListUpdated // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x175f610
	void Server_ToggleThirdPerson(bool bThirdPerson); // Function Icarus.IcarusPlayerController.Server_ToggleThirdPerson // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x175fae0
	void Server_BeginPlayerInitialisation(int32_t ChrSlot); // Function Icarus.IcarusPlayerController.Server_BeginPlayerInitialisation // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x175fa50
	bool RetrieveViewTraceResults(struct UObject* Registrant, struct TArray<struct FViewTraceResult>& OutFilteredResults); // Function Icarus.IcarusPlayerController.RetrieveViewTraceResults // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x175f510
	void RegisterForViewTraces(struct UObject* Registrant, float MaxDistance); // Function Icarus.IcarusPlayerController.RegisterForViewTraces // (Final|Native|Public|BlueprintCallable) // @ game+0x175f420
	void PushUIInput(struct UWidget* WidgetToFocus, bool bAllowGameInput, bool bShowMouse); // Function Icarus.IcarusPlayerController.PushUIInput // (Final|Native|Public|BlueprintCallable) // @ game+0x175f310
	struct FIcarusPlayerChatMessage ProcessChatMessage(struct AIcarusPlayerState* FromPlayer, struct FString Message); // Function Icarus.IcarusPlayerController.ProcessChatMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void PopUIInput(); // Function Icarus.IcarusPlayerController.PopUIInput // (Final|Native|Public|BlueprintCallable) // @ game+0x175f2f0
	void OutputProgressState(float Duration); // Function Icarus.IcarusPlayerController.OutputProgressState // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x175f270
	void OnServerUpdateCharacterTalents(bool bSuccess, struct TArray<struct FBackendTalent>& BackendTalents); // Function Icarus.IcarusPlayerController.OnServerUpdateCharacterTalents // (Final|Native|Public|HasOutParms) // @ game+0x175ef70
	void OnServerUpdateCharacterProgression(bool bSuccess); // Function Icarus.IcarusPlayerController.OnServerUpdateCharacterProgression // (Final|Native|Public) // @ game+0x175eee0
	void OnServerUpdateAccountTalents(bool bSuccess, struct TArray<struct FBackendTalent>& BackendTalents); // Function Icarus.IcarusPlayerController.OnServerUpdateAccountTalents // (Final|Native|Public|HasOutParms) // @ game+0x175edb0
	void OnServerInitialise_GetPlayerUserProfileResult(bool bSuccess, struct FOnlineProfileUser& InUserProfile); // Function Icarus.IcarusPlayerController.OnServerInitialise_GetPlayerUserProfileResult // (Native|Protected|HasOutParms) // @ game+0x175ec20
	void OnServerInitialise_GetPlayerCharacterProfileResult(bool bSuccess, struct FOnlineProfileCharacter& InCharacterProfile); // Function Icarus.IcarusPlayerController.OnServerInitialise_GetPlayerCharacterProfileResult // (Native|Protected|HasOutParms) // @ game+0x175ea50
	void OnServer_PlayerDeath(); // Function Icarus.IcarusPlayerController.OnServer_PlayerDeath // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x175f0c0
	void OnRep_IcarusPlayerCharacter(); // Function Icarus.IcarusPlayerController.OnRep_IcarusPlayerCharacter // (Native|Event|Protected|BlueprintEvent) // @ game+0x175ea30
	bool OnPlayerDeath(); // Function Icarus.IcarusPlayerController.OnPlayerDeath // (Native|Event|Public|BlueprintEvent) // @ game+0x17286e0
	void OnPawnLeavingGame(); // Function Icarus.IcarusPlayerController.OnPawnLeavingGame // (Native|Event|Protected|BlueprintEvent) // @ game+0x175e980
	void OnGetFriendsListSuccess(struct TArray<struct FBPFriendInfo>& Results); // Function Icarus.IcarusPlayerController.OnGetFriendsListSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x175e610
	void OnGetFriendsListFailure(struct TArray<struct FBPFriendInfo>& Results); // Function Icarus.IcarusPlayerController.OnGetFriendsListFailure // (Final|Native|Protected|HasOutParms) // @ game+0x175e4f0
	void OnConnectedPlayerInitialised(); // Function Icarus.IcarusPlayerController.OnConnectedPlayerInitialised // (Native|Event|Protected|BlueprintEvent) // @ game+0x175e400
	void NotifyOfCheater(struct FString CharacterName); // Function Icarus.IcarusPlayerController.NotifyOfCheater // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x168f5a0
	bool IsThirdPersonToggleDisabled(); // Function Icarus.IcarusPlayerController.IsThirdPersonToggleDisabled // (Native|Event|Public|BlueprintEvent) // @ game+0x175e190
	bool IsSyncingUpdateCharacterTalents(); // Function Icarus.IcarusPlayerController.IsSyncingUpdateCharacterTalents // (Final|Native|Public|Const) // @ game+0x175e160
	bool IsSyncingUpdateCharacterProgression(); // Function Icarus.IcarusPlayerController.IsSyncingUpdateCharacterProgression // (Final|Native|Public|Const) // @ game+0x175e130
	bool IsSyncingUpdateAccountTalents(); // Function Icarus.IcarusPlayerController.IsSyncingUpdateAccountTalents // (Final|Native|Public|Const) // @ game+0x175e100
	bool IsAiming(); // Function Icarus.IcarusPlayerController.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x175e0a0
	void InitialiseLocalSelectedPlayerProfile(); // Function Icarus.IcarusPlayerController.InitialiseLocalSelectedPlayerProfile // (Final|Native|Public|BlueprintCallable) // @ game+0x175dfb0
	void GetViewTraceStartEndPoints(float TraceDistance, struct FVector& OutStart, struct FVector& OutEnd); // Function Icarus.IcarusPlayerController.GetViewTraceStartEndPoints // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x175de80
	struct UUserInterfaceBase* GetUserInterfaceInternal(); // Function Icarus.IcarusPlayerController.GetUserInterfaceInternal // (Event|Public|BlueprintEvent|Const) // @ game+0x1be0000
	struct FPlayerCharacterID GetPlayerCharacterID(); // Function Icarus.IcarusPlayerController.GetPlayerCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x175de30
	struct UNetworkProxyComponent* GetNetworkProxyComponent(); // Function Icarus.IcarusPlayerController.GetNetworkProxyComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x175de00
	bool GetIsThirdPerson(); // Function Icarus.IcarusPlayerController.GetIsThirdPerson // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x175ddd0
	struct AIcarusPlayerState* GetIcarusPlayerState(); // Function Icarus.IcarusPlayerController.GetIcarusPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x175dda0
	struct AIcarusPlayerCharacter* GetIcarusPlayerCharacter(); // Function Icarus.IcarusPlayerController.GetIcarusPlayerCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x175dd80
	enum class EViewTraceResultPriority GetGenericViewTraceResultPriority(struct FViewTraceResult& Result, bool bResultIsRelevant, bool bMeleeAttackTrace); // Function Icarus.IcarusPlayerController.GetGenericViewTraceResultPriority // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x175dbf0
	struct UCheatOverlayBase* GetCheatOverlay(struct UObject* WorldContextObject); // Function Icarus.IcarusPlayerController.GetCheatOverlay // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct UBackendProxyComponent* GetBackendProxyComponent(); // Function Icarus.IcarusPlayerController.GetBackendProxyComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x175dba0
	struct FTransform GetAudioListenerTransform(); // Function Icarus.IcarusPlayerController.GetAudioListenerTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x175db40
	bool FindBestViewTraceResult(struct UObject* Registrant, struct FDelegate& ResultPriorityCallback, struct FViewTraceResult& OutBestResult, float DebugDrawDuration); // Function Icarus.IcarusPlayerController.FindBestViewTraceResult // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x175d960
	void FinaliseConnectedPlayerInitialisation(struct FConnectedPlayer& ConnectedPlayer); // Function Icarus.IcarusPlayerController.FinaliseConnectedPlayerInitialisation // (Final|Native|Public|HasOutParms) // @ game+0x175d8a0
	bool External_CanPerformInputAction(bool bBlockedByUI); // Function Icarus.IcarusPlayerController.External_CanPerformInputAction // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x175d800
	struct AContextMenuFactory* CreateContextMenu(); // Function Icarus.IcarusPlayerController.CreateContextMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x175d7b0
	void ClientReceiveServerMessage(struct FString Message); // Function Icarus.IcarusPlayerController.ClientReceiveServerMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x175d520
	void ClientReceiveChatMessage(struct AIcarusPlayerState* FromPlayer, struct FString Message); // Function Icarus.IcarusPlayerController.ClientReceiveChatMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x175d430
	void ClientQueryForFriendsList(); // Function Icarus.IcarusPlayerController.ClientQueryForFriendsList // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x175d410
	void ClientConnectedPlayerInitialiseComplete(struct FErrorCodesEnum FailureError); // Function Icarus.IcarusPlayerController.ClientConnectedPlayerInitialiseComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x175d370
	void Client_SetPlayerTracker(struct FPlayerTrackersRowHandle PlayerTracker, int32_t NewAmount); // Function Icarus.IcarusPlayerController.Client_SetPlayerTracker // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x175d6c0
	void Client_IncrementPlayerTracker(struct FPlayerTrackersRowHandle PlayerTracker, int32_t AmountToAdd); // Function Icarus.IcarusPlayerController.Client_IncrementPlayerTracker // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x175d5d0
	void ClearUIInput(); // Function Icarus.IcarusPlayerController.ClearUIInput // (Final|Native|Public|BlueprintCallable) // @ game+0x175d350
	void Cheat(struct FString InputString); // Function Icarus.IcarusPlayerController.Cheat // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x168f5a0
	void ChatMessageHook(struct FString InputString); // Function Icarus.IcarusPlayerController.ChatMessageHook // (Final|Native|Public|BlueprintCallable) // @ game+0x168f5a0
	void CaptureViewTraceResults(float DeltaTime); // Function Icarus.IcarusPlayerController.CaptureViewTraceResults // (Final|Native|Protected) // @ game+0x175d2d0
	void BP_ClientReceiveServerMessage(struct FString Message); // Function Icarus.IcarusPlayerController.BP_ClientReceiveServerMessage // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void BP_ClientReceiveChatMessage(struct AIcarusPlayerState* FromPlayer, struct FString Message); // Function Icarus.IcarusPlayerController.BP_ClientReceiveChatMessage // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void Bookmark(struct FString InputString); // Function Icarus.IcarusPlayerController.Bookmark // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x168f5a0
	void AddLocalMessage(struct FString Message); // Function Icarus.IcarusPlayerController.AddLocalMessage // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x175d120
};

// Class Icarus.IcarusPlayerControllerSpace
// Size: 0x790 (Inherited: 0x768)
struct AIcarusPlayerControllerSpace : AIcarusPlayerController {
	struct FVector CustomUp; // 0x768(0x0c)
	float CustomUpSlerp; // 0x774(0x04)
	float CustomUpPitchMax; // 0x778(0x04)
	float CustomUpPitchMin; // 0x77c(0x04)
	struct FMulticastInlineDelegate SessionInfoUpdated; // 0x780(0x10)

	void SyncInventorySlot(struct UInventory* Inventory, struct FString DatabaseGUID, struct FMetaItem& MetaItem); // Function Icarus.IcarusPlayerControllerSpace.SyncInventorySlot // (Final|Native|Protected|HasOutParms) // @ game+0x1766300
	void SyncInventory(struct UInventory* Inventory, struct TArray<struct FMetaItem>& MetaItems); // Function Icarus.IcarusPlayerControllerSpace.SyncInventory // (Final|Native|Protected|HasOutParms) // @ game+0x17661b0
	void ReturnToCharacterSelect(); // Function Icarus.IcarusPlayerControllerSpace.ReturnToCharacterSelect // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void OnActiveCharacterSet(); // Function Icarus.IcarusPlayerControllerSpace.OnActiveCharacterSet // (Native|Event|Protected|BlueprintEvent) // @ game+0x17648a0
	void MetaInventoryUpdatedEventHandler(); // Function Icarus.IcarusPlayerControllerSpace.MetaInventoryUpdatedEventHandler // (Final|Native|Protected) // @ game+0x1764610
	void MetaInventorySlotUpdatedEventHandler(struct FString DatabaseGUID, struct FMetaItem& MetaItem); // Function Icarus.IcarusPlayerControllerSpace.MetaInventorySlotUpdatedEventHandler // (Final|Native|Protected|HasOutParms) // @ game+0x17644c0
	void LoadoutInventoryUpdatedEventHandler(); // Function Icarus.IcarusPlayerControllerSpace.LoadoutInventoryUpdatedEventHandler // (Final|Native|Protected) // @ game+0x1764480
	void LoadoutInventorySlotUpdatedEventHandler(struct FString DatabaseGUID, struct FMetaItem& MetaItem); // Function Icarus.IcarusPlayerControllerSpace.LoadoutInventorySlotUpdatedEventHandler // (Final|Native|Protected|HasOutParms) // @ game+0x1764330
	bool FindLoadoutScreenQuickMoveTarget(struct UInventory* SourceInventory, int32_t SourceSlot, struct UInventory*& DestinationInventory, int32_t& DestinationSlot, int32_t& AmountCanMove); // Function Icarus.IcarusPlayerControllerSpace.FindLoadoutScreenQuickMoveTarget // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x17637f0
	void AcceptSessionInvite(struct FIcarusSession SessionToJoin); // Function Icarus.IcarusPlayerControllerSpace.AcceptSessionInvite // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusPlayerControllerSurvival
// Size: 0x8b8 (Inherited: 0x768)
struct AIcarusPlayerControllerSurvival : AIcarusPlayerController {
	struct TArray<struct FItemPriority> ItemPriorities; // 0x768(0x10)
	struct FMulticastInlineDelegate OnItemBounced; // 0x778(0x10)
	struct UProspectAudioComponent* ProspectAudio; // 0x788(0x08)
	struct UScopedViewportBlocker* InitialisationViewportBlocker; // 0x790(0x08)
	bool bServerHasCharacterLoadout; // 0x798(0x01)
	char pad_799[0x7]; // 0x799(0x07)
	struct FOnlineProfileCharacter TestProspectCharacter; // 0x7a0(0xa0)
	struct FMulticastSparseDelegate OnLeaveProspectSessionComplete; // 0x840(0x01)
	enum class ELeaveProspectSessionType ServerPendingLeaveProspectSession; // 0x841(0x01)
	bool bServerCancelPendingLeaveProspectSession; // 0x842(0x01)
	enum class ELeaveProspectSessionType ReplicatedLeftProspectSession; // 0x843(0x01)
	bool bServerReturnToHabComplete; // 0x844(0x01)
	char pad_845[0x3]; // 0x845(0x03)
	struct UScopedViewportBlocker* LeaveProspectViewportBlocker; // 0x848(0x08)
	char pad_850[0x8]; // 0x850(0x08)
	struct AIcarusRocketSpawnBase* AssignedDropshipSpawn; // 0x858(0x08)
	struct AIcarusRocket* AssignedDropship; // 0x860(0x08)
	struct AGravestoneBase* AssignedGravestone; // 0x868(0x08)
	struct UPlayerRecorderComponent* Recorder; // 0x870(0x08)
	struct FText ForceRemovePlayerDebugCommandText; // 0x878(0x18)
	struct UResetCharacterProspectStateCallbackProxyGen* ResetCharacterProspectStateCallback; // 0x890(0x08)
	enum class EForceRemovePlayerReason ForceRemovePlayerReason; // 0x898(0x01)
	bool bClientWasKicked; // 0x899(0x01)
	char pad_89A[0x16]; // 0x89a(0x16)
	bool bDebugCameraLocationChanges; // 0x8b0(0x01)
	char pad_8B1[0x7]; // 0x8b1(0x07)

	void TriggerLoadShip(struct AIcarusRocket* Rocket); // Function Icarus.IcarusPlayerControllerSurvival.TriggerLoadShip // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void ShowDelayedLeavingPrompt(struct FConfirmationPopupDetails& ConfirmationPopupDetails); // Function Icarus.IcarusPlayerControllerSurvival.ShowDelayedLeavingPrompt // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1766000
	void SetAssignedGravestone(struct AGravestoneBase* Gravestone); // Function Icarus.IcarusPlayerControllerSurvival.SetAssignedGravestone // (Final|Native|Public|BlueprintCallable) // @ game+0x1765cb0
	void SetAssignedDropship(struct AIcarusRocket* Dropship); // Function Icarus.IcarusPlayerControllerSurvival.SetAssignedDropship // (Final|Native|Public|BlueprintCallable) // @ game+0x1765c20
	void ServerUpdateCharacterProspectLocation(bool bSkipDelay); // Function Icarus.IcarusPlayerControllerSurvival.ServerUpdateCharacterProspectLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x17658a0
	void ServerTryCompleteLeaveProspectSession(); // Function Icarus.IcarusPlayerControllerSurvival.ServerTryCompleteLeaveProspectSession // (Final|Native|Protected) // @ game+0x1765880
	void ServerSyncCharacterProspectLocation(); // Function Icarus.IcarusPlayerControllerSurvival.ServerSyncCharacterProspectLocation // (Final|Native|Public) // @ game+0x1765760
	void ServerPushClientDynamicWidget(struct UIcarusLinkedActorPanelBase* WidgetClass, struct AActor* LinkedActor); // Function Icarus.IcarusPlayerControllerSurvival.ServerPushClientDynamicWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void ServerLeaveProspectSessionWithoutSave(); // Function Icarus.IcarusPlayerControllerSurvival.ServerLeaveProspectSessionWithoutSave // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x17648a0
	void ServerLeaveProspectSession(enum class ELeaveProspectSessionType LeaveProspectSessionType); // Function Icarus.IcarusPlayerControllerSurvival.ServerLeaveProspectSession // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1765510
	void ServerFinaliseLeaveProspectSession(enum class ELeaveProspectSessionType LeaveProspectSessionType); // Function Icarus.IcarusPlayerControllerSurvival.ServerFinaliseLeaveProspectSession // (Native|Event|Protected|BlueprintEvent) // @ game+0x1765490
	void ServerCancelLeaveProspectSession(); // Function Icarus.IcarusPlayerControllerSurvival.ServerCancelLeaveProspectSession // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1765470
	void ServerAttemptRevive(struct AGravestoneBase* Gravestone); // Function Icarus.IcarusPlayerControllerSurvival.ServerAttemptRevive // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17653e0
	void Server_Unstuck(); // Function Icarus.IcarusPlayerControllerSurvival.Server_Unstuck // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1765930
	void OnServerUpdateCharacterProspectLocation(bool bSuccess); // Function Icarus.IcarusPlayerControllerSurvival.OnServerUpdateCharacterProspectLocation // (Final|Native|Public) // @ game+0x1765020
	void OnServerInitialise_IcarusBeginPlay(); // Function Icarus.IcarusPlayerControllerSurvival.OnServerInitialise_IcarusBeginPlay // (Final|Native|Protected) // @ game+0x1765000
	void OnServerInitialise_GetCharacterLoadout(bool Success, struct FCharacterLoadout& CharacterLoadout); // Function Icarus.IcarusPlayerControllerSurvival.OnServerInitialise_GetCharacterLoadout // (Final|Native|Protected|HasOutParms) // @ game+0x1764db0
	void OnRep_ReplicatedLeftProspectSession(); // Function Icarus.IcarusPlayerControllerSurvival.OnRep_ReplicatedLeftProspectSession // (Final|Native|Protected) // @ game+0x1764d90
	void OnProspectLocationChanged(enum class EProspectLocation ProspectLocation); // Function Icarus.IcarusPlayerControllerSurvival.OnProspectLocationChanged // (Final|Native|Public) // @ game+0x1764a40
	void OnLeaveProspectSessionStatisticsUpdated(bool bSuccess); // Function Icarus.IcarusPlayerControllerSurvival.OnLeaveProspectSessionStatisticsUpdated // (Final|Native|Protected) // @ game+0x17649b0
	void OnLeaveProspectSessionCompleteImpl(); // Function Icarus.IcarusPlayerControllerSurvival.OnLeaveProspectSessionCompleteImpl // (Native|Event|Protected|BlueprintEvent) // @ game+0x1764990
	void OnLeaveProspectSessionBackToHab(bool bSuccess, struct APlayerController* Controller); // Function Icarus.IcarusPlayerControllerSurvival.OnLeaveProspectSessionBackToHab // (Final|Native|Protected) // @ game+0x17648c0
	void NotifyItemBounced(struct FItemData Item); // Function Icarus.IcarusPlayerControllerSurvival.NotifyItemBounced // (Net|Native|Event|Protected|NetClient) // @ game+0x1764630
	void MapTravelBackToHab(); // Function Icarus.IcarusPlayerControllerSurvival.MapTravelBackToHab // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x17644a0
	bool IsTryingToUnstuck(); // Function Icarus.IcarusPlayerControllerSurvival.IsTryingToUnstuck // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	bool IsSyncingUpdateCharacterProspectLocation(); // Function Icarus.IcarusPlayerControllerSurvival.IsSyncingUpdateCharacterProspectLocation // (Final|Native|Public|Const) // @ game+0x1764300
	bool HasLeftProspectSession(); // Function Icarus.IcarusPlayerControllerSurvival.HasLeftProspectSession // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17641b0
	struct UIcarusCriticalHitComponent* GetCriticalHitComponent(); // Function Icarus.IcarusPlayerControllerSurvival.GetCriticalHitComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	void GatherMetaItems(struct TArray<struct FMetaItem>& OutMetaItems, struct TArray<struct FMetaResource>& OutMetaResources); // Function Icarus.IcarusPlayerControllerSurvival.GatherMetaItems // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x1763ae0
	void ForceRemoveFromProspectResetCallbackSuccess(struct FResResetCharacterProspectState& Response); // Function Icarus.IcarusPlayerControllerSurvival.ForceRemoveFromProspectResetCallbackSuccess // (Final|Native|Private|HasOutParms) // @ game+0x1763a50
	void ForceRemoveFromProspectResetCallbackFailure(struct FResResetCharacterProspectState& Response); // Function Icarus.IcarusPlayerControllerSurvival.ForceRemoveFromProspectResetCallbackFailure // (Final|Native|Private|HasOutParms) // @ game+0x1763a50
	void ForceRemoveFromProspect(enum class EForceRemovePlayerReason ForceRemovePlayerReason); // Function Icarus.IcarusPlayerControllerSurvival.ForceRemoveFromProspect // (Final|Native|Public|BlueprintCallable) // @ game+0x17639d0
	void EmptyInventories(); // Function Icarus.IcarusPlayerControllerSurvival.EmptyInventories // (Final|Native|Public|BlueprintCallable) // @ game+0x17636e0
	void DelayedShowSavingDialog(); // Function Icarus.IcarusPlayerControllerSurvival.DelayedShowSavingDialog // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void ClientOpenContainer(struct UInventory* Inventory, bool bShowStoreAll, bool bShowTakeAll); // Function Icarus.IcarusPlayerControllerSurvival.ClientOpenContainer // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x17635d0
	void CalculateQuickItemMove(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerControllerSurvival.CalculateQuickItemMove // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void BP_ServerAttemptRevive_Implementation(struct AGravestoneBase* Gravestone); // Function Icarus.IcarusPlayerControllerSurvival.BP_ServerAttemptRevive_Implementation // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void BP_Server_Unstuck_Implementation(); // Function Icarus.IcarusPlayerControllerSurvival.BP_Server_Unstuck_Implementation // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
	void BP_ClientOpenContainer(struct UInventory* Inventory, bool bShowStoreAll, bool bShowTakeAll); // Function Icarus.IcarusPlayerControllerSurvival.BP_ClientOpenContainer // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void ActivateHotbarSlot(int32_t NewSelection, bool bForce, bool bQuickCraft); // Function Icarus.IcarusPlayerControllerSurvival.ActivateHotbarSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusPlayerInput
// Size: 0x450 (Inherited: 0x3a8)
struct UIcarusPlayerInput : UPlayerInput {
	struct TMap<struct FKeybindContextsRowHandle, struct FPerInputUserBindings> SavedBindings; // 0x3a8(0x50)
	char pad_3F8[0x58]; // 0x3f8(0x58)
};

// Class Icarus.IcarusPlayerMovementComponent
// Size: 0xc50 (Inherited: 0xb00)
struct UIcarusPlayerMovementComponent : UCharacterMovementComponent {
	bool bSwimming; // 0xb00(0x01)
	char pad_B01[0x3]; // 0xb01(0x03)
	float FluidFriction; // 0xb04(0x04)
	struct UAnimMontage* LadderExitMontage; // 0xb08(0x08)
	float LadderExitTolerance; // 0xb10(0x04)
	float LadderAngleOffset; // 0xb14(0x04)
	bool bMaxOutLadderVelocity; // 0xb18(0x01)
	char pad_B19[0x17]; // 0xb19(0x17)
	struct FTransform LadderStart; // 0xb30(0x30)
	struct FTransform LadderEnd; // 0xb60(0x30)
	float CurrentWaterDepth; // 0xb90(0x04)
	float TimeSpentSliding; // 0xb94(0x04)
	bool bIsSliding; // 0xb98(0x01)
	char pad_B99[0x3]; // 0xb99(0x03)
	struct FHitResult LastSlideHit; // 0xb9c(0x8c)
	float SlidingDurationThreshold; // 0xc28(0x04)
	char pad_C2C[0x4]; // 0xc2c(0x04)
	struct FMulticastInlineDelegate OnCharacterSlidingUpdated; // 0xc30(0x10)
	char pad_C40[0x4]; // 0xc40(0x04)
	bool bCanEverSprint; // 0xc44(0x01)
	char bWantsToSprint : 1; // 0xc45(0x01)
	char bWantsToAim : 1; // 0xc45(0x01)
	char bWantsToReloadWeapon : 1; // 0xc45(0x01)
	char pad_C45_3 : 5; // 0xc45(0x01)
	char pad_C46[0xa]; // 0xc46(0x0a)

	void UpdateWaterDepth(); // Function Icarus.IcarusPlayerMovementComponent.UpdateWaterDepth // (Final|Native|Public|BlueprintCallable) // @ game+0x1766490
	void SetIsSliding(bool IsSliding); // Function Icarus.IcarusPlayerMovementComponent.SetIsSliding // (Final|Native|Protected|BlueprintCallable) // @ game+0x1765f70
	bool IsSprinting(); // Function Icarus.IcarusPlayerMovementComponent.IsSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17642d0
	bool IsReloadingWeapon(); // Function Icarus.IcarusPlayerMovementComponent.IsReloadingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17642a0
	bool IsClimbingLadder(); // Function Icarus.IcarusPlayerMovementComponent.IsClimbingLadder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1764270
	bool IsAiming(); // Function Icarus.IcarusPlayerMovementComponent.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1764240
	struct FVector GetNormalizedLadderInput(); // Function Icarus.IcarusPlayerMovementComponent.GetNormalizedLadderInput // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763e60
	float GetLadderPosition(); // Function Icarus.IcarusPlayerMovementComponent.GetLadderPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763e30
	float GetCurrentWaterDepth(); // Function Icarus.IcarusPlayerMovementComponent.GetCurrentWaterDepth // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763df0
	void ExitWater(); // Function Icarus.IcarusPlayerMovementComponent.ExitWater // (Final|Native|Public|BlueprintCallable) // @ game+0x17637d0
	void ExitLadder(); // Function Icarus.IcarusPlayerMovementComponent.ExitLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x17637b0
	void EnterWater(); // Function Icarus.IcarusPlayerMovementComponent.EnterWater // (Final|Native|Public|BlueprintCallable) // @ game+0x1763790
	void EnterLadder(struct ULadderComponent* Ladder); // Function Icarus.IcarusPlayerMovementComponent.EnterLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x1763700
};

// Class Icarus.IcarusPlayerState
// Size: 0x470 (Inherited: 0x320)
struct AIcarusPlayerState : APlayerState {
	struct FMulticastSparseDelegate OnCharacterFlagsChanged; // 0x320(0x01)
	struct FMulticastSparseDelegate OnAccountFlagsChanged; // 0x321(0x01)
	char pad_322[0x6]; // 0x322(0x06)
	struct FOnlineProfileUser ActiveUserProfile; // 0x328(0x40)
	struct FOnlineProfileCharacter ActiveCharacter; // 0x368(0xa0)
	struct UPlayerCharacterState* ActivePlayerCharacterState; // 0x408(0x08)
	struct FPlayerCharacterID PlayerCharacterID; // 0x410(0x18)
	bool bIsHost; // 0x428(0x01)
	char pad_429[0x7]; // 0x429(0x07)
	struct ACheatController* CheatController; // 0x430(0x08)
	struct FMulticastSparseDelegate OnCharacterTalentsChanged; // 0x438(0x01)
	struct FMulticastSparseDelegate OnAccountTalentsChanged; // 0x439(0x01)
	char pad_43A[0x6]; // 0x43a(0x06)
	struct UPlayerTalentControllerComponent* PlayerTalentController; // 0x440(0x08)
	struct UBlueprintTalentControllerComponent* BlueprintTalentController; // 0x448(0x08)
	struct UWorkshopTalentControllerComponent* WorkshopTalentController; // 0x450(0x08)
	struct UProspectTalentControllerComponent* ProspectTalentController; // 0x458(0x08)
	struct UOutpostTalentControllerComponent* OutpostTalentControllerComponent; // 0x460(0x08)
	struct USoloTalentControllerComponent* SoloTalentControllerComponent; // 0x468(0x08)

	void SetCharacterFlags(struct TMap<struct FCharacterFlagsRowHandle, bool>& FlagMap); // Function Icarus.IcarusPlayerState.SetCharacterFlags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1765e30
	void SetCharacterFlag(struct FCharacterFlagsRowHandle& Flag, bool State); // Function Icarus.IcarusPlayerState.SetCharacterFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1765d40
	void SetActiveUserProfile(struct FOnlineProfileUser& InProfileUser); // Function Icarus.IcarusPlayerState.SetActiveUserProfile // (Final|Native|Public|HasOutParms) // @ game+0x1765ae0
	void SetActiveCharacter(struct FOnlineProfileCharacter& InActiveCharacter); // Function Icarus.IcarusPlayerState.SetActiveCharacter // (Final|Native|Public|HasOutParms) // @ game+0x1765950
	void ServerSyncCharacterTalent(struct FTalentsRowHandle Talent, struct FTalentModelData TalentData); // Function Icarus.IcarusPlayerState.ServerSyncCharacterTalent // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1765780
	void ServerSyncAccountTalent(struct FTalentsRowHandle Talent, struct FTalentModelData TalentData); // Function Icarus.IcarusPlayerState.ServerSyncAccountTalent // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1765660
	void ServerSetUnlockedAccountTalents(struct TArray<struct FBackendTalent> BackendTalents); // Function Icarus.IcarusPlayerState.ServerSetUnlockedAccountTalents // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1765590
	void OnUnlockedCharacterTalent(struct UTalentModelInterface_Const* Model, struct FTalentsRowHandle& Talent, struct FTalentModelData& TalentData); // Function Icarus.IcarusPlayerState.OnUnlockedCharacterTalent // (Final|Native|Public|HasOutParms) // @ game+0x1765290
	void OnUnlockedAccountTalent(struct UTalentModelInterface_Const* Model, struct FTalentsRowHandle& Talent, struct FTalentModelData& TalentData); // Function Icarus.IcarusPlayerState.OnUnlockedAccountTalent // (Final|Native|Public|HasOutParms) // @ game+0x1765140
	void OnTalentControllerModelViewChanged(struct UTalentControllerComponent* Controller); // Function Icarus.IcarusPlayerState.OnTalentControllerModelViewChanged // (Final|Native|Public) // @ game+0x17650b0
	void OnRep_ActiveUserProfile(struct FOnlineProfileUser& PreviousUserProfile); // Function Icarus.IcarusPlayerState.OnRep_ActiveUserProfile // (Final|Native|Protected|HasOutParms) // @ game+0x1764c50
	void OnRep_ActiveCharacter(struct FOnlineProfileCharacter& PreviousCharacter); // Function Icarus.IcarusPlayerState.OnRep_ActiveCharacter // (Final|Native|Protected|HasOutParms) // @ game+0x1764ac0
	void OnActiveCharacterExperienceDebtChanged(); // Function Icarus.IcarusPlayerState.OnActiveCharacterExperienceDebtChanged // (Final|Native|Public) // @ game+0x1764880
	void OnActiveCharacterExperienceChanged(); // Function Icarus.IcarusPlayerState.OnActiveCharacterExperienceChanged // (Final|Native|Public) // @ game+0x1764860
	void OnActiveCharacterAliveStateChanged(struct UActorState* ActorState); // Function Icarus.IcarusPlayerState.OnActiveCharacterAliveStateChanged // (Final|Native|Public) // @ game+0x17647d0
	bool HasValidUserID(); // Function Icarus.IcarusPlayerState.HasValidUserID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1764210
	bool HasValidPlayerCharacterID(); // Function Icarus.IcarusPlayerState.HasValidPlayerCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17641e0
	bool HasCharacterFlag(struct FCharacterFlagsRowHandle& Flag); // Function Icarus.IcarusPlayerState.HasCharacterFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1764100
	bool HasActiveUserProfile(); // Function Icarus.IcarusPlayerState.HasActiveUserProfile // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17640d0
	bool HasActiveCharacter(); // Function Icarus.IcarusPlayerState.HasActiveCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17640a0
	struct FString GetUserID(); // Function Icarus.IcarusPlayerState.GetUserID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1764020
	struct TArray<struct UTalentControllerComponent*> GetTalentControllers(); // Function Icarus.IcarusPlayerState.GetTalentControllers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763fa0
	struct UTalentControllerComponent* GetTalentControllerForTalent(struct FTalentsRowHandle& Talent); // Function Icarus.IcarusPlayerState.GetTalentControllerForTalent // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763ef0
	int32_t GetPlayerVisualIdentity(); // Function Icarus.IcarusPlayerState.GetPlayerVisualIdentity // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct FPlayerCharacterID GetPlayerCharacterID(); // Function Icarus.IcarusPlayerState.GetPlayerCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763ea0
	struct FOnlineProfileUser GetActiveUserProfile(); // Function Icarus.IcarusPlayerState.GetActiveUserProfile // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763d80
	struct UPlayerCharacterState* GetActivePlayerCharacterState(); // Function Icarus.IcarusPlayerState.GetActivePlayerCharacterState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763d50
	struct FOnlineProfileCharacter GetActiveCharacter(); // Function Icarus.IcarusPlayerState.GetActiveCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1763c80
};

// Class Icarus.IcarusPreviewCharacter
// Size: 0x610 (Inherited: 0x4c0)
struct AIcarusPreviewCharacter : ACharacter {
	char pad_4C0[0x8]; // 0x4c0(0x08)
	struct UInventoryComponent* InventoryComponent; // 0x4c8(0x08)
	struct UInventory* EnvirosuitInventory; // 0x4d0(0x08)
	struct UInventory* BackpackInventory; // 0x4d8(0x08)
	struct UInventory* QuickbarInventory; // 0x4e0(0x08)
	struct UInventory* EquipmentInventory; // 0x4e8(0x08)
	struct TArray<struct USkeletalMeshComponent*> ArmourComponents; // 0x4f0(0x10)
	bool IsMale; // 0x500(0x01)
	char pad_501[0x10f]; // 0x501(0x10f)

	bool UpdateEquipmentForSlot(int32_t SlotNum, struct FArmourData& Data); // Function Icarus.IcarusPreviewCharacter.UpdateEquipmentForSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x176bb50
	void UpdateAllEquipment(); // Function Icarus.IcarusPreviewCharacter.UpdateAllEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x176bb30
	void SetupCharacterCosmetics(); // Function Icarus.IcarusPreviewCharacter.SetupCharacterCosmetics // (Native|Event|Public|BlueprintEvent) // @ game+0x176bb10
	void OnEquipmentInventoryUpdated(struct UInventory* Inventory, int32_t UpdatedSlot); // Function Icarus.IcarusPreviewCharacter.OnEquipmentInventoryUpdated // (Final|Native|Protected) // @ game+0x176af20
	struct USkeletalMeshComponent* FindOrCreateEquipmentComponent(int32_t ForSlot, struct FArmourData& WithData); // Function Icarus.IcarusPreviewCharacter.FindOrCreateEquipmentComponent // (Final|Native|Protected|HasOutParms) // @ game+0x1769820
};

// Class Icarus.IcarusProjectileComponent
// Size: 0x220 (Inherited: 0x1d0)
struct UIcarusProjectileComponent : UProjectileMovementComponent {
	struct FRotator VelocityRotationOffset; // 0x1d0(0x0c)
	struct FRotator AngularRotation; // 0x1dc(0x0c)
	struct UE4::FName HomingTargetBoneName; // 0x1e8(0x08)
	bool bDisableHomingOncePassedTarget; // 0x1f0(0x01)
	bool bPreventHomingAccelerationBeforeApex; // 0x1f1(0x01)
	bool bScaleHomingMagnitudeByDistanceToTarget; // 0x1f2(0x01)
	char pad_1F3[0x5]; // 0x1f3(0x05)
	struct UCurveFloat* HomingScaleCurve; // 0x1f8(0x08)
	struct UCurveFloat* HomingGravityScale; // 0x200(0x08)
	float HomingNegativeZAccelerationMultiplier; // 0x208(0x04)
	char pad_20C[0x14]; // 0x20c(0x14)

	bool HasReachedApex(); // Function Icarus.IcarusProjectileComponent.HasReachedApex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1742530
};

// Class Icarus.IcarusQuestFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusQuestFunctionLibrary : UBlueprintFunctionLibrary {

	bool IsSpecificItem(struct AIcarusActor* Actor, struct FItemsStaticRowHandle ItemStatic); // Function Icarus.IcarusQuestFunctionLibrary.IsSpecificItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x176adb0
	struct AQuestMarker* GetQuestMarkerFromTags(struct AActor* StartingLocation, struct TArray<struct FQuestQueriesRowHandle> TagQueriesRowHandles); // Function Icarus.IcarusQuestFunctionLibrary.GetQuestMarkerFromTags // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1769f10
	struct AQuestMarker* GetQuestMarker(struct AActor* StartingLocation, struct FQuestQueriesRowHandle TagQueriesRowHandle); // Function Icarus.IcarusQuestFunctionLibrary.GetQuestMarker // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1769e20
	struct TArray<struct AIcarusPlayerCharacter*> GetNearbyPlayersAtLocation(struct UObject* WorldContextObject, struct FVector& Location, float MaxDistance, bool bIgnoreZ); // Function Icarus.IcarusQuestFunctionLibrary.GetNearbyPlayersAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1769ba0
	int32_t GetCurrentPlayerCount(struct UObject* WorldContextObject); // Function Icarus.IcarusQuestFunctionLibrary.GetCurrentPlayerCount // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1769b10
	bool DistanceCheckFromLocation(struct AActor* Actor, struct FVector& Location, float Distance); // Function Icarus.IcarusQuestFunctionLibrary.DistanceCheckFromLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1769580
};

// Class Icarus.IcarusQuestManagerRecorderComponent
// Size: 0x180 (Inherited: 0x160)
struct UIcarusQuestManagerRecorderComponent : UActorStateRecorderComponent {
	struct UE4::FName FactionMissionName; // 0x158(0x08)
	struct FInitialQuestRecord InitialQuestRecord; // 0x160(0x18)
	bool bMissionComplete; // 0x178(0x01)
};

// Class Icarus.IcarusQuestRecorderComponent
// Size: 0x190 (Inherited: 0x160)
struct UIcarusQuestRecorderComponent : UActorStateRecorderComponent {
	struct UE4::FName QuestName; // 0x158(0x08)
	struct TArray<struct FRelevantQuestActorRecord> RelevantActorRecords; // 0x160(0x10)
	struct TArray<struct FSubQuestRecord> SubQuestRecords; // 0x170(0x10)
	struct TArray<struct FQuestVariableRecord> VariableRecords; // 0x180(0x10)
};

// Class Icarus.IcarusReplicationGraph
// Size: 0x5e0 (Inherited: 0x4a0)
struct UIcarusReplicationGraph : UReplicationGraph {
	struct UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498(0x08)
	struct UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a0(0x08)
	char pad_4B0[0x130]; // 0x4b0(0x130)

	void OnPlayerCharacterItemFocusedChanged(struct AIcarusPlayerCharacter* PlayerCharacter, struct AIcarusItem* Item, bool bRemoved); // Function Icarus.IcarusReplicationGraph.OnPlayerCharacterItemFocusedChanged // (Final|Native|Protected) // @ game+0x176b300
	void OnFLODTileBehaviourHarnessChanged(struct AFLODTile* Tile, bool bRemoved); // Function Icarus.IcarusReplicationGraph.OnFLODTileBehaviourHarnessChanged // (Final|Native|Protected) // @ game+0x176aff0
};

// Class Icarus.IcarusResetCharacterFromSession
// Size: 0x320 (Inherited: 0x320)
struct UIcarusResetCharacterFromSession : UIcarusSessionBase {

	struct UIcarusResetCharacterFromSession* IcarusResetCharacterFromSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, struct FOnlineProfileCharacter OnlineProfileCharacter); // Function Icarus.IcarusResetCharacterFromSession.IcarusResetCharacterFromSession // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x176a050
};

// Class Icarus.IcarusResumeSession
// Size: 0x388 (Inherited: 0x320)
struct UIcarusResumeSession : UIcarusSessionBase {
	struct UResumeProspectCallbackProxyGen* ResumeProspectCallbackProxy; // 0x320(0x08)
	struct TMap<enum class EIcarusResumeConfirmationStep, struct FConfirmationPopupDetails> ConfirmationSetups; // 0x328(0x50)
	char pad_378[0x8]; // 0x378(0x08)
	bool bAttemptHostMigration; // 0x380(0x01)
	char pad_381[0x1]; // 0x381(0x01)
	bool bResumeCancelled; // 0x382(0x01)
	char pad_383[0x5]; // 0x383(0x05)

	void ResumeContinue(); // Function Icarus.IcarusResumeSession.ResumeContinue // (Final|Native|Protected) // @ game+0x176b940
	void ResumeCancel(); // Function Icarus.IcarusResumeSession.ResumeCancel // (Final|Native|Protected) // @ game+0x176b920
	void OnResumeProspectSuccess(struct FResResumeProspect& Result); // Function Icarus.IcarusResumeSession.OnResumeProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x176b600
	void OnResumeProspectFailure(struct FResResumeProspect& Result); // Function Icarus.IcarusResumeSession.OnResumeProspectFailure // (Native|Protected|HasOutParms) // @ game+0x176b410
	struct UIcarusResumeSession* IcarusResumeSession(struct UObject* WorldContextObject, struct FProspectInfo& ProspectInfo, struct APlayerController* PlayerController, struct FOnlineProfileCharacter OnlineProfileCharacter, struct UConfirmationPopupBase* InConfirmationPopup, struct TMap<enum class EIcarusResumeConfirmationStep, struct FConfirmationPopupDetails> ConfirmationSetups, bool bAttemptHostMigration); // Function Icarus.IcarusResumeSession.IcarusResumeSession // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x176a4d0
};

// Class Icarus.IcarusRocket
// Size: 0x308 (Inherited: 0x2b0)
struct AIcarusRocket : AIcarusActor {
	struct FMulticastSparseDelegate RocketAssembled; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	struct FVector SpawnLocation; // 0x2b4(0x0c)
	struct FVector DescentOrigin; // 0x2c0(0x0c)
	float InitialPositionOffset; // 0x2cc(0x04)
	bool DropshipPositionsSet; // 0x2d0(0x01)
	bool PlayerHasLeft; // 0x2d1(0x01)
	bool bStoredLoadout; // 0x2d2(0x01)
	char pad_2D3[0x5]; // 0x2d3(0x05)
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x2d8(0x18)
	enum class ERocketState RocketState; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct TArray<struct AIcarusRocketPart*> RocketParts; // 0x2f8(0x10)

	void TriggerLeaveProspectLaunch(); // Function Icarus.IcarusRocket.TriggerLeaveProspectLaunch // (Native|Event|Public|BlueprintEvent) // @ game+0x88bb80
	void SetRocketState(enum class ERocketState InRocketState); // Function Icarus.IcarusRocket.SetRocketState // (Final|Native|Protected|BlueprintCallable) // @ game+0x176ba90
	bool RemovePart(struct AIcarusRocketPart* PartToRemove); // Function Icarus.IcarusRocket.RemovePart // (Final|Native|Public|BlueprintCallable) // @ game+0x176b7f0
	void OnRep_RocketState(); // Function Icarus.IcarusRocket.OnRep_RocketState // (Native|Event|Protected|BlueprintEvent) // @ game+0x88b860
	void OnRep_AssignedPlayerCharacterID(); // Function Icarus.IcarusRocket.OnRep_AssignedPlayerCharacterID // (Native|Event|Protected|BlueprintEvent) // @ game+0x88bba0
	void OnDropshipSpawnPlayerInit(); // Function Icarus.IcarusRocket.OnDropshipSpawnPlayerInit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x910910
	void OnDatabaseReload(); // Function Icarus.IcarusRocket.OnDatabaseReload // (Native|Event|Protected|BlueprintEvent) // @ game+0x16cf160
	bool InstallPart(struct AIcarusRocketPart* NewPart); // Function Icarus.IcarusRocket.InstallPart // (Final|Native|Public|BlueprintCallable) // @ game+0x176acb0
	struct TArray<struct AIcarusRocketPart*> GetParts(); // Function Icarus.IcarusRocket.GetParts // (Final|Native|Public|BlueprintCallable) // @ game+0x1769d90
	struct AIcarusPlayerControllerSurvival* GetAssignedPlayer(); // Function Icarus.IcarusRocket.GetAssignedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1769930
	void DefaultInstallPart(struct AIcarusItem* NewPart); // Function Icarus.IcarusRocket.DefaultInstallPart // (Final|Native|Public|BlueprintCallable) // @ game+0x17694a0
	void DebugLogRocket(struct FString Message); // Function Icarus.IcarusRocket.DebugLogRocket // (Final|Native|Public|BlueprintCallable) // @ game+0x17693a0
	void AssignPlayer(struct FPlayerCharacterID& PlayerCharacterID); // Function Icarus.IcarusRocket.AssignPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1769250
};

// Class Icarus.IcarusRocketPart
// Size: 0x410 (Inherited: 0x3f0)
struct AIcarusRocketPart : AIcarusItem {
	char pad_3F0[0x10]; // 0x3f0(0x10)
	int32_t PartIdentifier; // 0x400(0x04)
	char pad_404[0xc]; // 0x404(0x0c)

	void SetPartIdentifier(int32_t ID); // Function Icarus.IcarusRocketPart.SetPartIdentifier // (Final|Native|Public|BlueprintCallable) // @ game+0x176ba00
	void SetEditorInteractable(bool Interactable); // Function Icarus.IcarusRocketPart.SetEditorInteractable // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1757c10
	void SetEditorHighlight(bool Highlight); // Function Icarus.IcarusRocketPart.SetEditorHighlight // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1757c10
	bool IsConnected(); // Function Icarus.IcarusRocketPart.IsConnected // (Final|Native|Public|BlueprintCallable) // @ game+0x176ad50
	int32_t GetPartIdentifier(); // Function Icarus.IcarusRocketPart.GetPartIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1769d60
	int32_t GetConnectionCount(); // Function Icarus.IcarusRocketPart.GetConnectionCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1769ae0
	void GetClosestConnection(struct FVector HitLocation, struct AIcarusRocketPartConnector*& ClosestConnection); // Function Icarus.IcarusRocketPart.GetClosestConnection // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17699f0
	struct UE4::FName GetChildSocketName(struct AIcarusRocketPartConnector* Connector); // Function Icarus.IcarusRocketPart.GetChildSocketName // (Final|Native|Public|BlueprintCallable) // @ game+0x1769960
	void FindConnectableConnector(struct AIcarusRocketPartConnector* OtherConnector, struct AIcarusRocketPartConnector*& Connector); // Function Icarus.IcarusRocketPart.FindConnectableConnector // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1769740
	void DestroyAllConnections(); // Function Icarus.IcarusRocketPart.DestroyAllConnections // (Final|Native|Public|BlueprintCallable) // @ game+0x1769530
};

// Class Icarus.IcarusRocketPartConnector
// Size: 0x410 (Inherited: 0x3f0)
struct AIcarusRocketPartConnector : AIcarusItem {
	enum class ERocketPartConnectionType ConnectionType; // 0x3f0(0x01)
	char pad_3F1[0x7]; // 0x3f1(0x07)
	struct AIcarusRocketPartConnector* AttachedConnector; // 0x3f8(0x08)
	struct FMulticastSparseDelegate ConnectionUpdated; // 0x400(0x01)
	char pad_401[0xf]; // 0x401(0x0f)

	bool IsConnected(); // Function Icarus.IcarusRocketPartConnector.IsConnected // (Final|Native|Public|BlueprintCallable) // @ game+0x176ad80
	bool EstablishConnection(struct AIcarusRocketPartConnector* OtherConnector); // Function Icarus.IcarusRocketPartConnector.EstablishConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x17696a0
	bool DestroyConnection(); // Function Icarus.IcarusRocketPartConnector.DestroyConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x1769550
	bool CanEstablishConnection(struct AIcarusRocketPartConnector* OtherConnector); // Function Icarus.IcarusRocketPartConnector.CanEstablishConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x1769300
};

// Class Icarus.IcarusShipEditorCharacter
// Size: 0x5c0 (Inherited: 0x5c0)
struct AIcarusShipEditorCharacter : AIcarusCharacter {
};

// Class Icarus.IcarusSmartNavLink
// Size: 0x280 (Inherited: 0x270)
struct AIcarusSmartNavLink : ANavLinkProxy {
	enum class ENavigationType NavigationType; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	float NavigationDuration; // 0x274(0x04)
	bool AllowBasicTraversal; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)

	void ReachedSmartLink(struct AActor* Actor, struct FVector& Destination); // Function Icarus.IcarusSmartNavLink.ReachedSmartLink // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x17706d0
};

// Class Icarus.IcarusSpawn
// Size: 0x238 (Inherited: 0x220)
struct AIcarusSpawn : AActor {
	struct UCapsuleComponent* SpawnCapsule; // 0x220(0x08)
	char pad_228[0x10]; // 0x228(0x10)

	void ActorEndOverlaps(struct AActor* FirstActor, struct AActor* OtherActor); // Function Icarus.IcarusSpawn.ActorEndOverlaps // (Final|Native|Public) // @ game+0x176f7f0
	void ActorBeginOverlaps(struct AActor* FirstActor, struct AActor* OtherActor); // Function Icarus.IcarusSpawn.ActorBeginOverlaps // (Final|Native|Public) // @ game+0x176f720
};

// Class Icarus.IcarusSpectatorPawn
// Size: 0x2e0 (Inherited: 0x2a8)
struct AIcarusSpectatorPawn : ASpectatorPawn {
	float InitialMaxSpeed; // 0x2a8(0x04)
	float InitialAcceleration; // 0x2ac(0x04)
	float InitialDeceleration; // 0x2b0(0x04)
	bool bSmoothMouseInput; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)
	float InputSmoothSpeed; // 0x2b8(0x04)
	float LookUpRate; // 0x2bc(0x04)
	float TurnRate; // 0x2c0(0x04)
	bool bFreeLook; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
	struct FRotator FreelookRotation; // 0x2c8(0x0c)
	char pad_2D4[0xc]; // 0x2d4(0x0c)

	void SetSpeedScale(float SpeedScale); // Function Icarus.IcarusSpectatorPawn.SetSpeedScale // (Final|Native|Public|BlueprintCallable) // @ game+0x17709a0
	void AddYaw(float Value); // Function Icarus.IcarusSpectatorPawn.AddYaw // (Final|Native|Public) // @ game+0x176fbf0
	void AddPitch(float Value); // Function Icarus.IcarusSpectatorPawn.AddPitch // (Final|Native|Public) // @ game+0x176f9f0
};

// Class Icarus.IcarusStatContainer
// Size: 0x2d8 (Inherited: 0xb0)
struct UIcarusStatContainer : UActorComponent {
	char pad_B0[0x1]; // 0xb0(0x01)
	struct FMulticastSparseDelegate OnStatContainerUpdated; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
	struct FStatsRepArray ReplicatedStatArray; // 0xb8(0x118)
	char pad_1D0[0x108]; // 0x1d0(0x108)

	bool RemoveStats_BP(enum class EStatSources Source, int32_t UID); // Function Icarus.IcarusStatContainer.RemoveStats_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x17708d0
	void RemoveBackingStatContainer(struct UIcarusStatContainer* BackingContainer, struct FString Context); // Function Icarus.IcarusStatContainer.RemoveBackingStatContainer // (Final|Native|Public|BlueprintCallable) // @ game+0x17707a0
	void OnServer_SerialiseStats(); // Function Icarus.IcarusStatContainer.OnServer_SerialiseStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1770670
	void OnRep_StatChanges(); // Function Icarus.IcarusStatContainer.OnRep_StatChanges // (Final|Native|Public) // @ game+0x1770560
	struct TMap<struct FStatsEnum, int32_t> GetStatsSlowBP(bool bIncludeVirtual); // Function Icarus.IcarusStatContainer.GetStatsSlowBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1770100
	int32_t GetStat(struct FStatsEnum Stat); // Function Icarus.IcarusStatContainer.GetStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1770050
	struct FStatContainer GetInternalContainer(); // Function Icarus.IcarusStatContainer.GetInternalContainer // (Final|Native|Public) // @ game+0x176fd10
	bool AddStats_BP(enum class EStatSources Source, int32_t UID, struct TMap<struct FStatsEnum, int32_t>& InStats); // Function Icarus.IcarusStatContainer.AddStats_BP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x176fa70
	void AddBackingStatContainer(struct UIcarusStatContainer* BackingContainer, struct FString Context); // Function Icarus.IcarusStatContainer.AddBackingStatContainer // (Final|Native|Public|BlueprintCallable) // @ game+0x176f8c0
};

// Class Icarus.IcarusStaticMeshComponent
// Size: 0x4d0 (Inherited: 0x4d0)
struct UIcarusStaticMeshComponent : UStaticMeshComponent {
};

// Class Icarus.IcarusTestRail
// Size: 0x2d8 (Inherited: 0x240)
struct AIcarusTestRail : ACameraRig_Rail {
	struct FMulticastInlineDelegate OnTestComplete; // 0x240(0x10)
	struct FMulticastInlineDelegate OnSetupComplete; // 0x250(0x10)
	enum class ETestRailState CurrentState; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	int32_t TimeoutDuration; // 0x264(0x04)
	struct FTestProfileData ProfileData; // 0x268(0x60)
	struct ACharacter* TestCharacter; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)

	void TickTest(float DeltaTime); // Function Icarus.IcarusTestRail.TickTest // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1770b00
	void TestComplete(); // Function Icarus.IcarusTestRail.TestComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1770ae0
	void SetupTest(struct ACharacter* InTestCharacter); // Function Icarus.IcarusTestRail.SetupTest // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1770a50
	void SetupComplete(); // Function Icarus.IcarusTestRail.SetupComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1770a20
	void BeginTest(); // Function Icarus.IcarusTestRail.BeginTest // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x176fc90
};

// Class Icarus.IcarusWaypointActor
// Size: 0x220 (Inherited: 0x220)
struct AIcarusWaypointActor : AActor {

	void InitForPlayer(struct AIcarusPlayerState* OwningPlayerState); // Function Icarus.IcarusWaypointActor.InitForPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct AIcarusPlayerState* GetOwningPlayerState(); // Function Icarus.IcarusWaypointActor.GetOwningPlayerState // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
};

// Class Icarus.IcarusWeatherAction
// Size: 0x410 (Inherited: 0xb0)
struct UIcarusWeatherAction : UActorComponent {
	struct FMulticastSparseDelegate WeatherActionComplete; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FWeatherEventsRowHandle ParentWeatherEvent; // 0xb4(0x18)
	struct FWeatherActionsRowHandle WeatherActionData; // 0xcc(0x18)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct FIcarusWeatherActionData CachedActionData; // 0xe8(0x300)
	struct FMulticastSparseDelegate ActionRowUpdated; // 0x3e8(0x01)
	char pad_3E9[0x3]; // 0x3e9(0x03)
	float TotalLifeTime; // 0x3ec(0x04)
	float CurrentLifeTime; // 0x3f0(0x04)
	struct FBiomesRowHandle BiomeAssigned; // 0x3f4(0x18)
	bool StartEventEnacted; // 0x40c(0x01)
	char pad_40D[0x3]; // 0x40d(0x03)

	void WeatherEventUpdated(struct FWeatherEventsRowHandle& Event); // Function Icarus.IcarusWeatherAction.WeatherEventUpdated // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1770c50
	void WeatherActionVisualTick(float Delta, struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionVisualTick // (Native|Event|Public|BlueprintEvent) // @ game+0x1770b80
	void WeatherActionTick(float Delta, struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionTick // (Native|Event|Public|BlueprintEvent) // @ game+0x1770b80
	void WeatherActionStarted(struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionStarted // (Native|Event|Public|BlueprintEvent) // @ game+0x1082b20
	void WeatherActionEnded(struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionEnded // (Native|Event|Public|BlueprintEvent) // @ game+0x1082b20
	void OnRep_WeatherActionData(); // Function Icarus.IcarusWeatherAction.OnRep_WeatherActionData // (Final|Native|Protected) // @ game+0x1770580
	void OnRep_ParentWeatherEvent(); // Function Icarus.IcarusWeatherAction.OnRep_ParentWeatherEvent // (Final|Native|Protected) // @ game+0x17704c0
	void Initialise(float ExpectedLifeTime, struct FBiomesRowHandle Biome, struct FWeatherEventsRowHandle ParentWeatherEvent, struct FWeatherActionsRowHandle ActionData); // Function Icarus.IcarusWeatherAction.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x17702f0
	float GetStormTier(); // Function Icarus.IcarusWeatherAction.GetStormTier // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct FBiomesRowHandle GetBiomeAssigned(); // Function Icarus.IcarusWeatherAction.GetBiomeAssigned // (Final|Native|Public) // @ game+0x176fcd0
	void ActionTick_External(float Delta, struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.ActionTick_External // (Final|Native|Public) // @ game+0x176f650
};

// Class Icarus.IcarusWidget
// Size: 0x280 (Inherited: 0x260)
struct UIcarusWidget : UUserWidget {
	struct FFeatureLevelsRowHandle RequiredFeatureLevel; // 0x260(0x18)
	bool bOverrideVisibilityIfFeatureLevelDisabled; // 0x278(0x01)
	enum class ESlateVisibility FeatureLevelVisibilityOverride; // 0x279(0x01)
	char pad_27A[0x6]; // 0x27a(0x06)

	bool IsWidgetFocusable(); // Function Icarus.IcarusWidget.IsWidgetFocusable // (Native|Event|Public|BlueprintEvent|Const) // @ game+0xe2a010
	bool IsFeatureLevelMet(); // Function Icarus.IcarusWidget.IsFeatureLevelMet // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776bd0
	void GetFocusWidget(bool& bValid, struct UWidget*& Widget, bool& bThis); // Function Icarus.IcarusWidget.GetFocusWidget // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void FocusUpdated(bool bNewFocus); // Function Icarus.IcarusWidget.FocusUpdated // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void FocusIcarusWidget(); // Function Icarus.IcarusWidget.FocusIcarusWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.IcarusWorldSettings
// Size: 0x3d0 (Inherited: 0x3a0)
struct AIcarusWorldSettings : AWorldSettings {
	struct TArray<struct FTransform> ExoticVoxelSpawnLocations; // 0x3a0(0x10)
	struct TArray<struct FTransform> DeepMiningOreDepositSpawnLocations; // 0x3b0(0x10)
	struct TArray<struct FCaveLocation> CaveLocations; // 0x3c0(0x10)

	void AddExoticVoxelSpawnLocation(struct FTransform& SpawnLocation); // Function Icarus.IcarusWorldSettings.AddExoticVoxelSpawnLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17748a0
	void AddDeepMiningOreDepositSpawnLocation(struct FTransform& SpawnLocation); // Function Icarus.IcarusWorldSettings.AddDeepMiningOreDepositSpawnLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x17747c0
};

// Class Icarus.IcausAnimNotify_GOAPInteraction
// Size: 0x38 (Inherited: 0x38)
struct UIcausAnimNotify_GOAPInteraction : UAnimNotify {
};

// Class Icarus.InteractableBehaviour
// Size: 0xe8 (Inherited: 0xc0)
struct UInteractableBehaviour : UTraitBehaviour {
	enum class EInteractType InteractType; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	int32_t InteractIndex; // 0xc4(0x04)
	struct UE4::FName RequiredInteractTag; // 0xc8(0x08)
	struct FInteractionsRowHandle InteractionsRowHandle; // 0xd0(0x18)

	void Interact(struct AActor* Instigator, struct FHitResult& HitResult); // Function Icarus.InteractableBehaviour.Interact // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1776a90
	struct FText GetInteractionText(); // Function Icarus.InteractableBehaviour.GetInteractionText // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17765e0
	bool GetInteractData(struct FInteractData& OutData); // Function Icarus.InteractableBehaviour.GetInteractData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1775e10
	struct UInteractableComponent* GetInteractableComponent(); // Function Icarus.InteractableBehaviour.GetInteractableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1776110
	bool CanInteract(struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableBehaviour.CanInteract // (Native|Event|Public|BlueprintEvent) // @ game+0x1775440
};

// Class Icarus.InteractableComponent
// Size: 0x138 (Inherited: 0xe8)
struct UInteractableComponent : UTraitBehaviours {
	struct TMap<enum class EInteractType, struct FInteractStack> WorldInteracts; // 0xe8(0x50)

	void WorldInteract(struct AActor* Instigator, struct FHitResult& HitResult); // Function Icarus.InteractableComponent.WorldInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17781a0
	void WorldHeldInteract(struct AActor* Instigator, struct FHitResult& HitResult); // Function Icarus.InteractableComponent.WorldHeldInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1778060
	void WorldAltHeldInteract(struct AActor* Instigator, struct FHitResult& HitResult); // Function Icarus.InteractableComponent.WorldAltHeldInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1777f20
	bool GetInteractData(struct FInteractionsRowHandle InteractionsRowHandle, struct FInteractData& OutData); // Function Icarus.InteractableComponent.GetInteractData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1775f20
	bool GetInteractableData(struct FInteractableData& OutData); // Function Icarus.InteractableComponent.GetInteractableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1776140
	struct UInteractableBehaviour* GetCurrentInteractForType(enum class EInteractType InteractType, struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableComponent.GetCurrentInteractForType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1775c60
	bool CanInteract(); // Function Icarus.InteractableComponent.CanInteract // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x8406f0
};

// Class Icarus.InteractableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInteractableLibrary : URowLibrary {

	struct FInteractableRowHandle StructToRowHandle(struct FInteractableEnum EnumValue); // Function Icarus.InteractableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777dc0
	struct UE4::FName StructToName(struct FInteractableEnum EnumValue); // Function Icarus.InteractableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777c80
	int32_t StructToInt(struct FInteractableEnum EnumValue); // Function Icarus.InteractableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777b40
	struct FInteractableEnum RowHandleToStruct(struct FInteractableRowHandle RowHandle); // Function Icarus.InteractableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17779c0
	void RemoveRowFromInteractableTable(struct UE4::FName Name); // Function Icarus.InteractableLibrary.RemoveRowFromInteractableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17778c0
	void RefreshConstants(); // Function Icarus.InteractableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1777880
	int32_t NumRows(); // Function Icarus.InteractableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777820
	bool NotEqual_EnumName(struct FInteractableEnum A, struct UE4::FName B); // Function Icarus.InteractableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777640
	bool NotEqual_EnumEnum(struct FInteractableEnum A, struct FInteractableEnum B); // Function Icarus.InteractableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777460
	struct FInteractableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.InteractableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777340
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.InteractableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1777220
	struct FInteractableRowHandle MakeLiteralInteractable(struct FInteractableRowHandle RowHandle); // Function Icarus.InteractableLibrary.MakeLiteralInteractable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777080
	struct FInteractableRowHandle MakeInteractableFromIndex(int32_t Index); // Function Icarus.InteractableLibrary.MakeInteractableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776e40
	struct FInteractableEnum MakeInteractableEnum(struct FInteractableEnum Enum); // Function Icarus.InteractableLibrary.MakeInteractableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776dc0
	struct FInteractableRowHandle MakeInteractable(struct UE4::FName RowName); // Function Icarus.InteractableLibrary.MakeInteractable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776d20
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.InteractableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1776c00
	struct FInteractableEnum IntToStruct(int32_t IntValue); // Function Icarus.InteractableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776970
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.InteractableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1776850
	void GetInteractableStruct(struct FInteractableRowHandle RowHandle, struct FInteractableData& Interactable, enum class EValid& Paths); // Function Icarus.InteractableLibrary.GetInteractableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1776390
	bool EqualEqual_FInteractableRowHandleFInteractableRowHandle(struct FInteractableRowHandle RowHandleA, struct FInteractableRowHandle RowHandleB); // Function Icarus.InteractableLibrary.EqualEqual_FInteractableRowHandleFInteractableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17759e0
	bool EqualEqual_EnumEnum(struct FInteractableEnum A, struct FInteractableEnum B); // Function Icarus.InteractableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1775800
	struct FInteractableRowHandle CastToInteractableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.InteractableLibrary.CastToInteractableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17755c0
	void BreakInteractableEnum(struct FInteractableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.InteractableLibrary.BreakInteractableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1775180
	void AddRowToInteractableTable(struct UE4::FName Name, struct FInteractableData Data, struct FInteractableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.InteractableLibrary.AddRowToInteractableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1774980
};

// Class Icarus.InteractableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInteractableTable : UIcarusDataTable {
};

// Class Icarus.InteractionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInteractionsLibrary : URowLibrary {

	struct FInteractionsRowHandle StructToRowHandle(struct FInteractionsEnum EnumValue); // Function Icarus.InteractionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777e70
	struct UE4::FName StructToName(struct FInteractionsEnum EnumValue); // Function Icarus.InteractionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777d20
	int32_t StructToInt(struct FInteractionsEnum EnumValue); // Function Icarus.InteractionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777be0
	struct FInteractionsEnum RowHandleToStruct(struct FInteractionsRowHandle RowHandle); // Function Icarus.InteractionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777a80
	void RemoveRowFromInteractionsTable(struct UE4::FName Name); // Function Icarus.InteractionsLibrary.RemoveRowFromInteractionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1777940
	void RefreshConstants(); // Function Icarus.InteractionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17778a0
	int32_t NumRows(); // Function Icarus.InteractionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777850
	bool NotEqual_EnumName(struct FInteractionsEnum A, struct UE4::FName B); // Function Icarus.InteractionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777730
	bool NotEqual_EnumEnum(struct FInteractionsEnum A, struct FInteractionsEnum B); // Function Icarus.InteractionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777550
	struct FInteractionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.InteractionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17773d0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.InteractionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17772b0
	struct FInteractionsRowHandle MakeLiteralInteractions(struct FInteractionsRowHandle RowHandle); // Function Icarus.InteractionsLibrary.MakeLiteralInteractions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1777150
	struct FInteractionsRowHandle MakeInteractionsFromIndex(int32_t Index); // Function Icarus.InteractionsLibrary.MakeInteractionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776ff0
	struct FInteractionsEnum MakeInteractionsEnum(struct FInteractionsEnum Enum); // Function Icarus.InteractionsLibrary.MakeInteractionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776f70
	struct FInteractionsRowHandle MakeInteractions(struct UE4::FName RowName); // Function Icarus.InteractionsLibrary.MakeInteractions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776ed0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.InteractionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1776c90
	struct FInteractionsEnum IntToStruct(int32_t IntValue); // Function Icarus.InteractionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1776a00
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.InteractionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17768e0
	void GetInteractionsStruct(struct FInteractionsRowHandle RowHandle, struct FInteractData& Interactions, enum class EValid& Paths); // Function Icarus.InteractionsLibrary.GetInteractionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1776680
	bool EqualEqual_FInteractionsRowHandleFInteractionsRowHandle(struct FInteractionsRowHandle RowHandleA, struct FInteractionsRowHandle RowHandleB); // Function Icarus.InteractionsLibrary.EqualEqual_FInteractionsRowHandleFInteractionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1775b20
	bool EqualEqual_EnumEnum(struct FInteractionsEnum A, struct FInteractionsEnum B); // Function Icarus.InteractionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17758f0
	struct FInteractionsRowHandle CastToInteractionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.InteractionsLibrary.CastToInteractionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17756e0
	void BreakInteractionsEnum(struct FInteractionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.InteractionsLibrary.BreakInteractionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17752e0
	void AddRowToInteractionsTable(struct UE4::FName Name, struct FInteractData Data, struct FInteractionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.InteractionsLibrary.AddRowToInteractionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1774ea0
};

// Class Icarus.InteractionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInteractionsTable : UIcarusDataTable {
};

// Class Icarus.InteractSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UInteractSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnWaterSourceInteractNotify; // 0x30(0x10)

	void BroadcastWaterSourceInteractDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* WaterSource); // Function Icarus.InteractSubsystem.BroadcastWaterSourceInteractDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d580
};

// Class Icarus.Inventory
// Size: 0x2c0 (Inherited: 0xc0)
struct UInventory : UTraitBehaviour {
	struct FMulticastInlineDelegate OnInventoryItemChanged; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnAllInventoryItemsChanged; // 0xd0(0x10)
	int32_t CurrentWeight; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct FInventorySlotsFastArray Slots; // 0xe8(0x158)
	struct FTransform OverflowSpawnTransform; // 0x240(0x30)
	struct TArray<struct FItemData> InitialItems; // 0x270(0x10)
	struct FMulticastSparseDelegate OnItemAdded; // 0x280(0x01)
	struct FMulticastSparseDelegate OnItemRemoved; // 0x281(0x01)
	struct FMulticastSparseDelegate OnItemRemovedVerbose; // 0x282(0x01)
	struct FMulticastSparseDelegate Client_OnItemsUpdated; // 0x283(0x01)
	struct FMulticastSparseDelegate OnWeightUpdated; // 0x284(0x01)
	struct FMulticastSparseDelegate SlotCountChange; // 0x285(0x01)
	struct FMulticastSparseDelegate SlotsUpdated; // 0x286(0x01)
	struct FMulticastSparseDelegate OnDroppingOverflowItem; // 0x287(0x01)
	struct FMulticastSparseDelegate OnItemBroke; // 0x288(0x01)
	char pad_289[0x3]; // 0x289(0x03)
	struct FInventoryInfoRowHandle InventoryInfoRowHandle; // 0x28c(0x18)
	char pad_2A4[0x1c]; // 0x2a4(0x1c)

	bool TransferInventory(struct UInventory* Other); // Function Icarus.Inventory.TransferInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1781230
	void SortByWeight(); // Function Icarus.Inventory.SortByWeight // (Final|Native|Private) // @ game+0x1781150
	void Sort(); // F unction Icarus.Inventory.Sort // (Final|Native|Public) // @ game+0x1781130
	void SlottableSetup(struct TArray<struct FSlotWrapper>& SlotableSetup); // Function Icarus.Inventory.SlottableSetup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1781040
	bool SetItemDynamicProperty(int32_t Location, enum class EDynamicItemProperties Property, int32_t Value); // Function Icarus.Inventory.SetItemDynamicProperty // (Final|Native|Public|BlueprintCallable) // @ game+0x1780f30
	bool SetItem(int32_t Location, struct FItemData NewItem); // Function Icarus.Inventory.SetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1780a10
	void RemoveSlots(int32_t SlotsToRemove); // Function Icarus.Inventory.RemoveSlots // (Final|Native|Public|BlueprintCallable) // @ game+0x1780980
	struct FItemData RemoveItem(int32_t Location, int32_t Amount, bool ClearItemSave); // Function Icarus.Inventory.RemoveItem // (Final|Native|Public|BlueprintCallable) // @ game+0x17807b0
	void OverrideQuery(int32_t Index, struct FTagQueriesRowHandle& Query); // Function Icarus.Inventory.OverrideQuery // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17806c0
	void OnStatContainerUpdated(); // Function Icarus.Inventory.OnStatContainerUpdated // (Final|Native|Private) // @ game+0x17806a0
	void OnRep_Slots(); // Function Icarus.Inventory.OnRep_Slots // (Final|Native|Private) // @ game+0x1780680
	void OnOwnedInventorySlotRemoved(struct FInventorySlot& Slot, int32_t Index); // Function Icarus.Inventory.OnOwnedInventorySlotRemoved // (Final|Native|Private|HasOutParms) // @ game+0x17803c0
	void OnOwnedInventorySlotChanged(struct FInventorySlot& Slot, int32_t Index); // Function Icarus.Inventory.OnOwnedInventorySlotChanged // (Final|Native|Private|HasOutParms) // @ game+0x1780520
	void OnOwnedInventorySlotAdded(struct FInventorySlot& Slot, int32_t Index); // Function Icarus.Inventory.OnOwnedInventorySlotAdded // (Final|Native|Private|HasOutParms) // @ game+0x17803c0
	void OnOwnedInventoryAllSlotsChanged(); // Function Icarus.Inventory.OnOwnedInventoryAllSlotsChanged // (Final|Native|Private) // @ game+0x17803a0
	bool ManuallyPlaceItem(struct FItemData Item, int32_t Location, bool AllowStacking); // Function Icarus.Inventory.ManuallyPlaceItem // (Final|Native|Public|BlueprintCallable) // @ game+0x177fe10
	bool ManuallyForcePlaceItem(struct FItemData Item, int32_t Location, bool AllowStacking); // Function Icarus.Inventory.ManuallyForcePlaceItem // (Final|Native|Public|BlueprintCallable) // @ game+0x177f880
	bool HasItems(); // Function Icarus.Inventory.HasItems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177f490
	int32_t HasFillableResource(enum class EIcarusResourceType Type, int32_t AmountRequired); // Function Icarus.Inventory.HasFillableResource // (Final|Native|Public|BlueprintCallable) // @ game+0x177f3c0
	struct TArray<struct FFindItemSlotInfo> GetItems(struct FGameplayTagQuery Query); // Function Icarus.Inventory.GetItems // (Final|Native|Public|BlueprintCallable) // @ game+0x177f250
	struct FItemData GetItem(int32_t Location); // Function Icarus.Inventory.GetItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177f110
	float GetInventorySpoilTickRate(); // Function Icarus.Inventory.GetInventorySpoilTickRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177f0f0
	float GetInventorySpoilTickAccumulator(); // Function Icarus.Inventory.GetInventorySpoilTickAccumulator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177f0d0
	struct FInventoryIDEnum GetInventoryID(); // Function Icarus.Inventory.GetInventoryID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177ee60
	bool GetInventoryData(struct FInventoryInfo& OutData); // Function Icarus.Inventory.GetInventoryData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x177eb40
	void ForceAddItems(struct TArray<struct FItemData>& Items); // Function Icarus.Inventory.ForceAddItems // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x177e940
	int32_t FindStaticStackTotal(struct FItemsStaticRowHandle ItemToFind); // Function Icarus.Inventory.FindStaticStackTotal // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177e880
	int32_t FindStatic(struct FItemsStaticRowHandle ItemToFind, int32_t Amount); // Function Icarus.Inventory.FindStatic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177e780
	int32_t FindStackTotalWithMatchingData(struct FItemData& ItemData); // Function Icarus.Inventory.FindStackTotalWithMatchingData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x177e0f0
	int32_t FindStackableLocation(struct FItemData Item); // Function Icarus.Inventory.FindStackableLocation // (Final|Native|Private|Const) // @ game+0x177e2b0
	struct TArray<struct FFindItemSlotInfo> FindItems(struct FItemsStaticRowHandle ItemStaticRow, int32_t RequiredAmount); // Function Icarus.Inventory.FindItems // (Final|Native|Public|BlueprintCallable) // @ game+0x177dce0
	int32_t FindFirstItem(struct FGameplayTagQuery Query); // Function Icarus.Inventory.FindFirstItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177dbf0
	int32_t FindEmptyLocation(struct FItemData Item); // Function Icarus.Inventory.FindEmptyLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177d720
	int32_t FindContainerToFill(enum class EIcarusResourceType Type); // Function Icarus.Inventory.FindContainerToFill // (Final|Native|Public|BlueprintCallable) // @ game+0x177d4d0
	struct TArray<struct FFindItemSlotInfo> FindContainers(enum class EIcarusResourceType ResourceType); // Function Icarus.Inventory.FindContainers // (Final|Native|Public|BlueprintCallable) // @ game+0x177d560
	struct TArray<struct FFindAllStacksResult> FindAllUniqueStacks(struct FItemsStaticRowHandle ItemStaticRow); // Function Icarus.Inventory.FindAllUniqueStacks // (Final|Native|Public|BlueprintCallable) // @ game+0x177d380
	int32_t Find(struct FItemData ItemToFind, int32_t Amount); // Function Icarus.Inventory.Find // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177ce60
	void Empty(); // Function Icarus.Inventory.Empty // (Final|Native|Public|BlueprintCallable) // @ game+0x177ce40
	bool ConsumeItem(int32_t Location, int32_t Amount, bool ClearItemSave); // Function Icarus.Inventory.ConsumeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x177cd30
	bool ConsumeFillableResource(int32_t Location, enum class EIcarusResourceType Type, int32_t Units); // Function Icarus.Inventory.ConsumeFillableResource // (Final|Native|Public|BlueprintCallable) // @ game+0x177cc20
	void ClearLastItemInfo(int32_t Location); // Function Icarus.Inventory.ClearLastItemInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x177cb90
	bool CheckSlotValidity(struct FItemData Item, int32_t Location); // Function Icarus.Inventory.CheckSlotValidity // (Final|Native|Private|Const) // @ game+0x177c670
	bool CheckPlacement(struct FItemData Item, int32_t Location, bool AllowStacking, int32_t Amount); // Function Icarus.Inventory.CheckPlacement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177c090
	bool CheckAutoPlacement(struct FItemData Item); // Function Icarus.Inventory.CheckAutoPlacement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177bba0
	bool CanTransferInventory(struct UInventory* Other); // Function Icarus.Inventory.CanTransferInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177bb00
	bool CanStack(struct FItemData Item, int32_t Location, int32_t Amount); // Function Icarus.Inventory.CanStack // (Final|Native|Private|Const) // @ game+0x177b570
	bool CanPlace(struct FItemData Item, int32_t Location, bool AllowStacking, int32_t Amount); // Function Icarus.Inventory.CanPlace // (Final|Native|Private|Const) // @ game+0x177af90
	bool CanInventorySpoil(); // Function Icarus.Inventory.CanInventorySpoil // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177af60
	bool CanAdd(struct FItemData Item, int32_t Location); // Function Icarus.Inventory.CanAdd // (Final|Native|Private|Const) // @ game+0x177aa40
	bool AutomaticallyPlaceItem(struct FItemData Item, int32_t& PlacedLocation, bool DropItemAtOverFlow, bool AllowStacking); // Function Icarus.Inventory.AutomaticallyPlaceItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x177a450
	int32_t AttemptPartialStackPlacement(struct FItemData Item, int32_t Count); // Function Icarus.Inventory.AttemptPartialStackPlacement // (Final|Native|Public|BlueprintCallable) // @ game+0x1779f30
	void AddSlots(int32_t SlotsToAdd, struct FTagQueriesRowHandle QueryOverride); // Function Icarus.Inventory.AddSlots // (Final|Native|Public|BlueprintCallable) // @ game+0x1779e30
};

// Class Icarus.InventoryComponent
// Size: 0x190 (Inherited: 0xe8)
struct UInventoryComponent : UTraitBehaviours {
	struct TMap<struct FInventoryIDEnum, struct UInventory*> Inventories; // 0xe8(0x50)
	struct TMap<struct FInventoryIDEnum, struct FManuallyAddedInventoryItems> ManuallyAddedItems; // 0x138(0x50)
	struct FMulticastSparseDelegate OnInventoryItemAdded; // 0x188(0x01)
	struct FMulticastSparseDelegate OnInventoryItemRemoved; // 0x189(0x01)
	struct FMulticastSparseDelegate OnInventoryItemRemovedVerbose; // 0x18a(0x01)
	struct FMulticastSparseDelegate OnBounceItem; // 0x18b(0x01)
	bool bRequiresUpdate; // 0x18c(0x01)
	char pad_18D[0x3]; // 0x18d(0x03)

	void UpdateInventorySlotCount(struct UInventory* Inventory, int32_t DesiredSlotCount); // Function Icarus.InventoryComponent.UpdateInventorySlotCount // (Final|Native|Public|BlueprintCallable) // @ game+0x17812d0
	bool TransferInventories(struct UInventoryComponent* Other); // Function Icarus.InventoryComponent.TransferInventories // (Final|Native|Public|BlueprintCallable) // @ game+0x1781190
	void StatsUpdated(); // Function Icarus.InventoryComponent.StatsUpdated // (Final|Native|Public) // @ game+0x1781170
	void ItemRemovedVerboseDelagate(struct UInventory* Inventory, int32_t Slot, struct FItemData& ItemData); // Function Icarus.InventoryComponent.ItemRemovedVerboseDelagate // (Final|Native|Public|HasOutParms) // @ game+0x177f660
	void ItemRemovedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.InventoryComponent.ItemRemovedDelagate // (Final|Native|Public) // @ game+0x177f590
	void ItemAddedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.InventoryComponent.ItemAddedDelagate // (Final|Native|Public) // @ game+0x177f4c0
	int32_t GetTotalWeight(); // Function Icarus.InventoryComponent.GetTotalWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x177f390
	bool GetInventoryInfoData(struct FInventoryInfoRowHandle InventoryInfoRowHandle, struct FInventoryInfo& OutData); // Function Icarus.InventoryComponent.GetInventoryInfoData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x177ef20
	struct TArray<struct FInventoryIDEnum> GetInventoryIds(); // Function Icarus.InventoryComponent.GetInventoryIds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177eea0
	bool GetInventoryData(struct FInventoryData& OutData); // Function Icarus.InventoryComponent.GetInventoryData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x177ec90
	struct UInventory* GetInventory(struct FInventoryIDEnum InventoryID); // Function Icarus.InventoryComponent.GetInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177ea90
	int32_t FindItemsTotal(struct FItemsStaticRowHandle ItemsStaticRowHandle, struct TArray<struct FStatsEnum> RequiredStats); // Function Icarus.InventoryComponent.FindItemsTotal // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177df80
	struct TArray<struct FFindItemSlotInfo> FindItems(struct FItemsStaticRowHandle ItemsStaticRowHandle, int32_t Count); // Function Icarus.InventoryComponent.FindItems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x177de30
	struct TArray<struct FFindItemSlotInfo> FindContainers(enum class EIcarusResourceType ResourceType); // Function Icarus.InventoryComponent.FindContainers // (Final|Native|Public|BlueprintCallable) // @ game+0x177d640
	void CheckInventorySlotStats(); // Function Icarus.InventoryComponent.CheckInventorySlotStats // (Final|Native|Public|BlueprintCallable) // @ game+0x177c070
};

// Class Icarus.InventoryContainerComponent
// Size: 0xe8 (Inherited: 0xd0)
struct UInventoryContainerComponent : UTraitComponent {
	struct FMulticastInlineDelegate OnInventoryAvailable; // 0xd0(0x10)
	int32_t InventoryInstanceId; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)

	void OnInventoryManagerUpdated(); // Function Icarus.InventoryContainerComponent.OnInventoryManagerUpdated // (Final|Native|Private) // @ game+0x178a350
	void OnInventoryIdReplicated(); // Function Icarus.InventoryContainerComponent.OnInventoryIdReplicated // (Final|Native|Private) // @ game+0x178a350
	bool HasLinkedInventory_Fast(); // Function Icarus.InventoryContainerComponent.HasLinkedInventory_Fast // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1788ce0
	bool GetInventoryContainerData(struct FInventoryContainerData& OutData); // Function Icarus.InventoryContainerComponent.GetInventoryContainerData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1788640
	bool GetInventory(struct UInventory*& Inventory); // Function Icarus.InventoryContainerComponent.GetInventory // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17885a0
};

// Class Icarus.InventoryContainerLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryContainerLibrary : URowLibrary {

	struct FInventoryContainerRowHandle StructToRowHandle(struct FInventoryContainerEnum EnumValue); // Function Icarus.InventoryContainerLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178ab50
	struct UE4::FName StructToName(struct FInventoryContainerEnum EnumValue); // Function Icarus.InventoryContainerLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a970
	int32_t StructToInt(struct FInventoryContainerEnum EnumValue); // Function Icarus.InventoryContainerLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a790
	struct FInventoryContainerEnum RowHandleToStruct(struct FInventoryContainerRowHandle RowHandle); // Function Icarus.InventoryContainerLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a550
	void RemoveRowFromInventoryContainerTable(struct UE4::FName Name); // Function Icarus.InventoryContainerLibrary.RemoveRowFromInventoryContainerTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178a3d0
	void RefreshConstants(); // Function Icarus.InventoryContainerLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x178a370
	int32_t NumRows(); // Function Icarus.InventoryContainerLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a2a0
	bool NotEqual_EnumName(struct FInventoryContainerEnum A, struct UE4::FName B); // Function Icarus.InventoryContainerLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789fd0
	bool NotEqual_EnumEnum(struct FInventoryContainerEnum A, struct FInventoryContainerEnum B); // Function Icarus.InventoryContainerLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789d00
	struct FInventoryContainerEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.InventoryContainerLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789b50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.InventoryContainerLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17899a0
	struct FInventoryContainerRowHandle MakeLiteralInventoryContainer(struct FInventoryContainerRowHandle RowHandle); // Function Icarus.InventoryContainerLibrary.MakeLiteralInventoryContainer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789730
	struct FInventoryContainerRowHandle MakeInventoryContainerFromIndex(int32_t Index); // Function Icarus.InventoryContainerLibrary.MakeInventoryContainerFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789340
	struct FInventoryContainerEnum MakeInventoryContainerEnum(struct FInventoryContainerEnum Enum); // Function Icarus.InventoryContainerLibrary.MakeInventoryContainerEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17892c0
	struct FInventoryContainerRowHandle MakeInventoryContainer(struct UE4::FName RowName); // Function Icarus.InventoryContainerLibrary.MakeInventoryContainer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789220
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.InventoryContainerLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1789070
	struct FInventoryContainerEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryContainerLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1788ec0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.InventoryContainerLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1788d10
	void GetInventoryContainerStruct(struct FInventoryContainerRowHandle RowHandle, struct FInventoryContainerData& InventoryContainer, enum class EValid& Paths); // Function Icarus.InventoryContainerLibrary.GetInventoryContainerStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17887d0
	bool EqualEqual_FInventoryContainerRowHandleFInventoryContainerRowHandle(struct FInventoryContainerRowHandle RowHandleA, struct FInventoryContainerRowHandle RowHandleB); // Function Icarus.InventoryContainerLibrary.EqualEqual_FInventoryContainerRowHandleFInventoryContainerRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17881e0
	bool EqualEqual_EnumEnum(struct FInventoryContainerEnum A, struct FInventoryContainerEnum B); // Function Icarus.InventoryContainerLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1787f10
	struct FInventoryContainerRowHandle CastToInventoryContainerRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.InventoryContainerLibrary.CastToInventoryContainerRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1787bb0
	void BreakInventoryContainerEnum(struct FInventoryContainerEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.InventoryContainerLibrary.BreakInventoryContainerEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1787790
	void AddRowToInventoryContainerTable(struct UE4::FName Name, struct FInventoryContainerData Data, struct FInventoryContainerRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.InventoryContainerLibrary.AddRowToInventoryContainerTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1786fa0
};

// Class Icarus.InventoryContainerManager
// Size: 0x2d0 (Inherited: 0x2b0)
struct AInventoryContainerManager : AIcarusActor {
	struct TArray<struct UInventory*> Inventories; // 0x2b0(0x10)
	char pad_2C0[0x10]; // 0x2c0(0x10)

	void OnInventoriesReplicated(); // Function Icarus.InventoryContainerManager.OnInventoriesReplicated // (Final|Native|Private) // @ game+0x178a330
};

// Class Icarus.InventoryContainerTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryContainerTable : UIcarusDataTable {
};

// Class Icarus.InventoryIDLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryIDLibrary : URowLibrary {

	struct FInventoryIDRowHandle StructToRowHandle(struct FInventoryIDEnum EnumValue); // Function Icarus.InventoryIDLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178ac00
	struct UE4::FName StructToName(struct FInventoryIDEnum EnumValue); // Function Icarus.InventoryIDLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178aa10
	int32_t StructToInt(struct FInventoryIDEnum EnumValue); // Function Icarus.InventoryIDLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a830
	struct FInventoryIDEnum RowHandleToStruct(struct FInventoryIDRowHandle RowHandle); // Function Icarus.InventoryIDLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a610
	void RemoveRowFromInventoryIDTable(struct UE4::FName Name); // Function Icarus.InventoryIDLibrary.RemoveRowFromInventoryIDTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178a450
	void RefreshConstants(); // Function Icarus.InventoryIDLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x178a390
	int32_t NumRows(); // Function Icarus.InventoryIDLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a2d0
	bool NotEqual_EnumName(struct FInventoryIDEnum A, struct UE4::FName B); // Function Icarus.InventoryIDLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a0c0
	bool NotEqual_EnumEnum(struct FInventoryIDEnum A, struct FInventoryIDEnum B); // Function Icarus.InventoryIDLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789df0
	struct FInventoryIDEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.InventoryIDLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789be0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.InventoryIDLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1789a30
	struct FInventoryIDRowHandle MakeLiteralInventoryID(struct FInventoryIDRowHandle RowHandle); // Function Icarus.InventoryIDLibrary.MakeLiteralInventoryID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789800
	struct FInventoryIDRowHandle MakeInventoryIDFromIndex(int32_t Index); // Function Icarus.InventoryIDLibrary.MakeInventoryIDFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17894f0
	struct FInventoryIDEnum MakeInventoryIDEnum(struct FInventoryIDEnum Enum); // Function Icarus.InventoryIDLibrary.MakeInventoryIDEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789470
	struct FInventoryIDRowHandle MakeInventoryID(struct UE4::FName RowName); // Function Icarus.InventoryIDLibrary.MakeInventoryID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17893d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.InventoryIDLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1789100
	struct FInventoryIDEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryIDLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1788f50
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.InventoryIDLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1788da0
	void GetInventoryIDStruct(struct FInventoryIDRowHandle RowHandle, struct FInventoryID& InventoryID, enum class EValid& Paths); // Function Icarus.InventoryIDLibrary.GetInventoryIDStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1788960
	bool EqualEqual_FInventoryIDRowHandleFInventoryIDRowHandle(struct FInventoryIDRowHandle RowHandleA, struct FInventoryIDRowHandle RowHandleB); // Function Icarus.InventoryIDLibrary.EqualEqual_FInventoryIDRowHandleFInventoryIDRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1788320
	bool EqualEqual_EnumEnum(struct FInventoryIDEnum A, struct FInventoryIDEnum B); // Function Icarus.InventoryIDLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1788000
	struct FInventoryIDRowHandle CastToInventoryIDRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.InventoryIDLibrary.CastToInventoryIDRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1787cd0
	void BreakInventoryIDEnum(struct FInventoryIDEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.InventoryIDLibrary.BreakInventoryIDEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17878f0
	void AddRowToInventoryIDTable(struct UE4::FName Name, struct FInventoryID Data, struct FInventoryIDRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.InventoryIDLibrary.AddRowToInventoryIDTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17871d0
};

// Class Icarus.InventoryIDTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryIDTable : UIcarusDataTable {
};

// Class Icarus.InventoryInfoLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryInfoLibrary : URowLibrary {

	struct FInventoryInfoRowHandle StructToRowHandle(struct FInventoryInfoEnum EnumValue); // Function Icarus.InventoryInfoLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178acb0
	struct UE4::FName StructToName(struct FInventoryInfoEnum EnumValue); // Function Icarus.InventoryInfoLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178aab0
	int32_t StructToInt(struct FInventoryInfoEnum EnumValue); // Function Icarus.InventoryInfoLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a8d0
	struct FInventoryInfoEnum RowHandleToStruct(struct FInventoryInfoRowHandle RowHandle); // Function Icarus.InventoryInfoLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a6d0
	void RemoveRowFromInventoryInfoTable(struct UE4::FName Name); // Function Icarus.InventoryInfoLibrary.RemoveRowFromInventoryInfoTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178a4d0
	void RefreshConstants(); // Function Icarus.InventoryInfoLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x178a3b0
	int32_t NumRows(); // Function Icarus.InventoryInfoLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a300
	bool NotEqual_EnumName(struct FInventoryInfoEnum A, struct UE4::FName B); // Function Icarus.InventoryInfoLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178a1b0
	bool NotEqual_EnumEnum(struct FInventoryInfoEnum A, struct FInventoryInfoEnum B); // Function Icarus.InventoryInfoLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789ee0
	struct FInventoryInfoEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.InventoryInfoLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789c70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.InventoryInfoLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1789ac0
	struct FInventoryInfoRowHandle MakeLiteralInventoryInfo(struct FInventoryInfoRowHandle RowHandle); // Function Icarus.InventoryInfoLibrary.MakeLiteralInventoryInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17898d0
	struct FInventoryInfoRowHandle MakeInventoryInfoFromIndex(int32_t Index); // Function Icarus.InventoryInfoLibrary.MakeInventoryInfoFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17896a0
	struct FInventoryInfoEnum MakeInventoryInfoEnum(struct FInventoryInfoEnum Enum); // Function Icarus.InventoryInfoLibrary.MakeInventoryInfoEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789620
	struct FInventoryInfoRowHandle MakeInventoryInfo(struct UE4::FName RowName); // Function Icarus.InventoryInfoLibrary.MakeInventoryInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1789580
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.InventoryInfoLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1789190
	struct FInventoryInfoEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryInfoLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1788fe0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.InventoryInfoLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1788e30
	void GetInventoryInfoStruct(struct FInventoryInfoRowHandle RowHandle, struct FInventoryInfo& InventoryInfo, enum class EValid& Paths); // Function Icarus.InventoryInfoLibrary.GetInventoryInfoStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1788af0
	bool EqualEqual_FInventoryInfoRowHandleFInventoryInfoRowHandle(struct FInventoryInfoRowHandle RowHandleA, struct FInventoryInfoRowHandle RowHandleB); // Function Icarus.InventoryInfoLibrary.EqualEqual_FInventoryInfoRowHandleFInventoryInfoRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1788460
	bool EqualEqual_EnumEnum(struct FInventoryInfoEnum A, struct FInventoryInfoEnum B); // Function Icarus.InventoryInfoLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17880f0
	struct FInventoryInfoRowHandle CastToInventoryInfoRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.InventoryInfoLibrary.CastToInventoryInfoRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1787df0
	void BreakInventoryInfoEnum(struct FInventoryInfoEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.InventoryInfoLibrary.BreakInventoryInfoEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1787a50
	void AddRowToInventoryInfoTable(struct UE4::FName Name, struct FInventoryInfo Data, struct FInventoryInfoRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.InventoryInfoLibrary.AddRowToInventoryInfoTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17873e0
};

// Class Icarus.InventoryInfoTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryInfoTable : UIcarusDataTable {
};

// Class Icarus.InventoryItemLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryItemLibrary : UBlueprintFunctionLibrary {

	struct FItemData VerifyItem(struct FItemData ItemData); // Function Icarus.InventoryItemLibrary.VerifyItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17992a0
	void SplitInventoryItemStack(struct UInventory* Inventory, int32_t ItemLocation, struct AIcarusPlayerCharacter* FromPlayer); // Function Icarus.InventoryItemLibrary.SplitInventoryItemStack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17991a0
	void SetItemPropertyValue(enum class EDynamicItemProperties Property, int32_t NewValue, struct FItemData& Item, enum class ESetDataSuccess& Paths); // Function Icarus.InventoryItemLibrary.SetItemPropertyValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1798f30
	void ReplenishItemFillable(struct FItemData& Item); // Function Icarus.InventoryItemLibrary.ReplenishItemFillable // (Final|Native|Static|Public|HasOutParms) // @ game+0x1798d90
	bool RemoveItemProperty(enum class EDynamicItemProperties Property, struct FItemData& Item); // Function Icarus.InventoryItemLibrary.RemoveItemProperty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1798bb0
	bool ItemMatchesQuery(struct FItemData& Item, struct FTagQueriesRowHandle Query); // Function Icarus.InventoryItemLibrary.ItemMatchesQuery // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17989a0
	void ItemDataValid(struct FItemData& Item, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.ItemDataValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17987b0
	bool IsSameItem(struct FItemData& Item1, struct FItemData& Item2); // Function Icarus.InventoryItemLibrary.IsSameItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1798480
	bool IsCustomItem(struct FItemData& Item); // Function Icarus.InventoryItemLibrary.IsCustomItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17982e0
	bool HasSecondaryItemType(struct FItemData Item, enum class ESecondaryItemTypes ItemType); // Function Icarus.InventoryItemLibrary.HasSecondaryItemType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1797de0
	bool HasPrimaryItemType(struct FItemData Item, enum class EPrimaryItemTypes ItemType); // Function Icarus.InventoryItemLibrary.HasPrimaryItemType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17978e0
	void GetWeightData(struct FItemData& Item, struct FWeightData& WeightData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetWeightData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1797610
	void GetUsableData(struct FItemData& Item, struct FUsableData& UsableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetUsableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1797330
	void GetTransmutableData(struct FItemData& Item, struct FTransmutableData& Transmutable, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetTransmutableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1797050
	void GetToolDamage(struct FItemData& Item, struct FToolDamage& ToolDamageData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetToolDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1796dc0
	void GetStaticItemData(struct FItemData& Item, struct FItemStaticData& StaticData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetStaticItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1796b30
	int32_t GetStat(struct FItemData Item, struct FStatsEnum Stat); // Function Icarus.InventoryItemLibrary.GetStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1796610
	void GetSlotableData(struct FItemData& Item, struct FSlotableData& Slotable, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetSlotableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1796310
	void GetRocketableData(struct FItemData& Item, struct FRocketableData& Rocketable, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetRocketableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1795ff0
	struct FRefundResult GetRefundResult(struct FItemsStaticRowHandle& ItemType, int32_t StackSize); // Function Icarus.InventoryItemLibrary.GetRefundResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1795ec0
	void GetRecipesAndFiltersForRecipeSet(struct FRecipeSetsRowHandle RecipeSetRowHandle, struct TArray<struct FProcessorRecipeResult>& Recipes, struct TArray<struct FItemClassificationsIconsRowHandle>& ItemFilters); // Function Icarus.InventoryItemLibrary.GetRecipesAndFiltersForRecipeSet // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1795d20
	void GetRangedWeaponData(struct FItemData& Item, struct FRangedWeaponData& RangedWeaponData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetRangedWeaponData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17959b0
	void GetProjectileDamage(struct FItemData& Item, struct AIcarusPlayerCharacter* Player, int32_t& ProjectileDamage); // Function Icarus.InventoryItemLibrary.GetProjectileDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1795780
	void GetProcessingData(struct FItemData& Item, struct FProcessingData& ProcessingData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetProcessingData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1795490
	void GetMeshableData(struct FItemData& Item, struct FMeshableData& MeshableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetMeshableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1795210
	int32_t GetItemWeight(struct FItemData& ItemData, struct AActor* ItemOwner); // Function Icarus.InventoryItemLibrary.GetItemWeight // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1794db0
	void GetItemTypes(struct FItemData Item, struct TArray<enum class EPrimaryItemTypes>& PrimaryTypes, struct TArray<enum class ESecondaryItemTypes>& SecondaryTypes); // Function Icarus.InventoryItemLibrary.GetItemTypes // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1794820
	struct FGameplayTagContainer GetItemTags(struct FItemData& Item); // Function Icarus.InventoryItemLibrary.GetItemTags // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1794650
	void GetItemStats(struct FItemData& Item, struct TMap<struct FStatsEnum, int32_t>& Stats, bool GetVirtual); // Function Icarus.InventoryItemLibrary.GetItemStats // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1794390
	void GetItemPropertyValue(enum class EDynamicItemProperties Property, struct FItemData& Item, int32_t& IntValue, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetItemPropertyValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1794100
	void GetItemProperty(enum class EDynamicItemProperties Property, struct FItemData& Item, struct FItemDynamicData& DynamicData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetItemProperty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1793e40
	struct FString GetItemID(struct FItemData& Item); // Function Icarus.InventoryItemLibrary.GetItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1793c60
	void GetItemableData(struct FItemData& Item, struct FItemableData& ItemableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetItemableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1794f90
	void GetInventoryInfoData(struct FItemData& Item, struct TArray<struct FInventoryInfo>& InventoryInfos, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetInventoryInfoData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1793990
	void GetInventoryData(struct FItemData& Item, struct FInventoryData& Inventory, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetInventoryData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1793700
	void GetInventoryContainerData(struct FItemData& Item, struct FInventoryContainerData& InventoryContainerData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetInventoryContainerData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1793470
	void GetInteractableData(struct FItemData& Item, struct FInteractableData& IntectableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetInteractableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1793110
	void GetHighlightableData(struct FItemData& Item, struct FHighlightableData& HighlightableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetHighlightableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1792dd0
	void GetHeldItemGrantedStats(struct FItemData Item, struct TMap<struct FStatsEnum, int32_t>& Stats); // Function Icarus.InventoryItemLibrary.GetHeldItemGrantedStats // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1792850
	void GetFocusableData(struct FItemData& Item, struct FFocusableData& FocusableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetFocusableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17925c0
	void GetFocusableAttachmentData(struct FItemData& Item, struct FItemAttachmentData& AttachmentData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetFocusableAttachmentData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1792300
	void GetFocusableAnimationData(struct FItemData& Item, struct FItemAnimationData& AnimationData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetFocusableAnimationData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1792080
	void GetFloatableData(struct FItemData& Item, struct FFloatableData& FloatableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetFloatableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1791db0
	void GetFirearmData(struct FItemData& Item, struct FFirearmData& FirearmData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetFirearmData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1791b20
	void GetFillableData(struct FItemData& Item, struct FFillableData& FillableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetFillableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1791860
	void GetEquippableData(struct FItemData& Item, struct FEquippableData& EquippableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetEquippableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17915d0
	void GetEnergyData(struct FItemData& Item, struct FEnergyData& EnergyData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetEnergyData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1791350
	void GetDurableData(struct FItemData& Item, struct FDurableData& DurableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetDurableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1791090
	void GetDeployableData(struct FItemData& Item, struct FDeployableData& DeployableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetDeployableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1790d40
	void GetDecayableData(struct FItemData& Item, struct FDecayableData& Decayable, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetDecayableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1790aa0
	void GetConsumableData(struct FItemData& Item, struct FConsumableData& ConsumableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetConsumableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1790770
	void GetCombustibleData(struct FItemData& Item, struct FCombustibleData& CombustibleData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetCombustibleData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17904d0
	void GetBuildableData(struct FItemData& Item, struct FBuildableData& BuildableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetBuildableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17900f0
	void GetBallisticData(struct FItemData& Item, struct FBallisticData& BallisiticData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetBallisticData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178fde0
	struct FArmourSetsEnum GetArmourSet(struct FItemData& Item); // Function Icarus.InventoryItemLibrary.GetArmourSet // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178fc30
	void GetArmourData(struct FItemData& Item, struct FArmourData& ArmourData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetArmourData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178f9a0
	void GetAmmoTypeData(struct FItemData& Item, struct FAmmoTypeData& AmmoTypeData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetAmmoTypeData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178f6b0
	void GetActionableData(struct FItemData& Item, struct FActionableData& ActionableData, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.GetActionableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178f390
	int32_t GenerateRewardStackSize(struct AIcarusPlayerCharacter* PlayerCharacter, struct FItemRewardEntry& ItemReward, float AdditionalMultiplier); // Function Icarus.InventoryItemLibrary.GenerateRewardStackSize // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178f240
	struct FItemData GenerateItemisedRocket(struct FString& Name); // Function Icarus.InventoryItemLibrary.GenerateItemisedRocket // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178f0f0
	struct FProcessorRecipesRowHandle FindCraftingRecipe(struct FItemsStaticRowHandle& ItemsStaticRowHandle, enum class EDataValid& Paths); // Function Icarus.InventoryItemLibrary.FindCraftingRecipe // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178efd0
	bool EstablishInventoryLink(struct AIcarusItem* Item, struct UInventory* Inventory, int32_t Location); // Function Icarus.InventoryItemLibrary.EstablishInventoryLink // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178eed0
	bool Equals(struct FItemData& Item1, struct FItemData& Item2); // Function Icarus.InventoryItemLibrary.Equals // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178eba0
	void DropInventoryItemStack(struct UInventory* Inventory, int32_t ItemLocation, struct AIcarusPlayerCharacter* FromPlayer); // Function Icarus.InventoryItemLibrary.DropInventoryItemStack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178eaa0
	void DestroyInventoryItemStack(struct UInventory* Inventory, int32_t ItemLocation, struct AIcarusPlayerController* Player, bool bRefundPartCost); // Function Icarus.InventoryItemLibrary.DestroyInventoryItemStack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178e950
	struct FItemData CreateItem(struct FItemData ItemData, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.CreateItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178e3a0
	struct FItemData CreateCustomItem(struct FItemData ItemData, struct TArray<struct FIcarusStatReplicated> AdditionalStats, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.CreateCustomItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178dd00
	struct FMetaItem ConvertToMetaItem(struct FItemData& Item); // Function Icarus.InventoryItemLibrary.ConvertToMetaItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178da40
	struct FItemData ConvertToItem(struct FMetaItem& MetaItem, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.ConvertToItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178d870
	bool ContainerItemLeak(struct UInventory* Inventory, int32_t InventoryLocation); // Function Icarus.InventoryItemLibrary.ContainerItemLeak // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178d7a0
	bool ContainerCurrentlyAcceptsType(struct AIcarusActor* Actor, enum class EIcarusResourceType Type); // Function Icarus.InventoryItemLibrary.ContainerCurrentlyAcceptsType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178d6d0
	bool ContainerActorLeak(struct AIcarusActor* Actor); // Function Icarus.InventoryItemLibrary.ContainerActorLeak // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178d640
	struct TArray<struct FFindAllStacksResult> CombineFindAllStackResults(struct TArray<struct FFindAllStacksResult>& ResultsA, struct TArray<struct FFindAllStacksResult>& ResultsB); // Function Icarus.InventoryItemLibrary.CombineFindAllStackResults // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178d440
	void CleanupDestroyedItem(struct FItemData& ItemData, enum class EItemDestructionContext DestructionContext, struct AActor* ItemDestructionSource, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.CleanupDestroyedItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178d1e0
	bool CanGetReward(struct AIcarusPlayerCharacter* PlayerCharacter, struct FItemRewardEntry& ItemReward); // Function Icarus.InventoryItemLibrary.CanGetReward // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178d0f0
	bool CanDropItemFromInventory(struct UInventory* Inventory, int32_t ItemLocation); // Function Icarus.InventoryItemLibrary.CanDropItemFromInventory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x178d020
	bool CanDropItem(struct FItemData& ItemData); // Function Icarus.InventoryItemLibrary.CanDropItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x178ce80
	bool CanCombineItems(struct FItemData& Item1, struct FItemData& Item2); // Function Icarus.InventoryItemLibrary.CanCombineItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x178cb50
	int32_t AttemptToFillItemsInInventory(struct UInventory* Inventory, enum class EIcarusResourceType Type, int32_t Units); // Function Icarus.InventoryItemLibrary.AttemptToFillItemsInInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178ca50
	int32_t AddContainerItemCapacity(struct UInventory* Inventory, int32_t InventoryLocation, enum class EIcarusResourceType Resource, int32_t Units); // Function Icarus.InventoryItemLibrary.AddContainerItemCapacity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178c910
	int32_t AddContainerActorCapacity(struct AIcarusActor* Actor, enum class EIcarusResourceType Resource, int32_t Units); // Function Icarus.InventoryItemLibrary.AddContainerActorCapacity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x178c810
};

// Class Icarus.InventoryLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryLibrary : URowLibrary {

	struct FInventoryRowHandle StructToRowHandle(struct FInventoryEnum EnumValue); // Function Icarus.InventoryLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f8d0
	struct UE4::FName StructToName(struct FInventoryEnum EnumValue); // Function Icarus.InventoryLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f6f0
	int32_t StructToInt(struct FInventoryEnum EnumValue); // Function Icarus.InventoryLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f510
	struct FInventoryEnum RowHandleToStruct(struct FInventoryRowHandle RowHandle); // Function Icarus.InventoryLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f240
	void RemoveRowFromInventoryTable(struct UE4::FName Name); // Function Icarus.InventoryLibrary.RemoveRowFromInventoryTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x179f0c0
	void RefreshConstants(); // Function Icarus.InventoryLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x179f060
	int32_t NumRows(); // Function Icarus.InventoryLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179efd0
	bool NotEqual_EnumName(struct FInventoryEnum A, struct UE4::FName B); // Function Icarus.InventoryLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179ed00
	bool NotEqual_EnumEnum(struct FInventoryEnum A, struct FInventoryEnum B); // Function Icarus.InventoryLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179ea30
	struct FInventoryEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.InventoryLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e880
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.InventoryLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x179e6d0
	struct FInventoryRowHandle MakeLiteralInventory(struct FInventoryRowHandle RowHandle); // Function Icarus.InventoryLibrary.MakeLiteralInventory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e460
	struct FInventoryRowHandle MakeInventoryFromIndex(int32_t Index); // Function Icarus.InventoryLibrary.MakeInventoryFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e070
	struct FInventoryEnum MakeInventoryEnum(struct FInventoryEnum Enum); // Function Icarus.InventoryLibrary.MakeInventoryEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179dff0
	struct FInventoryRowHandle MakeInventory(struct UE4::FName RowName); // Function Icarus.InventoryLibrary.MakeInventory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179df50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.InventoryLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x179dda0
	struct FInventoryEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179dbf0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.InventoryLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x179da40
	void GetInventoryStruct(struct FInventoryRowHandle RowHandle, struct FInventoryData& Inventory, enum class EValid& Paths); // Function Icarus.InventoryLibrary.GetInventoryStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179d450
	bool EqualEqual_FInventoryRowHandleFInventoryRowHandle(struct FInventoryRowHandle RowHandleA, struct FInventoryRowHandle RowHandleB); // Function Icarus.InventoryLibrary.EqualEqual_FInventoryRowHandleFInventoryRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179d090
	bool EqualEqual_EnumEnum(struct FInventoryEnum A, struct FInventoryEnum B); // Function Icarus.InventoryLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179cdc0
	struct FInventoryRowHandle CastToInventoryRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.InventoryLibrary.CastToInventoryRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179ca60
	void BreakInventoryEnum(struct FInventoryEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.InventoryLibrary.BreakInventoryEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x179c640
	void AddRowToInventoryTable(struct UE4::FName Name, struct FInventoryData Data, struct FInventoryRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.InventoryLibrary.AddRowToInventoryTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179bf40
};

// Class Icarus.InventoryTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryTable : UIcarusDataTable {
};

// Class Icarus.IRGN_AlwaysRelevant_ForConnection
// Size: 0x298 (Inherited: 0x50)
struct UIRGN_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	char pad_50[0x18]; // 0x50(0x18)
	struct TArray<struct FAlwaysRelevantActorInfo> PastRelevantActors; // 0x68(0x10)
	char pad_78[0x210]; // 0x78(0x210)
	struct AActor* LastPawn; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class Icarus.IRGN_PlayerState_FrequencyLimited
// Size: 0x80 (Inherited: 0x50)
struct UIRGN_PlayerState_FrequencyLimited : UReplicationGraphNode {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Icarus.ItemableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UItemableComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnWorldPickup; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	int32_t Stack; // 0xd4(0x04)

	void SetStack(int32_t NewStack); // Function Icarus.ItemableComponent.SetStack // (Final|Native|Public|BlueprintCallable) // @ game+0x179f480
	bool GetItemableData(struct FItemableData& OutData); // Function Icarus.ItemableComponent.GetItemableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x179d760
};

// Class Icarus.ItemableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemableLibrary : URowLibrary {

	struct FItemableRowHandle StructToRowHandle(struct FItemableEnum EnumValue); // Function Icarus.ItemableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179fa30
	struct UE4::FName StructToName(struct FItemableEnum EnumValue); // Function Icarus.ItemableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f830
	int32_t StructToInt(struct FItemableEnum EnumValue); // Function Icarus.ItemableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f650
	struct FItemableEnum RowHandleToStruct(struct FItemableRowHandle RowHandle); // Function Icarus.ItemableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f3c0
	void RemoveRowFromItemableTable(struct UE4::FName Name); // Function Icarus.ItemableLibrary.RemoveRowFromItemableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x179f1c0
	void RefreshConstants(); // Function Icarus.ItemableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x179f0a0
	int32_t NumRows(); // Function Icarus.ItemableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f030
	bool NotEqual_EnumName(struct FItemableEnum A, struct UE4::FName B); // Function Icarus.ItemableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179eee0
	bool NotEqual_EnumEnum(struct FItemableEnum A, struct FItemableEnum B); // Function Icarus.ItemableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179ec10
	struct FItemableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e9a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x179e7f0
	struct FItemableRowHandle MakeLiteralItemable(struct FItemableRowHandle RowHandle); // Function Icarus.ItemableLibrary.MakeLiteralItemable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e600
	struct FItemableRowHandle MakeItemableFromIndex(int32_t Index); // Function Icarus.ItemableLibrary.MakeItemableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e3d0
	struct FItemableEnum MakeItemableEnum(struct FItemableEnum Enum); // Function Icarus.ItemableLibrary.MakeItemableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e350
	struct FItemableRowHandle MakeItemable(struct UE4::FName RowName); // Function Icarus.ItemableLibrary.MakeItemable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e2b0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x179dec0
	struct FItemableEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179dd10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x179db60
	void GetItemableStruct(struct FItemableRowHandle RowHandle, struct FItemableData& Itemable, enum class EValid& Paths); // Function Icarus.ItemableLibrary.GetItemableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179d8c0
	bool EqualEqual_FItemableRowHandleFItemableRowHandle(struct FItemableRowHandle RowHandleA, struct FItemableRowHandle RowHandleB); // Function Icarus.ItemableLibrary.EqualEqual_FItemableRowHandleFItemableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179d310
	bool EqualEqual_EnumEnum(struct FItemableEnum A, struct FItemableEnum B); // Function Icarus.ItemableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179cfa0
	struct FItemableRowHandle CastToItemableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemableLibrary.CastToItemableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179cca0
	void BreakItemableEnum(struct FItemableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemableLibrary.BreakItemableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x179c900
	void AddRowToItemableTable(struct UE4::FName Name, struct FItemableData Data, struct FItemableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemableLibrary.AddRowToItemableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179c480
};

// Class Icarus.ItemableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemableTable : UIcarusDataTable {
};

// Class Icarus.ItemAnimationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemAnimationsLibrary : URowLibrary {

	struct FItemAnimationsRowHandle StructToRowHandle(struct FItemAnimationsEnum EnumValue); // Function Icarus.ItemAnimationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f980
	struct UE4::FName StructToName(struct FItemAnimationsEnum EnumValue); // Function Icarus.ItemAnimationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f790
	int32_t StructToInt(struct FItemAnimationsEnum EnumValue); // Function Icarus.ItemAnimationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f5b0
	struct FItemAnimationsEnum RowHandleToStruct(struct FItemAnimationsRowHandle RowHandle); // Function Icarus.ItemAnimationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f300
	void RemoveRowFromItemAnimationsTable(struct UE4::FName Name); // Function Icarus.ItemAnimationsLibrary.RemoveRowFromItemAnimationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x179f140
	void RefreshConstants(); // Function Icarus.ItemAnimationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x179f080
	int32_t NumRows(); // Function Icarus.ItemAnimationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179f000
	bool NotEqual_EnumName(struct FItemAnimationsEnum A, struct UE4::FName B); // Function Icarus.ItemAnimationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179edf0
	bool NotEqual_EnumEnum(struct FItemAnimationsEnum A, struct FItemAnimationsEnum B); // Function Icarus.ItemAnimationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179eb20
	struct FItemAnimationsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemAnimationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e910
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemAnimationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x179e760
	struct FItemAnimationsRowHandle MakeLiteralItemAnimations(struct FItemAnimationsRowHandle RowHandle); // Function Icarus.ItemAnimationsLibrary.MakeLiteralItemAnimations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e530
	struct FItemAnimationsRowHandle MakeItemAnimationsFromIndex(int32_t Index); // Function Icarus.ItemAnimationsLibrary.MakeItemAnimationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e220
	struct FItemAnimationsEnum MakeItemAnimationsEnum(struct FItemAnimationsEnum Enum); // Function Icarus.ItemAnimationsLibrary.MakeItemAnimationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e1a0
	struct FItemAnimationsRowHandle MakeItemAnimations(struct UE4::FName RowName); // Function Icarus.ItemAnimationsLibrary.MakeItemAnimations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179e100
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemAnimationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x179de30
	struct FItemAnimationsEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemAnimationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179dc80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemAnimationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x179dad0
	void GetItemAnimationsStruct(struct FItemAnimationsRowHandle RowHandle, struct FItemAnimationData& ItemAnimations, enum class EValid& Paths); // Function Icarus.ItemAnimationsLibrary.GetItemAnimationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179d5e0
	bool EqualEqual_FItemAnimationsRowHandleFItemAnimationsRowHandle(struct FItemAnimationsRowHandle RowHandleA, struct FItemAnimationsRowHandle RowHandleB); // Function Icarus.ItemAnimationsLibrary.EqualEqual_FItemAnimationsRowHandleFItemAnimationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179d1d0
	bool EqualEqual_EnumEnum(struct FItemAnimationsEnum A, struct FItemAnimationsEnum B); // Function Icarus.ItemAnimationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x179ceb0
	struct FItemAnimationsRowHandle CastToItemAnimationsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemAnimationsLibrary.CastToItemAnimationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179cb80
	void BreakItemAnimationsEnum(struct FItemAnimationsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemAnimationsLibrary.BreakItemAnimationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x179c7a0
	void AddRowToItemAnimationsTable(struct UE4::FName Name, struct FItemAnimationData Data, struct FItemAnimationsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemAnimationsLibrary.AddRowToItemAnimationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x179c1b0
};

// Class Icarus.ItemAnimationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemAnimationsTable : UIcarusDataTable {
};

// Class Icarus.ItemAttachmentLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemAttachmentLibrary : URowLibrary {

	struct FItemAttachmentRowHandle StructToRowHandle(struct FItemAttachmentEnum EnumValue); // Function Icarus.ItemAttachmentLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a61b0
	struct UE4::FName StructToName(struct FItemAttachmentEnum EnumValue); // Function Icarus.ItemAttachmentLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5fd0
	int32_t StructToInt(struct FItemAttachmentEnum EnumValue); // Function Icarus.ItemAttachmentLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5df0
	struct FItemAttachmentEnum RowHandleToStruct(struct FItemAttachmentRowHandle RowHandle); // Function Icarus.ItemAttachmentLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5bb0
	void RemoveRowFromItemAttachmentTable(struct UE4::FName Name); // Function Icarus.ItemAttachmentLibrary.RemoveRowFromItemAttachmentTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a5a30
	void RefreshConstants(); // Function Icarus.ItemAttachmentLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17a59d0
	int32_t NumRows(); // Function Icarus.ItemAttachmentLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5940
	bool NotEqual_EnumName(struct FItemAttachmentEnum A, struct UE4::FName B); // Function Icarus.ItemAttachmentLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5670
	bool NotEqual_EnumEnum(struct FItemAttachmentEnum A, struct FItemAttachmentEnum B); // Function Icarus.ItemAttachmentLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a53a0
	struct FItemAttachmentEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemAttachmentLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a51f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemAttachmentLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17a5040
	struct FItemAttachmentRowHandle MakeLiteralItemAttachment(struct FItemAttachmentRowHandle RowHandle); // Function Icarus.ItemAttachmentLibrary.MakeLiteralItemAttachment // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4dd0
	struct FItemAttachmentRowHandle MakeItemAttachmentFromIndex(int32_t Index); // Function Icarus.ItemAttachmentLibrary.MakeItemAttachmentFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a49e0
	struct FItemAttachmentEnum MakeItemAttachmentEnum(struct FItemAttachmentEnum Enum); // Function Icarus.ItemAttachmentLibrary.MakeItemAttachmentEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4960
	struct FItemAttachmentRowHandle MakeItemAttachment(struct UE4::FName RowName); // Function Icarus.ItemAttachmentLibrary.MakeItemAttachment // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a48c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemAttachmentLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17a4710
	struct FItemAttachmentEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemAttachmentLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4560
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemAttachmentLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17a43b0
	void GetItemAttachmentStruct(struct FItemAttachmentRowHandle RowHandle, struct FItemAttachmentData& ItemAttachment, enum class EValid& Paths); // Function Icarus.ItemAttachmentLibrary.GetItemAttachmentStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a3e70
	bool EqualEqual_FItemAttachmentRowHandleFItemAttachmentRowHandle(struct FItemAttachmentRowHandle RowHandleA, struct FItemAttachmentRowHandle RowHandleB); // Function Icarus.ItemAttachmentLibrary.EqualEqual_FItemAttachmentRowHandleFItemAttachmentRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a3ab0
	bool EqualEqual_EnumEnum(struct FItemAttachmentEnum A, struct FItemAttachmentEnum B); // Function Icarus.ItemAttachmentLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a37e0
	struct FItemAttachmentRowHandle CastToItemAttachmentRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemAttachmentLibrary.CastToItemAttachmentRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a3480
	void BreakItemAttachmentEnum(struct FItemAttachmentEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemAttachmentLibrary.BreakItemAttachmentEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17a3060
	void AddRowToItemAttachmentTable(struct UE4::FName Name, struct FItemAttachmentData Data, struct FItemAttachmentRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemAttachmentLibrary.AddRowToItemAttachmentTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a2960
};

// Class Icarus.ItemAttachmentTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemAttachmentTable : UIcarusDataTable {
};

// Class Icarus.ItemAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemAudioDataLibrary : URowLibrary {

	struct FItemAudioDataRowHandle StructToRowHandle(struct FItemAudioDataEnum EnumValue); // Function Icarus.ItemAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a6260
	struct UE4::FName StructToName(struct FItemAudioDataEnum EnumValue); // Function Icarus.ItemAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a6070
	int32_t StructToInt(struct FItemAudioDataEnum EnumValue); // Function Icarus.ItemAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5e90
	struct FItemAudioDataEnum RowHandleToStruct(struct FItemAudioDataRowHandle RowHandle); // Function Icarus.ItemAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5c70
	void RemoveRowFromItemAudioDataTable(struct UE4::FName Name); // Function Icarus.ItemAudioDataLibrary.RemoveRowFromItemAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a5ab0
	void RefreshConstants(); // Function Icarus.ItemAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17a59f0
	int32_t NumRows(); // Function Icarus.ItemAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5970
	bool NotEqual_EnumName(struct FItemAudioDataEnum A, struct UE4::FName B); // Function Icarus.ItemAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5760
	bool NotEqual_EnumEnum(struct FItemAudioDataEnum A, struct FItemAudioDataEnum B); // Function Icarus.ItemAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5490
	struct FItemAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5280
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17a50d0
	struct FItemAudioDataRowHandle MakeLiteralItemAudioData(struct FItemAudioDataRowHandle RowHandle); // Function Icarus.ItemAudioDataLibrary.MakeLiteralItemAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4ea0
	struct FItemAudioDataRowHandle MakeItemAudioDataFromIndex(int32_t Index); // Function Icarus.ItemAudioDataLibrary.MakeItemAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4b90
	struct FItemAudioDataEnum MakeItemAudioDataEnum(struct FItemAudioDataEnum Enum); // Function Icarus.ItemAudioDataLibrary.MakeItemAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4b10
	struct FItemAudioDataRowHandle MakeItemAudioData(struct UE4::FName RowName); // Function Icarus.ItemAudioDataLibrary.MakeItemAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4a70
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17a47a0
	struct FItemAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a45f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17a4440
	void GetItemAudioDataStruct(struct FItemAudioDataRowHandle RowHandle, struct FItemAudioData& ItemAudioData, enum class EValid& Paths); // Function Icarus.ItemAudioDataLibrary.GetItemAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a4030
	bool EqualEqual_FItemAudioDataRowHandleFItemAudioDataRowHandle(struct FItemAudioDataRowHandle RowHandleA, struct FItemAudioDataRowHandle RowHandleB); // Function Icarus.ItemAudioDataLibrary.EqualEqual_FItemAudioDataRowHandleFItemAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a3bf0
	bool EqualEqual_EnumEnum(struct FItemAudioDataEnum A, struct FItemAudioDataEnum B); // Function Icarus.ItemAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a38d0
	struct FItemAudioDataRowHandle CastToItemAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemAudioDataLibrary.CastToItemAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a35a0
	void BreakItemAudioDataEnum(struct FItemAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemAudioDataLibrary.BreakItemAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17a31c0
	void AddRowToItemAudioDataTable(struct UE4::FName Name, struct FItemAudioData Data, struct FItemAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemAudioDataLibrary.AddRowToItemAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a2bd0
};

// Class Icarus.ItemAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemAudioDataTable : UIcarusDataTable {
};

// Class Icarus.ItemClassificationsIconsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemClassificationsIconsLibrary : URowLibrary {

	struct FItemClassificationsIconsRowHandle StructToRowHandle(struct FItemClassificationsIconsEnum EnumValue); // Function Icarus.ItemClassificationsIconsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a6310
	struct UE4::FName StructToName(struct FItemClassificationsIconsEnum EnumValue); // Function Icarus.ItemClassificationsIconsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a6110
	int32_t StructToInt(struct FItemClassificationsIconsEnum EnumValue); // Function Icarus.ItemClassificationsIconsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5f30
	struct FItemClassificationsIconsEnum RowHandleToStruct(struct FItemClassificationsIconsRowHandle RowHandle); // Function Icarus.ItemClassificationsIconsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5d30
	void RemoveRowFromItemClassificationsIconsTable(struct UE4::FName Name); // Function Icarus.ItemClassificationsIconsLibrary.RemoveRowFromItemClassificationsIconsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17a5b30
	void RefreshConstants(); // Function Icarus.ItemClassificationsIconsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17a5a10
	int32_t NumRows(); // Function Icarus.ItemClassificationsIconsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a59a0
	bool NotEqual_EnumName(struct FItemClassificationsIconsEnum A, struct UE4::FName B); // Function Icarus.ItemClassificationsIconsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5850
	bool NotEqual_EnumEnum(struct FItemClassificationsIconsEnum A, struct FItemClassificationsIconsEnum B); // Function Icarus.ItemClassificationsIconsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5580
	struct FItemClassificationsIconsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemClassificationsIconsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a5310
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemClassificationsIconsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17a5160
	struct FItemClassificationsIconsRowHandle MakeLiteralItemClassificationsIcons(struct FItemClassificationsIconsRowHandle RowHandle); // Function Icarus.ItemClassificationsIconsLibrary.MakeLiteralItemClassificationsIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4f70
	struct FItemClassificationsIconsRowHandle MakeItemClassificationsIconsFromIndex(int32_t Index); // Function Icarus.ItemClassificationsIconsLibrary.MakeItemClassificationsIconsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4d40
	struct FItemClassificationsIconsEnum MakeItemClassificationsIconsEnum(struct FItemClassificationsIconsEnum Enum); // Function Icarus.ItemClassificationsIconsLibrary.MakeItemClassificationsIconsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4cc0
	struct FItemClassificationsIconsRowHandle MakeItemClassificationsIcons(struct UE4::FName RowName); // Function Icarus.ItemClassificationsIconsLibrary.MakeItemClassificationsIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4c20
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemClassificationsIconsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17a4830
	struct FItemClassificationsIconsEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemClassificationsIconsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a4680
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemClassificationsIconsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17a44d0
	void GetItemClassificationsIconsStruct(struct FItemClassificationsIconsRowHandle RowHandle, struct FItemClassificationsIconsData& ItemClassificationsIcons, enum class EValid& Paths); // Function Icarus.ItemClassificationsIconsLibrary.GetItemClassificationsIconsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a41d0
	bool EqualEqual_FItemClassificationsIconsRowHandleFItemClassificationsIconsRowHandle(struct FItemClassificationsIconsRowHandle RowHandleA, struct FItemClassificationsIconsRowHandle RowHandleB); // Function Icarus.ItemClassificationsIconsLibrary.EqualEqual_FItemClassificationsIconsRowHandleFItemClassificationsIconsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a3d30
	bool EqualEqual_EnumEnum(struct FItemClassificationsIconsEnum A, struct FItemClassificationsIconsEnum B); // Function Icarus.ItemClassificationsIconsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17a39c0
	struct FItemClassificationsIconsRowHandle CastToItemClassificationsIconsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemClassificationsIconsLibrary.CastToItemClassificationsIconsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a36c0
	void BreakItemClassificationsIconsEnum(struct FItemClassificationsIconsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemClassificationsIconsLibrary.BreakItemClassificationsIconsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17a3320
	void AddRowToItemClassificationsIconsTable(struct UE4::FName Name, struct FItemClassificationsIconsData Data, struct FItemClassificationsIconsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemClassificationsIconsLibrary.AddRowToItemClassificationsIconsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a2db0
};

// Class Icarus.ItemClassificationsIconsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemClassificationsIconsTable : UIcarusDataTable {
};

// Class Icarus.ItemManipulationComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UItemManipulationComponent : UActorComponent {

	bool UseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct AIcarusPlayerCharacter* Target, struct FItemData& ItemConsumed); // Function Icarus.ItemManipulationComponent.UseItem // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x17ac970
	bool RepairItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.RepairItem // (Final|Native|Public|BlueprintCallable) // @ game+0x17ac300
	bool PlaceItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.PlaceItem // (Final|Native|Public|BlueprintCallable) // @ game+0x17ac0b0
	int32_t GetTotalFoodRecovery(struct UPlayerCharacterState* TargetPlayer, struct FItemData& ItemData); // Function Icarus.ItemManipulationComponent.GetTotalFoodRecovery // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17ab010
	struct TArray<struct FQueueItem> FindItemsRequiredForRepair(struct FItemData& ItemData, struct TArray<struct UInventory*> Inventories); // Function Icarus.ItemManipulationComponent.FindItemsRequiredForRepair // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17aa6b0
	bool ConsumeItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target, struct FItemData& ItemConsumed); // Function Icarus.ItemManipulationComponent.ConsumeItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17a9fe0
	enum class ECanUseItemResult CanUseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct FUseCondition UseCondition, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.CanUseItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17a9ac0
	bool CanRepairItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.CanRepairItem // (Final|Native|Public|BlueprintCallable) // @ game+0x17a99b0
};

// Class Icarus.ItemRewardFactory
// Size: 0x28 (Inherited: 0x28)
struct UItemRewardFactory : UBlueprintFunctionLibrary {

	struct FItemData GenerateItemFromReward(struct FItemRewardEntry& ItemReward, struct UObject* WorldContextObject); // Function Icarus.ItemRewardFactory.GenerateItemFromReward // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17aab40
	struct FItemData GenerateItemData(struct FItemReward& ItemReward, struct UObject* WorldContextObject); // Function Icarus.ItemRewardFactory.GenerateItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17aa9a0
};

// Class Icarus.ItemRewardsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemRewardsLibrary : URowLibrary {

	struct FItemRewardsRowHandle StructToRowHandle(struct FItemRewardsEnum EnumValue); // Function Icarus.ItemRewardsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac810
	struct UE4::FName StructToName(struct FItemRewardsEnum EnumValue); // Function Icarus.ItemRewardsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac6d0
	int32_t StructToInt(struct FItemRewardsEnum EnumValue); // Function Icarus.ItemRewardsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac590
	struct FItemRewardsEnum RowHandleToStruct(struct FItemRewardsRowHandle RowHandle); // Function Icarus.ItemRewardsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac410
	void RemoveRowFromItemRewardsTable(struct UE4::FName Name); // Function Icarus.ItemRewardsLibrary.RemoveRowFromItemRewardsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ac200
	void RefreshConstants(); // Function Icarus.ItemRewardsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17ac1c0
	int32_t NumRows(); // Function Icarus.ItemRewardsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac050
	bool NotEqual_EnumName(struct FItemRewardsEnum A, struct UE4::FName B); // Function Icarus.ItemRewardsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17abe70
	bool NotEqual_EnumEnum(struct FItemRewardsEnum A, struct FItemRewardsEnum B); // Function Icarus.ItemRewardsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17abc90
	struct FItemRewardsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemRewardsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17abb70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemRewardsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17aba50
	struct FItemRewardsRowHandle MakeLiteralItemRewards(struct FItemRewardsRowHandle RowHandle); // Function Icarus.ItemRewardsLibrary.MakeLiteralItemRewards // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab8b0
	struct FItemRewardsRowHandle MakeItemRewardsFromIndex(int32_t Index); // Function Icarus.ItemRewardsLibrary.MakeItemRewardsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab670
	struct FItemRewardsEnum MakeItemRewardsEnum(struct FItemRewardsEnum Enum); // Function Icarus.ItemRewardsLibrary.MakeItemRewardsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab5f0
	struct FItemRewardsRowHandle MakeItemRewards(struct UE4::FName RowName); // Function Icarus.ItemRewardsLibrary.MakeItemRewards // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab550
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemRewardsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ab430
	struct FItemRewardsEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemRewardsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab310
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemRewardsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17ab1f0
	void GetItemRewardsStruct(struct FItemRewardsRowHandle RowHandle, struct FItemRewards& ItemRewards, enum class EValid& Paths); // Function Icarus.ItemRewardsLibrary.GetItemRewardsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17aace0
	bool EqualEqual_FItemRewardsRowHandleFItemRewardsRowHandle(struct FItemRewardsRowHandle RowHandleA, struct FItemRewardsRowHandle RowHandleB); // Function Icarus.ItemRewardsLibrary.EqualEqual_FItemRewardsRowHandleFItemRewardsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17aa430
	bool EqualEqual_EnumEnum(struct FItemRewardsEnum A, struct FItemRewardsEnum B); // Function Icarus.ItemRewardsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17aa250
	struct FItemRewardsRowHandle CastToItemRewardsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemRewardsLibrary.CastToItemRewardsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a9da0
	void BreakItemRewardsEnum(struct FItemRewardsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemRewardsLibrary.BreakItemRewardsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17a96f0
	void AddRowToItemRewardsTable(struct UE4::FName Name, struct FItemRewards Data, struct FItemRewardsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemRewardsLibrary.AddRowToItemRewardsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a9240
};

// Class Icarus.ItemRewardsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemRewardsTable : UIcarusDataTable {
};

// Class Icarus.ItemsStaticLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemsStaticLibrary : URowLibrary {

	struct FItemsStaticRowHandle StructToRowHandle(struct FItemsStaticEnum EnumValue); // Function Icarus.ItemsStaticLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac8c0
	struct UE4::FName StructToName(struct FItemsStaticEnum EnumValue); // Function Icarus.ItemsStaticLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac770
	int32_t StructToInt(struct FItemsStaticEnum EnumValue); // Function Icarus.ItemsStaticLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac630
	struct FItemsStaticEnum RowHandleToStruct(struct FItemsStaticRowHandle RowHandle); // Function Icarus.ItemsStaticLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac4d0
	void RemoveRowFromItemsStaticTable(struct UE4::FName Name); // Function Icarus.ItemsStaticLibrary.RemoveRowFromItemsStaticTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ac280
	void RefreshConstants(); // Function Icarus.ItemsStaticLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17ac1e0
	int32_t NumRows(); // Function Icarus.ItemsStaticLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ac080
	bool NotEqual_EnumName(struct FItemsStaticEnum A, struct UE4::FName B); // Function Icarus.ItemsStaticLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17abf60
	bool NotEqual_EnumEnum(struct FItemsStaticEnum A, struct FItemsStaticEnum B); // Function Icarus.ItemsStaticLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17abd80
	struct FItemsStaticEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemsStaticLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17abc00
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemsStaticLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17abae0
	struct FItemsStaticRowHandle MakeLiteralItemsStatic(struct FItemsStaticRowHandle RowHandle); // Function Icarus.ItemsStaticLibrary.MakeLiteralItemsStatic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab980
	struct FItemsStaticRowHandle MakeItemsStaticFromIndex(int32_t Index); // Function Icarus.ItemsStaticLibrary.MakeItemsStaticFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab820
	struct FItemsStaticEnum MakeItemsStaticEnum(struct FItemsStaticEnum Enum); // Function Icarus.ItemsStaticLibrary.MakeItemsStaticEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab7a0
	struct FItemsStaticRowHandle MakeItemsStatic(struct UE4::FName RowName); // Function Icarus.ItemsStaticLibrary.MakeItemsStatic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab700
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemsStaticLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ab4c0
	struct FItemsStaticEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemsStaticLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ab3a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemsStaticLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17ab280
	void GetItemsStaticStruct(struct FItemsStaticRowHandle RowHandle, struct FItemStaticData& ItemsStatic, enum class EValid& Paths); // Function Icarus.ItemsStaticLibrary.GetItemsStaticStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17aae70
	bool EqualEqual_FItemsStaticRowHandleFItemsStaticRowHandle(struct FItemsStaticRowHandle RowHandleA, struct FItemsStaticRowHandle RowHandleB); // Function Icarus.ItemsStaticLibrary.EqualEqual_FItemsStaticRowHandleFItemsStaticRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17aa570
	bool EqualEqual_EnumEnum(struct FItemsStaticEnum A, struct FItemsStaticEnum B); // Function Icarus.ItemsStaticLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17aa340
	struct FItemsStaticRowHandle CastToItemsStaticRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemsStaticLibrary.CastToItemsStaticRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a9ec0
	void BreakItemsStaticEnum(struct FItemsStaticEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemsStaticLibrary.BreakItemsStaticEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17a9850
	void AddRowToItemsStaticTable(struct UE4::FName Name, struct FItemStaticData Data, struct FItemsStaticRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemsStaticLibrary.AddRowToItemsStaticTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17a9510
};

// Class Icarus.ItemsStaticTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemsStaticTable : UIcarusDataTable {
};

// Class Icarus.ItemTemplateLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemTemplateLibrary : URowLibrary {

	struct FItemTemplateRowHandle StructToRowHandle(struct FItemTemplateEnum EnumValue); // Function Icarus.ItemTemplateLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2dd0
	struct UE4::FName StructToName(struct FItemTemplateEnum EnumValue); // Function Icarus.ItemTemplateLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2bf0
	int32_t StructToInt(struct FItemTemplateEnum EnumValue); // Function Icarus.ItemTemplateLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2a10
	struct FItemTemplateEnum RowHandleToStruct(struct FItemTemplateRowHandle RowHandle); // Function Icarus.ItemTemplateLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b27d0
	void RemoveRowFromItemTemplateTable(struct UE4::FName Name); // Function Icarus.ItemTemplateLibrary.RemoveRowFromItemTemplateTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2650
	void RefreshConstants(); // Function Icarus.ItemTemplateLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17b25f0
	int32_t NumRows(); // Function Icarus.ItemTemplateLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2560
	bool NotEqual_EnumName(struct FItemTemplateEnum A, struct UE4::FName B); // Function Icarus.ItemTemplateLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2290
	bool NotEqual_EnumEnum(struct FItemTemplateEnum A, struct FItemTemplateEnum B); // Function Icarus.ItemTemplateLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1fc0
	struct FItemTemplateEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemTemplateLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1e10
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemTemplateLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17b1c60
	struct FItemTemplateRowHandle MakeLiteralItemTemplate(struct FItemTemplateRowHandle RowHandle); // Function Icarus.ItemTemplateLibrary.MakeLiteralItemTemplate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b19f0
	struct FItemTemplateRowHandle MakeItemTemplateFromIndex(int32_t Index); // Function Icarus.ItemTemplateLibrary.MakeItemTemplateFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1600
	struct FItemTemplateEnum MakeItemTemplateEnum(struct FItemTemplateEnum Enum); // Function Icarus.ItemTemplateLibrary.MakeItemTemplateEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1580
	struct FItemTemplateRowHandle MakeItemTemplate(struct UE4::FName RowName); // Function Icarus.ItemTemplateLibrary.MakeItemTemplate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b14e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemTemplateLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17b1330
	struct FItemTemplateEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemTemplateLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1180
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemTemplateLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17b0fd0
	void GetItemTemplateStruct(struct FItemTemplateRowHandle RowHandle, struct FItemData& ItemTemplate, enum class EValid& Paths); // Function Icarus.ItemTemplateLibrary.GetItemTemplateStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0a10
	bool EqualEqual_FItemTemplateRowHandleFItemTemplateRowHandle(struct FItemTemplateRowHandle RowHandleA, struct FItemTemplateRowHandle RowHandleB); // Function Icarus.ItemTemplateLibrary.EqualEqual_FItemTemplateRowHandleFItemTemplateRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b0650
	bool EqualEqual_EnumEnum(struct FItemTemplateEnum A, struct FItemTemplateEnum B); // Function Icarus.ItemTemplateLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b0380
	struct FItemTemplateRowHandle CastToItemTemplateRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemTemplateLibrary.CastToItemTemplateRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0020
	void BreakItemTemplateEnum(struct FItemTemplateEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemTemplateLibrary.BreakItemTemplateEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17afc00
	void AddRowToItemTemplateTable(struct UE4::FName Name, struct FItemData Data, struct FItemTemplateRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemTemplateLibrary.AddRowToItemTemplateTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17af090
};

// Class Icarus.ItemTemplateTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemTemplateTable : UIcarusDataTable {
};

// Class Icarus.ItemTraitMasksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemTraitMasksLibrary : URowLibrary {

	struct FItemTraitMasksRowHandle StructToRowHandle(struct FItemTraitMasksEnum EnumValue); // Function Icarus.ItemTraitMasksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2e80
	struct UE4::FName StructToName(struct FItemTraitMasksEnum EnumValue); // Function Icarus.ItemTraitMasksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2c90
	int32_t StructToInt(struct FItemTraitMasksEnum EnumValue); // Function Icarus.ItemTraitMasksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2ab0
	struct FItemTraitMasksEnum RowHandleToStruct(struct FItemTraitMasksRowHandle RowHandle); // Function Icarus.ItemTraitMasksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2890
	void RemoveRowFromItemTraitMasksTable(struct UE4::FName Name); // Function Icarus.ItemTraitMasksLibrary.RemoveRowFromItemTraitMasksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b26d0
	void RefreshConstants(); // Function Icarus.ItemTraitMasksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17b2610
	int32_t NumRows(); // Function Icarus.ItemTraitMasksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2590
	bool NotEqual_EnumName(struct FItemTraitMasksEnum A, struct UE4::FName B); // Function Icarus.ItemTraitMasksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2380
	bool NotEqual_EnumEnum(struct FItemTraitMasksEnum A, struct FItemTraitMasksEnum B); // Function Icarus.ItemTraitMasksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b20b0
	struct FItemTraitMasksEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemTraitMasksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1ea0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemTraitMasksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17b1cf0
	struct FItemTraitMasksRowHandle MakeLiteralItemTraitMasks(struct FItemTraitMasksRowHandle RowHandle); // Function Icarus.ItemTraitMasksLibrary.MakeLiteralItemTraitMasks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1ac0
	struct FItemTraitMasksRowHandle MakeItemTraitMasksFromIndex(int32_t Index); // Function Icarus.ItemTraitMasksLibrary.MakeItemTraitMasksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b17b0
	struct FItemTraitMasksEnum MakeItemTraitMasksEnum(struct FItemTraitMasksEnum Enum); // Function Icarus.ItemTraitMasksLibrary.MakeItemTraitMasksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1730
	struct FItemTraitMasksRowHandle MakeItemTraitMasks(struct UE4::FName RowName); // Function Icarus.ItemTraitMasksLibrary.MakeItemTraitMasks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1690
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemTraitMasksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17b13c0
	struct FItemTraitMasksEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemTraitMasksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1210
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemTraitMasksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17b1060
	void GetItemTraitMasksStruct(struct FItemTraitMasksRowHandle RowHandle, struct FItemTraitMask& ItemTraitMasks, enum class EValid& Paths); // Function Icarus.ItemTraitMasksLibrary.GetItemTraitMasksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0c80
	bool EqualEqual_FItemTraitMasksRowHandleFItemTraitMasksRowHandle(struct FItemTraitMasksRowHandle RowHandleA, struct FItemTraitMasksRowHandle RowHandleB); // Function Icarus.ItemTraitMasksLibrary.EqualEqual_FItemTraitMasksRowHandleFItemTraitMasksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b0790
	bool EqualEqual_EnumEnum(struct FItemTraitMasksEnum A, struct FItemTraitMasksEnum B); // Function Icarus.ItemTraitMasksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b0470
	struct FItemTraitMasksRowHandle CastToItemTraitMasksRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemTraitMasksLibrary.CastToItemTraitMasksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0140
	void BreakItemTraitMasksEnum(struct FItemTraitMasksEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemTraitMasksLibrary.BreakItemTraitMasksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17afd60
	void AddRowToItemTraitMasksTable(struct UE4::FName Name, struct FItemTraitMask Data, struct FItemTraitMasksRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemTraitMasksLibrary.AddRowToItemTraitMasksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17af670
};

// Class Icarus.ItemTraitMasksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemTraitMasksTable : UIcarusDataTable {
};

// Class Icarus.ItemWeightStatQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemWeightStatQueriesLibrary : URowLibrary {

	struct FItemWeightStatQueriesRowHandle StructToRowHandle(struct FItemWeightStatQueriesEnum EnumValue); // Function Icarus.ItemWeightStatQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2f30
	struct UE4::FName StructToName(struct FItemWeightStatQueriesEnum EnumValue); // Function Icarus.ItemWeightStatQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2d30
	int32_t StructToInt(struct FItemWeightStatQueriesEnum EnumValue); // Function Icarus.ItemWeightStatQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2b50
	struct FItemWeightStatQueriesEnum RowHandleToStruct(struct FItemWeightStatQueriesRowHandle RowHandle); // Function Icarus.ItemWeightStatQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2950
	void RemoveRowFromItemWeightStatQueriesTable(struct UE4::FName Name); // Function Icarus.ItemWeightStatQueriesLibrary.RemoveRowFromItemWeightStatQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b2750
	void RefreshConstants(); // Function Icarus.ItemWeightStatQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17b2630
	int32_t NumRows(); // Function Icarus.ItemWeightStatQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b25c0
	bool NotEqual_EnumName(struct FItemWeightStatQueriesEnum A, struct UE4::FName B); // Function Icarus.ItemWeightStatQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b2470
	bool NotEqual_EnumEnum(struct FItemWeightStatQueriesEnum A, struct FItemWeightStatQueriesEnum B); // Function Icarus.ItemWeightStatQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b21a0
	struct FItemWeightStatQueriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ItemWeightStatQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1f30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ItemWeightStatQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17b1d80
	struct FItemWeightStatQueriesRowHandle MakeLiteralItemWeightStatQueries(struct FItemWeightStatQueriesRowHandle RowHandle); // Function Icarus.ItemWeightStatQueriesLibrary.MakeLiteralItemWeightStatQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1b90
	struct FItemWeightStatQueriesRowHandle MakeItemWeightStatQueriesFromIndex(int32_t Index); // Function Icarus.ItemWeightStatQueriesLibrary.MakeItemWeightStatQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1960
	struct FItemWeightStatQueriesEnum MakeItemWeightStatQueriesEnum(struct FItemWeightStatQueriesEnum Enum); // Function Icarus.ItemWeightStatQueriesLibrary.MakeItemWeightStatQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b18e0
	struct FItemWeightStatQueriesRowHandle MakeItemWeightStatQueries(struct UE4::FName RowName); // Function Icarus.ItemWeightStatQueriesLibrary.MakeItemWeightStatQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b1840
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ItemWeightStatQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17b1450
	struct FItemWeightStatQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemWeightStatQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b12a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ItemWeightStatQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17b10f0
	void GetItemWeightStatQueriesStruct(struct FItemWeightStatQueriesRowHandle RowHandle, struct FItemWeightStatQueries& ItemWeightStatQueries, enum class EValid& Paths); // Function Icarus.ItemWeightStatQueriesLibrary.GetItemWeightStatQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0e30
	bool EqualEqual_FItemWeightStatQueriesRowHandleFItemWeightStatQueriesRowHandle(struct FItemWeightStatQueriesRowHandle RowHandleA, struct FItemWeightStatQueriesRowHandle RowHandleB); // Function Icarus.ItemWeightStatQueriesLibrary.EqualEqual_FItemWeightStatQueriesRowHandleFItemWeightStatQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b08d0
	bool EqualEqual_EnumEnum(struct FItemWeightStatQueriesEnum A, struct FItemWeightStatQueriesEnum B); // Function Icarus.ItemWeightStatQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b0560
	struct FItemWeightStatQueriesRowHandle CastToItemWeightStatQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ItemWeightStatQueriesLibrary.CastToItemWeightStatQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b0260
	void BreakItemWeightStatQueriesEnum(struct FItemWeightStatQueriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ItemWeightStatQueriesLibrary.BreakItemWeightStatQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17afec0
	void AddRowToItemWeightStatQueriesTable(struct UE4::FName Name, struct FItemWeightStatQueries Data, struct FItemWeightStatQueriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ItemWeightStatQueriesLibrary.AddRowToItemWeightStatQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17af9b0
};

// Class Icarus.ItemWeightStatQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemWeightStatQueriesTable : UIcarusDataTable {
};

// Class Icarus.KeybindContextsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeybindContextsLibrary : URowLibrary {

	struct FKeybindContextsRowHandle StructToRowHandle(struct FKeybindContextsEnum EnumValue); // Function Icarus.KeybindContextsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9e10
	struct UE4::FName StructToName(struct FKeybindContextsEnum EnumValue); // Function Icarus.KeybindContextsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9c20
	int32_t StructToInt(struct FKeybindContextsEnum EnumValue); // Function Icarus.KeybindContextsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9a40
	struct FKeybindContextsEnum RowHandleToStruct(struct FKeybindContextsRowHandle RowHandle); // Function Icarus.KeybindContextsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9820
	void RemoveRowFromKeybindContextsTable(struct UE4::FName Name); // Function Icarus.KeybindContextsLibrary.RemoveRowFromKeybindContextsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b9660
	void RefreshConstants(); // Function Icarus.KeybindContextsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17b95a0
	int32_t NumRows(); // Function Icarus.KeybindContextsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9520
	bool NotEqual_EnumName(struct FKeybindContextsEnum A, struct UE4::FName B); // Function Icarus.KeybindContextsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9310
	bool NotEqual_EnumEnum(struct FKeybindContextsEnum A, struct FKeybindContextsEnum B); // Function Icarus.KeybindContextsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9040
	struct FKeybindContextsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.KeybindContextsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8e30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.KeybindContextsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17b8c80
	struct FKeybindContextsRowHandle MakeLiteralKeybindContexts(struct FKeybindContextsRowHandle RowHandle); // Function Icarus.KeybindContextsLibrary.MakeLiteralKeybindContexts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8a50
	struct FKeybindContextsRowHandle MakeKeybindContextsFromIndex(int32_t Index); // Function Icarus.KeybindContextsLibrary.MakeKeybindContextsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8660
	struct FKeybindContextsEnum MakeKeybindContextsEnum(struct FKeybindContextsEnum Enum); // Function Icarus.KeybindContextsLibrary.MakeKeybindContextsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b85e0
	struct FKeybindContextsRowHandle MakeKeybindContexts(struct UE4::FName RowName); // Function Icarus.KeybindContextsLibrary.MakeKeybindContexts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8540
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.KeybindContextsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17b8190
	struct FKeybindContextsEnum IntToStruct(int32_t IntValue); // Function Icarus.KeybindContextsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b7fe0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.KeybindContextsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17b7e30
	void GetKeybindContextsStruct(struct FKeybindContextsRowHandle RowHandle, struct FKeybindContext& KeybindContexts, enum class EValid& Paths); // Function Icarus.KeybindContextsLibrary.GetKeybindContextsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b7a50
	bool EqualEqual_FKeybindContextsRowHandleFKeybindContextsRowHandle(struct FKeybindContextsRowHandle RowHandleA, struct FKeybindContextsRowHandle RowHandleB); // Function Icarus.KeybindContextsLibrary.EqualEqual_FKeybindContextsRowHandleFKeybindContextsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b72a0
	bool EqualEqual_EnumEnum(struct FKeybindContextsEnum A, struct FKeybindContextsEnum B); // Function Icarus.KeybindContextsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b6f80
	struct FKeybindContextsRowHandle CastToKeybindContextsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.KeybindContextsLibrary.CastToKeybindContextsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b6c50
	void BreakKeybindContextsEnum(struct FKeybindContextsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.KeybindContextsLibrary.BreakKeybindContextsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b6870
	void AddRowToKeybindContextsTable(struct UE4::FName Name, struct FKeybindContext Data, struct FKeybindContextsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.KeybindContextsLibrary.AddRowToKeybindContextsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b6100
};

// Class Icarus.KeybindContextsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeybindContextsTable : UIcarusDataTable {
};

// Class Icarus.KeybindingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeybindingsLibrary : URowLibrary {

	struct FKeybindingsRowHandle StructToRowHandle(struct FKeybindingsEnum EnumValue); // Function Icarus.KeybindingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9ec0
	struct UE4::FName StructToName(struct FKeybindingsEnum EnumValue); // Function Icarus.KeybindingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9cc0
	int32_t StructToInt(struct FKeybindingsEnum EnumValue); // Function Icarus.KeybindingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9ae0
	struct FKeybindingsEnum RowHandleToStruct(struct FKeybindingsRowHandle RowHandle); // Function Icarus.KeybindingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b98e0
	void RemoveRowFromKeybindingsTable(struct UE4::FName Name); // Function Icarus.KeybindingsLibrary.RemoveRowFromKeybindingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b96e0
	void RefreshConstants(); // Function Icarus.KeybindingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17b95c0
	int32_t NumRows(); // Function Icarus.KeybindingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9550
	bool NotEqual_EnumName(struct FKeybindingsEnum A, struct UE4::FName B); // Function Icarus.KeybindingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9400
	bool NotEqual_EnumEnum(struct FKeybindingsEnum A, struct FKeybindingsEnum B); // Function Icarus.KeybindingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9130
	struct FKeybindingsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.KeybindingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8ec0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.KeybindingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17b8d10
	struct FKeybindingsRowHandle MakeLiteralKeybindings(struct FKeybindingsRowHandle RowHandle); // Function Icarus.KeybindingsLibrary.MakeLiteralKeybindings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8b20
	struct TArray<struct FKeybindingsRowHandle> MakeKeybindingsRowFromActionName(struct FName& InActionName); // Function Icarus.KeybindingsLibrary.MakeKeybindingsRowFromActionName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b88a0
	struct FKeybindingsRowHandle MakeKeybindingsFromIndex(int32_t Index); // Function Icarus.KeybindingsLibrary.MakeKeybindingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8810
	struct FKeybindingsEnum MakeKeybindingsEnum(struct FKeybindingsEnum Enum); // Function Icarus.KeybindingsLibrary.MakeKeybindingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8790
	struct FKeybindingsRowHandle MakeKeybindings(struct UE4::FName RowName); // Function Icarus.KeybindingsLibrary.MakeKeybindings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b86f0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.KeybindingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17b8220
	struct FKeybindingsEnum IntToStruct(int32_t IntValue); // Function Icarus.KeybindingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8070
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.KeybindingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17b7ec0
	void GetKeybindingsStruct(struct FKeybindingsRowHandle RowHandle, struct FKeybindData& Keybindings, enum class EValid& Paths); // Function Icarus.KeybindingsLibrary.GetKeybindingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b7c20
	bool EqualEqual_FKeybindingsRowHandleFKeybindingsRowHandle(struct FKeybindingsRowHandle RowHandleA, struct FKeybindingsRowHandle RowHandleB); // Function Icarus.KeybindingsLibrary.EqualEqual_FKeybindingsRowHandleFKeybindingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b73e0
	bool EqualEqual_EnumEnum(struct FKeybindingsEnum A, struct FKeybindingsEnum B); // Function Icarus.KeybindingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b7070
	struct FKeybindingsRowHandle CastToKeybindingsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.KeybindingsLibrary.CastToKeybindingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b6d70
	void BreakKeybindingsEnum(struct FKeybindingsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.KeybindingsLibrary.BreakKeybindingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b69d0
	void AddRowToKeybindingsTable(struct UE4::FName Name, struct FKeybindData Data, struct FKeybindingsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.KeybindingsLibrary.AddRowToKeybindingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b63d0
};

// Class Icarus.KeybindingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeybindingsTable : UIcarusDataTable {
};

// Class Icarus.KeybindingWidget
// Size: 0x298 (Inherited: 0x280)
struct UKeybindingWidget : UIcarusWidget {
	struct FKeybindingsRowHandle KeybindRow; // 0x280(0x18)

	void PostSetup(); // Function Icarus.KeybindingWidget.PostSetup // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.KeyDataFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeyDataFunctionLibrary : UBlueprintFunctionLibrary {

	struct FText GetDisplayNameForKey(struct FKey& Key); // Function Icarus.KeyDataFunctionLibrary.GetDisplayNameForKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b7520
};

// Class Icarus.KeyIconDataFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeyIconDataFunctionLibrary : UBlueprintFunctionLibrary {

	void GetIconsForKey(struct FKey& Key, enum class EControllerIconSet IconSet, struct FKeyIconData& OutData); // Function Icarus.KeyIconDataFunctionLibrary.GetIconsForKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b7650
};

// Class Icarus.KeyIconsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeyIconsLibrary : URowLibrary {

	struct FKeyIconsRowHandle StructToRowHandle(struct FKeyIconsEnum EnumValue); // Function Icarus.KeyIconsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9d60
	struct UE4::FName StructToName(struct FKeyIconsEnum EnumValue); // Function Icarus.KeyIconsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9b80
	int32_t StructToInt(struct FKeyIconsEnum EnumValue); // Function Icarus.KeyIconsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b99a0
	struct FKeyIconsEnum RowHandleToStruct(struct FKeyIconsRowHandle RowHandle); // Function Icarus.KeyIconsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9760
	void RemoveRowFromKeyIconsTable(struct UE4::FName Name); // Function Icarus.KeyIconsLibrary.RemoveRowFromKeyIconsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17b95e0
	void RefreshConstants(); // Function Icarus.KeyIconsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17b9580
	int32_t NumRows(); // Function Icarus.KeyIconsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b94f0
	bool NotEqual_EnumName(struct FKeyIconsEnum A, struct UE4::FName B); // Function Icarus.KeyIconsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b9220
	bool NotEqual_EnumEnum(struct FKeyIconsEnum A, struct FKeyIconsEnum B); // Function Icarus.KeyIconsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8f50
	struct FKeyIconsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.KeyIconsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8da0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.KeyIconsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17b8bf0
	struct FKeyIconsRowHandle MakeLiteralKeyIcons(struct FKeyIconsRowHandle RowHandle); // Function Icarus.KeyIconsLibrary.MakeLiteralKeyIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8980
	struct TArray<struct FKeyIconsRowHandle> MakeKeyIconsRowFromIconSet(enum class EControllerIconSet& InIconSet); // Function Icarus.KeyIconsLibrary.MakeKeyIconsRowFromIconSet // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b8460
	struct FKeyIconsRowHandle MakeKeyIconsFromIndex(int32_t Index); // Function Icarus.KeyIconsLibrary.MakeKeyIconsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b83d0
	struct FKeyIconsEnum MakeKeyIconsEnum(struct FKeyIconsEnum Enum); // Function Icarus.KeyIconsLibrary.MakeKeyIconsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b8350
	struct FKeyIconsRowHandle MakeKeyIcons(struct UE4::FName RowName); // Function Icarus.KeyIconsLibrary.MakeKeyIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b82b0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.KeyIconsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17b8100
	struct FKeyIconsEnum IntToStruct(int32_t IntValue); // Function Icarus.KeyIconsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b7f50
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.KeyIconsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17b7da0
	void GetKeyIconsStruct(struct FKeyIconsRowHandle RowHandle, struct FKeyIconData& KeyIcons, enum class EValid& Paths); // Function Icarus.KeyIconsLibrary.GetKeyIconsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b7860
	bool EqualEqual_FKeyIconsRowHandleFKeyIconsRowHandle(struct FKeyIconsRowHandle RowHandleA, struct FKeyIconsRowHandle RowHandleB); // Function Icarus.KeyIconsLibrary.EqualEqual_FKeyIconsRowHandleFKeyIconsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b7160
	bool EqualEqual_EnumEnum(struct FKeyIconsEnum A, struct FKeyIconsEnum B); // Function Icarus.KeyIconsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17b6e90
	struct FKeyIconsRowHandle CastToKeyIconsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.KeyIconsLibrary.CastToKeyIconsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b6b30
	void BreakKeyIconsEnum(struct FKeyIconsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.KeyIconsLibrary.BreakKeyIconsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17b6710
	void AddRowToKeyIconsTable(struct UE4::FName Name, struct FKeyIconData Data, struct FKeyIconsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.KeyIconsLibrary.AddRowToKeyIconsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17b5dc0
};

// Class Icarus.KeyIconsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeyIconsTable : UIcarusDataTable {
};

// Class Icarus.KeyRebindableWidget
// Size: 0x268 (Inherited: 0x260)
struct UKeyRebindableWidget : UUserWidget {
	bool bListening; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)

	void OnStartRebind(); // Function Icarus.KeyRebindableWidget.OnStartRebind // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
	bool OnKeySet(struct FKey NewKey); // Function Icarus.KeyRebindableWidget.OnKeySet // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
	void OnEndRebind(); // Function Icarus.KeyRebindableWidget.OnEndRebind // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.KeysLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeysLibrary : URowLibrary {

	struct FKeysRowHandle StructToRowHandle(struct FKeysEnum EnumValue); // Function Icarus.KeysLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c05e0
	struct UE4::FName StructToName(struct FKeysEnum EnumValue); // Function Icarus.KeysLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0400
	int32_t StructToInt(struct FKeysEnum EnumValue); // Function Icarus.KeysLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0220
	struct FKeysEnum RowHandleToStruct(struct FKeysRowHandle RowHandle); // Function Icarus.KeysLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bffe0
	void RemoveRowFromKeysTable(struct UE4::FName Name); // Function Icarus.KeysLibrary.RemoveRowFromKeysTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17bfe60
	void RefreshConstants(); // Function Icarus.KeysLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17bfe00
	int32_t NumRows(); // Function Icarus.KeysLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bfd70
	bool NotEqual_EnumName(struct FKeysEnum A, struct UE4::FName B); // Function Icarus.KeysLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bfaa0
	bool NotEqual_EnumEnum(struct FKeysEnum A, struct FKeysEnum B); // Function Icarus.KeysLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf7d0
	struct FKeysEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.KeysLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf620
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.KeysLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17bf470
	struct FKeysRowHandle MakeLiteralKeys(struct FKeysRowHandle RowHandle); // Function Icarus.KeysLibrary.MakeLiteralKeys // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf200
	struct FKeysRowHandle MakeKeysRowFromKey(struct FKey& InKey); // Function Icarus.KeysLibrary.MakeKeysRowFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17bedc0
	struct FKeysRowHandle MakeKeysFromIndex(int32_t Index); // Function Icarus.KeysLibrary.MakeKeysFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bed30
	struct FKeysEnum MakeKeysEnum(struct FKeysEnum Enum); // Function Icarus.KeysLibrary.MakeKeysEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17becb0
	struct FKeysRowHandle MakeKeys(struct UE4::FName RowName); // Function Icarus.KeysLibrary.MakeKeys // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bec10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.KeysLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17bea60
	struct FKeysEnum IntToStruct(int32_t IntValue); // Function Icarus.KeysLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17be8b0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.KeysLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17be700
	void GetKeysStruct(struct FKeysRowHandle RowHandle, struct FKeyData& Keys, enum class EValid& Paths); // Function Icarus.KeysLibrary.GetKeysStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17be0a0
	bool EqualEqual_FKeysRowHandleFKeysRowHandle(struct FKeysRowHandle RowHandleA, struct FKeysRowHandle RowHandleB); // Function Icarus.KeysLibrary.EqualEqual_FKeysRowHandleFKeysRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bdbe0
	bool EqualEqual_EnumEnum(struct FKeysEnum A, struct FKeysEnum B); // Function Icarus.KeysLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bd910
	struct FKeysRowHandle CastToKeysRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.KeysLibrary.CastToKeysRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17bd490
	void BreakKeysEnum(struct FKeysEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.KeysLibrary.BreakKeysEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17bd070
	void AddRowToKeysTable(struct UE4::FName Name, struct FKeyData Data, struct FKeysRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.KeysLibrary.AddRowToKeysTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17bc8a0
};

// Class Icarus.KeysTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeysTable : UIcarusDataTable {
};

// Class Icarus.LadderComponent
// Size: 0xb0 (Inherited: 0xb0)
struct ULadderComponent : UActorComponent {

	struct ULadderComponent* GetOutermostLadder(); // Function Icarus.LadderComponent.GetOutermostLadder // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17be6d0
	struct FTransform GetLadderStart(); // Function Icarus.LadderComponent.GetLadderStart // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x17be300
	struct FTransform GetLadderEnd(); // Function Icarus.LadderComponent.GetLadderEnd // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x17be290
};

// Class Icarus.WaterBody
// Size: 0x2e0 (Inherited: 0x2b0)
struct AWaterBody : AIcarusActor {
	struct FWaterSetupRowHandle WaterSetup; // 0x2b0(0x18)
	int32_t MaxFish; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct TArray<struct UFloatableComponent*> OverlappedFloatables; // 0x2d0(0x10)

	struct TArray<struct UPrimitiveComponent*> GetNavAffectingComponents(); // Function Icarus.WaterBody.GetNavAffectingComponents // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1837330
	void AddFloatableOverlap(struct UFloatableComponent* Component); // Function Icarus.WaterBody.AddFloatableOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x18a12a0
};

// Class Icarus.Lake
// Size: 0x310 (Inherited: 0x2e0)
struct ALake : AWaterBody {
	struct FVector LakeScale; // 0x2e0(0x0c)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct TArray<struct FWaterPoint> WaterPoints; // 0x2f0(0x10)
	struct UFishManager* FishManager; // 0x300(0x08)
	bool bIsFishVolume; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)
};

// Class Icarus.LakeSplineComponent
// Size: 0x550 (Inherited: 0x540)
struct ULakeSplineComponent : USplineComponent {
	enum class ESplineLoopDirection SplineDirection; // 0x538(0x01)
	struct FVector AverageLocation; // 0x53c(0x0c)
	float MaxDistSquaredFromAverage; // 0x548(0x04)

	void GenerateSpline(struct TArray<struct FVector>& EdgePoints, float PointDensity); // Function Icarus.LakeSplineComponent.GenerateSpline // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17bdfa0
	void ConstructFromCaveTemplate(struct FCaveLake& CaveLake); // Function Icarus.LakeSplineComponent.ConstructFromCaveTemplate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17bd7f0
};

// Class Icarus.LanguagesLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULanguagesLibrary : URowLibrary {

	struct FLanguagesRowHandle StructToRowHandle(struct FLanguagesEnum EnumValue); // Function Icarus.LanguagesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0690
	struct UE4::FName StructToName(struct FLanguagesEnum EnumValue); // Function Icarus.LanguagesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c04a0
	int32_t StructToInt(struct FLanguagesEnum EnumValue); // Function Icarus.LanguagesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c02c0
	struct FLanguagesEnum RowHandleToStruct(struct FLanguagesRowHandle RowHandle); // Function Icarus.LanguagesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c00a0
	void RemoveRowFromLanguagesTable(struct UE4::FName Name); // Function Icarus.LanguagesLibrary.RemoveRowFromLanguagesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17bfee0
	void RefreshConstants(); // Function Icarus.LanguagesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17bfe20
	int32_t NumRows(); // Function Icarus.LanguagesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bfda0
	bool NotEqual_EnumName(struct FLanguagesEnum A, struct UE4::FName B); // Function Icarus.LanguagesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bfb90
	bool NotEqual_EnumEnum(struct FLanguagesEnum A, struct FLanguagesEnum B); // Function Icarus.LanguagesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf8c0
	struct FLanguagesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.LanguagesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf6b0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.LanguagesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17bf500
	struct FLanguagesRowHandle MakeLiteralLanguages(struct FLanguagesRowHandle RowHandle); // Function Icarus.LanguagesLibrary.MakeLiteralLanguages // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf2d0
	struct FLanguagesRowHandle MakeLanguagesFromIndex(int32_t Index); // Function Icarus.LanguagesLibrary.MakeLanguagesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17befc0
	struct FLanguagesEnum MakeLanguagesEnum(struct FLanguagesEnum Enum); // Function Icarus.LanguagesLibrary.MakeLanguagesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bef40
	struct FLanguagesRowHandle MakeLanguages(struct UE4::FName RowName); // Function Icarus.LanguagesLibrary.MakeLanguages // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17beea0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.LanguagesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17beaf0
	struct FLanguagesEnum IntToStruct(int32_t IntValue); // Function Icarus.LanguagesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17be940
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.LanguagesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17be790
	void GetLanguagesStruct(struct FLanguagesRowHandle RowHandle, struct FLanguagesData& Languages, enum class EValid& Paths); // Function Icarus.LanguagesLibrary.GetLanguagesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17be370
	bool EqualEqual_FLanguagesRowHandleFLanguagesRowHandle(struct FLanguagesRowHandle RowHandleA, struct FLanguagesRowHandle RowHandleB); // Function Icarus.LanguagesLibrary.EqualEqual_FLanguagesRowHandleFLanguagesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bdd20
	bool EqualEqual_EnumEnum(struct FLanguagesEnum A, struct FLanguagesEnum B); // Function Icarus.LanguagesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bda00
	struct FLanguagesRowHandle CastToLanguagesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.LanguagesLibrary.CastToLanguagesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17bd5b0
	void BreakLanguagesEnum(struct FLanguagesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.LanguagesLibrary.BreakLanguagesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17bd1d0
	void AddRowToLanguagesTable(struct UE4::FName Name, struct FLanguagesData Data, struct FLanguagesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.LanguagesLibrary.AddRowToLanguagesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17bcb70
};

// Class Icarus.LanguagesTable
// Size: 0xb8 (Inherited: 0xb8)
struct ULanguagesTable : UIcarusDataTable {
};

// Class Icarus.LevelSequencesLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULevelSequencesLibrary : URowLibrary {

	struct FLevelSequencesRowHandle StructToRowHandle(struct FLevelSequencesEnum EnumValue); // Function Icarus.LevelSequencesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0740
	struct UE4::FName StructToName(struct FLevelSequencesEnum EnumValue); // Function Icarus.LevelSequencesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0540
	int32_t StructToInt(struct FLevelSequencesEnum EnumValue); // Function Icarus.LevelSequencesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0360
	struct FLevelSequencesEnum RowHandleToStruct(struct FLevelSequencesRowHandle RowHandle); // Function Icarus.LevelSequencesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c0160
	void RemoveRowFromLevelSequencesTable(struct UE4::FName Name); // Function Icarus.LevelSequencesLibrary.RemoveRowFromLevelSequencesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17bff60
	void RefreshConstants(); // Function Icarus.LevelSequencesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17bfe40
	int32_t NumRows(); // Function Icarus.LevelSequencesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bfdd0
	bool NotEqual_EnumName(struct FLevelSequencesEnum A, struct UE4::FName B); // Function Icarus.LevelSequencesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bfc80
	bool NotEqual_EnumEnum(struct FLevelSequencesEnum A, struct FLevelSequencesEnum B); // Function Icarus.LevelSequencesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf9b0
	struct FLevelSequencesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.LevelSequencesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf740
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.LevelSequencesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17bf590
	struct FLevelSequencesRowHandle MakeLiteralLevelSequences(struct FLevelSequencesRowHandle RowHandle); // Function Icarus.LevelSequencesLibrary.MakeLiteralLevelSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf3a0
	struct FLevelSequencesRowHandle MakeLevelSequencesFromIndex(int32_t Index); // Function Icarus.LevelSequencesLibrary.MakeLevelSequencesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf170
	struct FLevelSequencesEnum MakeLevelSequencesEnum(struct FLevelSequencesEnum Enum); // Function Icarus.LevelSequencesLibrary.MakeLevelSequencesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf0f0
	struct FLevelSequencesRowHandle MakeLevelSequences(struct UE4::FName RowName); // Function Icarus.LevelSequencesLibrary.MakeLevelSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bf050
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.LevelSequencesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17beb80
	struct FLevelSequencesEnum IntToStruct(int32_t IntValue); // Function Icarus.LevelSequencesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17be9d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.LevelSequencesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17be820
	void GetLevelSequencesStruct(struct FLevelSequencesRowHandle RowHandle, struct FLevelSequencesData& LevelSequences, enum class EValid& Paths); // Function Icarus.LevelSequencesLibrary.GetLevelSequencesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17be4f0
	bool EqualEqual_FLevelSequencesRowHandleFLevelSequencesRowHandle(struct FLevelSequencesRowHandle RowHandleA, struct FLevelSequencesRowHandle RowHandleB); // Function Icarus.LevelSequencesLibrary.EqualEqual_FLevelSequencesRowHandleFLevelSequencesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bde60
	bool EqualEqual_EnumEnum(struct FLevelSequencesEnum A, struct FLevelSequencesEnum B); // Function Icarus.LevelSequencesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17bdaf0
	struct FLevelSequencesRowHandle CastToLevelSequencesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.LevelSequencesLibrary.CastToLevelSequencesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17bd6d0
	void BreakLevelSequencesEnum(struct FLevelSequencesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.LevelSequencesLibrary.BreakLevelSequencesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17bd330
	void AddRowToLevelSequencesTable(struct UE4::FName Name, struct FLevelSequencesData Data, struct FLevelSequencesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.LevelSequencesLibrary.AddRowToLevelSequencesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17bcd90
};

// Class Icarus.LevelSequencesTable
// Size: 0xb8 (Inherited: 0xb8)
struct ULevelSequencesTable : UIcarusDataTable {
};

// Class Icarus.LoadingScreenSettings
// Size: 0xf0 (Inherited: 0x38)
struct ULoadingScreenSettings : UDeveloperSettings {
	struct TSoftClassPtr<UObject> DefaultLoadingScreenWidget; // 0x38(0x28)
	struct TSoftClassPtr<UObject> InBetweenLoadingScreenWidget; // 0x60(0x28)
	struct TMap<struct FString, struct TSoftClassPtr<UObject>> PerLevelLoadingScreens; // 0x88(0x50)
	float MinimumLoadingScreenDisplayTime; // 0xd8(0x04)
	float PostLoadFadeInDuration; // 0xdc(0x04)
	struct TArray<struct FString> InBetweenLoadingVideos; // 0xe0(0x10)
};

// Class Icarus.LoadingScreenInterface
// Size: 0x28 (Inherited: 0x28)
struct ULoadingScreenInterface : UInterface {

	void InitLoadingScreen(struct FString LevelName); // Function Icarus.LoadingScreenInterface.InitLoadingScreen // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.MapIconsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMapIconsLibrary : URowLibrary {

	struct FMapIconsRowHandle StructToRowHandle(struct FMapIconsEnum EnumValue); // Function Icarus.MapIconsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5c00
	struct UE4::FName StructToName(struct FMapIconsEnum EnumValue); // Function Icarus.MapIconsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5ac0
	int32_t StructToInt(struct FMapIconsEnum EnumValue); // Function Icarus.MapIconsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5980
	struct FMapIconsEnum RowHandleToStruct(struct FMapIconsRowHandle RowHandle); // Function Icarus.MapIconsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c56a0
	void RemoveRowFromMapIconsTable(struct UE4::FName Name); // Function Icarus.MapIconsLibrary.RemoveRowFromMapIconsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17c5420
	void RefreshConstants(); // Function Icarus.MapIconsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17c53e0
	int32_t NumRows(); // Function Icarus.MapIconsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c52a0
	bool NotEqual_EnumName(struct FMapIconsEnum A, struct UE4::FName B); // Function Icarus.MapIconsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c50c0
	bool NotEqual_EnumEnum(struct FMapIconsEnum A, struct FMapIconsEnum B); // Function Icarus.MapIconsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4ee0
	struct FMapIconsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.MapIconsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4dc0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.MapIconsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17c4ca0
	struct FMapIconsRowHandle MakeMapIconsFromIndex(int32_t Index); // Function Icarus.MapIconsLibrary.MakeMapIconsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4a60
	struct FMapIconsEnum MakeMapIconsEnum(struct FMapIconsEnum Enum); // Function Icarus.MapIconsLibrary.MakeMapIconsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c49e0
	struct FMapIconsRowHandle MakeMapIcons(struct UE4::FName RowName); // Function Icarus.MapIconsLibrary.MakeMapIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4940
	struct FMapIconsRowHandle MakeLiteralMapIcons(struct FMapIconsRowHandle RowHandle); // Function Icarus.MapIconsLibrary.MakeLiteralMapIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c47a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.MapIconsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17c4680
	struct FMapIconsEnum IntToStruct(int32_t IntValue); // Function Icarus.MapIconsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4560
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.MapIconsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17c4440
	void GetMapIconsStruct(struct FMapIconsRowHandle RowHandle, struct FMapIconsData& MapIcons, enum class EValid& Paths); // Function Icarus.MapIconsLibrary.GetMapIconsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c4100
	bool EqualEqual_FMapIconsRowHandleFMapIconsRowHandle(struct FMapIconsRowHandle RowHandleA, struct FMapIconsRowHandle RowHandleB); // Function Icarus.MapIconsLibrary.EqualEqual_FMapIconsRowHandleFMapIconsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c3d50
	bool EqualEqual_EnumEnum(struct FMapIconsEnum A, struct FMapIconsEnum B); // Function Icarus.MapIconsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c3b70
	struct FMapIconsRowHandle CastToMapIconsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.MapIconsLibrary.CastToMapIconsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c3930
	void BreakMapIconsEnum(struct FMapIconsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.MapIconsLibrary.BreakMapIconsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17c3670
	void AddRowToMapIconsTable(struct UE4::FName Name, struct FMapIconsData Data, struct FMapIconsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.MapIconsLibrary.AddRowToMapIconsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c30e0
};

// Class Icarus.MapIconsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMapIconsTable : UIcarusDataTable {
};

// Class Icarus.MapManagerBase
// Size: 0x270 (Inherited: 0x220)
struct AMapManagerBase : AActor {
	struct FTransform MapCorner; // 0x220(0x30)
	int32_t TileSize; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct TArray<struct FRadarV3ScanData> RadarV3Scans; // 0x258(0x10)
	struct UMapManagerRecorderComponent* Recorder; // 0x268(0x08)

	void UpdatePendingFOWDrawLocations(struct TArray<struct FMapRow>& MapRows, struct TArray<struct FVector>& LocationArrayToUpdate); // Function Icarus.MapManagerBase.UpdatePendingFOWDrawLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17c5d60
	bool ShouldDrawFOWLocations(struct TArray<struct FVector>& NewLocations, struct TArray<struct FVector>& OldLocations); // Function Icarus.MapManagerBase.ShouldDrawFOWLocations // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x17c5820
	void SetFOWMapTileFlags(struct TMap<struct FIntPoint, int32_t>& TileFlags); // Function Icarus.MapManagerBase.SetFOWMapTileFlags // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x17c3fd0
	void SaveToDatabase(struct TMap<struct FIntPoint, int32_t>& TileFlags); // Function Icarus.MapManagerBase.SaveToDatabase // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x17c3fd0
	void RestoreFromDatabase(struct TMap<struct FIntPoint, int32_t>& TileFlags, struct TArray<struct FRadarV3ScanData>& RadarScans); // Function Icarus.MapManagerBase.RestoreFromDatabase // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x17c5520
	struct FVector RadarTileToWorldLocation(int32_t X, int32_t Y); // Function Icarus.MapManagerBase.RadarTileToWorldLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x17c5300
	void GetFOWMapTileFlags(struct TMap<struct FIntPoint, int32_t>& TileFlags); // Function Icarus.MapManagerBase.GetFOWMapTileFlags // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x17c3fd0
};

// Class Icarus.MapManagerRecorderComponent
// Size: 0x138 (Inherited: 0xd8)
struct UMapManagerRecorderComponent : UIcarusStateRecorderComponent {
	struct FMapManagerRecord Record; // 0xd8(0x60)
};

// Class Icarus.MapSearchAreaLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMapSearchAreaLibrary : URowLibrary {

	struct FMapSearchAreaRowHandle StructToRowHandle(struct FMapSearchAreaEnum EnumValue); // Function Icarus.MapSearchAreaLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5cb0
	struct UE4::FName StructToName(struct FMapSearchAreaEnum EnumValue); // Function Icarus.MapSearchAreaLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5b60
	int32_t StructToInt(struct FMapSearchAreaEnum EnumValue); // Function Icarus.MapSearchAreaLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5a20
	struct FMapSearchAreaEnum RowHandleToStruct(struct FMapSearchAreaRowHandle RowHandle); // Function Icarus.MapSearchAreaLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c5760
	void RemoveRowFromMapSearchAreaTable(struct UE4::FName Name); // Function Icarus.MapSearchAreaLibrary.RemoveRowFromMapSearchAreaTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17c54a0
	void RefreshConstants(); // Function Icarus.MapSearchAreaLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17c5400
	int32_t NumRows(); // Function Icarus.MapSearchAreaLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c52d0
	bool NotEqual_EnumName(struct FMapSearchAreaEnum A, struct UE4::FName B); // Function Icarus.MapSearchAreaLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c51b0
	bool NotEqual_EnumEnum(struct FMapSearchAreaEnum A, struct FMapSearchAreaEnum B); // Function Icarus.MapSearchAreaLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4fd0
	struct FMapSearchAreaEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.MapSearchAreaLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4e50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.MapSearchAreaLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17c4d30
	struct FMapSearchAreaRowHandle MakeMapSearchAreaFromIndex(int32_t Index); // Function Icarus.MapSearchAreaLibrary.MakeMapSearchAreaFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4c10
	struct FMapSearchAreaEnum MakeMapSearchAreaEnum(struct FMapSearchAreaEnum Enum); // Function Icarus.MapSearchAreaLibrary.MakeMapSearchAreaEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4b90
	struct FMapSearchAreaRowHandle MakeMapSearchArea(struct UE4::FName RowName); // Function Icarus.MapSearchAreaLibrary.MakeMapSearchArea // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4af0
	struct FMapSearchAreaRowHandle MakeLiteralMapSearchArea(struct FMapSearchAreaRowHandle RowHandle); // Function Icarus.MapSearchAreaLibrary.MakeLiteralMapSearchArea // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c4870
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.MapSearchAreaLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17c4710
	struct FMapSearchAreaEnum IntToStruct(int32_t IntValue); // Function Icarus.MapSearchAreaLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c45f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.MapSearchAreaLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17c44d0
	void GetMapSearchAreaStruct(struct FMapSearchAreaRowHandle RowHandle, struct FMapSearchArea& MapSearchArea, enum class EValid& Paths); // Function Icarus.MapSearchAreaLibrary.GetMapSearchAreaStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c4290
	bool EqualEqual_FMapSearchAreaRowHandleFMapSearchAreaRowHandle(struct FMapSearchAreaRowHandle RowHandleA, struct FMapSearchAreaRowHandle RowHandleB); // Function Icarus.MapSearchAreaLibrary.EqualEqual_FMapSearchAreaRowHandleFMapSearchAreaRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c3e90
	bool EqualEqual_EnumEnum(struct FMapSearchAreaEnum A, struct FMapSearchAreaEnum B); // Function Icarus.MapSearchAreaLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c3c60
	struct FMapSearchAreaRowHandle CastToMapSearchAreaRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.MapSearchAreaLibrary.CastToMapSearchAreaRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c3a50
	void BreakMapSearchAreaEnum(struct FMapSearchAreaEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.MapSearchAreaLibrary.BreakMapSearchAreaEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17c37d0
	void AddRowToMapSearchAreaTable(struct UE4::FName Name, struct FMapSearchArea Data, struct FMapSearchAreaRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.MapSearchAreaLibrary.AddRowToMapSearchAreaTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c33c0
};

// Class Icarus.MapSearchAreaProxy
// Size: 0x2d0 (Inherited: 0x2b0)
struct AMapSearchAreaProxy : AIcarusActor {
	float Radius; // 0x2b0(0x04)
	struct FMapSearchAreaRowHandle SearchArea; // 0x2b4(0x18)
	char pad_2CC[0x4]; // 0x2cc(0x04)
};

// Class Icarus.MapSearchAreaRecorder
// Size: 0x170 (Inherited: 0x160)
struct UMapSearchAreaRecorder : UActorStateRecorderComponent {
	struct UE4::FName MapSearchAreaName; // 0x158(0x08)
	float Radius; // 0x160(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
};

// Class Icarus.MapSearchAreaTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMapSearchAreaTable : UIcarusDataTable {
};

// Class Icarus.MapSubsystem
// Size: 0x90 (Inherited: 0x30)
struct UMapSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnMapIconsUpdated; // 0x30(0x10)
	struct TMap<struct UUserWidget*, struct UIcarusMapIconComponent*> RegisteredMapIcons; // 0x40(0x50)

	void UpdateWidgetVisibility(); // Function Icarus.MapSubsystem.UpdateWidgetVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x17cb560
	void RegisterIcon(struct UIcarusMapIconComponent* Component); // Function Icarus.MapSubsystem.RegisterIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x17cae70
	void GetMapIconWidgets(struct TArray<struct UUserWidget*>& OutMapIconWidgets); // Function Icarus.MapSubsystem.GetMapIconWidgets // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17c94c0
	void DeregisterIcon(struct UIcarusMapIconComponent* Component); // Function Icarus.MapSubsystem.DeregisterIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x17c8f90
};

// Class Icarus.MasterAccolade
// Size: 0x28 (Inherited: 0x28)
struct UMasterAccolade : UAccoladeImpl {
};

// Class Icarus.MatchmakingSubsystem
// Size: 0x120 (Inherited: 0x30)
struct UMatchmakingSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnAvailableSessionsUpdated; // 0x30(0x10)
	bool bBlockFindSessions; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<struct FIcarusSession> BackendSessions; // 0x48(0x10)
	struct TArray<struct FIcarusSession> MultiplayerSessions; // 0x58(0x10)
	struct TArray<struct FIcarusSession> FilteredSessions; // 0x68(0x10)
	struct TArray<struct FIcarusSession> FilteredTutorialSessions; // 0x78(0x10)
	struct TArray<struct FIcarusSession> AvailableSessions; // 0x88(0x10)
	struct AIcarusPlayerController* PlayerController; // 0x98(0x08)
	struct AIcarusPlayerState* PlayerState; // 0xa0(0x08)
	bool bRequiresFiltering; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct UFindFriendSessionCallbackProxy* FindFriendSessionCallbackProxy; // 0xb0(0x08)
	struct UFindSessionsCallbackProxyAdvanced* FindSessionsCallbackProxy; // 0xb8(0x08)
	struct FString FindFriendUserId; // 0xc0(0x10)
	struct TMap<struct FString, struct FBlueprintSessionResult> FriendSessions; // 0xd0(0x50)

	void RefreshSessions(); // Function Icarus.MatchmakingSubsystem.RefreshSessions // (Final|Native|Public|BlueprintCallable) // @ game+0x17cae50
	void OnPlayerControllerFriendsUpdated(struct AIcarusPlayerController* RegisteredController); // Function Icarus.MatchmakingSubsystem.OnPlayerControllerFriendsUpdated // (Final|Native|Private) // @ game+0x17cad80
	void OnFindFriendSessionResult(struct TArray<struct FBlueprintSessionResult>& Result); // Function Icarus.MatchmakingSubsystem.OnFindFriendSessionResult // (Final|Native|Private|HasOutParms) // @ game+0x17cacb0
	void OnFindAllSessionsSuccess(struct TArray<struct FBlueprintSessionResult>& Result); // Function Icarus.MatchmakingSubsystem.OnFindAllSessionsSuccess // (Final|Native|Private|HasOutParms) // @ game+0x17cabe0
	void OnFindAllSessionsFailure(struct TArray<struct FBlueprintSessionResult>& Result); // Function Icarus.MatchmakingSubsystem.OnFindAllSessionsFailure // (Final|Native|Private|HasOutParms) // @ game+0x17cab10
	struct TArray<struct FIcarusSession> GetTutorialSessions(); // Function Icarus.MatchmakingSubsystem.GetTutorialSessions // (Final|Native|Public|BlueprintCallable) // @ game+0x17c9c10
	struct TArray<struct FSessionsSearchSetting> GetSessionSearchFilters(); // Function Icarus.MatchmakingSubsystem.GetSessionSearchFilters // (Final|Native|Static|Private) // @ game+0x17c9b30
	struct TArray<struct FIcarusSession> GetAvailableSessions(); // Function Icarus.MatchmakingSubsystem.GetAvailableSessions // (Final|Native|Public|BlueprintCallable) // @ game+0x17c9480
	void BackendProspectListUpdated(); // Function Icarus.MatchmakingSubsystem.BackendProspectListUpdated // (Final|Native|Private) // @ game+0x17c8a70
};

// Class Icarus.MeshableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UMeshableComponent : UTraitComponent {

	bool GetMeshableData(struct FMeshableData& OutData); // Function Icarus.MeshableComponent.GetMeshableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x17c96d0
};

// Class Icarus.MeshableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMeshableLibrary : URowLibrary {

	struct FMeshableRowHandle StructToRowHandle(struct FMeshableEnum EnumValue); // Function Icarus.MeshableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb400
	struct UE4::FName StructToName(struct FMeshableEnum EnumValue); // Function Icarus.MeshableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb2c0
	int32_t StructToInt(struct FMeshableEnum EnumValue); // Function Icarus.MeshableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb180
	struct FMeshableEnum RowHandleToStruct(struct FMeshableRowHandle RowHandle); // Function Icarus.MeshableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb000
	void RemoveRowFromMeshableTable(struct UE4::FName Name); // Function Icarus.MeshableLibrary.RemoveRowFromMeshableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17caf00
	void RefreshConstants(); // Function Icarus.MeshableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17cae10
	int32_t NumRows(); // Function Icarus.MeshableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17caab0
	bool NotEqual_EnumName(struct FMeshableEnum A, struct UE4::FName B); // Function Icarus.MeshableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca8d0
	bool NotEqual_EnumEnum(struct FMeshableEnum A, struct FMeshableEnum B); // Function Icarus.MeshableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca6f0
	struct FMeshableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.MeshableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca5d0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.MeshableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17ca4b0
	struct FMeshableRowHandle MakeMeshableFromIndex(int32_t Index); // Function Icarus.MeshableLibrary.MakeMeshableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca270
	struct FMeshableEnum MakeMeshableEnum(struct FMeshableEnum Enum); // Function Icarus.MeshableLibrary.MakeMeshableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca1f0
	struct FMeshableRowHandle MakeMeshable(struct UE4::FName RowName); // Function Icarus.MeshableLibrary.MakeMeshable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca150
	struct FMeshableRowHandle MakeLiteralMeshable(struct FMeshableRowHandle RowHandle); // Function Icarus.MeshableLibrary.MakeLiteralMeshable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9fb0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.MeshableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17c9e90
	struct FMeshableEnum IntToStruct(int32_t IntValue); // Function Icarus.MeshableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9d70
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.MeshableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17c9c50
	void GetMeshableStruct(struct FMeshableRowHandle RowHandle, struct FMeshableData& Meshable, enum class EValid& Paths); // Function Icarus.MeshableLibrary.GetMeshableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c9830
	bool EqualEqual_FMeshableRowHandleFMeshableRowHandle(struct FMeshableRowHandle RowHandleA, struct FMeshableRowHandle RowHandleB); // Function Icarus.MeshableLibrary.EqualEqual_FMeshableRowHandleFMeshableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9200
	bool EqualEqual_EnumEnum(struct FMeshableEnum A, struct FMeshableEnum B); // Function Icarus.MeshableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9020
	struct FMeshableRowHandle CastToMeshableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.MeshableLibrary.CastToMeshableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c8d50
	void BreakMeshableEnum(struct FMeshableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.MeshableLibrary.BreakMeshableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17c8a90
	void AddRowToMeshableTable(struct UE4::FName Name, struct FMeshableData Data, struct FMeshableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.MeshableLibrary.AddRowToMeshableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c85e0
};

// Class Icarus.MeshableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMeshableTable : UIcarusDataTable {
};

// Class Icarus.MetaCurrencyLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMetaCurrencyLibrary : URowLibrary {

	struct FMetaCurrencyRowHandle StructToRowHandle(struct FMetaCurrencyEnum EnumValue); // Function Icarus.MetaCurrencyLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb4b0
	struct UE4::FName StructToName(struct FMetaCurrencyEnum EnumValue); // Function Icarus.MetaCurrencyLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb360
	int32_t StructToInt(struct FMetaCurrencyEnum EnumValue); // Function Icarus.MetaCurrencyLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb220
	struct FMetaCurrencyEnum RowHandleToStruct(struct FMetaCurrencyRowHandle RowHandle); // Function Icarus.MetaCurrencyLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cb0c0
	void RemoveRowFromMetaCurrencyTable(struct UE4::FName Name); // Function Icarus.MetaCurrencyLibrary.RemoveRowFromMetaCurrencyTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17caf80
	void RefreshConstants(); // Function Icarus.MetaCurrencyLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17cae30
	int32_t NumRows(); // Function Icarus.MetaCurrencyLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17caae0
	bool NotEqual_EnumName(struct FMetaCurrencyEnum A, struct UE4::FName B); // Function Icarus.MetaCurrencyLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca9c0
	bool NotEqual_EnumEnum(struct FMetaCurrencyEnum A, struct FMetaCurrencyEnum B); // Function Icarus.MetaCurrencyLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca7e0
	struct FMetaCurrencyEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.MetaCurrencyLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca660
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.MetaCurrencyLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17ca540
	struct FMetaCurrencyRowHandle MakeMetaCurrencyFromIndex(int32_t Index); // Function Icarus.MetaCurrencyLibrary.MakeMetaCurrencyFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca420
	struct FMetaCurrencyEnum MakeMetaCurrencyEnum(struct FMetaCurrencyEnum Enum); // Function Icarus.MetaCurrencyLibrary.MakeMetaCurrencyEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca3a0
	struct FMetaCurrencyRowHandle MakeMetaCurrency(struct UE4::FName RowName); // Function Icarus.MetaCurrencyLibrary.MakeMetaCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca300
	struct FMetaCurrencyRowHandle MakeLiteralMetaCurrency(struct FMetaCurrencyRowHandle RowHandle); // Function Icarus.MetaCurrencyLibrary.MakeLiteralMetaCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ca080
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.MetaCurrencyLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17c9f20
	struct FMetaCurrencyEnum IntToStruct(int32_t IntValue); // Function Icarus.MetaCurrencyLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9e00
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.MetaCurrencyLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17c9ce0
	void GetMetaCurrencyStruct(struct FMetaCurrencyRowHandle RowHandle, struct FMetaCurrency& MetaCurrency, enum class EValid& Paths); // Function Icarus.MetaCurrencyLibrary.GetMetaCurrencyStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c99b0
	bool EqualEqual_FMetaCurrencyRowHandleFMetaCurrencyRowHandle(struct FMetaCurrencyRowHandle RowHandleA, struct FMetaCurrencyRowHandle RowHandleB); // Function Icarus.MetaCurrencyLibrary.EqualEqual_FMetaCurrencyRowHandleFMetaCurrencyRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9340
	bool EqualEqual_EnumEnum(struct FMetaCurrencyEnum A, struct FMetaCurrencyEnum B); // Function Icarus.MetaCurrencyLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17c9110
	struct FMetaCurrencyRowHandle CastToMetaCurrencyRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.MetaCurrencyLibrary.CastToMetaCurrencyRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c8e70
	void BreakMetaCurrencyEnum(struct FMetaCurrencyEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.MetaCurrencyLibrary.BreakMetaCurrencyEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17c8bf0
	void AddRowToMetaCurrencyTable(struct UE4::FName Name, struct FMetaCurrency Data, struct FMetaCurrencyRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.MetaCurrencyLibrary.AddRowToMetaCurrencyTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17c88b0
};

// Class Icarus.MetaCurrencyTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMetaCurrencyTable : UIcarusDataTable {
};

// Class Icarus.MetaResourceNodesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMetaResourceNodesLibrary : URowLibrary {

	struct FMetaResourceNodesRowHandle StructToRowHandle(struct FMetaResourceNodesEnum EnumValue); // Function Icarus.MetaResourceNodesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d0aa0
	struct UE4::FName StructToName(struct FMetaResourceNodesEnum EnumValue); // Function Icarus.MetaResourceNodesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d0960
	int32_t StructToInt(struct FMetaResourceNodesEnum EnumValue); // Function Icarus.MetaResourceNodesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d0820
	struct FMetaResourceNodesEnum RowHandleToStruct(struct FMetaResourceNodesRowHandle RowHandle); // Function Icarus.MetaResourceNodesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d06a0
	void RemoveRowFromMetaResourceNodesTable(struct UE4::FName Name); // Function Icarus.MetaResourceNodesLibrary.RemoveRowFromMetaResourceNodesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17d05a0
	void RefreshConstants(); // Function Icarus.MetaResourceNodesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17d0560
	int32_t NumRows(); // Function Icarus.MetaResourceNodesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d03a0
	bool NotEqual_EnumName(struct FMetaResourceNodesEnum A, struct UE4::FName B); // Function Icarus.MetaResourceNodesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d01c0
	bool NotEqual_EnumEnum(struct FMetaResourceNodesEnum A, struct FMetaResourceNodesEnum B); // Function Icarus.MetaResourceNodesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cffe0
	struct FMetaResourceNodesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.MetaResourceNodesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfec0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.MetaResourceNodesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17cfda0
	struct FMetaResourceNodesRowHandle MakeMetaResourceNodesFromIndex(int32_t Index); // Function Icarus.MetaResourceNodesLibrary.MakeMetaResourceNodesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfb60
	struct FMetaResourceNodesEnum MakeMetaResourceNodesEnum(struct FMetaResourceNodesEnum Enum); // Function Icarus.MetaResourceNodesLibrary.MakeMetaResourceNodesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfae0
	struct FMetaResourceNodesRowHandle MakeMetaResourceNodes(struct UE4::FName RowName); // Function Icarus.MetaResourceNodesLibrary.MakeMetaResourceNodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfa40
	struct FMetaResourceNodesRowHandle MakeLiteralMetaResourceNodes(struct FMetaResourceNodesRowHandle RowHandle); // Function Icarus.MetaResourceNodesLibrary.MakeLiteralMetaResourceNodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cf8a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.MetaResourceNodesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17cf780
	struct FMetaResourceNodesEnum IntToStruct(int32_t IntValue); // Function Icarus.MetaResourceNodesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cf660
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.MetaResourceNodesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17cf540
	void GetMetaResourceNodesStruct(struct FMetaResourceNodesRowHandle RowHandle, struct FMetaResourceNodeInfo& MetaResourceNodes, enum class EValid& Paths); // Function Icarus.MetaResourceNodesLibrary.GetMetaResourceNodesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17cf1c0
	bool EqualEqual_FMetaResourceNodesRowHandleFMetaResourceNodesRowHandle(struct FMetaResourceNodesRowHandle RowHandleA, struct FMetaResourceNodesRowHandle RowHandleB); // Function Icarus.MetaResourceNodesLibrary.EqualEqual_FMetaResourceNodesRowHandleFMetaResourceNodesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cef40
	bool EqualEqual_EnumEnum(struct FMetaResourceNodesEnum A, struct FMetaResourceNodesEnum B); // Function Icarus.MetaResourceNodesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ced60
	struct FMetaResourceNodesRowHandle CastToMetaResourceNodesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.MetaResourceNodesLibrary.CastToMetaResourceNodesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ceb20
	void BreakMetaResourceNodesEnum(struct FMetaResourceNodesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.MetaResourceNodesLibrary.BreakMetaResourceNodesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17ce1a0
	void AddRowToMetaResourceNodesTable(struct UE4::FName Name, struct FMetaResourceNodeInfo Data, struct FMetaResourceNodesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.MetaResourceNodesLibrary.AddRowToMetaResourceNodesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17cdca0
};

// Class Icarus.MetaResourceNodesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMetaResourceNodesTable : UIcarusDataTable {
};

// Class Icarus.MineableResource
// Size: 0x2e8 (Inherited: 0x2b0)
struct AMineableResource : AIcarusActor {
	struct TArray<struct UDestructibleComponent*> DestructibleComponents; // 0x2b0(0x10)
	struct FItemTemplateRowHandle DestructionItemDropType; // 0x2c0(0x18)
	struct UStaticMesh* DestructionItemMesh; // 0x2d8(0x08)
	char pad_2E0[0x8]; // 0x2e0(0x08)

	void OnClient_DestructibleComponentDestroyed(int32_t ComponentIndex); // Function Icarus.MineableResource.OnClient_DestructibleComponentDestroyed // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x17d0400
};

// Class Icarus.MiningSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UMiningSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnVoxelHitNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnVoxelCompletedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnVoxelResourceMinedNotify; // 0x50(0x10)

	void BroadcastVoxelResourceMinedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.MiningSubsystem.BroadcastVoxelResourceMinedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17ce580
	void BroadcastVoxelHitDelegate(struct AIcarusPlayerCharacter* Player, struct AVoxelResource* Voxel); // Function Icarus.MiningSubsystem.BroadcastVoxelHitDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d580
	void BroadcastVoxelCompletedDelegate(struct AIcarusPlayerCharacter* Player, struct AVoxelResource* Voxel); // Function Icarus.MiningSubsystem.BroadcastVoxelCompletedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d660
};

// Class Icarus.MissionSubsystem
// Size: 0x70 (Inherited: 0x30)
struct UMissionSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnFactionItemRemovedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFactionEnterAreaNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnDefendLeftAreaNotify; // 0x50(0x10)
	struct FMulticastInlineDelegate OnProspectMissionCompleteNotify; // 0x60(0x10)

	void BroadcastProspectMissionCompleteDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.MissionSubsystem.BroadcastProspectMissionCompleteDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17ce4f0
	void BroadcastFactionItemRemovedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.MissionSubsystem.BroadcastFactionItemRemovedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1701d00
	void BroadcastFactionEnterAreaDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Actor); // Function Icarus.MissionSubsystem.BroadcastFactionEnterAreaDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d660
	void BroadcastDefendLeftAreaDelegate(struct AIcarusActor* Actor); // Function Icarus.MissionSubsystem.BroadcastDefendLeftAreaDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17ce460
};

// Class Icarus.ModifiableInterface
// Size: 0x28 (Inherited: 0x28)
struct UModifiableInterface : UInterface {

	void OnModifiersUpdated(struct UModifierStateComponent* ModifiedComponent, bool Removed); // Function Icarus.ModifiableInterface.OnModifiersUpdated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17d0490
	int32_t GetNextUID(); // Function Icarus.ModifiableInterface.GetNextUID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17cf510
};

// Class Icarus.ModificationBehaviour
// Size: 0x28 (Inherited: 0x28)
struct UModificationBehaviour : UObject {
};

// Class Icarus.ModifierStateAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UModifierStateAudioDataLibrary : URowLibrary {

	struct FModifierStateAudioDataRowHandle StructToRowHandle(struct FModifierStateAudioDataEnum EnumValue); // Function Icarus.ModifierStateAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d0b50
	struct UE4::FName StructToName(struct FModifierStateAudioDataEnum EnumValue); // Function Icarus.ModifierStateAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d0a00
	int32_t StructToInt(struct FModifierStateAudioDataEnum EnumValue); // Function Icarus.ModifierStateAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d08c0
	struct FModifierStateAudioDataEnum RowHandleToStruct(struct FModifierStateAudioDataRowHandle RowHandle); // Function Icarus.ModifierStateAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d0760
	void RemoveRowFromModifierStateAudioDataTable(struct UE4::FName Name); // Function Icarus.ModifierStateAudioDataLibrary.RemoveRowFromModifierStateAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17d0620
	void RefreshConstants(); // Function Icarus.ModifierStateAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17d0580
	int32_t NumRows(); // Function Icarus.ModifierStateAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d03d0
	bool NotEqual_EnumName(struct FModifierStateAudioDataEnum A, struct UE4::FName B); // Function Icarus.ModifierStateAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d02b0
	bool NotEqual_EnumEnum(struct FModifierStateAudioDataEnum A, struct FModifierStateAudioDataEnum B); // Function Icarus.ModifierStateAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d00d0
	struct FModifierStateAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ModifierStateAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cff50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ModifierStateAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17cfe30
	struct FModifierStateAudioDataRowHandle MakeModifierStateAudioDataFromIndex(int32_t Index); // Function Icarus.ModifierStateAudioDataLibrary.MakeModifierStateAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfd10
	struct FModifierStateAudioDataEnum MakeModifierStateAudioDataEnum(struct FModifierStateAudioDataEnum Enum); // Function Icarus.ModifierStateAudioDataLibrary.MakeModifierStateAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfc90
	struct FModifierStateAudioDataRowHandle MakeModifierStateAudioData(struct UE4::FName RowName); // Function Icarus.ModifierStateAudioDataLibrary.MakeModifierStateAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cfbf0
	struct FModifierStateAudioDataRowHandle MakeLiteralModifierStateAudioData(struct FModifierStateAudioDataRowHandle RowHandle); // Function Icarus.ModifierStateAudioDataLibrary.MakeLiteralModifierStateAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cf970
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ModifierStateAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17cf810
	struct FModifierStateAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.ModifierStateAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cf6f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ModifierStateAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17cf5d0
	void GetModifierStateAudioDataStruct(struct FModifierStateAudioDataRowHandle RowHandle, struct FModifierStateAudioData& ModifierStateAudioData, enum class EValid& Paths); // Function Icarus.ModifierStateAudioDataLibrary.GetModifierStateAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17cf350
	bool EqualEqual_FModifierStateAudioDataRowHandleFModifierStateAudioDataRowHandle(struct FModifierStateAudioDataRowHandle RowHandleA, struct FModifierStateAudioDataRowHandle RowHandleB); // Function Icarus.ModifierStateAudioDataLibrary.EqualEqual_FModifierStateAudioDataRowHandleFModifierStateAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cf080
	bool EqualEqual_EnumEnum(struct FModifierStateAudioDataEnum A, struct FModifierStateAudioDataEnum B); // Function Icarus.ModifierStateAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17cee50
	struct FModifierStateAudioDataRowHandle CastToModifierStateAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ModifierStateAudioDataLibrary.CastToModifierStateAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17cec40
	void BreakModifierStateAudioDataEnum(struct FModifierStateAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ModifierStateAudioDataLibrary.BreakModifierStateAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17ce300
	void AddRowToModifierStateAudioDataTable(struct UE4::FName Name, struct FModifierStateAudioData Data, struct FModifierStateAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ModifierStateAudioDataLibrary.AddRowToModifierStateAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17cdf00
};

// Class Icarus.ModifierStateAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UModifierStateAudioDataTable : UIcarusDataTable {
};

// Class Icarus.ModifierStateComponent
// Size: 0x370 (Inherited: 0xb0)
struct UModifierStateComponent : UActorComponent {
	struct FModifierStatesRowHandle DataRowHandleNew; // 0xb0(0x18)
	struct AController* Instigator; // 0xc8(0x08)
	struct AActor* Causer; // 0xd0(0x08)
	struct AActor* ReplicatedOwner; // 0xd8(0x08)
	struct TScriptInterface<IModifiableInterface> OwningModifiableInterface; // 0xe0(0x10)
	int32_t ModifierUID; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct USceneComponent* CosmeticComponent; // 0xf8(0x08)
	float ModifierLifetime; // 0x100(0x04)
	float ElapsedLifeTime; // 0x104(0x04)
	float CachedModifierLifeTimeModifier; // 0x108(0x04)
	float RemainingTime; // 0x10c(0x04)
	bool ModifierIsActive; // 0x110(0x01)
	struct FMulticastSparseDelegate OnModifierUpdated; // 0x111(0x01)
	struct FMulticastSparseDelegate OnModifierLifetimeUpdated; // 0x112(0x01)
	char pad_113[0x5]; // 0x113(0x05)
	struct FModifierStateData CachedModifierStateData; // 0x118(0x240)
	char pad_358[0x18]; // 0x358(0x18)

	void SetModifierLifeTime(float LifeTime); // Function Icarus.ModifierStateComponent.SetModifierLifeTime // (Final|Native|Public|BlueprintCallable) // @ game+0x17d4ae0
	void SetActiveState(bool IsActive); // Function Icarus.ModifierStateComponent.SetActiveState // (Final|Native|Public) // @ game+0x17d49c0
	void RefreshLifetime(); // Function Icarus.ModifierStateComponent.RefreshLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x17d47d0
	void OnStatContainerUpdated(); // Function Icarus.ModifierStateComponent.OnStatContainerUpdated // (Final|Native|Private) // @ game+0x17d4770
	void OnRep_ReplicatedOwningActor(); // Function Icarus.ModifierStateComponent.OnRep_ReplicatedOwningActor // (Final|Native|Public) // @ game+0x17d4750
	void OnRep_RemainingTime(); // Function Icarus.ModifierStateComponent.OnRep_RemainingTime // (Final|Native|Public) // @ game+0x17d4730
	void OnRep_DataRowHandle(); // Function Icarus.ModifierStateComponent.OnRep_DataRowHandle // (Final|Native|Public) // @ game+0x17d4710
	void ModifierTick(float DeltaTime); // Function Icarus.ModifierStateComponent.ModifierTick // (Native|Event|Public|BlueprintEvent) // @ game+0x16b0d40
	bool ModifierRemoved(); // Function Icarus.ModifierStateComponent.ModifierRemoved // (Native|Event|Public|BlueprintEvent) // @ game+0x16b1800
	bool ModifierApplied(); // Function Icarus.ModifierStateComponent.ModifierApplied // (Native|Event|Public|BlueprintEvent) // @ game+0x1636c70
	void InitComponent(); // Function Icarus.ModifierStateComponent.InitComponent // (Native|Event|Public|BlueprintEvent) // @ game+0x16e42d0
	struct FModifierStateData GetModifierStateData(); // Function Icarus.ModifierStateComponent.GetModifierStateData // (Final|Native|Public|BlueprintCallable) // @ game+0x17d3b70
	float GetCurrentLifetimeMultiplier(); // Function Icarus.ModifierStateComponent.GetCurrentLifetimeMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x17d3b40
	bool DoesMatchTagQuery(); // Function Icarus.ModifierStateComponent.DoesMatchTagQuery // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17d38b0
	bool CheckTickConditions(); // Function Icarus.ModifierStateComponent.CheckTickConditions // (Native|Event|Public|BlueprintEvent) // @ game+0x16b0680
};

// Class Icarus.ModifierStateCondition
// Size: 0x28 (Inherited: 0x28)
struct UModifierStateCondition : UObject {
};

// Class Icarus.ModifierStatesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UModifierStatesLibrary : URowLibrary {

	struct FModifierStatesRowHandle StructToRowHandle(struct FModifierStatesEnum EnumValue); // Function Icarus.ModifierStatesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4d90
	struct UE4::FName StructToName(struct FModifierStatesEnum EnumValue); // Function Icarus.ModifierStatesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4cf0
	int32_t StructToInt(struct FModifierStatesEnum EnumValue); // Function Icarus.ModifierStatesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4c50
	struct FModifierStatesEnum RowHandleToStruct(struct FModifierStatesRowHandle RowHandle); // Function Icarus.ModifierStatesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4900
	void RemoveRowFromModifierStatesTable(struct UE4::FName Name); // Function Icarus.ModifierStatesLibrary.RemoveRowFromModifierStatesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17d4880
	void RefreshConstants(); // Function Icarus.ModifierStatesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17d47b0
	int32_t NumRows(); // Function Icarus.ModifierStatesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d46e0
	bool NotEqual_EnumName(struct FModifierStatesEnum A, struct UE4::FName B); // Function Icarus.ModifierStatesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d45f0
	bool NotEqual_EnumEnum(struct FModifierStatesEnum A, struct FModifierStatesEnum B); // Function Icarus.ModifierStatesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4500
	struct FModifierStatesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ModifierStatesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4470
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ModifierStatesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17d43e0
	struct FModifierStatesRowHandle MakeModifierStatesFromIndex(int32_t Index); // Function Icarus.ModifierStatesLibrary.MakeModifierStatesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4350
	struct FModifierStatesEnum MakeModifierStatesEnum(struct FModifierStatesEnum Enum); // Function Icarus.ModifierStatesLibrary.MakeModifierStatesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d42d0
	struct FModifierStatesRowHandle MakeModifierStates(struct UE4::FName RowName); // Function Icarus.ModifierStatesLibrary.MakeModifierStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4230
	struct FModifierStatesRowHandle MakeLiteralModifierStates(struct FModifierStatesRowHandle RowHandle); // Function Icarus.ModifierStatesLibrary.MakeLiteralModifierStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4160
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ModifierStatesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17d40d0
	struct FModifierStatesEnum IntToStruct(int32_t IntValue); // Function Icarus.ModifierStatesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d4040
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ModifierStatesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17d3fb0
	void GetModifierStatesStruct(struct FModifierStatesRowHandle RowHandle, struct FModifierStateData& ModifierStates, enum class EValid& Paths); // Function Icarus.ModifierStatesLibrary.GetModifierStatesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17d3be0
	bool EqualEqual_FModifierStatesRowHandleFModifierStatesRowHandle(struct FModifierStatesRowHandle RowHandleA, struct FModifierStatesRowHandle RowHandleB); // Function Icarus.ModifierStatesLibrary.EqualEqual_FModifierStatesRowHandleFModifierStatesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d39d0
	bool EqualEqual_EnumEnum(struct FModifierStatesEnum A, struct FModifierStatesEnum B); // Function Icarus.ModifierStatesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d38e0
	struct FModifierStatesRowHandle CastToModifierStatesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ModifierStatesLibrary.CastToModifierStatesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17d3790
	void BreakModifierStatesEnum(struct FModifierStatesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ModifierStatesLibrary.BreakModifierStatesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17d3630
	void AddRowToModifierStatesTable(struct UE4::FName Name, struct FModifierStateData Data, struct FModifierStatesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ModifierStatesLibrary.AddRowToModifierStatesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17d3450
};

// Class Icarus.ModifierStatesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UModifierStatesTable : UIcarusDataTable {
};

// Class Icarus.MultiPointAudioEmitter
// Size: 0x240 (Inherited: 0x200)
struct UMultiPointAudioEmitter : USceneComponent {
	struct TArray<struct FMultiPointAudioNode> Nodes; // 0x1f8(0x10)
	struct UFMODAudioComponent* AudioComponent; // 0x208(0x08)
	char pad_218[0x28]; // 0x218(0x28)

	void Stop(); // Function Icarus.MultiPointAudioEmitter.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x17d4c30
	void SetNodeDefaultWeighting(struct UObject* NodeObject, float Weighting); // Function Icarus.MultiPointAudioEmitter.SetNodeDefaultWeighting // (Final|Native|Public|BlueprintCallable) // @ game+0x17d4b60
	void SetDebugActive(bool bActive); // Function Icarus.MultiPointAudioEmitter.SetDebugActive // (Final|Native|Public|BlueprintCallable) // @ game+0x17d4a50
	void RemoveNode(struct UObject* NodeObject); // Function Icarus.MultiPointAudioEmitter.RemoveNode // (Final|Native|Public|BlueprintCallable) // @ game+0x17d47f0
	void Play(); // Function Icarus.MultiPointAudioEmitter.Play // (Final|Native|Public|BlueprintCallable) // @ game+0x17d4790
	void Initialize(struct UFMODEvent* Event, bool bUseAutomaticPlayback, float MinDistanceOverride, float MaxDistanceOverride); // Function Icarus.MultiPointAudioEmitter.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x17d3e50
	float GetTotalWeighting(); // Function Icarus.MultiPointAudioEmitter.GetTotalWeighting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17d3e20
	int32_t GetNodeCount(); // Function Icarus.MultiPointAudioEmitter.GetNodeCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17d3df0
	struct UFMODAudioComponent* GetAudioComponent(); // Function Icarus.MultiPointAudioEmitter.GetAudioComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17d3b10
	void AddNode(struct UObject* NodeObject, bool bRemoveNodeOnZeroWeighting); // Function Icarus.MultiPointAudioEmitter.AddNode // (Final|Native|Public|BlueprintCallable) // @ game+0x17d3380
};

// Class Icarus.MultiPointAudioNodeInterface
// Size: 0x28 (Inherited: 0x28)
struct UMultiPointAudioNodeInterface : UInterface {

	float GetMultiPointAudioWeighting(); // Function Icarus.MultiPointAudioNodeInterface.GetMultiPointAudioWeighting // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x17d3dc0
	struct FVector GetMultiPointAudioLocation(); // Function Icarus.MultiPointAudioNodeInterface.GetMultiPointAudioLocation // (Native|Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x17d3d80
};

// Class Icarus.MultiTalentAccolade
// Size: 0x28 (Inherited: 0x28)
struct UMultiTalentAccolade : UAccoladeImpl {
};

// Class Icarus.MusicPlayer
// Size: 0xb0 (Inherited: 0x28)
struct UMusicPlayer : UObject {
	char pad_28[0x38]; // 0x28(0x38)
	struct UCurveFloat* FadeCurve; // 0x60(0x08)
	char pad_68[0x48]; // 0x68(0x48)
};

// Class Icarus.MusicSubsystem
// Size: 0x78 (Inherited: 0x30)
struct UMusicSubsystem : UGameInstanceSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct UMusicPlayer*> MusicPlayers; // 0x38(0x10)
	char pad_48[0x30]; // 0x48(0x30)

	void StopMusic(); // Function Icarus.MusicSubsystem.StopMusic // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9cc0
	void StartMusic(); // Function Icarus.MusicSubsystem.StartMusic // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9ca0
	void SetConfig(struct FMusicSubsystemConfig& Config); // Function Icarus.MusicSubsystem.SetConfig // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17d9b50
	void SetConditionWeather(enum class EMusicConditionWeather NewWeather); // Function Icarus.MusicSubsystem.SetConditionWeather // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9ad0
	void SetConditionTimeOfDay(enum class EMusicConditionTimeOfDay NewTimeOfDay); // Function Icarus.MusicSubsystem.SetConditionTimeOfDay // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9a50
	void SetConditionPlayerState(enum class EMusicConditionPlayerState NewPlayerState); // Function Icarus.MusicSubsystem.SetConditionPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x17d99d0
	void SetConditionLocation(enum class EMusicConditionLocation NewLocation); // Function Icarus.MusicSubsystem.SetConditionLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9950
	void SetConditionGameplayEvent(enum class EMusicConditionGameplayEvent GameplayEvent); // Function Icarus.MusicSubsystem.SetConditionGameplayEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x17d98d0
	void SetConditionDropTime(enum class EMusicConditionDropTime NewDropTime); // Function Icarus.MusicSubsystem.SetConditionDropTime // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9850
	void SetConditionDropState(enum class EMusicConditionDropState NewDropState); // Function Icarus.MusicSubsystem.SetConditionDropState // (Final|Native|Public|BlueprintCallable) // @ game+0x17d97d0
	void SetConditionDisaster(enum class EMusicConditionDisaster NewDisaster); // Function Icarus.MusicSubsystem.SetConditionDisaster // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9750
	void SetConditionCombatState(enum class EMusicConditionCombatState NewCombatState); // Function Icarus.MusicSubsystem.SetConditionCombatState // (Final|Native|Public|BlueprintCallable) // @ game+0x17d96d0
	void SetAutoTrackChangeEnabled(bool bEnabled); // Function Icarus.MusicSubsystem.SetAutoTrackChangeEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x17d9640
};

// Class Icarus.MusicTracksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMusicTracksLibrary : URowLibrary {

	struct FMusicTracksRowHandle StructToRowHandle(struct FMusicTracksEnum EnumValue); // Function Icarus.MusicTracksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9e20
	struct UE4::FName StructToName(struct FMusicTracksEnum EnumValue); // Function Icarus.MusicTracksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9d80
	int32_t StructToInt(struct FMusicTracksEnum EnumValue); // Function Icarus.MusicTracksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9ce0
	struct FMusicTracksEnum RowHandleToStruct(struct FMusicTracksRowHandle RowHandle); // Function Icarus.MusicTracksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9580
	void RemoveRowFromMusicTracksTable(struct UE4::FName Name); // Function Icarus.MusicTracksLibrary.RemoveRowFromMusicTracksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17d9500
	void RefreshConstants(); // Function Icarus.MusicTracksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17d94c0
	int32_t NumRows(); // Function Icarus.MusicTracksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9400
	bool NotEqual_EnumName(struct FMusicTracksEnum A, struct UE4::FName B); // Function Icarus.MusicTracksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d92f0
	bool NotEqual_EnumEnum(struct FMusicTracksEnum A, struct FMusicTracksEnum B); // Function Icarus.MusicTracksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9200
	struct FMusicTracksEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.MusicTracksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9170
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.MusicTracksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17d90e0
	struct FMusicTracksRowHandle MakeMusicTracksFromIndex(int32_t Index); // Function Icarus.MusicTracksLibrary.MakeMusicTracksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d9050
	struct FMusicTracksEnum MakeMusicTracksEnum(struct FMusicTracksEnum Enum); // Function Icarus.MusicTracksLibrary.MakeMusicTracksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8fd0
	struct FMusicTracksRowHandle MakeMusicTracks(struct UE4::FName RowName); // Function Icarus.MusicTracksLibrary.MakeMusicTracks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8f30
	struct FMusicTracksRowHandle MakeLiteralMusicTracks(struct FMusicTracksRowHandle RowHandle); // Function Icarus.MusicTracksLibrary.MakeLiteralMusicTracks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8e60
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.MusicTracksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17d8dd0
	struct FMusicTracksEnum IntToStruct(int32_t IntValue); // Function Icarus.MusicTracksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8d40
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.MusicTracksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17d8cb0
	void GetMusicTracksStruct(struct FMusicTracksRowHandle RowHandle, struct FMusicTrack& MusicTracks, enum class EValid& Paths); // Function Icarus.MusicTracksLibrary.GetMusicTracksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17d88b0
	bool EqualEqual_FMusicTracksRowHandleFMusicTracksRowHandle(struct FMusicTracksRowHandle RowHandleA, struct FMusicTracksRowHandle RowHandleB); // Function Icarus.MusicTracksLibrary.EqualEqual_FMusicTracksRowHandleFMusicTracksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8730
	bool EqualEqual_EnumEnum(struct FMusicTracksEnum A, struct FMusicTracksEnum B); // Function Icarus.MusicTracksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8640
	struct FMusicTracksRowHandle CastToMusicTracksRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.MusicTracksLibrary.CastToMusicTracksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17d76d0
	void BreakMusicTracksEnum(struct FMusicTracksEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.MusicTracksLibrary.BreakMusicTracksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17d7570
	void AddRowToMusicTracksTable(struct UE4::FName Name, struct FMusicTrack Data, struct FMusicTracksRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.MusicTracksLibrary.AddRowToMusicTracksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17d7280
};

// Class Icarus.MusicTracksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMusicTracksTable : UIcarusDataTable {
};

// Class Icarus.MutableGameplayTagInterface
// Size: 0x28 (Inherited: 0x28)
struct UMutableGameplayTagInterface : UInterface {

	void SetGameplayTags(struct FGameplayTagContainer& InGameplayTags); // Function Icarus.MutableGameplayTagInterface.SetGameplayTags // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17d9be0
	struct FGameplayTagContainer GetGameplayTags(); // Function Icarus.MutableGameplayTagInterface.GetGameplayTags // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17d8870
};

// Class Icarus.NavBlockingStaticMeshComponent
// Size: 0x4d0 (Inherited: 0x4d0)
struct UNavBlockingStaticMeshComponent : UStaticMeshComponent {
};

// Class Icarus.NetworkProxyComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UNetworkProxyComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)

	void Proxy_SortInventory(struct UInventory* Inventory); // Function Icarus.NetworkProxyComponent.Proxy_SortInventory // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17d9430
	void CheatingNotification(); // Function Icarus.NetworkProxyComponent.CheatingNotification // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xe3ae30
	void Cheat_UnlockCharacterAllFlags(); // Function Icarus.NetworkProxyComponent.Cheat_UnlockCharacterAllFlags // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d85f0
	void Cheat_SetWater(int32_t Water, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetWater // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d84f0
	void Cheat_SetStamina(int32_t Stamina, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetStamina // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d83f0
	void Cheat_SetOxygen(int32_t Oxygen, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetOxygen // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d82f0
	void Cheat_SetHealth(int32_t Health, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetHealth // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d81f0
	void Cheat_SetFood(int32_t Food, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetFood // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d80f0
	void Cheat_SetBodyTemperature(float Value); // Function Icarus.NetworkProxyComponent.Cheat_SetBodyTemperature // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d8040
	void Cheat_ClearStats(); // Function Icarus.NetworkProxyComponent.Cheat_ClearStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7ff0
	void Cheat_ClearInventory(); // Function Icarus.NetworkProxyComponent.Cheat_ClearInventory // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7fa0
	void Cheat_AddWater(int32_t Water, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddWater // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7ea0
	void Cheat_AddStat(struct FStatsEnum Stat, int32_t Value); // Function Icarus.NetworkProxyComponent.Cheat_AddStat // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7d70
	void Cheat_AddStamina(int32_t Stamina, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddStamina // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7c70
	void Cheat_AddOxygen(int32_t Oxygen, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddOxygen // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7b70
	void Cheat_AddHealth(int32_t Health, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddHealth // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7a70
	void Cheat_AddFood(int32_t Food, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddFood // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d7970
	void Cheat_AddExperienceDebt(int32_t Value); // Function Icarus.NetworkProxyComponent.Cheat_AddExperienceDebt // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d78b0
	void Cheat_AddExperience(int32_t Value); // Function Icarus.NetworkProxyComponent.Cheat_AddExperience // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x17d77f0
};

// Class Icarus.NotificationSubsystem
// Size: 0x58 (Inherited: 0x30)
struct UNotificationSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnNotificationsUpdated; // 0x30(0x10)
	struct AIcarusPlayerController* PlayerController; // 0x40(0x08)
	struct TArray<struct FNotification> Notifications; // 0x48(0x10)

	void RefreshNotifications(); // Function Icarus.NotificationSubsystem.RefreshNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x17d94e0
	void NotificationsUpdated(); // Function Icarus.NotificationSubsystem.NotificationsUpdated // (Final|Native|Protected) // @ game+0x17d93e0
	struct TArray<struct FNotification> GetUnseenNotifications(); // Function Icarus.NotificationSubsystem.GetUnseenNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x17d8b50
	struct TArray<struct FNotification> GetNotifications(); // Function Icarus.NotificationSubsystem.GetNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x17d8a40
};

// Class Icarus.ObjectSlot
// Size: 0x2e0 (Inherited: 0x2b0)
struct AObjectSlot : AIcarusActor {
	enum class EObjectSlotType SlotType; // 0x2b0(0x01)
	char pad_2B1[0x7]; // 0x2b1(0x07)
	struct UHighlightableComponent* HighlightableComponent; // 0x2b8(0x08)
	struct UInteractableComponent* InteractableComponent; // 0x2c0(0x08)
	struct ADeployable* AttachedActor; // 0x2c8(0x08)
	struct AObjectSlot* LinkedSlot; // 0x2d0(0x08)
	struct FMulticastSparseDelegate OnLinkEstablished; // 0x2d8(0x01)
	struct FMulticastSparseDelegate OnLinkDestroyed; // 0x2d9(0x01)
	char pad_2DA[0x6]; // 0x2da(0x06)

	bool UpdateVisibility(); // Function Icarus.ObjectSlot.UpdateVisibility // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17286e0
	void OnServer_UnlinkSlots(); // Function Icarus.ObjectSlot.OnServer_UnlinkSlots // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17dea90
	void OnServer_LinkSlots(struct AObjectSlot* SlotToConnect); // Function Icarus.ObjectSlot.OnServer_LinkSlots // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17dea00
	bool OnServer_Interact(struct AActor* Interactor, struct FHitResult& HitResult); // Function Icarus.ObjectSlot.OnServer_Interact // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x17de8c0
	void OnInteraction(struct AActor* Interactor, struct FHitResult HitResult); // Function Icarus.ObjectSlot.OnInteraction // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x17de770
	struct UInventoryComponent* GetSlotInventory(); // Function Icarus.ObjectSlot.GetSlotInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x17dd720
	bool CanLink(struct AObjectSlot* SlotToConnect); // Function Icarus.ObjectSlot.CanLink // (Final|Native|Public|BlueprintCallable) // @ game+0x17dcc00
};

// Class Icarus.OfflineAccountFlagsSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UOfflineAccountFlagsSubsystem : UGameInstanceSubsystem {

	bool SaveFlagsToFile(struct FString PlayerID, struct TArray<int32_t> AccountFlags); // Function Icarus.OfflineAccountFlagsSubsystem.SaveFlagsToFile // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ded70
	bool LoadFlagsFromFile(struct FString PlayerID, struct TArray<int32_t>& AccountFlags); // Function Icarus.OfflineAccountFlagsSubsystem.LoadFlagsFromFile // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ddab0
};

// Class Icarus.OneShotAudio
// Size: 0x258 (Inherited: 0x220)
struct AOneShotAudio : AActor {
	struct FSoftObjectPath EventPath; // 0x220(0x18)
	bool bUseListenerRotation; // 0x238(0x01)
	bool bUseOcclusion; // 0x239(0x01)
	char pad_23A[0xe]; // 0x23a(0x0e)
	struct UAudioContextComponent* AudioContext; // 0x248(0x08)
	struct UAudioOcclusionComponent* OcclusionComponent; // 0x250(0x08)
};

// Class Icarus.OrchestrationEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOrchestrationEventsLibrary : URowLibrary {

	struct FOrchestrationEventsRowHandle StructToRowHandle(struct FOrchestrationEventsEnum EnumValue); // Function Icarus.OrchestrationEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17df180
	struct UE4::FName StructToName(struct FOrchestrationEventsEnum EnumValue); // Function Icarus.OrchestrationEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17df040
	int32_t StructToInt(struct FOrchestrationEventsEnum EnumValue); // Function Icarus.OrchestrationEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17def00
	struct FOrchestrationEventsEnum RowHandleToStruct(struct FOrchestrationEventsRowHandle RowHandle); // Function Icarus.OrchestrationEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17debf0
	void RemoveRowFromOrchestrationEventsTable(struct UE4::FName Name); // Function Icarus.OrchestrationEventsLibrary.RemoveRowFromOrchestrationEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17deaf0
	void RefreshConstants(); // Function Icarus.OrchestrationEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17deab0
	int32_t NumRows(); // Function Icarus.OrchestrationEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de710
	bool NotEqual_EnumName(struct FOrchestrationEventsEnum A, struct UE4::FName B); // Function Icarus.OrchestrationEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de530
	bool NotEqual_EnumEnum(struct FOrchestrationEventsEnum A, struct FOrchestrationEventsEnum B); // Function Icarus.OrchestrationEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de350
	struct FOrchestrationEventsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.OrchestrationEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de230
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.OrchestrationEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17de110
	struct FOrchestrationEventsRowHandle MakeOrchestrationEventsFromIndex(int32_t Index); // Function Icarus.OrchestrationEventsLibrary.MakeOrchestrationEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dded0
	struct FOrchestrationEventsEnum MakeOrchestrationEventsEnum(struct FOrchestrationEventsEnum Enum); // Function Icarus.OrchestrationEventsLibrary.MakeOrchestrationEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dde50
	struct FOrchestrationEventsRowHandle MakeOrchestrationEvents(struct UE4::FName RowName); // Function Icarus.OrchestrationEventsLibrary.MakeOrchestrationEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dddb0
	struct FOrchestrationEventsRowHandle MakeLiteralOrchestrationEvents(struct FOrchestrationEventsRowHandle RowHandle); // Function Icarus.OrchestrationEventsLibrary.MakeLiteralOrchestrationEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ddc10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.OrchestrationEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17dd990
	struct FOrchestrationEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.OrchestrationEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dd870
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.OrchestrationEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17dd750
	void GetOrchestrationEventsStruct(struct FOrchestrationEventsRowHandle RowHandle, struct FOrchestrationEventDescription& OrchestrationEvents, enum class EValid& Paths); // Function Icarus.OrchestrationEventsLibrary.GetOrchestrationEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17dd340
	bool EqualEqual_FOrchestrationEventsRowHandleFOrchestrationEventsRowHandle(struct FOrchestrationEventsRowHandle RowHandleA, struct FOrchestrationEventsRowHandle RowHandleB); // Function Icarus.OrchestrationEventsLibrary.EqualEqual_FOrchestrationEventsRowHandleFOrchestrationEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dd0c0
	bool EqualEqual_EnumEnum(struct FOrchestrationEventsEnum A, struct FOrchestrationEventsEnum B); // Function Icarus.OrchestrationEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dcee0
	struct FOrchestrationEventsRowHandle CastToOrchestrationEventsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.OrchestrationEventsLibrary.CastToOrchestrationEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17dcca0
	void BreakOrchestrationEventsEnum(struct FOrchestrationEventsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.OrchestrationEventsLibrary.BreakOrchestrationEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17dc940
	void AddRowToOrchestrationEventsTable(struct UE4::FName Name, struct FOrchestrationEventDescription Data, struct FOrchestrationEventsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.OrchestrationEventsLibrary.AddRowToOrchestrationEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17dc3a0
};

// Class Icarus.OrchestrationEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOrchestrationEventsTable : UIcarusDataTable {
};

// Class Icarus.OrchestrationStateFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOrchestrationStateFlagsLibrary : URowLibrary {

	struct FOrchestrationStateFlagsRowHandle StructToRowHandle(struct FOrchestrationStateFlagsEnum EnumValue); // Function Icarus.OrchestrationStateFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17df230
	struct UE4::FName StructToName(struct FOrchestrationStateFlagsEnum EnumValue); // Function Icarus.OrchestrationStateFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17df0e0
	int32_t StructToInt(struct FOrchestrationStateFlagsEnum EnumValue); // Function Icarus.OrchestrationStateFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17defa0
	struct FOrchestrationStateFlagsEnum RowHandleToStruct(struct FOrchestrationStateFlagsRowHandle RowHandle); // Function Icarus.OrchestrationStateFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17decb0
	void RemoveRowFromOrchestrationStateFlagsTable(struct UE4::FName Name); // Function Icarus.OrchestrationStateFlagsLibrary.RemoveRowFromOrchestrationStateFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17deb70
	void RefreshConstants(); // Function Icarus.OrchestrationStateFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17dead0
	int32_t NumRows(); // Function Icarus.OrchestrationStateFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de740
	bool NotEqual_EnumName(struct FOrchestrationStateFlagsEnum A, struct UE4::FName B); // Function Icarus.OrchestrationStateFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de620
	bool NotEqual_EnumEnum(struct FOrchestrationStateFlagsEnum A, struct FOrchestrationStateFlagsEnum B); // Function Icarus.OrchestrationStateFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de440
	struct FOrchestrationStateFlagsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.OrchestrationStateFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de2c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.OrchestrationStateFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17de1a0
	struct FOrchestrationStateFlagsRowHandle MakeOrchestrationStateFlagsFromIndex(int32_t Index); // Function Icarus.OrchestrationStateFlagsLibrary.MakeOrchestrationStateFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de080
	struct FOrchestrationStateFlagsEnum MakeOrchestrationStateFlagsEnum(struct FOrchestrationStateFlagsEnum Enum); // Function Icarus.OrchestrationStateFlagsLibrary.MakeOrchestrationStateFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17de000
	struct FOrchestrationStateFlagsRowHandle MakeOrchestrationStateFlags(struct UE4::FName RowName); // Function Icarus.OrchestrationStateFlagsLibrary.MakeOrchestrationStateFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ddf60
	struct FOrchestrationStateFlagsRowHandle MakeLiteralOrchestrationStateFlags(struct FOrchestrationStateFlagsRowHandle RowHandle); // Function Icarus.OrchestrationStateFlagsLibrary.MakeLiteralOrchestrationStateFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ddce0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.OrchestrationStateFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17dda20
	struct FOrchestrationStateFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.OrchestrationStateFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dd900
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.OrchestrationStateFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17dd7e0
	void GetOrchestrationStateFlagsStruct(struct FOrchestrationStateFlagsRowHandle RowHandle, struct FOrchestrationStateFlag& OrchestrationStateFlags, enum class EValid& Paths); // Function Icarus.OrchestrationStateFlagsLibrary.GetOrchestrationStateFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17dd590
	bool EqualEqual_FOrchestrationStateFlagsRowHandleFOrchestrationStateFlagsRowHandle(struct FOrchestrationStateFlagsRowHandle RowHandleA, struct FOrchestrationStateFlagsRowHandle RowHandleB); // Function Icarus.OrchestrationStateFlagsLibrary.EqualEqual_FOrchestrationStateFlagsRowHandleFOrchestrationStateFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dd200
	bool EqualEqual_EnumEnum(struct FOrchestrationStateFlagsEnum A, struct FOrchestrationStateFlagsEnum B); // Function Icarus.OrchestrationStateFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17dcfd0
	struct FOrchestrationStateFlagsRowHandle CastToOrchestrationStateFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.OrchestrationStateFlagsLibrary.CastToOrchestrationStateFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17dcdc0
	void BreakOrchestrationStateFlagsEnum(struct FOrchestrationStateFlagsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.OrchestrationStateFlagsLibrary.BreakOrchestrationStateFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17dcaa0
	void AddRowToOrchestrationStateFlagsTable(struct UE4::FName Name, struct FOrchestrationStateFlag Data, struct FOrchestrationStateFlagsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.OrchestrationStateFlagsLibrary.AddRowToOrchestrationStateFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17dc6e0
};

// Class Icarus.OrchestrationStateFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOrchestrationStateFlagsTable : UIcarusDataTable {
};

// Class Icarus.OreDepositLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOreDepositLibrary : URowLibrary {

	struct FOreDepositRowHandle StructToRowHandle(struct FOreDepositEnum EnumValue); // Function Icarus.OreDepositLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e57e0
	struct UE4::FName StructToName(struct FOreDepositEnum EnumValue); // Function Icarus.OreDepositLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5600
	int32_t StructToInt(struct FOreDepositEnum EnumValue); // Function Icarus.OreDepositLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5420
	struct FOreDepositEnum RowHandleToStruct(struct FOreDepositRowHandle RowHandle); // Function Icarus.OreDepositLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5150
	void RemoveRowFromOreDepositTable(struct UE4::FName Name); // Function Icarus.OreDepositLibrary.RemoveRowFromOreDepositTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17e4fd0
	void RefreshConstants(); // Function Icarus.OreDepositLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17e4ea0
	int32_t NumRows(); // Function Icarus.OreDepositLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4df0
	bool NotEqual_EnumName(struct FOreDepositEnum A, struct UE4::FName B); // Function Icarus.OreDepositLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4b20
	bool NotEqual_EnumEnum(struct FOreDepositEnum A, struct FOreDepositEnum B); // Function Icarus.OreDepositLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4850
	struct FOreDepositEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.OreDepositLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e46a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.OreDepositLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17e44f0
	struct FOreDepositRowHandle MakeOreDepositFromIndex(int32_t Index); // Function Icarus.OreDepositLibrary.MakeOreDepositFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4100
	struct FOreDepositEnum MakeOreDepositEnum(struct FOreDepositEnum Enum); // Function Icarus.OreDepositLibrary.MakeOreDepositEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4080
	struct FOreDepositRowHandle MakeOreDeposit(struct UE4::FName RowName); // Function Icarus.OreDepositLibrary.MakeOreDeposit // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3fe0
	struct FOreDepositRowHandle MakeLiteralOreDeposit(struct FOreDepositRowHandle RowHandle); // Function Icarus.OreDepositLibrary.MakeLiteralOreDeposit // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3d70
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.OreDepositLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17e3bc0
	struct FOreDepositEnum IntToStruct(int32_t IntValue); // Function Icarus.OreDepositLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3970
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.OreDepositLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17e37c0
	void GetOreDepositStruct(struct FOreDepositRowHandle RowHandle, struct FOreDeposit& OreDeposit, enum class EValid& Paths); // Function Icarus.OreDepositLibrary.GetOreDepositStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e3280
	bool EqualEqual_FOreDepositRowHandleFOreDepositRowHandle(struct FOreDepositRowHandle RowHandleA, struct FOreDepositRowHandle RowHandleB); // Function Icarus.OreDepositLibrary.EqualEqual_FOreDepositRowHandleFOreDepositRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e2ec0
	bool EqualEqual_EnumEnum(struct FOreDepositEnum A, struct FOreDepositEnum B); // Function Icarus.OreDepositLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e2bf0
	struct FOreDepositRowHandle CastToOreDepositRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.OreDepositLibrary.CastToOreDepositRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e2890
	void BreakOreDepositEnum(struct FOreDepositEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.OreDepositLibrary.BreakOreDepositEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e2470
	void AddRowToOreDepositTable(struct UE4::FName Name, struct FOreDeposit Data, struct FOreDepositRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.OreDepositLibrary.AddRowToOreDepositTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e1ce0
};

// Class Icarus.OreDepositTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOreDepositTable : UIcarusDataTable {
};

// Class Icarus.OutOfBoundsSubsystem
// Size: 0x90 (Inherited: 0x30)
struct UOutOfBoundsSubsystem : UWorldSubsystem {
	struct TMap<struct AIcarusPlayerCharacter*, struct FOutOfBoundsArray> PlayerVolumeMap; // 0x30(0x50)
	struct FMulticastInlineDelegate OnOutOfBoundsUpdate; // 0x80(0x10)

	void UnRegisterOutOfBoundsForPlayer(struct AIcarusPlayerCharacter* Player, struct AActor* Volume); // Function Icarus.OutOfBoundsSubsystem.UnRegisterOutOfBoundsForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x17e5a10
	void RegisterOutOfBoundsForPlayer(struct AIcarusPlayerCharacter* Player, struct AActor* Volume); // Function Icarus.OutOfBoundsSubsystem.RegisterOutOfBoundsForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x17e4f00
	bool IsPlayerOutOfBounds(struct AIcarusPlayerCharacter* Player); // Function Icarus.OutOfBoundsSubsystem.IsPlayerOutOfBounds // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3b20
};

// Class Icarus.OutOfBoundsVolume
// Size: 0x268 (Inherited: 0x268)
struct AOutOfBoundsVolume : APhysicsVolume {
};

// Class Icarus.OutpostTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UOutpostTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.OutpostTalentModel
// Size: 0xe8 (Inherited: 0xe8)
struct UOutpostTalentModel : UTalentModelInterface {
};

// Class Icarus.OxygenComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UOxygenComponent : UResourceNetworkComponent {

	bool GetFuelData(struct FFuelData& OutData); // Function Icarus.OxygenComponent.GetFuelData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16fcf20
};

// Class Icarus.OxygenLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOxygenLibrary : URowLibrary {

	struct FOxygenRowHandle StructToRowHandle(struct FOxygenEnum EnumValue); // Function Icarus.OxygenLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5890
	struct UE4::FName StructToName(struct FOxygenEnum EnumValue); // Function Icarus.OxygenLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e56a0
	int32_t StructToInt(struct FOxygenEnum EnumValue); // Function Icarus.OxygenLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e54c0
	struct FOxygenEnum RowHandleToStruct(struct FOxygenRowHandle RowHandle); // Function Icarus.OxygenLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5210
	void RemoveRowFromOxygenTable(struct UE4::FName Name); // Function Icarus.OxygenLibrary.RemoveRowFromOxygenTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17e5050
	void RefreshConstants(); // Function Icarus.OxygenLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17e4ec0
	int32_t NumRows(); // Function Icarus.OxygenLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4e20
	bool NotEqual_EnumName(struct FOxygenEnum A, struct UE4::FName B); // Function Icarus.OxygenLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4c10
	bool NotEqual_EnumEnum(struct FOxygenEnum A, struct FOxygenEnum B); // Function Icarus.OxygenLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4940
	struct FOxygenEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.OxygenLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4730
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.OxygenLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17e4580
	struct FOxygenRowHandle MakeOxygenFromIndex(int32_t Index); // Function Icarus.OxygenLibrary.MakeOxygenFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e42b0
	struct FOxygenEnum MakeOxygenEnum(struct FOxygenEnum Enum); // Function Icarus.OxygenLibrary.MakeOxygenEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4230
	struct FOxygenRowHandle MakeOxygen(struct UE4::FName RowName); // Function Icarus.OxygenLibrary.MakeOxygen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4190
	struct FOxygenRowHandle MakeLiteralOxygen(struct FOxygenRowHandle RowHandle); // Function Icarus.OxygenLibrary.MakeLiteralOxygen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3e40
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.OxygenLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17e3c50
	struct FOxygenEnum IntToStruct(int32_t IntValue); // Function Icarus.OxygenLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3a00
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.OxygenLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17e3850
	void GetOxygenStruct(struct FOxygenRowHandle RowHandle, struct FOxygenData& Oxygen, enum class EValid& Paths); // Function Icarus.OxygenLibrary.GetOxygenStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e3450
	bool EqualEqual_FOxygenRowHandleFOxygenRowHandle(struct FOxygenRowHandle RowHandleA, struct FOxygenRowHandle RowHandleB); // Function Icarus.OxygenLibrary.EqualEqual_FOxygenRowHandleFOxygenRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3000
	bool EqualEqual_EnumEnum(struct FOxygenEnum A, struct FOxygenEnum B); // Function Icarus.OxygenLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e2ce0
	struct FOxygenRowHandle CastToOxygenRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.OxygenLibrary.CastToOxygenRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e29b0
	void BreakOxygenEnum(struct FOxygenEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.OxygenLibrary.BreakOxygenEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e25d0
	void AddRowToOxygenTable(struct UE4::FName Name, struct FOxygenData Data, struct FOxygenRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.OxygenLibrary.AddRowToOxygenTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e1fd0
};

// Class Icarus.OxygenTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOxygenTable : UIcarusDataTable {
};

// Class Icarus.ParticleAudioComponent
// Size: 0x240 (Inherited: 0x200)
struct UParticleAudioComponent : USceneComponent {
	struct UE4::FName NiagaraVariableName; // 0x200(0x08)
	int32_t ParticleCountThreshold; // 0x208(0x04)
	float ParticleAgeThreshold; // 0x20c(0x04)
	struct UFMODEvent* OneShotSound; // 0x210(0x08)
	struct UFMODEvent* PersistentSound; // 0x218(0x08)
	bool bUseCountParameter; // 0x220(0x01)
	bool bUseListenerRotation; // 0x221(0x01)
	char pad_222[0x6]; // 0x222(0x06)
	struct UFMODAudioComponent* AudioComponent; // 0x228(0x08)
	char pad_230[0x10]; // 0x230(0x10)
};

// Class Icarus.PersistentBlocker
// Size: 0x2c0 (Inherited: 0x2b0)
struct APersistentBlocker : AIcarusActor {
	struct UIcarusNavigationDirtier* NavigationDirtier; // 0x2b0(0x08)
	bool bHasUpdatedDestroyedState; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)

	void UpdateDestroyedState(); // Function Icarus.PersistentBlocker.UpdateDestroyedState // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void TriggerBlockerDestroy(); // Function Icarus.PersistentBlocker.TriggerBlockerDestroy // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e59f0
	void OnStatContainerUpdated_Internal(); // Function Icarus.PersistentBlocker.OnStatContainerUpdated_Internal // (Final|Native|Public) // @ game+0x17e4e80
};

// Class Icarus.PersistentBlockerSpawner
// Size: 0x2f8 (Inherited: 0x2b0)
struct APersistentBlockerSpawner : AIcarusActor {
	struct APersistentBlocker* BlockerClass; // 0x2b0(0x08)
	struct FTalentsRowHandle UnlockTalent; // 0x2b8(0x18)
	struct FFactionMissionsRowHandle LinkedFactionMission; // 0x2d0(0x18)
	bool bHasSpawned; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct APersistentBlocker* SpawnedBlocker; // 0x2f0(0x08)

	void SetBlocker(struct APersistentBlocker* Blocker); // Function Icarus.PersistentBlockerSpawner.SetBlocker // (Final|Native|Public|BlueprintCallable) // @ game+0x17e5390
	bool HasSpawned(); // Function Icarus.PersistentBlockerSpawner.HasSpawned // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3790
};

// Class Icarus.PlayerAccoladeCategoriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerAccoladeCategoriesLibrary : URowLibrary {

	struct FPlayerAccoladeCategoriesRowHandle StructToRowHandle(struct FPlayerAccoladeCategoriesEnum EnumValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5940
	struct UE4::FName StructToName(struct FPlayerAccoladeCategoriesEnum EnumValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5740
	int32_t StructToInt(struct FPlayerAccoladeCategoriesEnum EnumValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e5560
	struct FPlayerAccoladeCategoriesEnum RowHandleToStruct(struct FPlayerAccoladeCategoriesRowHandle RowHandle); // Function Icarus.PlayerAccoladeCategoriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e52d0
	void RemoveRowFromPlayerAccoladeCategoriesTable(struct UE4::FName Name); // Function Icarus.PlayerAccoladeCategoriesLibrary.RemoveRowFromPlayerAccoladeCategoriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17e50d0
	void RefreshConstants(); // Function Icarus.PlayerAccoladeCategoriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17e4ee0
	int32_t NumRows(); // Function Icarus.PlayerAccoladeCategoriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4e50
	bool NotEqual_EnumName(struct FPlayerAccoladeCategoriesEnum A, struct UE4::FName B); // Function Icarus.PlayerAccoladeCategoriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4d00
	bool NotEqual_EnumEnum(struct FPlayerAccoladeCategoriesEnum A, struct FPlayerAccoladeCategoriesEnum B); // Function Icarus.PlayerAccoladeCategoriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4a30
	struct FPlayerAccoladeCategoriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e47c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17e4610
	struct FPlayerAccoladeCategoriesRowHandle MakePlayerAccoladeCategoriesFromIndex(int32_t Index); // Function Icarus.PlayerAccoladeCategoriesLibrary.MakePlayerAccoladeCategoriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4460
	struct FPlayerAccoladeCategoriesEnum MakePlayerAccoladeCategoriesEnum(struct FPlayerAccoladeCategoriesEnum Enum); // Function Icarus.PlayerAccoladeCategoriesLibrary.MakePlayerAccoladeCategoriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e43e0
	struct FPlayerAccoladeCategoriesRowHandle MakePlayerAccoladeCategories(struct UE4::FName RowName); // Function Icarus.PlayerAccoladeCategoriesLibrary.MakePlayerAccoladeCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e4340
	struct FPlayerAccoladeCategoriesRowHandle MakeLiteralPlayerAccoladeCategories(struct FPlayerAccoladeCategoriesRowHandle RowHandle); // Function Icarus.PlayerAccoladeCategoriesLibrary.MakeLiteralPlayerAccoladeCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3f10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17e3ce0
	struct FPlayerAccoladeCategoriesEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3a90
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.PlayerAccoladeCategoriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17e38e0
	void GetPlayerAccoladeCategoriesStruct(struct FPlayerAccoladeCategoriesRowHandle RowHandle, struct FPlayerAccoladeCategory& PlayerAccoladeCategories, enum class EValid& Paths); // Function Icarus.PlayerAccoladeCategoriesLibrary.GetPlayerAccoladeCategoriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e35d0
	bool EqualEqual_FPlayerAccoladeCategoriesRowHandleFPlayerAccoladeCategoriesRowHandle(struct FPlayerAccoladeCategoriesRowHandle RowHandleA, struct FPlayerAccoladeCategoriesRowHandle RowHandleB); // Function Icarus.PlayerAccoladeCategoriesLibrary.EqualEqual_FPlayerAccoladeCategoriesRowHandleFPlayerAccoladeCategoriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e3140
	bool EqualEqual_EnumEnum(struct FPlayerAccoladeCategoriesEnum A, struct FPlayerAccoladeCategoriesEnum B); // Function Icarus.PlayerAccoladeCategoriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17e2dd0
	struct FPlayerAccoladeCategoriesRowHandle CastToPlayerAccoladeCategoriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.PlayerAccoladeCategoriesLibrary.CastToPlayerAccoladeCategoriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e2ad0
	void BreakPlayerAccoladeCategoriesEnum(struct FPlayerAccoladeCategoriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.PlayerAccoladeCategoriesLibrary.BreakPlayerAccoladeCategoriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e2730
	void AddRowToPlayerAccoladeCategoriesTable(struct UE4::FName Name, struct FPlayerAccoladeCategory Data, struct FPlayerAccoladeCategoriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.PlayerAccoladeCategoriesLibrary.AddRowToPlayerAccoladeCategoriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17e2200
};

// Class Icarus.PlayerAccoladeCategoriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerAccoladeCategoriesTable : UIcarusDataTable {
};

// Class Icarus.PlayerAudioFoliageRecord
// Size: 0x38 (Inherited: 0x28)
struct UPlayerAudioFoliageRecord : UObject {
	struct UFLODRecord* FLODRecord; // 0x28(0x08)
	char pad_30[0x8]; // 0x30(0x08)
};

// Class Icarus.PlayerCharacterIDFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerCharacterIDFunctionLibrary : UBlueprintFunctionLibrary {

	struct FString ToString_PlayerCharacterID(struct FPlayerCharacterID& PlayerCharacterID); // Function Icarus.PlayerCharacterIDFunctionLibrary.ToString_PlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e9a30
	bool NotEqual_PlayerCharacterIDPlayerCharacterID(struct FPlayerCharacterID& A, struct FPlayerCharacterID& B); // Function Icarus.PlayerCharacterIDFunctionLibrary.NotEqual_PlayerCharacterIDPlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e8fc0
	bool IsValid_PlayerCharacterID(struct FPlayerCharacterID& PlayerCharacterID); // Function Icarus.PlayerCharacterIDFunctionLibrary.IsValid_PlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e8f10
	bool EqualEqual_PlayerCharacterIDPlayerCharacterID(struct FPlayerCharacterID& A, struct FPlayerCharacterID& B); // Function Icarus.PlayerCharacterIDFunctionLibrary.EqualEqual_PlayerCharacterIDPlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17e8a50
};

// Class Icarus.PlayerCharacterState
// Size: 0x460 (Inherited: 0x2e0)
struct UPlayerCharacterState : UCharacterState {
	struct FMulticastSparseDelegate OnProspectLocationChanged; // 0x2e0(0x01)
	enum class EProspectLocation CurrentProspectLocation; // 0x2e1(0x01)
	char pad_2E2[0xc6]; // 0x2e2(0xc6)
	struct FWeatherEventsRowHandle LocalWeatherEvent; // 0x3a8(0x18)
	struct FMulticastSparseDelegate OnConsumedFood; // 0x3c0(0x01)
	struct FMulticastSparseDelegate OnConsumedWater; // 0x3c1(0x01)
	struct FMulticastSparseDelegate OnConsumedOxygen; // 0x3c2(0x01)
	struct FMulticastSparseDelegate OnOxygenUpdated; // 0x3c3(0x01)
	struct FMulticastSparseDelegate OnFoodUpdated; // 0x3c4(0x01)
	struct FMulticastSparseDelegate OnWaterUpdated; // 0x3c5(0x01)
	struct FMulticastSparseDelegate OnTemperatureUpdated; // 0x3c6(0x01)
	struct FMulticastSparseDelegate OnChallengesUpdated; // 0x3c7(0x01)
	struct FMulticastSparseDelegate OnChallengeComplete; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct FMulticastInlineDelegate LocalWeatherEventUpdated; // 0x3d0(0x10)
	int32_t OxygenLevel; // 0x3e0(0x04)
	int32_t WaterLevel; // 0x3e4(0x04)
	int32_t FoodLevel; // 0x3e8(0x04)
	int32_t MinOxygen; // 0x3ec(0x04)
	int32_t MaxOxygen; // 0x3f0(0x04)
	int32_t MinWater; // 0x3f4(0x04)
	int32_t MaxWater; // 0x3f8(0x04)
	int32_t MinFood; // 0x3fc(0x04)
	int32_t MaxFood; // 0x400(0x04)
	int32_t InternalTemperature; // 0x404(0x04)
	int32_t AIDetectionPercentage; // 0x408(0x04)
	char pad_40C[0x4]; // 0x40c(0x04)
	struct TArray<bool> Challenges; // 0x410(0x10)
	char pad_420[0x30]; // 0x420(0x30)
	struct UTemperatureSingleton* TemperatureSingleton; // 0x450(0x08)
	char pad_458[0x8]; // 0x458(0x08)

	void UpdateAIDetection(); // Function Icarus.PlayerCharacterState.UpdateAIDetection // (Final|Native|Public|BlueprintCallable) // @ game+0x17e9b20
	void TemperatureTick(float DeltaTime); // Function Icarus.PlayerCharacterState.TemperatureTick // (Final|Native|Private) // @ game+0x17e99b0
	void SetWater(int32_t Amount); // Function Icarus.PlayerCharacterState.SetWater // (Final|Native|Public|BlueprintCallable) // @ game+0x17e9920
	void SetOxygen(int32_t Amount); // Function Icarus.PlayerCharacterState.SetOxygen // (Final|Native|Public|BlueprintCallable) // @ game+0x17e9890
	void SetInternalTemperature(int32_t NewTemperature); // Function Icarus.PlayerCharacterState.SetInternalTemperature // (Final|Native|Public|BlueprintCallable) // @ game+0x17e9800
	void SetFood(int32_t Amount); // Function Icarus.PlayerCharacterState.SetFood // (Final|Native|Public|BlueprintCallable) // @ game+0x17e9770
	void RecalculateSurvivalVariables(); // Function Icarus.PlayerCharacterState.RecalculateSurvivalVariables // (Final|Native|Protected) // @ game+0x17e9750
	void RecalculateSurvivalConsumeRate(); // Function Icarus.PlayerCharacterState.RecalculateSurvivalConsumeRate // (Final|Native|Protected) // @ game+0x17e9730
	void OnRep_Water(); // Function Icarus.PlayerCharacterState.OnRep_Water // (Final|Native|Public) // @ game+0x17e92d0
	void OnRep_Oxygen(); // Function Icarus.PlayerCharacterState.OnRep_Oxygen // (Final|Native|Public) // @ game+0x17e92b0
	void OnRep_LocalWeatherEvent(); // Function Icarus.PlayerCharacterState.OnRep_LocalWeatherEvent // (Final|Native|Protected) // @ game+0x17e9250
	void OnRep_Food(); // Function Icarus.PlayerCharacterState.OnRep_Food // (Final|Native|Public) // @ game+0x17e9230
	void OnRep_Challenges(); // Function Icarus.PlayerCharacterState.OnRep_Challenges // (Final|Native|Protected) // @ game+0x17e9210
	void OnLocalWeatherEventUpdated(); // Function Icarus.PlayerCharacterState.OnLocalWeatherEventUpdated // (Native|Event|Protected|BlueprintEvent) // @ game+0x16d4b90
	bool HasCompleteChallenge(struct FChallengesRowHandle& Challenge); // Function Icarus.PlayerCharacterState.HasCompleteChallenge // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17e8e60
	int32_t GetWater(); // Function Icarus.PlayerCharacterState.GetWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8e30
	int32_t GetOxygen(); // Function Icarus.PlayerCharacterState.GetOxygen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8c70
	int32_t GetMaxWater(); // Function Icarus.PlayerCharacterState.GetMaxWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1769ae0
	int32_t GetMaxOxygen(); // Function Icarus.PlayerCharacterState.GetMaxOxygen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8c40
	int32_t GetMaxFood(); // Function Icarus.PlayerCharacterState.GetMaxFood // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1769d60
	int32_t GetInternalTemperature(); // Function Icarus.PlayerCharacterState.GetInternalTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8c10
	int32_t GetFood(); // Function Icarus.PlayerCharacterState.GetFood // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8be0
	void CompleteChallenge(struct FChallengesRowHandle Challenge); // Function Icarus.PlayerCharacterState.CompleteChallenge // (Final|Native|Public|BlueprintCallable) // @ game+0x17e89a0
	void CheckForNewWeatherEvent(); // Function Icarus.PlayerCharacterState.CheckForNewWeatherEvent // (Final|Native|Protected) // @ game+0x17e88b0
	void ChallengeCompleted(struct FChallengesRowHandle ChallengeRow); // Function Icarus.PlayerCharacterState.ChallengeCompleted // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x17e87f0
	void AddWater(int32_t Amount); // Function Icarus.PlayerCharacterState.AddWater // (Final|Native|Public|BlueprintCallable) // @ game+0x17e81c0
	void AddTemperature(int32_t Amount); // Function Icarus.PlayerCharacterState.AddTemperature // (Final|Native|Public|BlueprintCallable) // @ game+0x17e8130
	void AddOxygen(int32_t Amount); // Function Icarus.PlayerCharacterState.AddOxygen // (Final|Native|Public|BlueprintCallable) // @ game+0x17e80a0
	void AddFood(int32_t Amount); // Function Icarus.PlayerCharacterState.AddFood // (Final|Native|Public|BlueprintCallable) // @ game+0x17e8010
};

// Class Icarus.PlayerEnvironmentalAudioComponent
// Size: 0x170 (Inherited: 0xb0)
struct UPlayerEnvironmentalAudioComponent : UActorComponent {
	struct AFLOD* FLOD; // 0xb0(0x08)
	float FoliageCountTraceRadius; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct UPlayerAudioFoliageRecord*> FoliageRecords; // 0xc0(0x10)
	struct TArray<struct UFLODRecord*> PendingFoliageRecords; // 0xd0(0x10)
	struct TSet<struct AFLODTile*> LoadedFLODTiles; // 0xe0(0x50)
	char pad_130[0x4]; // 0x130(0x04)
	float CurrentShelter; // 0x134(0x04)
	char pad_138[0x8]; // 0x138(0x08)
	struct TArray<struct FVector> ShelterTraceDirections; // 0x140(0x10)
	bool bDebugShelter; // 0x150(0x01)
	char pad_151[0x1f]; // 0x151(0x1f)

	void GetShelterValues(float& OutShelter, float& OutAverageDistance, float& OutClosestDistance, enum class EPhysicalSurface& OutPrimarySurface); // Function Icarus.PlayerEnvironmentalAudioComponent.GetShelterValues // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x17e8ca0
	struct FVector GetShelterTraceLocation(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetShelterTraceLocation // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1be0000
	struct FVector GetFoliageTraceLocation(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetFoliageTraceLocation // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1be0000
	int32_t GetCurrentTreeCount(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetCurrentTreeCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8bb0
	int32_t GetCurrentBushCount(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetCurrentBushCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x17e8b80
};

// Class Icarus.PlayerFeedbackAudioComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UPlayerFeedbackAudioComponent : UActorComponent {
	struct UFMODEvent* NegativeFeedbackSound; // 0xb0(0x08)
	struct UFMODEvent* StatRollSuccessFeedbackSound; // 0xb8(0x08)
	struct UFMODEvent* CriticalHitFeedbackSound; // 0xc0(0x08)
	struct UFMODEvent* CausedAfflictionsFeedbackSound; // 0xc8(0x08)
	struct UFMODEvent* MissionUpdatedFeedbackSound; // 0xd0(0x08)
	struct UFMODEvent* MissionCompletedFeedbackSound; // 0xd8(0x08)
	char pad_E0[0x10]; // 0xe0(0x10)

	void ProcessMissionNotifies(); // Function Icarus.PlayerFeedbackAudioComponent.ProcessMissionNotifies // (Final|Native|Private) // @ game+0x17e9710
	void PlayStatRollSuccess(struct AIcarusPlayerCharacter* Player, struct FStatsRowHandle Stat); // Function Icarus.PlayerFeedbackAudioComponent.PlayStatRollSuccess // (Final|Native|Private) // @ game+0x17e9610
	void PlayNegativeFeedback(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerFeedbackAudioComponent.PlayNegativeFeedback // (Final|Native|Private) // @ game+0x17e9580
	void PlayCriticalHit(struct AIcarusPlayerCharacter* Player, struct FVector HitLocation); // Function Icarus.PlayerFeedbackAudioComponent.PlayCriticalHit // (Final|Native|Private|HasDefaults) // @ game+0x17e94a0
	void PlayCausedAfflictions(struct AIcarusPlayerCharacter* Player, struct TSet<struct FStatAfflictionsRowHandle> Afflictions); // Function Icarus.PlayerFeedbackAudioComponent.PlayCausedAfflictions // (Final|Native|Private) // @ game+0x17e92f0
	void OnMissionUpdated(struct AQuest* Quest); // Function Icarus.PlayerFeedbackAudioComponent.OnMissionUpdated // (Final|Native|Private) // @ game+0x17e9180
	void OnMissionCompleted(struct AQuest* Quest); // Function Icarus.PlayerFeedbackAudioComponent.OnMissionCompleted // (Final|Native|Private) // @ game+0x17e90f0
	void Client_PlayStatRollSuccess(); // Function Icarus.PlayerFeedbackAudioComponent.Client_PlayStatRollSuccess // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x16e42d0
	void Client_PlayNegativeFeedback(); // Function Icarus.PlayerFeedbackAudioComponent.Client_PlayNegativeFeedback // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1613bb0
	void Client_PlayMissionUpdated(); // Function Icarus.PlayerFeedbackAudioComponent.Client_PlayMissionUpdated // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x17e8980
	void Client_PlayMissionCompleted(); // Function Icarus.PlayerFeedbackAudioComponent.Client_PlayMissionCompleted // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x16450c0
	void Client_PlayCriticalHit(struct FVector HitLocation); // Function Icarus.PlayerFeedbackAudioComponent.Client_PlayCriticalHit // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x17e88f0
	void Client_PlayCausedAfflictions(); // Function Icarus.PlayerFeedbackAudioComponent.Client_PlayCausedAfflictions // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x17e88d0
};

// Class Icarus.PlayerFeedbackSubsystem
// Size: 0xb0 (Inherited: 0x30)
struct UPlayerFeedbackSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnStatChanceRollSuccessNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayerActionFailedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnMissionCompletedNotify; // 0x50(0x10)
	struct FMulticastInlineDelegate OnMissionUpdatedNotify; // 0x60(0x10)
	struct FMulticastInlineDelegate OnPlayerPerformedCriticalHitNotify; // 0x70(0x10)
	struct FMulticastInlineDelegate OnPlayerPerformedStealthAttackNotify; // 0x80(0x10)
	struct FMulticastInlineDelegate OnPlayerAttackCausedAfflictionsNotify; // 0x90(0x10)
	struct FMulticastInlineDelegate OnNightSkippedNotify; // 0xa0(0x10)

	void BroadcastStatChanceRollSuccessDelegate(struct AIcarusPlayerCharacter* Player, struct FStatsRowHandle Stat); // Function Icarus.PlayerFeedbackSubsystem.BroadcastStatChanceRollSuccessDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e86b0
	void BroadcastPlayerPerformedStealthAttackDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerFeedbackSubsystem.BroadcastPlayerPerformedStealthAttackDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e8610
	void BroadcastPlayerPerformedCriticalHitDelegate(struct AIcarusPlayerCharacter* Player, struct FVector HitLocation); // Function Icarus.PlayerFeedbackSubsystem.BroadcastPlayerPerformedCriticalHitDelegate // (Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x17e8530
	void BroadcastPlayerAttackCausedAfflictionsDelegate(struct AIcarusPlayerCharacter* Player, struct TSet<struct FStatAfflictionsRowHandle> Afflictions); // Function Icarus.PlayerFeedbackSubsystem.BroadcastPlayerAttackCausedAfflictionsDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e8380
	void BroadcastPlayerActionFailedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerFeedbackSubsystem.BroadcastPlayerActionFailedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e82f0
	void BroadcastNightSkippedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerFeedbackSubsystem.BroadcastNightSkippedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e8250
	void BroadcastMissionUpdatedDelegate(struct AQuest* Quest); // Function Icarus.PlayerFeedbackSubsystem.BroadcastMissionUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17ce4f0
	void BroadcastMissionCompletedDelegate(struct AQuest* Quest); // Function Icarus.PlayerFeedbackSubsystem.BroadcastMissionCompletedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17ce460
};

// Class Icarus.PlayerFootstepAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerFootstepAudioDataLibrary : URowLibrary {

	struct FPlayerFootstepAudioDataRowHandle StructToRowHandle(struct FPlayerFootstepAudioDataEnum EnumValue); // Function Icarus.PlayerFootstepAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee560
	struct UE4::FName StructToName(struct FPlayerFootstepAudioDataEnum EnumValue); // Function Icarus.PlayerFootstepAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee420
	int32_t StructToInt(struct FPlayerFootstepAudioDataEnum EnumValue); // Function Icarus.PlayerFootstepAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee2e0
	struct FPlayerFootstepAudioDataEnum RowHandleToStruct(struct FPlayerFootstepAudioDataRowHandle RowHandle); // Function Icarus.PlayerFootstepAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee160
	void RemoveRowFromPlayerFootstepAudioDataTable(struct UE4::FName Name); // Function Icarus.PlayerFootstepAudioDataLibrary.RemoveRowFromPlayerFootstepAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ee060
	void RefreshConstants(); // Function Icarus.PlayerFootstepAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17ee020
	int32_t NumRows(); // Function Icarus.PlayerFootstepAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edfc0
	bool NotEqual_EnumName(struct FPlayerFootstepAudioDataEnum A, struct UE4::FName B); // Function Icarus.PlayerFootstepAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edde0
	bool NotEqual_EnumEnum(struct FPlayerFootstepAudioDataEnum A, struct FPlayerFootstepAudioDataEnum B); // Function Icarus.PlayerFootstepAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edc00
	struct FPlayerFootstepAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.PlayerFootstepAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edae0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.PlayerFootstepAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17ed9c0
	struct FPlayerFootstepAudioDataRowHandle MakePlayerFootstepAudioDataFromIndex(int32_t Index); // Function Icarus.PlayerFootstepAudioDataLibrary.MakePlayerFootstepAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed780
	struct FPlayerFootstepAudioDataEnum MakePlayerFootstepAudioDataEnum(struct FPlayerFootstepAudioDataEnum Enum); // Function Icarus.PlayerFootstepAudioDataLibrary.MakePlayerFootstepAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed700
	struct FPlayerFootstepAudioDataRowHandle MakePlayerFootstepAudioData(struct UE4::FName RowName); // Function Icarus.PlayerFootstepAudioDataLibrary.MakePlayerFootstepAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed660
	struct FPlayerFootstepAudioDataRowHandle MakeLiteralPlayerFootstepAudioData(struct FPlayerFootstepAudioDataRowHandle RowHandle); // Function Icarus.PlayerFootstepAudioDataLibrary.MakeLiteralPlayerFootstepAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed4c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.PlayerFootstepAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ed3a0
	struct FPlayerFootstepAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerFootstepAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed280
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.PlayerFootstepAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17ed160
	void GetPlayerFootstepAudioDataStruct(struct FPlayerFootstepAudioDataRowHandle RowHandle, struct FPlayerFootstepAudioData& PlayerFootstepAudioData, enum class EValid& Paths); // Function Icarus.PlayerFootstepAudioDataLibrary.GetPlayerFootstepAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ece20
	bool EqualEqual_FPlayerFootstepAudioDataRowHandleFPlayerFootstepAudioDataRowHandle(struct FPlayerFootstepAudioDataRowHandle RowHandleA, struct FPlayerFootstepAudioDataRowHandle RowHandleB); // Function Icarus.PlayerFootstepAudioDataLibrary.EqualEqual_FPlayerFootstepAudioDataRowHandleFPlayerFootstepAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17eca90
	bool EqualEqual_EnumEnum(struct FPlayerFootstepAudioDataEnum A, struct FPlayerFootstepAudioDataEnum B); // Function Icarus.PlayerFootstepAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ec8b0
	struct FPlayerFootstepAudioDataRowHandle CastToPlayerFootstepAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.PlayerFootstepAudioDataLibrary.CastToPlayerFootstepAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ec670
	void BreakPlayerFootstepAudioDataEnum(struct FPlayerFootstepAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.PlayerFootstepAudioDataLibrary.BreakPlayerFootstepAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17ec3b0
	void AddRowToPlayerFootstepAudioDataTable(struct UE4::FName Name, struct FPlayerFootstepAudioData Data, struct FPlayerFootstepAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.PlayerFootstepAudioDataLibrary.AddRowToPlayerFootstepAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ebf10
};

// Class Icarus.PlayerFootstepAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerFootstepAudioDataTable : UIcarusDataTable {
};

// Class Icarus.PlayerIdentityLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerIdentityLibrary : URowLibrary {

	struct FPlayerIdentityRowHandle StructToRowHandle(struct FPlayerIdentityEnum EnumValue); // Function Icarus.PlayerIdentityLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee610
	struct UE4::FName StructToName(struct FPlayerIdentityEnum EnumValue); // Function Icarus.PlayerIdentityLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee4c0
	int32_t StructToInt(struct FPlayerIdentityEnum EnumValue); // Function Icarus.PlayerIdentityLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee380
	struct FPlayerIdentityEnum RowHandleToStruct(struct FPlayerIdentityRowHandle RowHandle); // Function Icarus.PlayerIdentityLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ee220
	void RemoveRowFromPlayerIdentityTable(struct UE4::FName Name); // Function Icarus.PlayerIdentityLibrary.RemoveRowFromPlayerIdentityTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17ee0e0
	void RefreshConstants(); // Function Icarus.PlayerIdentityLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17ee040
	int32_t NumRows(); // Function Icarus.PlayerIdentityLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edff0
	bool NotEqual_EnumName(struct FPlayerIdentityEnum A, struct UE4::FName B); // Function Icarus.PlayerIdentityLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17eded0
	bool NotEqual_EnumEnum(struct FPlayerIdentityEnum A, struct FPlayerIdentityEnum B); // Function Icarus.PlayerIdentityLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edcf0
	struct FPlayerIdentityEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.PlayerIdentityLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17edb70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.PlayerIdentityLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17eda50
	struct FPlayerIdentityRowHandle MakePlayerIdentityFromIndex(int32_t Index); // Function Icarus.PlayerIdentityLibrary.MakePlayerIdentityFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed930
	struct FPlayerIdentityEnum MakePlayerIdentityEnum(struct FPlayerIdentityEnum Enum); // Function Icarus.PlayerIdentityLibrary.MakePlayerIdentityEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed8b0
	struct FPlayerIdentityRowHandle MakePlayerIdentity(struct UE4::FName RowName); // Function Icarus.PlayerIdentityLibrary.MakePlayerIdentity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed810
	struct FPlayerIdentityRowHandle MakeLiteralPlayerIdentity(struct FPlayerIdentityRowHandle RowHandle); // Function Icarus.PlayerIdentityLibrary.MakeLiteralPlayerIdentity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed590
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.PlayerIdentityLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ed430
	struct FPlayerIdentityEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerIdentityLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ed310
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.PlayerIdentityLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17ed1f0
	void GetPlayerIdentityStruct(struct FPlayerIdentityRowHandle RowHandle, struct FPlayerIdentityData& PlayerIdentity, enum class EValid& Paths); // Function Icarus.PlayerIdentityLibrary.GetPlayerIdentityStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ecfe0
	bool EqualEqual_FPlayerIdentityRowHandleFPlayerIdentityRowHandle(struct FPlayerIdentityRowHandle RowHandleA, struct FPlayerIdentityRowHandle RowHandleB); // Function Icarus.PlayerIdentityLibrary.EqualEqual_FPlayerIdentityRowHandleFPlayerIdentityRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ecbd0
	bool EqualEqual_EnumEnum(struct FPlayerIdentityEnum A, struct FPlayerIdentityEnum B); // Function Icarus.PlayerIdentityLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ec9a0
	struct FPlayerIdentityRowHandle CastToPlayerIdentityRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.PlayerIdentityLibrary.CastToPlayerIdentityRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ec790
	void BreakPlayerIdentityEnum(struct FPlayerIdentityEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.PlayerIdentityLibrary.BreakPlayerIdentityEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17ec510
	void AddRowToPlayerIdentityTable(struct UE4::FName Name, struct FPlayerIdentityData Data, struct FPlayerIdentityRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.PlayerIdentityLibrary.AddRowToPlayerIdentityTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17ec190
};

// Class Icarus.PlayerIdentityTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerIdentityTable : UIcarusDataTable {
};

// Class Icarus.PlayerModifierAudioComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UPlayerModifierAudioComponent : UActorComponent {
	struct TArray<struct UPlayerModifierSound*> Sounds; // 0xb0(0x10)
};

// Class Icarus.PlayerModifierSound
// Size: 0x58 (Inherited: 0x28)
struct UPlayerModifierSound : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Icarus.PlayerMovementAudioComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UPlayerMovementAudioComponent : UActorComponent {
	float CurrentWaterImmersion; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)

	struct UFMODEvent* GetItemAnimSound(struct AIcarusItem* Item, struct UE4::FName ItemAnimSoundName, int32_t ItemAnimSoundIndex); // Function Icarus.PlayerMovementAudioComponent.GetItemAnimSound // (Final|Native|Protected|BlueprintCallable|Const) // @ game+0x17ecd10
};

// Class Icarus.PlayerObserverSubsystem
// Size: 0xd0 (Inherited: 0x30)
struct UPlayerObserverSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnPlayerDeath; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayerRevived; // 0x40(0x10)
	struct FMulticastInlineDelegate OnRevivedOtherPlayer; // 0x50(0x10)
	struct FMulticastInlineDelegate OnPlayerLevelledUp; // 0x60(0x10)
	struct FMulticastInlineDelegate OnItemCrafted; // 0x70(0x10)
	struct FMulticastInlineDelegate OnFoodConsumed; // 0x80(0x10)
	struct FMulticastInlineDelegate OnProjectileFired; // 0x90(0x10)
	struct FMulticastInlineDelegate OnNightSurvived; // 0xa0(0x10)
	struct FMulticastInlineDelegate OnExperienceGained; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnDistanceTravelled; // 0xc0(0x10)
};

// Class Icarus.PlayerRecorderComponent
// Size: 0x100 (Inherited: 0xd8)
struct UPlayerRecorderComponent : UIcarusStateRecorderComponent {
	struct FPlayerCharacterID PlayerCharacterID; // 0xd8(0x18)
	int32_t AssignedDropshipSpawnUID; // 0xf0(0x04)
	int32_t AssignedDropshipUID; // 0xf4(0x04)
	int32_t AssignedGravestoneUID; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
};

// Class Icarus.PlayerStateRecorderComponent
// Size: 0x1c0 (Inherited: 0x160)
struct UPlayerStateRecorderComponent : UActorStateRecorderComponent {
	struct FPlayerCharacterID PlayerCharacterID; // 0x158(0x18)
	struct FVector Location; // 0x170(0x0c)
	struct FRotator Rotation; // 0x17c(0x0c)
	bool bIsAlive; // 0x188(0x01)
	int32_t Health; // 0x18c(0x04)
	int32_t FoodLevel; // 0x190(0x04)
	int32_t WaterLevel; // 0x194(0x04)
	int32_t OxygenLevel; // 0x198(0x04)
	struct TArray<struct FStomachContent> StomachContents; // 0x1a0(0x10)
	int32_t RespawnCount; // 0x1b0(0x04)
	bool HasGrantedLoadout; // 0x1b4(0x01)
	char pad_1B6[0xa]; // 0x1b6(0x0a)
};

// Class Icarus.PlayerSubsystem
// Size: 0x120 (Inherited: 0x30)
struct UPlayerSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnItemAddedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnItemCraftedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnSuitSlotUpdatedNotify; // 0x50(0x10)
	struct FMulticastInlineDelegate OnItemShiftedNotify; // 0x60(0x10)
	struct FMulticastInlineDelegate OnItemConsumedNotify; // 0x70(0x10)
	struct FMulticastInlineDelegate OnEnteredWaterNotify; // 0x80(0x10)
	struct FMulticastInlineDelegate OnBiomeUpdatedNotify; // 0x90(0x10)
	struct FMulticastInlineDelegate OnLevelUpdatedNotify; // 0xa0(0x10)
	struct FMulticastInlineDelegate OnTimeSurvivedNotify; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnDistanceTraveledNotify; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnFireExtinguishedNotify; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnPlayerDownedNotify; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnPlayerRespawnedNotify; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnPlayerRevivedNotify; // 0x100(0x10)
	struct FMulticastInlineDelegate OnOtherPlayerRevivedNotify; // 0x110(0x10)

	void BroadcastTimeSurvivedDelegate(struct AIcarusPlayerCharacter* Player, int32_t MinutesSurvived, enum class EProspectLocation Biome); // Function Icarus.PlayerSubsystem.BroadcastTimeSurvivedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f2730
	void BroadcastSuitSlotUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastSuitSlotUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17ce460
	void BroadcastPlayerRevivedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastPlayerRevivedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f2690
	void BroadcastPlayerRespawnedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastPlayerRespawnedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f25f0
	void BroadcastPlayerDownedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastPlayerDownedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f2550
	void BroadcastOtherPlayerRevivedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusPlayerCharacter* OtherPlayer); // Function Icarus.PlayerSubsystem.BroadcastOtherPlayerRevivedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f2470
	void BroadcastLevelUpdatedDelegate(struct AIcarusPlayerCharacter* Player, int32_t CurrentLevel); // Function Icarus.PlayerSubsystem.BroadcastLevelUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f2390
	void BroadcastItemShiftedDelegate(struct AIcarusPlayerCharacter* Player, struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory, int32_t DestinationLocation, int32_t Amount); // Function Icarus.PlayerSubsystem.BroadcastItemShiftedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f21b0
	void BroadcastItemCraftedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.PlayerSubsystem.BroadcastItemCraftedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f1c10
	void BroadcastItemConsumedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.PlayerSubsystem.BroadcastItemConsumedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f1670
	void BroadcastItemAddedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.PlayerSubsystem.BroadcastItemAddedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1701d00
	void BroadcastFireExtinguishedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastFireExtinguishedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f15d0
	void BroadcastEnteredWaterDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastEnteredWaterDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e8610
	void BroadcastDistanceTraveledDelegate(struct AIcarusPlayerCharacter* Player, int32_t Distance, enum class EProspectLocation Biome); // Function Icarus.PlayerSubsystem.BroadcastDistanceTraveledDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f14b0
	void BroadcastBiomeUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastBiomeUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17f1410
};

// Class Icarus.PlayerTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UPlayerTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.PlayerTalentModel
// Size: 0xe8 (Inherited: 0xe8)
struct UPlayerTalentModel : UTalentModelInterface {
};

// Class Icarus.PlayerTrackerCategoriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerTrackerCategoriesLibrary : URowLibrary {

	struct FPlayerTrackerCategoriesRowHandle StructToRowHandle(struct FPlayerTrackerCategoriesEnum EnumValue); // Function Icarus.PlayerTrackerCategoriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4e00
	struct UE4::FName StructToName(struct FPlayerTrackerCategoriesEnum EnumValue); // Function Icarus.PlayerTrackerCategoriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4cc0
	int32_t StructToInt(struct FPlayerTrackerCategoriesEnum EnumValue); // Function Icarus.PlayerTrackerCategoriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4b80
	struct FPlayerTrackerCategoriesEnum RowHandleToStruct(struct FPlayerTrackerCategoriesRowHandle RowHandle); // Function Icarus.PlayerTrackerCategoriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f48b0
	void RemoveRowFromPlayerTrackerCategoriesTable(struct UE4::FName Name); // Function Icarus.PlayerTrackerCategoriesLibrary.RemoveRowFromPlayerTrackerCategoriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17f47b0
	void RefreshConstants(); // Function Icarus.PlayerTrackerCategoriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17f4770
	int32_t NumRows(); // Function Icarus.PlayerTrackerCategoriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4710
	bool NotEqual_EnumName(struct FPlayerTrackerCategoriesEnum A, struct UE4::FName B); // Function Icarus.PlayerTrackerCategoriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4530
	bool NotEqual_EnumEnum(struct FPlayerTrackerCategoriesEnum A, struct FPlayerTrackerCategoriesEnum B); // Function Icarus.PlayerTrackerCategoriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4350
	struct FPlayerTrackerCategoriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.PlayerTrackerCategoriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4230
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.PlayerTrackerCategoriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17f4110
	struct FPlayerTrackerCategoriesRowHandle MakePlayerTrackerCategoriesFromIndex(int32_t Index); // Function Icarus.PlayerTrackerCategoriesLibrary.MakePlayerTrackerCategoriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3ed0
	struct FPlayerTrackerCategoriesEnum MakePlayerTrackerCategoriesEnum(struct FPlayerTrackerCategoriesEnum Enum); // Function Icarus.PlayerTrackerCategoriesLibrary.MakePlayerTrackerCategoriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3e50
	struct FPlayerTrackerCategoriesRowHandle MakePlayerTrackerCategories(struct UE4::FName RowName); // Function Icarus.PlayerTrackerCategoriesLibrary.MakePlayerTrackerCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3db0
	struct FPlayerTrackerCategoriesRowHandle MakeLiteralPlayerTrackerCategories(struct FPlayerTrackerCategoriesRowHandle RowHandle); // Function Icarus.PlayerTrackerCategoriesLibrary.MakeLiteralPlayerTrackerCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3c10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.PlayerTrackerCategoriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17f3af0
	struct FPlayerTrackerCategoriesEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerTrackerCategoriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f39d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.PlayerTrackerCategoriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17f38b0
	void GetPlayerTrackerCategoriesStruct(struct FPlayerTrackerCategoriesRowHandle RowHandle, struct FPlayerTrackerCategory& PlayerTrackerCategories, enum class EValid& Paths); // Function Icarus.PlayerTrackerCategoriesLibrary.GetPlayerTrackerCategoriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f2ff0
	bool EqualEqual_FPlayerTrackerCategoriesRowHandleFPlayerTrackerCategoriesRowHandle(struct FPlayerTrackerCategoriesRowHandle RowHandleA, struct FPlayerTrackerCategoriesRowHandle RowHandleB); // Function Icarus.PlayerTrackerCategoriesLibrary.EqualEqual_FPlayerTrackerCategoriesRowHandleFPlayerTrackerCategoriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f2c70
	bool EqualEqual_EnumEnum(struct FPlayerTrackerCategoriesEnum A, struct FPlayerTrackerCategoriesEnum B); // Function Icarus.PlayerTrackerCategoriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f2a90
	struct FPlayerTrackerCategoriesRowHandle CastToPlayerTrackerCategoriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.PlayerTrackerCategoriesLibrary.CastToPlayerTrackerCategoriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f2850
	void BreakPlayerTrackerCategoriesEnum(struct FPlayerTrackerCategoriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.PlayerTrackerCategoriesLibrary.BreakPlayerTrackerCategoriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17f1150
	void AddRowToPlayerTrackerCategoriesTable(struct UE4::FName Name, struct FPlayerTrackerCategory Data, struct FPlayerTrackerCategoriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.PlayerTrackerCategoriesLibrary.AddRowToPlayerTrackerCategoriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f0b60
};

// Class Icarus.PlayerTrackerCategoriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerTrackerCategoriesTable : UIcarusDataTable {
};

// Class Icarus.PlayerTrackerListener
// Size: 0xd0 (Inherited: 0x30)
struct UPlayerTrackerListener : UGeneratedPlayerTrackerListener {
	struct TMap<struct FPlayerTrackersRowHandle, int32_t> PlayerTrackers; // 0x30(0x50)
	char pad_80[0x50]; // 0x80(0x50)

	void SetPlayerTracker(struct AIcarusPlayerCharacter* Player, struct FPlayerTrackersRowHandle PlayerTracker, int32_t NewAmount); // Function Icarus.PlayerTrackerListener.SetPlayerTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x17f4a30
	void PlayerTrackersUpdated(); // Function Icarus.PlayerTrackerListener.PlayerTrackersUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x17706b0
	void InitPlayerTrackersSave(); // Function Icarus.PlayerTrackerListener.InitPlayerTrackersSave // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void IncrementPlayerTracker(struct AIcarusPlayerCharacter* Player, struct FPlayerTrackersRowHandle PlayerTracker, int32_t AmountToAdd); // Function Icarus.PlayerTrackerListener.IncrementPlayerTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x17f3760
	void IncrementAllTrackersInArray(struct TArray<struct FPlayerTrackersRowHandle>& Trackers, struct AIcarusPlayerCharacter* Player, int32_t AmountToAdd); // Function Icarus.PlayerTrackerListener.IncrementAllTrackersInArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17f3630
	struct TArray<struct FPlayerTrackersRowHandle> GetPlayerTrackersForCategoryAndTagContainer(struct FPlayerTrackerCategoriesRowHandle Category, struct FGameplayTagContainer& Container); // Function Icarus.PlayerTrackerListener.GetPlayerTrackersForCategoryAndTagContainer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17f3270
	struct TArray<struct FPlayerTrackersRowHandle> GetPlayerTrackersForCategory(struct FPlayerTrackerCategoriesEnum Category); // Function Icarus.PlayerTrackerListener.GetPlayerTrackersForCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x17f3180
	int32_t GetPlayerTracker(struct AIcarusPlayerCharacter* Player, struct FPlayerTrackersRowHandle PlayerTracker); // Function Icarus.PlayerTrackerListener.GetPlayerTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x17f2ef0
};

// Class Icarus.PlayerTrackersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerTrackersLibrary : URowLibrary {

	struct FPlayerTrackersRowHandle StructToRowHandle(struct FPlayerTrackersEnum EnumValue); // Function Icarus.PlayerTrackersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4eb0
	struct UE4::FName StructToName(struct FPlayerTrackersEnum EnumValue); // Function Icarus.PlayerTrackersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4d60
	int32_t StructToInt(struct FPlayerTrackersEnum EnumValue); // Function Icarus.PlayerTrackersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4c20
	struct FPlayerTrackersEnum RowHandleToStruct(struct FPlayerTrackersRowHandle RowHandle); // Function Icarus.PlayerTrackersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4970
	void RemoveRowFromPlayerTrackersTable(struct UE4::FName Name); // Function Icarus.PlayerTrackersLibrary.RemoveRowFromPlayerTrackersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17f4830
	void RefreshConstants(); // Function Icarus.PlayerTrackersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17f4790
	int32_t NumRows(); // Function Icarus.PlayerTrackersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4740
	bool NotEqual_EnumName(struct FPlayerTrackersEnum A, struct UE4::FName B); // Function Icarus.PlayerTrackersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4620
	bool NotEqual_EnumEnum(struct FPlayerTrackersEnum A, struct FPlayerTrackersEnum B); // Function Icarus.PlayerTrackersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4440
	struct FPlayerTrackersEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.PlayerTrackersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f42c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.PlayerTrackersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17f41a0
	struct FPlayerTrackersRowHandle MakePlayerTrackersFromIndex(int32_t Index); // Function Icarus.PlayerTrackersLibrary.MakePlayerTrackersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4080
	struct FPlayerTrackersEnum MakePlayerTrackersEnum(struct FPlayerTrackersEnum Enum); // Function Icarus.PlayerTrackersLibrary.MakePlayerTrackersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f4000
	struct FPlayerTrackersRowHandle MakePlayerTrackers(struct UE4::FName RowName); // Function Icarus.PlayerTrackersLibrary.MakePlayerTrackers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3f60
	struct FPlayerTrackersRowHandle MakeLiteralPlayerTrackers(struct FPlayerTrackersRowHandle RowHandle); // Function Icarus.PlayerTrackersLibrary.MakeLiteralPlayerTrackers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3ce0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.PlayerTrackersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17f3b80
	struct FPlayerTrackersEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerTrackersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f3a60
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.PlayerTrackersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17f3940
	void GetPlayerTrackersStruct(struct FPlayerTrackersRowHandle RowHandle, struct FPlayerTracker& PlayerTrackers, enum class EValid& Paths); // Function Icarus.PlayerTrackersLibrary.GetPlayerTrackersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f3400
	bool EqualEqual_FPlayerTrackersRowHandleFPlayerTrackersRowHandle(struct FPlayerTrackersRowHandle RowHandleA, struct FPlayerTrackersRowHandle RowHandleB); // Function Icarus.PlayerTrackersLibrary.EqualEqual_FPlayerTrackersRowHandleFPlayerTrackersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f2db0
	bool EqualEqual_EnumEnum(struct FPlayerTrackersEnum A, struct FPlayerTrackersEnum B); // Function Icarus.PlayerTrackersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f2b80
	struct FPlayerTrackersRowHandle CastToPlayerTrackersRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.PlayerTrackersLibrary.CastToPlayerTrackersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f2970
	void BreakPlayerTrackersEnum(struct FPlayerTrackersEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.PlayerTrackersLibrary.BreakPlayerTrackersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17f12b0
	void AddRowToPlayerTrackersTable(struct UE4::FName Name, struct FPlayerTracker Data, struct FPlayerTrackersRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.PlayerTrackersLibrary.AddRowToPlayerTrackersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f0dc0
};

// Class Icarus.PlayerTrackersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerTrackersTable : UIcarusDataTable {
};

// Class Icarus.PlayerTrackerSubsystem
// Size: 0x48 (Inherited: 0x30)
struct UPlayerTrackerSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnPlayerTrackerUpdated; // 0x30(0x10)
	struct UPlayerTrackerListener* PlayerTrackerListener; // 0x40(0x08)

	void SetPlayerTracker(struct AIcarusPlayerCharacter* Player, struct FPlayerTrackersRowHandle PlayerTracker, int32_t NewAmount); // Function Icarus.PlayerTrackerSubsystem.SetPlayerTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x17fb0e0
	void PostLocalPlayerCreatedInitializeSubsystem(); // Function Icarus.PlayerTrackerSubsystem.PostLocalPlayerCreatedInitializeSubsystem // (Final|Native|Public) // @ game+0x17fa890
	void IncrementPlayerTracker(struct AIcarusPlayerCharacter* Player, struct FPlayerTrackersRowHandle PlayerTracker, int32_t AmountToAdd); // Function Icarus.PlayerTrackerSubsystem.IncrementPlayerTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x17f95a0
	int32_t GetPlayerTracker(struct AIcarusPlayerCharacter* Player, struct FPlayerTrackersRowHandle PlayerTracker); // Function Icarus.PlayerTrackerSubsystem.GetPlayerTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x17f8ca0
};

// Class Icarus.PlayerVocalisationComponent
// Size: 0x1a0 (Inherited: 0x110)
struct UPlayerVocalisationComponent : UVocalisationComponent {
	struct FVocalisationsRowHandle BreathingVocalisation; // 0x108(0x18)
	struct FVocalisationsRowHandle LowHealthVocalisation; // 0x120(0x18)
	float LowHealthVocalisationThreshold; // 0x138(0x04)
	struct TSet<struct UModifierStateComponent*> ActiveModifiers; // 0x140(0x50)
	char pad_194[0xc]; // 0x194(0x0c)

	void UpdatePerspective(bool bIsThirdPerson); // Function Icarus.PlayerVocalisationComponent.UpdatePerspective // (Final|Native|Private) // @ game+0x17fb7e0
	void SetDamageParameter(int32_t DamageAmount); // Function Icarus.PlayerVocalisationComponent.SetDamageParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x17fafd0
	void OnHealthUpdated(struct UActorState* ActorState, float NewHealth); // Function Icarus.PlayerVocalisationComponent.OnHealthUpdated // (Final|Native|Public) // @ game+0x17f9fe0
};

// Class Icarus.Pointer
// Size: 0x140 (Inherited: 0x108)
struct UPointer : UWidget {
	struct FLinearColor Tint; // 0x108(0x10)
	bool bAntiAlias; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	float Thickness; // 0x11c(0x04)
	float Angle; // 0x120(0x04)
	float ArrowLength; // 0x124(0x04)
	float HeadLength; // 0x128(0x04)
	char pad_12C[0x14]; // 0x12c(0x14)

	void SetTint(struct FLinearColor InTint); // Function Icarus.Pointer.SetTint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x17fb410
	void SetThickness(float InThickness); // Function Icarus.Pointer.SetThickness // (Final|Native|Public|BlueprintCallable) // @ game+0x17fb390
	void SetHeadLength(float InLength); // Function Icarus.Pointer.SetHeadLength // (Final|Native|Public|BlueprintCallable) // @ game+0x17fb060
	void SetArrowLength(float InLength); // Function Icarus.Pointer.SetArrowLength // (Final|Native|Public|BlueprintCallable) // @ game+0x17faf50
	void SetAntiAlias(bool bInAntiAlias); // Function Icarus.Pointer.SetAntiAlias // (Final|Native|Public|BlueprintCallable) // @ game+0x17faec0
	void SetAngle(float InDegrees); // Function Icarus.Pointer.SetAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x17fae40
	struct FLinearColor GetTint(); // Function Icarus.Pointer.GetTint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f9560
	float GetThickness(); // Function Icarus.Pointer.GetThickness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f9530
	float GetHeadLength(); // Function Icarus.Pointer.GetHeadLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f8ae0
	float GetArrowLength(); // Function Icarus.Pointer.GetArrowLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f8ab0
	bool GetAntiAlias(); // Function Icarus.Pointer.GetAntiAlias // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f8a80
	float GetAngle(); // Function Icarus.Pointer.GetAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f8a50
};

// Class Icarus.PreviewCameraSettingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPreviewCameraSettingsLibrary : URowLibrary {

	struct FPreviewCameraSettingsRowHandle StructToRowHandle(struct FPreviewCameraSettingsEnum EnumValue); // Function Icarus.PreviewCameraSettingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fb730
	struct UE4::FName StructToName(struct FPreviewCameraSettingsEnum EnumValue); // Function Icarus.PreviewCameraSettingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fb690
	int32_t StructToInt(struct FPreviewCameraSettingsEnum EnumValue); // Function Icarus.PreviewCameraSettingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fb5f0
	struct FPreviewCameraSettingsEnum RowHandleToStruct(struct FPreviewCameraSettingsRowHandle RowHandle); // Function Icarus.PreviewCameraSettingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fabd0
	void RemoveRowFromPreviewCameraSettingsTable(struct UE4::FName Name); // Function Icarus.PreviewCameraSettingsLibrary.RemoveRowFromPreviewCameraSettingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17fab30
	void RefreshConstants(); // Function Icarus.PreviewCameraSettingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17fab10
	int32_t NumRows(); // Function Icarus.PreviewCameraSettingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9fb0
	bool NotEqual_EnumName(struct FPreviewCameraSettingsEnum A, struct UE4::FName B); // Function Icarus.PreviewCameraSettingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9ec0
	bool NotEqual_EnumEnum(struct FPreviewCameraSettingsEnum A, struct FPreviewCameraSettingsEnum B); // Function Icarus.PreviewCameraSettingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9dd0
	struct FPreviewCameraSettingsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.PreviewCameraSettingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9d40
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.PreviewCameraSettingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17f9cb0
	struct FPreviewCameraSettingsRowHandle MakePreviewCameraSettingsFromIndex(int32_t Index); // Function Icarus.PreviewCameraSettingsLibrary.MakePreviewCameraSettingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9c20
	struct FPreviewCameraSettingsEnum MakePreviewCameraSettingsEnum(struct FPreviewCameraSettingsEnum Enum); // Function Icarus.PreviewCameraSettingsLibrary.MakePreviewCameraSettingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9ba0
	struct FPreviewCameraSettingsRowHandle MakePreviewCameraSettings(struct UE4::FName RowName); // Function Icarus.PreviewCameraSettingsLibrary.MakePreviewCameraSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9b00
	struct FPreviewCameraSettingsRowHandle MakeLiteralPreviewCameraSettings(struct FPreviewCameraSettingsRowHandle RowHandle); // Function Icarus.PreviewCameraSettingsLibrary.MakeLiteralPreviewCameraSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9a30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.PreviewCameraSettingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17f99a0
	struct FPreviewCameraSettingsEnum IntToStruct(int32_t IntValue); // Function Icarus.PreviewCameraSettingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9810
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.PreviewCameraSettingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17f9780
	void GetPreviewCameraSettingsStruct(struct FPreviewCameraSettingsRowHandle RowHandle, struct FPreviewCameraSettings& PreviewCameraSettings, enum class EValid& Paths); // Function Icarus.PreviewCameraSettingsLibrary.GetPreviewCameraSettingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f8da0
	bool EqualEqual_FPreviewCameraSettingsRowHandleFPreviewCameraSettingsRowHandle(struct FPreviewCameraSettingsRowHandle RowHandleA, struct FPreviewCameraSettingsRowHandle RowHandleB); // Function Icarus.PreviewCameraSettingsLibrary.EqualEqual_FPreviewCameraSettingsRowHandleFPreviewCameraSettingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f88e0
	bool EqualEqual_EnumEnum(struct FPreviewCameraSettingsEnum A, struct FPreviewCameraSettingsEnum B); // Function Icarus.PreviewCameraSettingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f87f0
	struct FPreviewCameraSettingsRowHandle CastToPreviewCameraSettingsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.PreviewCameraSettingsLibrary.CastToPreviewCameraSettingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f7f10
	void BreakPreviewCameraSettingsEnum(struct FPreviewCameraSettingsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.PreviewCameraSettingsLibrary.BreakPreviewCameraSettingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17f7be0
	void AddRowToPreviewCameraSettingsTable(struct UE4::FName Name, struct FPreviewCameraSettings Data, struct FPreviewCameraSettingsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.PreviewCameraSettingsLibrary.AddRowToPreviewCameraSettingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17f7950
};

// Class Icarus.PreviewCameraSettingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPreviewCameraSettingsTable : UIcarusDataTable {
};

// Class Icarus.ProcessingComponent
// Size: 0x208 (Inherited: 0xd0)
struct UProcessingComponent : UTraitComponent {
	char pad_D0[0x8]; // 0xd0(0x08)
	struct TArray<struct FProcessingItem> ProcessingQueue; // 0xd8(0x10)
	char pad_E8[0x64]; // 0xe8(0x64)
	struct FMulticastSparseDelegate OnProcessorStateUpdated; // 0x14c(0x01)
	char pad_14D[0x3]; // 0x14d(0x03)
	struct UInventory* Inventory; // 0x150(0x08)
	struct AResourceDeposit* LinkedResource; // 0x158(0x08)
	float ProcessingProgress; // 0x160(0x04)
	bool bProcessorActive; // 0x164(0x01)
	char pad_165[0x3]; // 0x165(0x03)
	struct FProcessingItem ProcessingItem; // 0x168(0x28)
	struct FRecipeSet RecipeSetOverride; // 0x190(0x60)
	int32_t MillijoulesProcessed; // 0x1f0(0x04)
	struct FMulticastSparseDelegate OnProcessingStopped; // 0x1f4(0x01)
	struct FMulticastSparseDelegate OnProcessingItemUpdated; // 0x1f5(0x01)
	struct FMulticastSparseDelegate OnProcessingItemCompleted; // 0x1f6(0x01)
	char pad_1F7[0x1]; // 0x1f7(0x01)
	struct TArray<enum class EIcarusResourceType> ActivatedNetworks; // 0x1f8(0x10)

	void StopProcessing(enum class EProcessorStoppedReason Reason); // Function Icarus.ProcessingComponent.StopProcessing // (Final|Native|Protected) // @ game+0x17fb570
	bool ShelterRequirementsMet(struct AIcarusPlayerCharacter* CraftingPlayer, enum class EProcessorPurpose Purpose); // Function Icarus.ProcessingComponent.ShelterRequirementsMet // (Final|Native|Public|BlueprintCallable) // @ game+0x17fb4a0
	void SetProcessorState(bool bActive); // Function Icarus.ProcessingComponent.SetProcessorState // (Final|Native|Protected) // @ game+0x17fb300
	void SetProcessingItem(struct FProcessingItem NewProcessingItem); // Function Icarus.ProcessingComponent.SetProcessingItem // (Final|Native|Protected) // @ game+0x17fb230
	bool SatisfyQueue(struct FProcessingItem AdditionalRecipe, struct TArray<struct UInventory*> AdditionalInventories, bool ShiftItems); // Function Icarus.ProcessingComponent.SatisfyQueue // (Final|Native|Protected) // @ game+0x17fac90
	void RestartAutoProcessing(); // Function Icarus.ProcessingComponent.RestartAutoProcessing // (Final|Native|Protected) // @ game+0x17fabb0
	void ProcessNextRecipe(); // Function Icarus.ProcessingComponent.ProcessNextRecipe // (Final|Native|Protected) // @ game+0x17fa930
	void ProcessingInventoryItemRemoved(struct UInventory* Inventory, int32_t Location); // Function Icarus.ProcessingComponent.ProcessingInventoryItemRemoved // (Final|Native|Protected) // @ game+0x17faa40
	void ProcessingInventoryItemAdded(struct UInventory* Inventory, int32_t Location); // Function Icarus.ProcessingComponent.ProcessingInventoryItemAdded // (Final|Native|Protected) // @ game+0x17fa970
	void ProcessingComplete(); // Function Icarus.ProcessingComponent.ProcessingComplete // (Final|Native|Protected) // @ game+0x17fa950
	void Process(float Delta); // Function Icarus.ProcessingComponent.Process // (Final|Native|Public|BlueprintCallable) // @ game+0x17fa8b0
	void PopulateRecipe(struct FProcessingItem SelectedRecipe, struct UInventory* PlayerInventory); // Function Icarus.ProcessingComponent.PopulateRecipe // (Final|Native|Protected) // @ game+0x17fa760
	void OnServerStopProcessing(struct AIcarusPlayerCharacter* LeavingPlayer); // Function Icarus.ProcessingComponent.OnServerStopProcessing // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa180
	void OnServerStopAndClear(struct AIcarusPlayerCharacter* LeavingPlayer); // Function Icarus.ProcessingComponent.OnServerStopAndClear // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa0f0
	void OnServer_StopCurrentRecipe(); // Function Icarus.ProcessingComponent.OnServer_StopCurrentRecipe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa740
	void OnServer_StartProcessing(); // Function Icarus.ProcessingComponent.OnServer_StartProcessing // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa720
	void OnServer_SetResourceNode(struct AResourceDeposit* ResourceNode); // Function Icarus.ProcessingComponent.OnServer_SetResourceNode // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa690
	void OnServer_SetRecipeSet(struct FRecipeSet Set); // Function Icarus.ProcessingComponent.OnServer_SetRecipeSet // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa4d0
	void OnServer_RemoveProcessingRecipe(int32_t Location); // Function Icarus.ProcessingComponent.OnServer_RemoveProcessingRecipe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa440
	void OnServer_Process(float Delta); // Function Icarus.ProcessingComponent.OnServer_Process // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa3c0
	void OnServer_AddProcessingRecipe(struct FProcessorRecipesRowHandle Recipe, int32_t Count, struct TArray<struct UInventory*> AdditionalInventories, struct AIcarusPlayerCharacter* Player); // Function Icarus.ProcessingComponent.OnServer_AddProcessingRecipe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa230
	void OnServer_ActivateProcessor(); // Function Icarus.ProcessingComponent.OnServer_ActivateProcessor // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x17fa210
	void OnRep_ProcessorActive(); // Function Icarus.ProcessingComponent.OnRep_ProcessorActive // (Final|Native|Protected) // @ game+0x17fa0d0
	void OnRep_ProcessingItem(); // Function Icarus.ProcessingComponent.OnRep_ProcessingItem // (Final|Native|Protected) // @ game+0x17fa0b0
	bool IsRecipeUnlocked(struct FProcessorRecipesRowHandle& Recipe, struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.ProcessingComponent.IsRecipeUnlocked // (Final|Native|Protected|HasOutParms|Const) // @ game+0x17f98a0
	void Initialise(struct UInventory* ProcessorInventory); // Function Icarus.ProcessingComponent.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x17f96f0
	int32_t GetResourceRecipeValidility(enum class EIcarusResourceType ResourceType, int32_t RequiredAmount, struct TArray<struct UInventory*> AdditionalInventories); // Function Icarus.ProcessingComponent.GetResourceRecipeValidility // (Final|Native|Public|BlueprintCallable) // @ game+0x17f93c0
	struct FRecipeSetsRowHandle GetRecipeSetRow(); // Function Icarus.ProcessingComponent.GetRecipeSetRow // (Final|Native|Public|BlueprintCallable) // @ game+0x17f9380
	struct FRecipeSet GetRecipeSet(); // Function Icarus.ProcessingComponent.GetRecipeSet // (Final|Native|Public|BlueprintCallable) // @ game+0x17f9240
	bool GetRecipeInputs(); // Function Icarus.ProcessingComponent.GetRecipeInputs // (Final|Native|Protected) // @ game+0x17f9210
	struct TArray<struct FProcessingItem> GetProcessingQueue(); // Function Icarus.ProcessingComponent.GetProcessingQueue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x17f9190
	bool GetProcessingData(struct FProcessingData& OutData); // Function Icarus.ProcessingComponent.GetProcessingData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x17f8f60
	int32_t GetMaxCraftableStack(struct FProcessorRecipesRowHandle Recipe, struct TArray<struct UInventory*> AdditionalInventories, struct AIcarusPlayerCharacter* CraftingPlayer); // Function Icarus.ProcessingComponent.GetMaxCraftableStack // (Final|Native|Public|BlueprintCallable) // @ game+0x17f8b10
	bool FindRecipe(); // Function Icarus.ProcessingComponent.FindRecipe // (Final|Native|Protected) // @ game+0x17f8a20
	void DeactivateNetworksForProcessing(); // Function Icarus.ProcessingComponent.DeactivateNetworksForProcessing // (Final|Native|Protected) // @ game+0x17f87d0
	bool CheckRecipeValidityItems(struct FItemData Item, int32_t Multiplier, struct TArray<struct UInventory*> AdditionalInventories, int32_t& CurrentAmount); // Function Icarus.ProcessingComponent.CheckRecipeValidityItems // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17f8160
	bool CheckRecipe(struct FProcessorRecipesRowHandle Recipe, struct AIcarusPlayerCharacter* CraftingPlayer); // Function Icarus.ProcessingComponent.CheckRecipe // (Final|Native|Protected) // @ game+0x17f8060
	bool CheckEnergyRequirements(); // Function Icarus.ProcessingComponent.CheckEnergyRequirements // (Final|Native|Protected) // @ game+0x17f8030
	bool CanStartProcessing(); // Function Icarus.ProcessingComponent.CanStartProcessing // (Final|Native|Public|BlueprintCallable) // @ game+0x17f7ee0
	bool CanQueueItem(struct FProcessingItem RecipeToQueue, struct TArray<struct UInventory*> AdditionalInventories); // Function Icarus.ProcessingComponent.CanQueueItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x17f7d70
	bool CanProcess(); // Function Icarus.ProcessingComponent.CanProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x17f7d40
	void AddItem(struct FItemData Item); // Function Icarus.ProcessingComponent.AddItem // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x17f74a0
};

// Class Icarus.ProcessingLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProcessingLibrary : URowLibrary {

	struct FProcessingRowHandle StructToRowHandle(struct FProcessingEnum EnumValue); // Function Icarus.ProcessingLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800da0
	struct UE4::FName StructToName(struct FProcessingEnum EnumValue); // Function Icarus.ProcessingLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800bc0
	int32_t StructToInt(struct FProcessingEnum EnumValue); // Function Icarus.ProcessingLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18009e0
	struct FProcessingEnum RowHandleToStruct(struct FProcessingRowHandle RowHandle); // Function Icarus.ProcessingLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18007a0
	void RemoveRowFromProcessingTable(struct UE4::FName Name); // Function Icarus.ProcessingLibrary.RemoveRowFromProcessingTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1800620
	void RefreshConstants(); // Function Icarus.ProcessingLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18005c0
	int32_t NumRows(); // Function Icarus.ProcessingLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800530
	bool NotEqual_EnumName(struct FProcessingEnum A, struct UE4::FName B); // Function Icarus.ProcessingLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800260
	bool NotEqual_EnumEnum(struct FProcessingEnum A, struct FProcessingEnum B); // Function Icarus.ProcessingLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fff90
	struct FProcessingEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ProcessingLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ffde0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ProcessingLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17ffc30
	struct FProcessingRowHandle MakeProcessingFromIndex(int32_t Index); // Function Icarus.ProcessingLibrary.MakeProcessingFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff840
	struct FProcessingEnum MakeProcessingEnum(struct FProcessingEnum Enum); // Function Icarus.ProcessingLibrary.MakeProcessingEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff7c0
	struct FProcessingRowHandle MakeProcessing(struct UE4::FName RowName); // Function Icarus.ProcessingLibrary.MakeProcessing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff720
	struct FProcessingRowHandle MakeLiteralProcessing(struct FProcessingRowHandle RowHandle); // Function Icarus.ProcessingLibrary.MakeLiteralProcessing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff4b0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ProcessingLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ff300
	struct FProcessingEnum IntToStruct(int32_t IntValue); // Function Icarus.ProcessingLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff150
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ProcessingLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17fefa0
	void GetProcessingStruct(struct FProcessingRowHandle RowHandle, struct FProcessingData& Processing, enum class EValid& Paths); // Function Icarus.ProcessingLibrary.GetProcessingStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17feaa0
	bool EqualEqual_FProcessingRowHandleFProcessingRowHandle(struct FProcessingRowHandle RowHandleA, struct FProcessingRowHandle RowHandleB); // Function Icarus.ProcessingLibrary.EqualEqual_FProcessingRowHandleFProcessingRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fe6e0
	bool EqualEqual_EnumEnum(struct FProcessingEnum A, struct FProcessingEnum B); // Function Icarus.ProcessingLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fe410
	struct FProcessingRowHandle CastToProcessingRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ProcessingLibrary.CastToProcessingRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fe0b0
	void BreakProcessingEnum(struct FProcessingEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ProcessingLibrary.BreakProcessingEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17fdc90
	void AddRowToProcessingTable(struct UE4::FName Name, struct FProcessingData Data, struct FProcessingRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ProcessingLibrary.AddRowToProcessingTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fd5a0
};

// Class Icarus.ProcessingTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProcessingTable : UIcarusDataTable {
};

// Class Icarus.ProcessorRecipesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProcessorRecipesLibrary : URowLibrary {

	struct FProcessorRecipesRowHandle StructToRowHandle(struct FProcessorRecipesEnum EnumValue); // Function Icarus.ProcessorRecipesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800e50
	struct UE4::FName StructToName(struct FProcessorRecipesEnum EnumValue); // Function Icarus.ProcessorRecipesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800c60
	int32_t StructToInt(struct FProcessorRecipesEnum EnumValue); // Function Icarus.ProcessorRecipesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800a80
	struct FProcessorRecipesEnum RowHandleToStruct(struct FProcessorRecipesRowHandle RowHandle); // Function Icarus.ProcessorRecipesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800860
	void RemoveRowFromProcessorRecipesTable(struct UE4::FName Name); // Function Icarus.ProcessorRecipesLibrary.RemoveRowFromProcessorRecipesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18006a0
	void RefreshConstants(); // Function Icarus.ProcessorRecipesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18005e0
	int32_t NumRows(); // Function Icarus.ProcessorRecipesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800560
	bool NotEqual_EnumName(struct FProcessorRecipesEnum A, struct UE4::FName B); // Function Icarus.ProcessorRecipesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800350
	bool NotEqual_EnumEnum(struct FProcessorRecipesEnum A, struct FProcessorRecipesEnum B); // Function Icarus.ProcessorRecipesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800080
	struct FProcessorRecipesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ProcessorRecipesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ffe70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ProcessorRecipesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17ffcc0
	struct FProcessorRecipesRowHandle MakeProcessorRecipesFromIndex(int32_t Index); // Function Icarus.ProcessorRecipesLibrary.MakeProcessorRecipesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff9f0
	struct FProcessorRecipesEnum MakeProcessorRecipesEnum(struct FProcessorRecipesEnum Enum); // Function Icarus.ProcessorRecipesLibrary.MakeProcessorRecipesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff970
	struct FProcessorRecipesRowHandle MakeProcessorRecipes(struct UE4::FName RowName); // Function Icarus.ProcessorRecipesLibrary.MakeProcessorRecipes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff8d0
	struct FProcessorRecipesRowHandle MakeLiteralProcessorRecipes(struct FProcessorRecipesRowHandle RowHandle); // Function Icarus.ProcessorRecipesLibrary.MakeLiteralProcessorRecipes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff580
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ProcessorRecipesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ff390
	struct FProcessorRecipesEnum IntToStruct(int32_t IntValue); // Function Icarus.ProcessorRecipesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff1e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ProcessorRecipesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17ff030
	void GetProcessorRecipesStruct(struct FProcessorRecipesRowHandle RowHandle, struct FProcessorRecipe& ProcessorRecipes, enum class EValid& Paths); // Function Icarus.ProcessorRecipesLibrary.GetProcessorRecipesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fec30
	bool EqualEqual_FProcessorRecipesRowHandleFProcessorRecipesRowHandle(struct FProcessorRecipesRowHandle RowHandleA, struct FProcessorRecipesRowHandle RowHandleB); // Function Icarus.ProcessorRecipesLibrary.EqualEqual_FProcessorRecipesRowHandleFProcessorRecipesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fe820
	bool EqualEqual_EnumEnum(struct FProcessorRecipesEnum A, struct FProcessorRecipesEnum B); // Function Icarus.ProcessorRecipesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fe500
	struct FProcessorRecipesRowHandle CastToProcessorRecipesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ProcessorRecipesLibrary.CastToProcessorRecipesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fe1d0
	void BreakProcessorRecipesEnum(struct FProcessorRecipesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ProcessorRecipesLibrary.BreakProcessorRecipesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17fddf0
	void AddRowToProcessorRecipesTable(struct UE4::FName Name, struct FProcessorRecipe Data, struct FProcessorRecipesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ProcessorRecipesLibrary.AddRowToProcessorRecipesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fd840
};

// Class Icarus.ProcessorRecipesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProcessorRecipesTable : UIcarusDataTable {
};

// Class Icarus.ProjectileTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProjectileTypesLibrary : URowLibrary {

	struct FProjectileTypesRowHandle StructToRowHandle(struct FProjectileTypesEnum EnumValue); // Function Icarus.ProjectileTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800f00
	struct UE4::FName StructToName(struct FProjectileTypesEnum EnumValue); // Function Icarus.ProjectileTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800d00
	int32_t StructToInt(struct FProjectileTypesEnum EnumValue); // Function Icarus.ProjectileTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800b20
	struct FProjectileTypesEnum RowHandleToStruct(struct FProjectileTypesRowHandle RowHandle); // Function Icarus.ProjectileTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800920
	void RemoveRowFromProjectileTypesTable(struct UE4::FName Name); // Function Icarus.ProjectileTypesLibrary.RemoveRowFromProjectileTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1800720
	void RefreshConstants(); // Function Icarus.ProjectileTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1800600
	int32_t NumRows(); // Function Icarus.ProjectileTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800590
	bool NotEqual_EnumName(struct FProjectileTypesEnum A, struct UE4::FName B); // Function Icarus.ProjectileTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800440
	bool NotEqual_EnumEnum(struct FProjectileTypesEnum A, struct FProjectileTypesEnum B); // Function Icarus.ProjectileTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1800170
	struct FProjectileTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ProjectileTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fff00
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ProjectileTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17ffd50
	struct FProjectileTypesRowHandle MakeProjectileTypesFromIndex(int32_t Index); // Function Icarus.ProjectileTypesLibrary.MakeProjectileTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ffba0
	struct FProjectileTypesEnum MakeProjectileTypesEnum(struct FProjectileTypesEnum Enum); // Function Icarus.ProjectileTypesLibrary.MakeProjectileTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ffb20
	struct FProjectileTypesRowHandle MakeProjectileTypes(struct UE4::FName RowName); // Function Icarus.ProjectileTypesLibrary.MakeProjectileTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ffa80
	struct FProjectileTypesRowHandle MakeLiteralProjectileTypes(struct FProjectileTypesRowHandle RowHandle); // Function Icarus.ProjectileTypesLibrary.MakeLiteralProjectileTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff650
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ProjectileTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x17ff420
	struct FProjectileTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ProjectileTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17ff270
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ProjectileTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17ff0c0
	void GetProjectileTypesStruct(struct FProjectileTypesRowHandle RowHandle, struct FIcarusProjectileType& ProjectileTypes, enum class EValid& Paths); // Function Icarus.ProjectileTypesLibrary.GetProjectileTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fee10
	bool EqualEqual_FProjectileTypesRowHandleFProjectileTypesRowHandle(struct FProjectileTypesRowHandle RowHandleA, struct FProjectileTypesRowHandle RowHandleB); // Function Icarus.ProjectileTypesLibrary.EqualEqual_FProjectileTypesRowHandleFProjectileTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fe960
	bool EqualEqual_EnumEnum(struct FProjectileTypesEnum A, struct FProjectileTypesEnum B); // Function Icarus.ProjectileTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17fe5f0
	struct FProjectileTypesRowHandle CastToProjectileTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ProjectileTypesLibrary.CastToProjectileTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fe2f0
	void BreakProjectileTypesEnum(struct FProjectileTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ProjectileTypesLibrary.BreakProjectileTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17fdf50
	void AddRowToProjectileTypesTable(struct UE4::FName Name, struct FIcarusProjectileType Data, struct FProjectileTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ProjectileTypesLibrary.AddRowToProjectileTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17fda60
};

// Class Icarus.ProjectileTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProjectileTypesTable : UIcarusDataTable {
};

// Class Icarus.ProspectAudioComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UProspectAudioComponent : UActorComponent {

	void OnLoadingScreenChanged(bool bIsLoadingScreenShowing); // Function Icarus.ProspectAudioComponent.OnLoadingScreenChanged // (Final|Native|Protected) // @ game+0x18054a0
};

// Class Icarus.ProspectListLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProspectListLibrary : URowLibrary {

	struct FProspectListRowHandle StructToRowHandle(struct FProspectListEnum EnumValue); // Function Icarus.ProspectListLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805a70
	struct UE4::FName StructToName(struct FProspectListEnum EnumValue); // Function Icarus.ProspectListLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805930
	int32_t StructToInt(struct FProspectListEnum EnumValue); // Function Icarus.ProspectListLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18057f0
	struct FProspectListEnum RowHandleToStruct(struct FProspectListRowHandle RowHandle); // Function Icarus.ProspectListLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805670
	void RemoveRowFromProspectListTable(struct UE4::FName Name); // Function Icarus.ProspectListLibrary.RemoveRowFromProspectListTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1805570
	void RefreshConstants(); // Function Icarus.ProspectListLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1805530
	int32_t NumRows(); // Function Icarus.ProspectListLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805440
	bool NotEqual_EnumName(struct FProspectListEnum A, struct UE4::FName B); // Function Icarus.ProspectListLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805260
	bool NotEqual_EnumEnum(struct FProspectListEnum A, struct FProspectListEnum B); // Function Icarus.ProspectListLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805080
	struct FProspectListEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ProspectListLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804f60
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ProspectListLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1804e40
	struct FProspectListRowHandle MakeProspectListFromIndex(int32_t Index); // Function Icarus.ProspectListLibrary.MakeProspectListFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804c00
	struct FProspectListEnum MakeProspectListEnum(struct FProspectListEnum Enum); // Function Icarus.ProspectListLibrary.MakeProspectListEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804b80
	struct FProspectListRowHandle MakeProspectList(struct UE4::FName RowName); // Function Icarus.ProspectListLibrary.MakeProspectList // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804ae0
	struct FProspectListRowHandle MakeLiteralProspectList(struct FProspectListRowHandle RowHandle); // Function Icarus.ProspectListLibrary.MakeLiteralProspectList // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804940
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ProspectListLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1804820
	struct FProspectListEnum IntToStruct(int32_t IntValue); // Function Icarus.ProspectListLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804700
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ProspectListLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18045e0
	void GetProspectListStruct(struct FProspectListRowHandle RowHandle, struct FIcarusProspect& ProspectList, enum class EValid& Paths); // Function Icarus.ProspectListLibrary.GetProspectListStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1804250
	bool EqualEqual_FProspectListRowHandleFProspectListRowHandle(struct FProspectListRowHandle RowHandleA, struct FProspectListRowHandle RowHandleB); // Function Icarus.ProspectListLibrary.EqualEqual_FProspectListRowHandleFProspectListRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1803fd0
	bool EqualEqual_EnumEnum(struct FProspectListEnum A, struct FProspectListEnum B); // Function Icarus.ProspectListLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1803df0
	struct FProspectListRowHandle CastToProspectListRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ProspectListLibrary.CastToProspectListRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1803bb0
	void BreakProspectListEnum(struct FProspectListEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ProspectListLibrary.BreakProspectListEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18038f0
	void AddRowToProspectListTable(struct UE4::FName Name, struct FIcarusProspect Data, struct FProspectListRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ProspectListLibrary.AddRowToProspectListTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1803440
};

// Class Icarus.ProspectListTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProspectListTable : UIcarusDataTable {
};

// Class Icarus.ProspectStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProspectStatsLibrary : URowLibrary {

	struct FProspectStatsRowHandle StructToRowHandle(struct FProspectStatsEnum EnumValue); // Function Icarus.ProspectStatsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805b20
	struct UE4::FName StructToName(struct FProspectStatsEnum EnumValue); // Function Icarus.ProspectStatsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18059d0
	int32_t StructToInt(struct FProspectStatsEnum EnumValue); // Function Icarus.ProspectStatsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805890
	struct FProspectStatsEnum RowHandleToStruct(struct FProspectStatsRowHandle RowHandle); // Function Icarus.ProspectStatsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805730
	void RemoveRowFromProspectStatsTable(struct UE4::FName Name); // Function Icarus.ProspectStatsLibrary.RemoveRowFromProspectStatsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18055f0
	void RefreshConstants(); // Function Icarus.ProspectStatsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1805550
	int32_t NumRows(); // Function Icarus.ProspectStatsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805470
	bool NotEqual_EnumName(struct FProspectStatsEnum A, struct UE4::FName B); // Function Icarus.ProspectStatsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805350
	bool NotEqual_EnumEnum(struct FProspectStatsEnum A, struct FProspectStatsEnum B); // Function Icarus.ProspectStatsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1805170
	struct FProspectStatsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ProspectStatsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804ff0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ProspectStatsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1804ed0
	struct FProspectStatsRowHandle MakeProspectStatsFromIndex(int32_t Index); // Function Icarus.ProspectStatsLibrary.MakeProspectStatsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804db0
	struct FProspectStatsEnum MakeProspectStatsEnum(struct FProspectStatsEnum Enum); // Function Icarus.ProspectStatsLibrary.MakeProspectStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804d30
	struct FProspectStatsRowHandle MakeProspectStats(struct UE4::FName RowName); // Function Icarus.ProspectStatsLibrary.MakeProspectStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804c90
	struct FProspectStatsRowHandle MakeLiteralProspectStats(struct FProspectStatsRowHandle RowHandle); // Function Icarus.ProspectStatsLibrary.MakeLiteralProspectStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804a10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ProspectStatsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18048b0
	struct FProspectStatsEnum IntToStruct(int32_t IntValue); // Function Icarus.ProspectStatsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804790
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ProspectStatsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1804670
	void GetProspectStatsStruct(struct FProspectStatsRowHandle RowHandle, struct FProspectStat& ProspectStats, enum class EValid& Paths); // Function Icarus.ProspectStatsLibrary.GetProspectStatsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18043f0
	bool EqualEqual_FProspectStatsRowHandleFProspectStatsRowHandle(struct FProspectStatsRowHandle RowHandleA, struct FProspectStatsRowHandle RowHandleB); // Function Icarus.ProspectStatsLibrary.EqualEqual_FProspectStatsRowHandleFProspectStatsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1804110
	bool EqualEqual_EnumEnum(struct FProspectStatsEnum A, struct FProspectStatsEnum B); // Function Icarus.ProspectStatsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1803ee0
	struct FProspectStatsRowHandle CastToProspectStatsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ProspectStatsLibrary.CastToProspectStatsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1803cd0
	void BreakProspectStatsEnum(struct FProspectStatsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ProspectStatsLibrary.BreakProspectStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1803a50
	void AddRowToProspectStatsTable(struct UE4::FName Name, struct FProspectStat Data, struct FProspectStatsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ProspectStatsLibrary.AddRowToProspectStatsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1803620
};

// Class Icarus.ProspectStatsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProspectStatsTable : UIcarusDataTable {
};

// Class Icarus.ProspectSubsystem
// Size: 0x1a0 (Inherited: 0x30)
struct UProspectSubsystem : UGameInstanceSubsystem {
	struct FProspectInfo ActiveProspect; // 0x30(0x88)
	enum class ELobbyPrivacy SelectedLobbyPrivacy; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct FProspectSaveState ActiveProspectSaveState; // 0xc0(0xe0)

	bool LoadProspectSaveHeader(struct FString ProspectFilePath, struct FProspectSaveStateHeader& OutProspectSaveStateHeader); // Function Icarus.ProspectSubsystem.LoadProspectSaveHeader // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x180ad40
	bool IsTestProspectActive(); // Function Icarus.ProspectSubsystem.IsTestProspectActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1672dd0
	bool IsTestProspect(struct FProspectInfo& ProspectInfo); // Function Icarus.ProspectSubsystem.IsTestProspect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x180ab30
	bool IsProspectBackendCompatible(struct FProspectInfo& ProspectInfo); // Function Icarus.ProspectSubsystem.IsProspectBackendCompatible // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x180a9b0
	bool IsOutpostProspect(struct FProspectInfo& ProspectInfo); // Function Icarus.ProspectSubsystem.IsOutpostProspect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x180a830
	bool IsActiveProspectBackendCompatible(); // Function Icarus.ProspectSubsystem.IsActiveProspectBackendCompatible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x180a800
	bool HasActiveProspect(); // Function Icarus.ProspectSubsystem.HasActiveProspect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x180a5b0
	struct FString GetTestProspectID(); // Function Icarus.ProspectSubsystem.GetTestProspectID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180a450
	struct TArray<struct FString> GetSavedDeveloperProspectFileNames(); // Function Icarus.ProspectSubsystem.GetSavedDeveloperProspectFileNames // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180a3d0
	struct FProspectListRowHandle GetProspectRowHandleFromProspectInfo(struct FProspectInfo& ProspectInfo); // Function Icarus.ProspectSubsystem.GetProspectRowHandleFromProspectInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1809ce0
	struct FIcarusProspect GetProspectDataFromProspectInfo(struct FProspectInfo& ProspectInfo); // Function Icarus.ProspectSubsystem.GetProspectDataFromProspectInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1809b50
	struct FString GetOutpostProspectFilePath(struct FProspectInfo& ProspectInfo); // Function Icarus.ProspectSubsystem.GetOutpostProspectFilePath // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1809990
	struct TArray<struct FString> GetExistingOutpostsOfType(struct FString ProspectRowName); // Function Icarus.ProspectSubsystem.GetExistingOutpostsOfType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1809720
	struct FString GetDirectoryForLocalOutposts(); // Function Icarus.ProspectSubsystem.GetDirectoryForLocalOutposts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18096a0
	struct FString GetDirectoryForDeveloperProspects(); // Function Icarus.ProspectSubsystem.GetDirectoryForDeveloperProspects // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1809620
	struct FString GetDeveloperProspectFilePath(struct FString ProspectFileName); // Function Icarus.ProspectSubsystem.GetDeveloperProspectFilePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1809530
	struct FProspectListRowHandle GetActiveProspectRowHandle(); // Function Icarus.ProspectSubsystem.GetActiveProspectRowHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1809270
	struct FProspectInfo GetActiveProspectInfo(); // Function Icarus.ProspectSubsystem.GetActiveProspectInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1809120
	struct FString GetActiveProspectID(); // Function Icarus.ProspectSubsystem.GetActiveProspectID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18090e0
	struct FIcarusProspect GetActiveProspectData(); // Function Icarus.ProspectSubsystem.GetActiveProspectData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18090a0
	bool DeleteExistingLocalOutpost(struct FString OutpostName); // Function Icarus.ProspectSubsystem.DeleteExistingLocalOutpost // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1808dc0
};

// Class Icarus.ProspectTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UProspectTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.ProspectTalentModel
// Size: 0xe8 (Inherited: 0xe8)
struct UProspectTalentModel : UTalentModelInterface {
};

// Class Icarus.Quest
// Size: 0x320 (Inherited: 0x2b0)
struct AQuest : AIcarusActor {
	struct FMulticastSparseDelegate OnQuestStarted; // 0x2b0(0x01)
	struct FMulticastSparseDelegate OnQuestEnded; // 0x2b1(0x01)
	char pad_2B2[0x2]; // 0x2b2(0x02)
	struct FQuestsRowHandle QuestData; // 0x2b4(0x18)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct TArray<struct FQuestActor> RelevantActors; // 0x2d0(0x10)
	struct TArray<struct AQuest*> ActiveQuests; // 0x2e0(0x10)
	struct TArray<struct FQuestVariable> QuestVariables; // 0x2f0(0x10)
	struct TArray<struct FSubQuest> SubQuests; // 0x300(0x10)
	struct AQuest* QuestParent; // 0x310(0x08)
	float CachedDeltaSeconds; // 0x318(0x04)
	bool bArtificiallyComplete; // 0x31c(0x01)
	bool bReloaded; // 0x31d(0x01)
	char pad_31E[0x2]; // 0x31e(0x02)

	void TriggerEvent(struct FQuestEventsEnum Event); // Function Icarus.Quest.TriggerEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x180c3f0
	void Setup(bool bFirstTime); // Function Icarus.Quest.Setup // (Native|Event|Public|BlueprintEvent) // @ game+0x1744c20
	void SetRelevantActor(struct FString Name, bool bUseVariation, struct AIcarusActor* Actor); // Function Icarus.Quest.SetRelevantActor // (Final|Native|Public|BlueprintCallable) // @ game+0x180c0d0
	void SetQuestFlag(struct FSessionFlagsEnum Flag, bool State); // Function Icarus.Quest.SetQuestFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x180bfe0
	void SetIntVariable(struct FString VariableName, int32_t Variable); // Function Icarus.Quest.SetIntVariable // (Final|Native|Public|BlueprintCallable) // @ game+0x180bef0
	void SetFloatVariable(struct FString VariableName, float Variable); // Function Icarus.Quest.SetFloatVariable // (Final|Native|Public|BlueprintCallable) // @ game+0x180be00
	void SetBooleanVariable(struct FString VariableName, bool Variable); // Function Icarus.Quest.SetBooleanVariable // (Final|Native|Public|BlueprintCallable) // @ game+0x180bd10
	void RunQuest(struct FQuestsEnum Quest, enum class EQuestState& QuestState); // Function Icarus.Quest.RunQuest // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x180bc20
	void RunOperations(float DeltaSeconds); // Function Icarus.Quest.RunOperations // (Native|Event|Public|BlueprintEvent) // @ game+0x180bb90
	void RunFlow(); // Function Icarus.Quest.RunFlow // (Native|Event|Public|BlueprintEvent) // @ game+0x1719b90
	bool Run(float DeltaSeconds); // Function Icarus.Quest.Run // (Final|Native|Public) // @ game+0x180bb00
	void RemoveActiveQuest(struct AQuest* Quest); // Function Icarus.Quest.RemoveActiveQuest // (Final|Native|Public) // @ game+0x180b930
	void ReceiveQuestStarted(); // Function Icarus.Quest.ReceiveQuestStarted // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void ReceiveQuestEnded(); // Function Icarus.Quest.ReceiveQuestEnded // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void PassEvent(struct FQuestEventsEnum Event, struct AQuest* Quest); // Function Icarus.Quest.PassEvent // (Final|Native|Public) // @ game+0x180b820
	void OnIntVariableUpdated(struct FString Name, float iValue); // Function Icarus.Quest.OnIntVariableUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x180b720
	void OnFloatVariableUpdated(struct FString Name, float fValue); // Function Icarus.Quest.OnFloatVariableUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x180b620
	void OnBoolVariableUpdated(struct FString Name, bool bValue); // Function Icarus.Quest.OnBoolVariableUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x180b530
	void Initialise(struct AQuest* Parent, struct FQuestsRowHandle Quest); // Function Icarus.Quest.Initialise // (Final|Native|Public) // @ game+0x180a5e0
	void HandleQuestEvent(struct FQuestEventsEnum Event, struct AQuest* Quest); // Function Icarus.Quest.HandleQuestEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x180a4c0
	int32_t GetVariation(); // Function Icarus.Quest.GetVariation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x180a490
	struct AIcarusActor* GetRelevantActor(struct FString Name, bool bUseVariation, enum class EQuestActorState& QuestActorState); // Function Icarus.Quest.GetRelevantActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x180a280
	bool GetQuestFlag(struct FSessionFlagsEnum Flag); // Function Icarus.Quest.GetQuestFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x180a1d0
	struct TArray<struct FQuestDescription> GetQuestDescription(int32_t Depth); // Function Icarus.Quest.GetQuestDescription // (Final|Native|Public|BlueprintCallable) // @ game+0x1809e70
	int32_t GetIntVariable(struct FString VariableName); // Function Icarus.Quest.GetIntVariable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x18098d0
	float GetFloatVariable(struct FString VariableName); // Function Icarus.Quest.GetFloatVariable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1809810
	void GetDescription(struct FText& InDescription, struct FText& OutDescription, bool& bOutComplete); // Function Icarus.Quest.GetDescription // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1809370
	bool GetBooleanVariable(struct FString VariableName); // Function Icarus.Quest.GetBooleanVariable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x18092b0
	struct AQuest* CreateQuest(struct FQuestsEnum Quest); // Function Icarus.Quest.CreateQuest // (Final|Native|Public) // @ game+0x1808d10
	bool Check(); // Function Icarus.Quest.Check // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1808ce0
	void ArtificiallyComplete(); // Function Icarus.Quest.ArtificiallyComplete // (Final|Native|Public) // @ game+0x1808a40
	void AddActiveQuest(struct AQuest* Quest); // Function Icarus.Quest.AddActiveQuest // (Final|Native|Public) // @ game+0x18087e0
};

// Class Icarus.QuestEnemyModifiersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestEnemyModifiersLibrary : URowLibrary {

	struct FQuestEnemyModifiersRowHandle StructToRowHandle(struct FQuestEnemyModifiersEnum EnumValue); // Function Icarus.QuestEnemyModifiersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180c340
	struct UE4::FName StructToName(struct FQuestEnemyModifiersEnum EnumValue); // Function Icarus.QuestEnemyModifiersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180c2a0
	int32_t StructToInt(struct FQuestEnemyModifiersEnum EnumValue); // Function Icarus.QuestEnemyModifiersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180c200
	struct FQuestEnemyModifiersEnum RowHandleToStruct(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestEnemyModifiersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180ba40
	void RemoveRowFromQuestEnemyModifiersTable(struct UE4::FName Name); // Function Icarus.QuestEnemyModifiersLibrary.RemoveRowFromQuestEnemyModifiersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x180b9c0
	void RefreshConstants(); // Function Icarus.QuestEnemyModifiersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x180b910
	int32_t NumRows(); // Function Icarus.QuestEnemyModifiersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b500
	bool NotEqual_EnumName(struct FQuestEnemyModifiersEnum A, struct UE4::FName B); // Function Icarus.QuestEnemyModifiersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b410
	bool NotEqual_EnumEnum(struct FQuestEnemyModifiersEnum A, struct FQuestEnemyModifiersEnum B); // Function Icarus.QuestEnemyModifiersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b320
	struct FQuestEnemyModifiersEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuestEnemyModifiersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b290
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuestEnemyModifiersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x180b200
	struct FQuestEnemyModifiersRowHandle MakeQuestEnemyModifiersFromIndex(int32_t Index); // Function Icarus.QuestEnemyModifiersLibrary.MakeQuestEnemyModifiersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b170
	struct FQuestEnemyModifiersEnum MakeQuestEnemyModifiersEnum(struct FQuestEnemyModifiersEnum Enum); // Function Icarus.QuestEnemyModifiersLibrary.MakeQuestEnemyModifiersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b0f0
	struct FQuestEnemyModifiersRowHandle MakeQuestEnemyModifiers(struct UE4::FName RowName); // Function Icarus.QuestEnemyModifiersLibrary.MakeQuestEnemyModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180b050
	struct FQuestEnemyModifiersRowHandle MakeLiteralQuestEnemyModifiers(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestEnemyModifiersLibrary.MakeLiteralQuestEnemyModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180af80
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuestEnemyModifiersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x180acb0
	struct FQuestEnemyModifiersEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestEnemyModifiersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180a770
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuestEnemyModifiersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x180a6e0
	void GetQuestEnemyModifiersStruct(struct FQuestEnemyModifiersRowHandle RowHandle, struct FQuestEnemyModifier& QuestEnemyModifiers, enum class EValid& Paths); // Function Icarus.QuestEnemyModifiersLibrary.GetQuestEnemyModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180a030
	bool EqualEqual_FQuestEnemyModifiersRowHandleFQuestEnemyModifiersRowHandle(struct FQuestEnemyModifiersRowHandle RowHandleA, struct FQuestEnemyModifiersRowHandle RowHandleB); // Function Icarus.QuestEnemyModifiersLibrary.EqualEqual_FQuestEnemyModifiersRowHandleFQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1808f60
	bool EqualEqual_EnumEnum(struct FQuestEnemyModifiersEnum A, struct FQuestEnemyModifiersEnum B); // Function Icarus.QuestEnemyModifiersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1808e70
	struct FQuestEnemyModifiersRowHandle CastToQuestEnemyModifiersRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuestEnemyModifiersLibrary.CastToQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1808bc0
	void BreakQuestEnemyModifiersEnum(struct FQuestEnemyModifiersEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuestEnemyModifiersLibrary.BreakQuestEnemyModifiersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1808a60
	void AddRowToQuestEnemyModifiersTable(struct UE4::FName Name, struct FQuestEnemyModifier Data, struct FQuestEnemyModifiersRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuestEnemyModifiersLibrary.AddRowToQuestEnemyModifiersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1808870
};

// Class Icarus.QuestEnemyModifiersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestEnemyModifiersTable : UIcarusDataTable {
};

// Class Icarus.QuestEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestEventsLibrary : URowLibrary {

	struct FQuestEventsRowHandle StructToRowHandle(struct FQuestEventsEnum EnumValue); // Function Icarus.QuestEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18115f0
	struct UE4::FName StructToName(struct FQuestEventsEnum EnumValue); // Function Icarus.QuestEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1811550
	int32_t StructToInt(struct FQuestEventsEnum EnumValue); // Function Icarus.QuestEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18114b0
	struct FQuestEventsEnum RowHandleToStruct(struct FQuestEventsRowHandle RowHandle); // Function Icarus.QuestEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1811300
	void RemoveRowFromQuestEventsTable(struct UE4::FName Name); // Function Icarus.QuestEventsLibrary.RemoveRowFromQuestEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1811280
	void RefreshConstants(); // Function Icarus.QuestEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1811260
	int32_t NumRows(); // Function Icarus.QuestEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1811130
	bool NotEqual_EnumName(struct FQuestEventsEnum A, struct UE4::FName B); // Function Icarus.QuestEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810b60
	bool NotEqual_EnumEnum(struct FQuestEventsEnum A, struct FQuestEventsEnum B); // Function Icarus.QuestEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810a70
	struct FQuestEventsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuestEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18109e0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuestEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1810950
	struct FQuestEventsRowHandle MakeQuestEventsFromIndex(int32_t Index); // Function Icarus.QuestEventsLibrary.MakeQuestEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18108c0
	struct FQuestEventsEnum MakeQuestEventsEnum(struct FQuestEventsEnum Enum); // Function Icarus.QuestEventsLibrary.MakeQuestEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810840
	struct FQuestEventsRowHandle MakeQuestEvents(struct UE4::FName RowName); // Function Icarus.QuestEventsLibrary.MakeQuestEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18107a0
	struct FQuestEventsRowHandle MakeLiteralQuestEvents(struct FQuestEventsRowHandle RowHandle); // Function Icarus.QuestEventsLibrary.MakeLiteralQuestEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18106d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuestEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1810550
	struct FQuestEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810360
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuestEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18102d0
	void GetQuestEventsStruct(struct FQuestEventsRowHandle RowHandle, struct FQuestEvent& QuestEvents, enum class EValid& Paths); // Function Icarus.QuestEventsLibrary.GetQuestEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180f780
	bool EqualEqual_FQuestEventsRowHandleFQuestEventsRowHandle(struct FQuestEventsRowHandle RowHandleA, struct FQuestEventsRowHandle RowHandleB); // Function Icarus.QuestEventsLibrary.EqualEqual_FQuestEventsRowHandleFQuestEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180ea50
	bool EqualEqual_EnumEnum(struct FQuestEventsEnum A, struct FQuestEventsEnum B); // Function Icarus.QuestEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180e960
	struct FQuestEventsRowHandle CastToQuestEventsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuestEventsLibrary.CastToQuestEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180e820
	void BreakQuestEventsEnum(struct FQuestEventsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuestEventsLibrary.BreakQuestEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x180e6c0
	void AddRowToQuestEventsTable(struct UE4::FName Name, struct FQuestEvent Data, struct FQuestEventsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuestEventsLibrary.AddRowToQuestEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180e330
};

// Class Icarus.QuestEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestEventsTable : UIcarusDataTable {
};

// Class Icarus.QuestFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestFunctionLibrary : UBlueprintFunctionLibrary {

	struct UE4::FName GetQuestsModifierTableName(enum class EQuestModifiersTableType TableType); // Function Icarus.QuestFunctionLibrary.GetQuestsModifierTableName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1810120
	bool GetQuestModifierDataFromRowHandle(struct FRowHandle& RowHandle, struct FQuestModifierData& OutData); // Function Icarus.QuestFunctionLibrary.GetQuestModifierDataFromRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180fba0
	bool GetQuestModifierData(struct FQuestModifiersMultiRowHandle& RowHandle, struct FQuestModifierData& OutData); // Function Icarus.QuestFunctionLibrary.GetQuestModifierData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180fa40
	bool GetQuestModifierClassFromRow(struct FQuestModifiersMultiRowHandle& RowHandle, struct TSoftClassPtr<UObject>& OutQuestModifierClass); // Function Icarus.QuestFunctionLibrary.GetQuestModifierClassFromRow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180f900
};

// Class Icarus.QuestManager
// Size: 0x2d8 (Inherited: 0x2b0)
struct AQuestManager : AIcarusActor {
	struct FFactionMissionsRowHandle FactionMission; // 0x2b0(0x18)
	struct AQuest* InitialQuest; // 0x2c8(0x08)
	bool bReloadedFromDatabase; // 0x2d0(0x01)
	bool bIcarusBegunPlay; // 0x2d1(0x01)
	bool bMissionComplete; // 0x2d2(0x01)
	char pad_2D3[0x5]; // 0x2d3(0x05)

	void SetupFactionMission(struct FFactionMissionsRowHandle& FactionMissionRow, bool bForceSetup); // Function Icarus.QuestManager.SetupFactionMission // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18113c0
	void OnConnectedPlayerInitialised(struct FConnectedPlayer& ConnectedPlayer); // Function Icarus.QuestManager.OnConnectedPlayerInitialised // (Final|Native|Public|HasOutParms) // @ game+0x1811160
	struct AQuest* GetQuest(); // Function Icarus.QuestManager.GetQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x180f560
	void FactionMissionUpdateComplete(bool bSuccess); // Function Icarus.QuestManager.FactionMissionUpdateComplete // (Final|Native|Public) // @ game+0x180f070
	void CompleteQuest(); // Function Icarus.QuestManager.CompleteQuest // (Final|Native|Public) // @ game+0x180e940
	void ArtificiallyComplete(); // Function Icarus.QuestManager.ArtificiallyComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x180e540
};

// Class Icarus.QuestMarker
// Size: 0x248 (Inherited: 0x220)
struct AQuestMarker : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct FGameplayTagContainer GameplayTags; // 0x228(0x20)
};

// Class Icarus.QuestModifierBase
// Size: 0xc8 (Inherited: 0xb0)
struct UQuestModifierBase : UActorComponent {
	struct FQuestModifiersMultiRowHandle ModifierRow; // 0xb0(0x18)
};

// Class Icarus.QuestModifiersMultiRowHandleLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestModifiersMultiRowHandleLibrary : UBlueprintFunctionLibrary {

	struct FQuestWeatherModifiersRowHandle ToQuestWeatherModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.ToQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1811820
	struct FQuestVocalisationModifiersRowHandle ToQuestVocalisationModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.ToQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1811760
	struct FQuestEnemyModifiersRowHandle ToQuestEnemyModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.ToQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18116a0
	bool NotEqual_QuestModifiersMultiRowHandleQuestModifiersMultiRowHandle(struct FQuestModifiersMultiRowHandle A, struct FQuestModifiersMultiRowHandle B); // Function Icarus.QuestModifiersMultiRowHandleLibrary.NotEqual_QuestModifiersMultiRowHandleQuestModifiersMultiRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1811010
	bool NotEqual_QuestModifiersMultiRowHandleFQuestWeatherModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.NotEqual_QuestModifiersMultiRowHandleFQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810ed0
	bool NotEqual_QuestModifiersMultiRowHandleFQuestVocalisationModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.NotEqual_QuestModifiersMultiRowHandleFQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810d90
	bool NotEqual_QuestModifiersMultiRowHandleFQuestEnemyModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.NotEqual_QuestModifiersMultiRowHandleFQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1810c50
	struct FQuestModifiersMultiRowHandle Make(enum class EQuestModifiersTableType Enum, struct UE4::FName RowName); // Function Icarus.QuestModifiersMultiRowHandleLibrary.Make // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x18105e0
	bool IsValid(struct FQuestModifiersMultiRowHandle MultiRowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.IsValid // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18104a0
	bool IsNone(struct FQuestModifiersMultiRowHandle MultiRowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.IsNone // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18103f0
	struct UE4::FName GetTableNameByIndex(char TableIndex); // Function Icarus.QuestModifiersMultiRowHandleLibrary.GetTableNameByIndex // (Final|Native|Static|Public) // @ game+0x1810240
	char GetTableIndexByName(struct UE4::FName TableName); // Function Icarus.QuestModifiersMultiRowHandleLibrary.GetTableIndexByName // (Final|Native|Static|Public) // @ game+0x18101b0
	void GetQuestWeatherModifiersStruct(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestWeatherModifier& QuestWeatherModifiersStruct, enum class EValid& Paths); // Function Icarus.QuestModifiersMultiRowHandleLibrary.GetQuestWeatherModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180ff70
	void GetQuestVocalisationModifiersStruct(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestVocalisationModifier& QuestVocalisationModifiersStruct, enum class EValid& Paths); // Function Icarus.QuestModifiersMultiRowHandleLibrary.GetQuestVocalisationModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180fcf0
	void GetQuestEnemyModifiersStruct(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestEnemyModifier& QuestEnemyModifiersStruct, enum class EValid& Paths); // Function Icarus.QuestModifiersMultiRowHandleLibrary.GetQuestEnemyModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x180f590
	struct FRowMetadata GetMetadata(struct FQuestModifiersMultiRowHandle MultiRowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.GetMetadata // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180f370
	struct FQuestModifiersMultiRowHandle FromQuestWeatherModifiersRowHandle(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.FromQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180f2a0
	struct FQuestModifiersMultiRowHandle FromQuestVocalisationModifiersRowHandle(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.FromQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180f1d0
	struct FQuestModifiersMultiRowHandle FromQuestEnemyModifiersRowHandle(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.FromQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180f100
	bool EqualEqual_QuestModifiersMultiRowHandleQuestModifiersMultiRowHandle(struct FQuestModifiersMultiRowHandle A, struct FQuestModifiersMultiRowHandle B); // Function Icarus.QuestModifiersMultiRowHandleLibrary.EqualEqual_QuestModifiersMultiRowHandleQuestModifiersMultiRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180ef50
	bool EqualEqual_QuestModifiersMultiRowHandleFQuestWeatherModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.EqualEqual_QuestModifiersMultiRowHandleFQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180ee10
	bool EqualEqual_QuestModifiersMultiRowHandleFQuestVocalisationModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.EqualEqual_QuestModifiersMultiRowHandleFQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180ecd0
	bool EqualEqual_QuestModifiersMultiRowHandleFQuestEnemyModifiersRowHandle(struct FQuestModifiersMultiRowHandle MultiHandle, struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleLibrary.EqualEqual_QuestModifiersMultiRowHandleFQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x180eb90
	void Break(struct FQuestModifiersMultiRowHandle MultiRowHandle, enum class EQuestModifiersTableType& OutEnum, struct FName& OutName); // Function Icarus.QuestModifiersMultiRowHandleLibrary.Break // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x180e560
};

// Class Icarus.QuestModifierVocalisation
// Size: 0xe0 (Inherited: 0xc8)
struct UQuestModifierVocalisation : UQuestModifierBase {
	struct FQuestVocalisationModifiersRowHandle VocalisationRowHandle; // 0xc8(0x18)

	void OnQuestStarted(); // Function Icarus.QuestModifierVocalisation.OnQuestStarted // (Final|Native|Protected) // @ game+0x1811240
	void OnQuestEnded(); // Function Icarus.QuestModifierVocalisation.OnQuestEnded // (Final|Native|Protected) // @ game+0x1811220
};

// Class Icarus.QuestQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestQueriesLibrary : URowLibrary {

	struct FQuestQueriesRowHandle StructToRowHandle(struct FQuestQueriesEnum EnumValue); // Function Icarus.QuestQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1817480
	struct UE4::FName StructToName(struct FQuestQueriesEnum EnumValue); // Function Icarus.QuestQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18172a0
	int32_t StructToInt(struct FQuestQueriesEnum EnumValue); // Function Icarus.QuestQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18170c0
	struct FQuestQueriesEnum RowHandleToStruct(struct FQuestQueriesRowHandle RowHandle); // Function Icarus.QuestQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816e80
	void RemoveRowFromQuestQueriesTable(struct UE4::FName Name); // Function Icarus.QuestQueriesLibrary.RemoveRowFromQuestQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1816d00
	void RefreshConstants(); // Function Icarus.QuestQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1816ca0
	int32_t NumRows(); // Function Icarus.QuestQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816c10
	bool NotEqual_EnumName(struct FQuestQueriesEnum A, struct UE4::FName B); // Function Icarus.QuestQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816940
	bool NotEqual_EnumEnum(struct FQuestQueriesEnum A, struct FQuestQueriesEnum B); // Function Icarus.QuestQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816670
	struct FQuestQueriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuestQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18164c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuestQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1816310
	struct FQuestQueriesRowHandle MakeQuestQueriesFromIndex(int32_t Index); // Function Icarus.QuestQueriesLibrary.MakeQuestQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815f20
	struct FQuestQueriesEnum MakeQuestQueriesEnum(struct FQuestQueriesEnum Enum); // Function Icarus.QuestQueriesLibrary.MakeQuestQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815ea0
	struct FQuestQueriesRowHandle MakeQuestQueries(struct UE4::FName RowName); // Function Icarus.QuestQueriesLibrary.MakeQuestQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815e00
	struct FQuestQueriesRowHandle MakeLiteralQuestQueries(struct FQuestQueriesRowHandle RowHandle); // Function Icarus.QuestQueriesLibrary.MakeLiteralQuestQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815b90
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuestQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18159e0
	struct FQuestQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815830
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuestQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1815680
	void GetQuestQueriesStruct(struct FQuestQueriesRowHandle RowHandle, struct FQuestQueries& QuestQueries, enum class EValid& Paths); // Function Icarus.QuestQueriesLibrary.GetQuestQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1815190
	bool EqualEqual_FQuestQueriesRowHandleFQuestQueriesRowHandle(struct FQuestQueriesRowHandle RowHandleA, struct FQuestQueriesRowHandle RowHandleB); // Function Icarus.QuestQueriesLibrary.EqualEqual_FQuestQueriesRowHandleFQuestQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1814dd0
	bool EqualEqual_EnumEnum(struct FQuestQueriesEnum A, struct FQuestQueriesEnum B); // Function Icarus.QuestQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1814b00
	struct FQuestQueriesRowHandle CastToQuestQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuestQueriesLibrary.CastToQuestQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18147a0
	void BreakQuestQueriesEnum(struct FQuestQueriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuestQueriesLibrary.BreakQuestQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1814380
	void AddRowToQuestQueriesTable(struct UE4::FName Name, struct FQuestQueries Data, struct FQuestQueriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuestQueriesLibrary.AddRowToQuestQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1813cb0
};

// Class Icarus.QuestQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestQueriesTable : UIcarusDataTable {
};

// Class Icarus.QuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestsLibrary : URowLibrary {

	struct FQuestsRowHandle StructToRowHandle(struct FQuestsEnum EnumValue); // Function Icarus.QuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18175e0
	struct UE4::FName StructToName(struct FQuestsEnum EnumValue); // Function Icarus.QuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18173e0
	int32_t StructToInt(struct FQuestsEnum EnumValue); // Function Icarus.QuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1817200
	struct FQuestsEnum RowHandleToStruct(struct FQuestsRowHandle RowHandle); // Function Icarus.QuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1817000
	void RemoveRowFromQuestsTable(struct UE4::FName Name); // Function Icarus.QuestsLibrary.RemoveRowFromQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1816e00
	void RefreshConstants(); // Function Icarus.QuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1816ce0
	int32_t NumRows(); // Function Icarus.QuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816c70
	bool NotEqual_EnumName(struct FQuestsEnum A, struct UE4::FName B); // Function Icarus.QuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816b20
	bool NotEqual_EnumEnum(struct FQuestsEnum A, struct FQuestsEnum B); // Function Icarus.QuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816850
	struct FQuestsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18165e0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1816430
	struct FQuestsRowHandle MakeQuestsFromIndex(int32_t Index); // Function Icarus.QuestsLibrary.MakeQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816280
	struct FQuestsEnum MakeQuestsEnum(struct FQuestsEnum Enum); // Function Icarus.QuestsLibrary.MakeQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816200
	struct FQuestsRowHandle MakeQuests(struct UE4::FName RowName); // Function Icarus.QuestsLibrary.MakeQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816160
	struct FQuestsRowHandle MakeLiteralQuests(struct FQuestsRowHandle RowHandle); // Function Icarus.QuestsLibrary.MakeLiteralQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815d30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1815b00
	struct FQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815950
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18157a0
	void GetQuestsStruct(struct FQuestsRowHandle RowHandle, struct FQuestSetup& Quests, enum class EValid& Paths); // Function Icarus.QuestsLibrary.GetQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18154e0
	bool EqualEqual_FQuestsRowHandleFQuestsRowHandle(struct FQuestsRowHandle RowHandleA, struct FQuestsRowHandle RowHandleB); // Function Icarus.QuestsLibrary.EqualEqual_FQuestsRowHandleFQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815050
	bool EqualEqual_EnumEnum(struct FQuestsEnum A, struct FQuestsEnum B); // Function Icarus.QuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1814ce0
	struct FQuestsRowHandle CastToQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuestsLibrary.CastToQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18149e0
	void BreakQuestsEnum(struct FQuestsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuestsLibrary.BreakQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1814640
	void AddRowToQuestsTable(struct UE4::FName Name, struct FQuestSetup Data, struct FQuestsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuestsLibrary.AddRowToQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18141a0
};

// Class Icarus.QuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestsTable : UIcarusDataTable {
};

// Class Icarus.QuestVocalisationModifiersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestVocalisationModifiersLibrary : URowLibrary {

	struct FQuestVocalisationModifiersRowHandle StructToRowHandle(struct FQuestVocalisationModifiersEnum EnumValue); // Function Icarus.QuestVocalisationModifiersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1817530
	struct UE4::FName StructToName(struct FQuestVocalisationModifiersEnum EnumValue); // Function Icarus.QuestVocalisationModifiersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1817340
	int32_t StructToInt(struct FQuestVocalisationModifiersEnum EnumValue); // Function Icarus.QuestVocalisationModifiersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1817160
	struct FQuestVocalisationModifiersEnum RowHandleToStruct(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestVocalisationModifiersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816f40
	void RemoveRowFromQuestVocalisationModifiersTable(struct UE4::FName Name); // Function Icarus.QuestVocalisationModifiersLibrary.RemoveRowFromQuestVocalisationModifiersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1816d80
	void RefreshConstants(); // Function Icarus.QuestVocalisationModifiersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1816cc0
	int32_t NumRows(); // Function Icarus.QuestVocalisationModifiersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816c40
	bool NotEqual_EnumName(struct FQuestVocalisationModifiersEnum A, struct UE4::FName B); // Function Icarus.QuestVocalisationModifiersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816a30
	bool NotEqual_EnumEnum(struct FQuestVocalisationModifiersEnum A, struct FQuestVocalisationModifiersEnum B); // Function Icarus.QuestVocalisationModifiersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816760
	struct FQuestVocalisationModifiersEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuestVocalisationModifiersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816550
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuestVocalisationModifiersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18163a0
	struct FQuestVocalisationModifiersRowHandle MakeQuestVocalisationModifiersFromIndex(int32_t Index); // Function Icarus.QuestVocalisationModifiersLibrary.MakeQuestVocalisationModifiersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18160d0
	struct FQuestVocalisationModifiersEnum MakeQuestVocalisationModifiersEnum(struct FQuestVocalisationModifiersEnum Enum); // Function Icarus.QuestVocalisationModifiersLibrary.MakeQuestVocalisationModifiersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1816050
	struct FQuestVocalisationModifiersRowHandle MakeQuestVocalisationModifiers(struct UE4::FName RowName); // Function Icarus.QuestVocalisationModifiersLibrary.MakeQuestVocalisationModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815fb0
	struct FQuestVocalisationModifiersRowHandle MakeLiteralQuestVocalisationModifiers(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestVocalisationModifiersLibrary.MakeLiteralQuestVocalisationModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1815c60
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuestVocalisationModifiersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1815a70
	struct FQuestVocalisationModifiersEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestVocalisationModifiersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18158c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuestVocalisationModifiersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1815710
	void GetQuestVocalisationModifiersStruct(struct FQuestVocalisationModifiersRowHandle RowHandle, struct FQuestVocalisationModifier& QuestVocalisationModifiers, enum class EValid& Paths); // Function Icarus.QuestVocalisationModifiersLibrary.GetQuestVocalisationModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1815350
	bool EqualEqual_FQuestVocalisationModifiersRowHandleFQuestVocalisationModifiersRowHandle(struct FQuestVocalisationModifiersRowHandle RowHandleA, struct FQuestVocalisationModifiersRowHandle RowHandleB); // Function Icarus.QuestVocalisationModifiersLibrary.EqualEqual_FQuestVocalisationModifiersRowHandleFQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1814f10
	bool EqualEqual_EnumEnum(struct FQuestVocalisationModifiersEnum A, struct FQuestVocalisationModifiersEnum B); // Function Icarus.QuestVocalisationModifiersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1814bf0
	struct FQuestVocalisationModifiersRowHandle CastToQuestVocalisationModifiersRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuestVocalisationModifiersLibrary.CastToQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18148c0
	void BreakQuestVocalisationModifiersEnum(struct FQuestVocalisationModifiersEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuestVocalisationModifiersLibrary.BreakQuestVocalisationModifiersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18144e0
	void AddRowToQuestVocalisationModifiersTable(struct UE4::FName Name, struct FQuestVocalisationModifier Data, struct FQuestVocalisationModifiersRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuestVocalisationModifiersLibrary.AddRowToQuestVocalisationModifiersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1813f20
};

// Class Icarus.QuestVocalisationModifiersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestVocalisationModifiersTable : UIcarusDataTable {
};

// Class Icarus.QuestWeatherModifiersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestWeatherModifiersLibrary : URowLibrary {

	struct FQuestWeatherModifiersRowHandle StructToRowHandle(struct FQuestWeatherModifiersEnum EnumValue); // Function Icarus.QuestWeatherModifiersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181da80
	struct UE4::FName StructToName(struct FQuestWeatherModifiersEnum EnumValue); // Function Icarus.QuestWeatherModifiersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d8a0
	int32_t StructToInt(struct FQuestWeatherModifiersEnum EnumValue); // Function Icarus.QuestWeatherModifiersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d6c0
	struct FQuestWeatherModifiersEnum RowHandleToStruct(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestWeatherModifiersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d480
	void RemoveRowFromQuestWeatherModifiersTable(struct UE4::FName Name); // Function Icarus.QuestWeatherModifiersLibrary.RemoveRowFromQuestWeatherModifiersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x181d270
	void RefreshConstants(); // Function Icarus.QuestWeatherModifiersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x181d210
	int32_t NumRows(); // Function Icarus.QuestWeatherModifiersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d180
	bool NotEqual_EnumName(struct FQuestWeatherModifiersEnum A, struct UE4::FName B); // Function Icarus.QuestWeatherModifiersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181ceb0
	bool NotEqual_EnumEnum(struct FQuestWeatherModifiersEnum A, struct FQuestWeatherModifiersEnum B); // Function Icarus.QuestWeatherModifiersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181cbe0
	struct FQuestWeatherModifiersEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuestWeatherModifiersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181ca30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuestWeatherModifiersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x181c880
	struct FQuestWeatherModifiersRowHandle MakeQuestWeatherModifiersFromIndex(int32_t Index); // Function Icarus.QuestWeatherModifiersLibrary.MakeQuestWeatherModifiersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c3e0
	struct FQuestWeatherModifiersEnum MakeQuestWeatherModifiersEnum(struct FQuestWeatherModifiersEnum Enum); // Function Icarus.QuestWeatherModifiersLibrary.MakeQuestWeatherModifiersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c360
	struct FQuestWeatherModifiersRowHandle MakeQuestWeatherModifiers(struct UE4::FName RowName); // Function Icarus.QuestWeatherModifiersLibrary.MakeQuestWeatherModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c2c0
	struct FQuestWeatherModifiersRowHandle MakeLiteralQuestWeatherModifiers(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestWeatherModifiersLibrary.MakeLiteralQuestWeatherModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c050
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuestWeatherModifiersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x181bea0
	struct FQuestWeatherModifiersEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestWeatherModifiersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181bcf0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuestWeatherModifiersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x181bb40
	void GetQuestWeatherModifiersStruct(struct FQuestWeatherModifiersRowHandle RowHandle, struct FQuestWeatherModifier& QuestWeatherModifiers, enum class EValid& Paths); // Function Icarus.QuestWeatherModifiersLibrary.GetQuestWeatherModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181b5f0
	bool EqualEqual_FQuestWeatherModifiersRowHandleFQuestWeatherModifiersRowHandle(struct FQuestWeatherModifiersRowHandle RowHandleA, struct FQuestWeatherModifiersRowHandle RowHandleB); // Function Icarus.QuestWeatherModifiersLibrary.EqualEqual_FQuestWeatherModifiersRowHandleFQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181b230
	bool EqualEqual_EnumEnum(struct FQuestWeatherModifiersEnum A, struct FQuestWeatherModifiersEnum B); // Function Icarus.QuestWeatherModifiersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181af60
	struct FQuestWeatherModifiersRowHandle CastToQuestWeatherModifiersRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuestWeatherModifiersLibrary.CastToQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181ac00
	void BreakQuestWeatherModifiersEnum(struct FQuestWeatherModifiersEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuestWeatherModifiersLibrary.BreakQuestWeatherModifiersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x181a7e0
	void AddRowToQuestWeatherModifiersTable(struct UE4::FName Name, struct FQuestWeatherModifier Data, struct FQuestWeatherModifiersRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuestWeatherModifiersLibrary.AddRowToQuestWeatherModifiersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1819fd0
};

// Class Icarus.QuestWeatherModifiersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestWeatherModifiersTable : UIcarusDataTable {
};

// Class Icarus.QuickMoveLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuickMoveLibrary : URowLibrary {

	struct FQuickMoveRowHandle StructToRowHandle(struct FQuickMoveEnum EnumValue); // Function Icarus.QuickMoveLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181db30
	struct UE4::FName StructToName(struct FQuickMoveEnum EnumValue); // Function Icarus.QuickMoveLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d940
	int32_t StructToInt(struct FQuickMoveEnum EnumValue); // Function Icarus.QuickMoveLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d760
	struct FQuickMoveEnum RowHandleToStruct(struct FQuickMoveRowHandle RowHandle); // Function Icarus.QuickMoveLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d540
	void RemoveRowFromQuickMoveTable(struct UE4::FName Name); // Function Icarus.QuickMoveLibrary.RemoveRowFromQuickMoveTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x181d2f0
	void RefreshConstants(); // Function Icarus.QuickMoveLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x181d230
	int32_t NumRows(); // Function Icarus.QuickMoveLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d1b0
	bool NotEqual_EnumName(struct FQuickMoveEnum A, struct UE4::FName B); // Function Icarus.QuickMoveLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181cfa0
	bool NotEqual_EnumEnum(struct FQuickMoveEnum A, struct FQuickMoveEnum B); // Function Icarus.QuickMoveLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181ccd0
	struct FQuickMoveEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.QuickMoveLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181cac0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.QuickMoveLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x181c910
	struct FQuickMoveRowHandle MakeQuickMoveRowFromSource(struct FInventoryIDEnum& InSource); // Function Icarus.QuickMoveLibrary.MakeQuickMoveRowFromSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x181c620
	struct FQuickMoveRowHandle MakeQuickMoveFromIndex(int32_t Index); // Function Icarus.QuickMoveLibrary.MakeQuickMoveFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c590
	struct FQuickMoveEnum MakeQuickMoveEnum(struct FQuickMoveEnum Enum); // Function Icarus.QuickMoveLibrary.MakeQuickMoveEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c510
	struct FQuickMoveRowHandle MakeQuickMove(struct UE4::FName RowName); // Function Icarus.QuickMoveLibrary.MakeQuickMove // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c470
	struct FQuickMoveRowHandle MakeLiteralQuickMove(struct FQuickMoveRowHandle RowHandle); // Function Icarus.QuickMoveLibrary.MakeLiteralQuickMove // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c120
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.QuickMoveLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x181bf30
	struct FQuickMoveEnum IntToStruct(int32_t IntValue); // Function Icarus.QuickMoveLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181bd80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.QuickMoveLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x181bbd0
	void GetQuickMoveStruct(struct FQuickMoveRowHandle RowHandle, struct FQuickMove& QuickMove, enum class EValid& Paths); // Function Icarus.QuickMoveLibrary.GetQuickMoveStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181b7a0
	bool EqualEqual_FQuickMoveRowHandleFQuickMoveRowHandle(struct FQuickMoveRowHandle RowHandleA, struct FQuickMoveRowHandle RowHandleB); // Function Icarus.QuickMoveLibrary.EqualEqual_FQuickMoveRowHandleFQuickMoveRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181b370
	bool EqualEqual_EnumEnum(struct FQuickMoveEnum A, struct FQuickMoveEnum B); // Function Icarus.QuickMoveLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181b050
	struct FQuickMoveRowHandle CastToQuickMoveRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.QuickMoveLibrary.CastToQuickMoveRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181ad20
	void BreakQuickMoveEnum(struct FQuickMoveEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.QuickMoveLibrary.BreakQuickMoveEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x181a940
	void AddRowToQuickMoveTable(struct UE4::FName Name, struct FQuickMove Data, struct FQuickMoveRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.QuickMoveLibrary.AddRowToQuickMoveTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181a270
};

// Class Icarus.QuickMoveTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuickMoveTable : UIcarusDataTable {
};

// Class Icarus.RadarMapGridBase
// Size: 0x2e0 (Inherited: 0x260)
struct URadarMapGridBase : UUserWidget {
	struct FSlateFontInfo FontInfo; // 0x260(0x58)
	struct FVector2D NameOffset; // 0x2b8(0x08)
	struct FLinearColor GridTint; // 0x2c0(0x10)
	int32_t GridNumX; // 0x2d0(0x04)
	int32_t GridNumY; // 0x2d4(0x04)
	float GridThickness; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)

	void RenderGridImage(bool bInRenderImage); // Function Icarus.RadarMapGridBase.RenderGridImage // (Final|Native|Public|BlueprintCallable) // @ game+0x181d3f0
	void OnRenderGridImage(bool bInRenderImage); // Function Icarus.RadarMapGridBase.OnRenderGridImage // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.RadialMenuDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct URadialMenuDataLibrary : URowLibrary {

	struct FRadialMenuDataRowHandle StructToRowHandle(struct FRadialMenuDataEnum EnumValue); // Function Icarus.RadialMenuDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181dbe0
	struct UE4::FName StructToName(struct FRadialMenuDataEnum EnumValue); // Function Icarus.RadialMenuDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d9e0
	int32_t StructToInt(struct FRadialMenuDataEnum EnumValue); // Function Icarus.RadialMenuDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d800
	struct FRadialMenuDataEnum RowHandleToStruct(struct FRadialMenuDataRowHandle RowHandle); // Function Icarus.RadialMenuDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d600
	void RemoveRowFromRadialMenuDataTable(struct UE4::FName Name); // Function Icarus.RadialMenuDataLibrary.RemoveRowFromRadialMenuDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x181d370
	void RefreshConstants(); // Function Icarus.RadialMenuDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x181d250
	int32_t NumRows(); // Function Icarus.RadialMenuDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d1e0
	bool NotEqual_EnumName(struct FRadialMenuDataEnum A, struct UE4::FName B); // Function Icarus.RadialMenuDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181d090
	bool NotEqual_EnumEnum(struct FRadialMenuDataEnum A, struct FRadialMenuDataEnum B); // Function Icarus.RadialMenuDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181cdc0
	struct FRadialMenuDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RadialMenuDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181cb50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RadialMenuDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x181c9a0
	struct FRadialMenuDataRowHandle MakeRadialMenuDataFromIndex(int32_t Index); // Function Icarus.RadialMenuDataLibrary.MakeRadialMenuDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c7f0
	struct FRadialMenuDataEnum MakeRadialMenuDataEnum(struct FRadialMenuDataEnum Enum); // Function Icarus.RadialMenuDataLibrary.MakeRadialMenuDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c770
	struct FRadialMenuDataRowHandle MakeRadialMenuData(struct UE4::FName RowName); // Function Icarus.RadialMenuDataLibrary.MakeRadialMenuData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c6d0
	struct FRadialMenuDataRowHandle MakeLiteralRadialMenuData(struct FRadialMenuDataRowHandle RowHandle); // Function Icarus.RadialMenuDataLibrary.MakeLiteralRadialMenuData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181c1f0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RadialMenuDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x181bfc0
	struct FRadialMenuDataEnum IntToStruct(int32_t IntValue); // Function Icarus.RadialMenuDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181be10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RadialMenuDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x181bc60
	void GetRadialMenuDataStruct(struct FRadialMenuDataRowHandle RowHandle, struct FRadialMenuData& RadialMenuData, enum class EValid& Paths); // Function Icarus.RadialMenuDataLibrary.GetRadialMenuDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181b930
	bool EqualEqual_FRadialMenuDataRowHandleFRadialMenuDataRowHandle(struct FRadialMenuDataRowHandle RowHandleA, struct FRadialMenuDataRowHandle RowHandleB); // Function Icarus.RadialMenuDataLibrary.EqualEqual_FRadialMenuDataRowHandleFRadialMenuDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181b4b0
	bool EqualEqual_EnumEnum(struct FRadialMenuDataEnum A, struct FRadialMenuDataEnum B); // Function Icarus.RadialMenuDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x181b140
	struct FRadialMenuDataRowHandle CastToRadialMenuDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RadialMenuDataLibrary.CastToRadialMenuDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181ae40
	void BreakRadialMenuDataEnum(struct FRadialMenuDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RadialMenuDataLibrary.BreakRadialMenuDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x181aaa0
	void AddRowToRadialMenuDataTable(struct UE4::FName Name, struct FRadialMenuData Data, struct FRadialMenuDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RadialMenuDataLibrary.AddRowToRadialMenuDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181a510
};

// Class Icarus.RadialMenuDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct URadialMenuDataTable : UIcarusDataTable {
};

// Class Icarus.RadialOptionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URadialOptionsLibrary : URowLibrary {

	struct FRadialOptionsRowHandle StructToRowHandle(struct FRadialOptionsEnum EnumValue); // Function Icarus.RadialOptionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18235a0
	struct UE4::FName StructToName(struct FRadialOptionsEnum EnumValue); // Function Icarus.RadialOptionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18233c0
	int32_t StructToInt(struct FRadialOptionsEnum EnumValue); // Function Icarus.RadialOptionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18231e0
	struct FRadialOptionsEnum RowHandleToStruct(struct FRadialOptionsRowHandle RowHandle); // Function Icarus.RadialOptionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822fa0
	void RemoveRowFromRadialOptionsTable(struct UE4::FName Name); // Function Icarus.RadialOptionsLibrary.RemoveRowFromRadialOptionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1822e20
	void RefreshConstants(); // Function Icarus.RadialOptionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1822dc0
	int32_t NumRows(); // Function Icarus.RadialOptionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822d30
	bool NotEqual_EnumName(struct FRadialOptionsEnum A, struct UE4::FName B); // Function Icarus.RadialOptionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822a60
	bool NotEqual_EnumEnum(struct FRadialOptionsEnum A, struct FRadialOptionsEnum B); // Function Icarus.RadialOptionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822790
	struct FRadialOptionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RadialOptionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18225e0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RadialOptionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1822430
	struct FRadialOptionsRowHandle MakeRadialOptionsFromIndex(int32_t Index); // Function Icarus.RadialOptionsLibrary.MakeRadialOptionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822040
	struct FRadialOptionsEnum MakeRadialOptionsEnum(struct FRadialOptionsEnum Enum); // Function Icarus.RadialOptionsLibrary.MakeRadialOptionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821fc0
	struct FRadialOptionsRowHandle MakeRadialOptions(struct UE4::FName RowName); // Function Icarus.RadialOptionsLibrary.MakeRadialOptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821f20
	struct FRadialOptionsRowHandle MakeLiteralRadialOptions(struct FRadialOptionsRowHandle RowHandle); // Function Icarus.RadialOptionsLibrary.MakeLiteralRadialOptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821cb0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RadialOptionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1821b00
	struct FRadialOptionsEnum IntToStruct(int32_t IntValue); // Function Icarus.RadialOptionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821950
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RadialOptionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18217a0
	void GetRadialOptionsStruct(struct FRadialOptionsRowHandle RowHandle, struct FRadialOption& RadialOptions, enum class EValid& Paths); // Function Icarus.RadialOptionsLibrary.GetRadialOptionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18211e0
	bool EqualEqual_FRadialOptionsRowHandleFRadialOptionsRowHandle(struct FRadialOptionsRowHandle RowHandleA, struct FRadialOptionsRowHandle RowHandleB); // Function Icarus.RadialOptionsLibrary.EqualEqual_FRadialOptionsRowHandleFRadialOptionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1820e20
	bool EqualEqual_EnumEnum(struct FRadialOptionsEnum A, struct FRadialOptionsEnum B); // Function Icarus.RadialOptionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1820b50
	struct FRadialOptionsRowHandle CastToRadialOptionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RadialOptionsLibrary.CastToRadialOptionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18207f0
	void BreakRadialOptionsEnum(struct FRadialOptionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RadialOptionsLibrary.BreakRadialOptionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18203d0
	void AddRowToRadialOptionsTable(struct UE4::FName Name, struct FRadialOption Data, struct FRadialOptionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RadialOptionsLibrary.AddRowToRadialOptionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181fad0
};

// Class Icarus.RadialOptionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URadialOptionsTable : UIcarusDataTable {
};

// Class Icarus.RangedWeaponDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct URangedWeaponDataLibrary : URowLibrary {

	struct FRangedWeaponDataRowHandle StructToRowHandle(struct FRangedWeaponDataEnum EnumValue); // Function Icarus.RangedWeaponDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823650
	struct UE4::FName StructToName(struct FRangedWeaponDataEnum EnumValue); // Function Icarus.RangedWeaponDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823460
	int32_t StructToInt(struct FRangedWeaponDataEnum EnumValue); // Function Icarus.RangedWeaponDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823280
	struct FRangedWeaponDataEnum RowHandleToStruct(struct FRangedWeaponDataRowHandle RowHandle); // Function Icarus.RangedWeaponDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823060
	void RemoveRowFromRangedWeaponDataTable(struct UE4::FName Name); // Function Icarus.RangedWeaponDataLibrary.RemoveRowFromRangedWeaponDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1822ea0
	void RefreshConstants(); // Function Icarus.RangedWeaponDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1822de0
	int32_t NumRows(); // Function Icarus.RangedWeaponDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822d60
	bool NotEqual_EnumName(struct FRangedWeaponDataEnum A, struct UE4::FName B); // Function Icarus.RangedWeaponDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822b50
	bool NotEqual_EnumEnum(struct FRangedWeaponDataEnum A, struct FRangedWeaponDataEnum B); // Function Icarus.RangedWeaponDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822880
	struct FRangedWeaponDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RangedWeaponDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822670
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RangedWeaponDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18224c0
	struct FRangedWeaponDataRowHandle MakeRangedWeaponDataFromIndex(int32_t Index); // Function Icarus.RangedWeaponDataLibrary.MakeRangedWeaponDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18221f0
	struct FRangedWeaponDataEnum MakeRangedWeaponDataEnum(struct FRangedWeaponDataEnum Enum); // Function Icarus.RangedWeaponDataLibrary.MakeRangedWeaponDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822170
	struct FRangedWeaponDataRowHandle MakeRangedWeaponData(struct UE4::FName RowName); // Function Icarus.RangedWeaponDataLibrary.MakeRangedWeaponData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18220d0
	struct FRangedWeaponDataRowHandle MakeLiteralRangedWeaponData(struct FRangedWeaponDataRowHandle RowHandle); // Function Icarus.RangedWeaponDataLibrary.MakeLiteralRangedWeaponData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821d80
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RangedWeaponDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1821b90
	struct FRangedWeaponDataEnum IntToStruct(int32_t IntValue); // Function Icarus.RangedWeaponDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18219e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RangedWeaponDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1821830
	void GetRangedWeaponDataStruct(struct FRangedWeaponDataRowHandle RowHandle, struct FRangedWeaponData& RangedWeaponData, enum class EValid& Paths); // Function Icarus.RangedWeaponDataLibrary.GetRangedWeaponDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1821360
	bool EqualEqual_FRangedWeaponDataRowHandleFRangedWeaponDataRowHandle(struct FRangedWeaponDataRowHandle RowHandleA, struct FRangedWeaponDataRowHandle RowHandleB); // Function Icarus.RangedWeaponDataLibrary.EqualEqual_FRangedWeaponDataRowHandleFRangedWeaponDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1820f60
	bool EqualEqual_EnumEnum(struct FRangedWeaponDataEnum A, struct FRangedWeaponDataEnum B); // Function Icarus.RangedWeaponDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1820c40
	struct FRangedWeaponDataRowHandle CastToRangedWeaponDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RangedWeaponDataLibrary.CastToRangedWeaponDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1820910
	void BreakRangedWeaponDataEnum(struct FRangedWeaponDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RangedWeaponDataLibrary.BreakRangedWeaponDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1820530
	void AddRowToRangedWeaponDataTable(struct UE4::FName Name, struct FRangedWeaponData Data, struct FRangedWeaponDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RangedWeaponDataLibrary.AddRowToRangedWeaponDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x181fce0
};

// Class Icarus.RangedWeaponDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct URangedWeaponDataTable : UIcarusDataTable {
};

// Class Icarus.RecipeSetsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URecipeSetsLibrary : URowLibrary {

	struct FRecipeSetsRowHandle StructToRowHandle(struct FRecipeSetsEnum EnumValue); // Function Icarus.RecipeSetsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823700
	struct UE4::FName StructToName(struct FRecipeSetsEnum EnumValue); // Function Icarus.RecipeSetsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823500
	int32_t StructToInt(struct FRecipeSetsEnum EnumValue); // Function Icarus.RecipeSetsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823320
	struct FRecipeSetsEnum RowHandleToStruct(struct FRecipeSetsRowHandle RowHandle); // Function Icarus.RecipeSetsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1823120
	void RemoveRowFromRecipeSetsTable(struct UE4::FName Name); // Function Icarus.RecipeSetsLibrary.RemoveRowFromRecipeSetsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1822f20
	void RefreshConstants(); // Function Icarus.RecipeSetsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1822e00
	int32_t NumRows(); // Function Icarus.RecipeSetsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822d90
	bool NotEqual_EnumName(struct FRecipeSetsEnum A, struct UE4::FName B); // Function Icarus.RecipeSetsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822c40
	bool NotEqual_EnumEnum(struct FRecipeSetsEnum A, struct FRecipeSetsEnum B); // Function Icarus.RecipeSetsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822970
	struct FRecipeSetsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RecipeSetsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822700
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RecipeSetsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1822550
	struct FRecipeSetsRowHandle MakeRecipeSetsFromIndex(int32_t Index); // Function Icarus.RecipeSetsLibrary.MakeRecipeSetsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18223a0
	struct FRecipeSetsEnum MakeRecipeSetsEnum(struct FRecipeSetsEnum Enum); // Function Icarus.RecipeSetsLibrary.MakeRecipeSetsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822320
	struct FRecipeSetsRowHandle MakeRecipeSets(struct UE4::FName RowName); // Function Icarus.RecipeSetsLibrary.MakeRecipeSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1822280
	struct FRecipeSetsRowHandle MakeLiteralRecipeSets(struct FRecipeSetsRowHandle RowHandle); // Function Icarus.RecipeSetsLibrary.MakeLiteralRecipeSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821e50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RecipeSetsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1821c20
	struct FRecipeSetsEnum IntToStruct(int32_t IntValue); // Function Icarus.RecipeSetsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1821a70
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RecipeSetsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18218c0
	void GetRecipeSetsStruct(struct FRecipeSetsRowHandle RowHandle, struct FRecipeSet& RecipeSets, enum class EValid& Paths); // Function Icarus.RecipeSetsLibrary.GetRecipeSetsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18215d0
	bool EqualEqual_FRecipeSetsRowHandleFRecipeSetsRowHandle(struct FRecipeSetsRowHandle RowHandleA, struct FRecipeSetsRowHandle RowHandleB); // Function Icarus.RecipeSetsLibrary.EqualEqual_FRecipeSetsRowHandleFRecipeSetsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18210a0
	bool EqualEqual_EnumEnum(struct FRecipeSetsEnum A, struct FRecipeSetsEnum B); // Function Icarus.RecipeSetsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1820d30
	struct FRecipeSetsRowHandle CastToRecipeSetsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RecipeSetsLibrary.CastToRecipeSetsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1820a30
	void BreakRecipeSetsEnum(struct FRecipeSetsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RecipeSetsLibrary.BreakRecipeSetsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1820690
	void AddRowToRecipeSetsTable(struct UE4::FName Name, struct FRecipeSet Data, struct FRecipeSetsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RecipeSetsLibrary.AddRowToRecipeSetsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1820110
};

// Class Icarus.RecipeSetsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URecipeSetsTable : UIcarusDataTable {
};

// Class Icarus.RepGraphClassPoliciesLibrary
// Size: 0x28 (Inherited: 0x28)
struct URepGraphClassPoliciesLibrary : URowLibrary {

	struct FRepGraphClassPoliciesRowHandle StructToRowHandle(struct FRepGraphClassPoliciesEnum EnumValue); // Function Icarus.RepGraphClassPoliciesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18283b0
	struct UE4::FName StructToName(struct FRepGraphClassPoliciesEnum EnumValue); // Function Icarus.RepGraphClassPoliciesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1828270
	int32_t StructToInt(struct FRepGraphClassPoliciesEnum EnumValue); // Function Icarus.RepGraphClassPoliciesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1828130
	struct FRepGraphClassPoliciesEnum RowHandleToStruct(struct FRepGraphClassPoliciesRowHandle RowHandle); // Function Icarus.RepGraphClassPoliciesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827eb0
	void RemoveRowFromRepGraphClassPoliciesTable(struct UE4::FName Name); // Function Icarus.RepGraphClassPoliciesLibrary.RemoveRowFromRepGraphClassPoliciesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1827db0
	void RefreshConstants(); // Function Icarus.RepGraphClassPoliciesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1827d70
	int32_t NumRows(); // Function Icarus.RepGraphClassPoliciesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827c90
	bool NotEqual_EnumName(struct FRepGraphClassPoliciesEnum A, struct UE4::FName B); // Function Icarus.RepGraphClassPoliciesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827ab0
	bool NotEqual_EnumEnum(struct FRepGraphClassPoliciesEnum A, struct FRepGraphClassPoliciesEnum B); // Function Icarus.RepGraphClassPoliciesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18278d0
	struct FRepGraphClassPoliciesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RepGraphClassPoliciesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18277b0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RepGraphClassPoliciesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1827690
	struct FRepGraphClassPoliciesRowHandle MakeRepGraphClassPoliciesFromIndex(int32_t Index); // Function Icarus.RepGraphClassPoliciesLibrary.MakeRepGraphClassPoliciesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827450
	struct FRepGraphClassPoliciesEnum MakeRepGraphClassPoliciesEnum(struct FRepGraphClassPoliciesEnum Enum); // Function Icarus.RepGraphClassPoliciesLibrary.MakeRepGraphClassPoliciesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18273d0
	struct FRepGraphClassPoliciesRowHandle MakeRepGraphClassPolicies(struct UE4::FName RowName); // Function Icarus.RepGraphClassPoliciesLibrary.MakeRepGraphClassPolicies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827330
	struct FRepGraphClassPoliciesRowHandle MakeLiteralRepGraphClassPolicies(struct FRepGraphClassPoliciesRowHandle RowHandle); // Function Icarus.RepGraphClassPoliciesLibrary.MakeLiteralRepGraphClassPolicies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827190
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RepGraphClassPoliciesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1827070
	struct FRepGraphClassPoliciesEnum IntToStruct(int32_t IntValue); // Function Icarus.RepGraphClassPoliciesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1826f50
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RepGraphClassPoliciesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1826e30
	void GetRepGraphClassPoliciesStruct(struct FRepGraphClassPoliciesRowHandle RowHandle, struct FRepGraphClassPolicy& RepGraphClassPolicies, enum class EValid& Paths); // Function Icarus.RepGraphClassPoliciesLibrary.GetRepGraphClassPoliciesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1826a40
	bool EqualEqual_FRepGraphClassPoliciesRowHandleFRepGraphClassPoliciesRowHandle(struct FRepGraphClassPoliciesRowHandle RowHandleA, struct FRepGraphClassPoliciesRowHandle RowHandleB); // Function Icarus.RepGraphClassPoliciesLibrary.EqualEqual_FRepGraphClassPoliciesRowHandleFRepGraphClassPoliciesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18266f0
	bool EqualEqual_EnumEnum(struct FRepGraphClassPoliciesEnum A, struct FRepGraphClassPoliciesEnum B); // Function Icarus.RepGraphClassPoliciesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1826510
	struct FRepGraphClassPoliciesRowHandle CastToRepGraphClassPoliciesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RepGraphClassPoliciesLibrary.CastToRepGraphClassPoliciesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1826240
	void BreakRepGraphClassPoliciesEnum(struct FRepGraphClassPoliciesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RepGraphClassPoliciesLibrary.BreakRepGraphClassPoliciesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1825f80
	void AddRowToRepGraphClassPoliciesTable(struct UE4::FName Name, struct FRepGraphClassPolicy Data, struct FRepGraphClassPoliciesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RepGraphClassPoliciesLibrary.AddRowToRepGraphClassPoliciesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18259f0
};

// Class Icarus.RepGraphClassPoliciesTable
// Size: 0xb8 (Inherited: 0xb8)
struct URepGraphClassPoliciesTable : UIcarusDataTable {
};

// Class Icarus.RepGraphClassSettingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URepGraphClassSettingsLibrary : URowLibrary {

	struct FRepGraphClassSettingsRowHandle StructToRowHandle(struct FRepGraphClassSettingsEnum EnumValue); // Function Icarus.RepGraphClassSettingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1828460
	struct UE4::FName StructToName(struct FRepGraphClassSettingsEnum EnumValue); // Function Icarus.RepGraphClassSettingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1828310
	int32_t StructToInt(struct FRepGraphClassSettingsEnum EnumValue); // Function Icarus.RepGraphClassSettingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18281d0
	struct FRepGraphClassSettingsEnum RowHandleToStruct(struct FRepGraphClassSettingsRowHandle RowHandle); // Function Icarus.RepGraphClassSettingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827f70
	void RemoveRowFromRepGraphClassSettingsTable(struct UE4::FName Name); // Function Icarus.RepGraphClassSettingsLibrary.RemoveRowFromRepGraphClassSettingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1827e30
	void RefreshConstants(); // Function Icarus.RepGraphClassSettingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1827d90
	int32_t NumRows(); // Function Icarus.RepGraphClassSettingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827cc0
	bool NotEqual_EnumName(struct FRepGraphClassSettingsEnum A, struct UE4::FName B); // Function Icarus.RepGraphClassSettingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827ba0
	bool NotEqual_EnumEnum(struct FRepGraphClassSettingsEnum A, struct FRepGraphClassSettingsEnum B); // Function Icarus.RepGraphClassSettingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18279c0
	struct FRepGraphClassSettingsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RepGraphClassSettingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827840
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RepGraphClassSettingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1827720
	struct FRepGraphClassSettingsRowHandle MakeRepGraphClassSettingsFromIndex(int32_t Index); // Function Icarus.RepGraphClassSettingsLibrary.MakeRepGraphClassSettingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827600
	struct FRepGraphClassSettingsEnum MakeRepGraphClassSettingsEnum(struct FRepGraphClassSettingsEnum Enum); // Function Icarus.RepGraphClassSettingsLibrary.MakeRepGraphClassSettingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827580
	struct FRepGraphClassSettingsRowHandle MakeRepGraphClassSettings(struct UE4::FName RowName); // Function Icarus.RepGraphClassSettingsLibrary.MakeRepGraphClassSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18274e0
	struct FRepGraphClassSettingsRowHandle MakeLiteralRepGraphClassSettings(struct FRepGraphClassSettingsRowHandle RowHandle); // Function Icarus.RepGraphClassSettingsLibrary.MakeLiteralRepGraphClassSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1827260
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RepGraphClassSettingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1827100
	struct FRepGraphClassSettingsEnum IntToStruct(int32_t IntValue); // Function Icarus.RepGraphClassSettingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1826fe0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RepGraphClassSettingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1826ec0
	void GetRepGraphClassSettingsStruct(struct FRepGraphClassSettingsRowHandle RowHandle, struct FRepGraphClassSettings& RepGraphClassSettings, enum class EValid& Paths); // Function Icarus.RepGraphClassSettingsLibrary.GetRepGraphClassSettingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1826be0
	bool EqualEqual_FRepGraphClassSettingsRowHandleFRepGraphClassSettingsRowHandle(struct FRepGraphClassSettingsRowHandle RowHandleA, struct FRepGraphClassSettingsRowHandle RowHandleB); // Function Icarus.RepGraphClassSettingsLibrary.EqualEqual_FRepGraphClassSettingsRowHandleFRepGraphClassSettingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1826830
	bool EqualEqual_EnumEnum(struct FRepGraphClassSettingsEnum A, struct FRepGraphClassSettingsEnum B); // Function Icarus.RepGraphClassSettingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1826600
	struct FRepGraphClassSettingsRowHandle CastToRepGraphClassSettingsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RepGraphClassSettingsLibrary.CastToRepGraphClassSettingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1826360
	void BreakRepGraphClassSettingsEnum(struct FRepGraphClassSettingsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RepGraphClassSettingsLibrary.BreakRepGraphClassSettingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18260e0
	void AddRowToRepGraphClassSettingsTable(struct UE4::FName Name, struct FRepGraphClassSettings Data, struct FRepGraphClassSettingsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RepGraphClassSettingsLibrary.AddRowToRepGraphClassSettingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1825cb0
};

// Class Icarus.RepGraphClassSettingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URepGraphClassSettingsTable : UIcarusDataTable {
};

// Class Icarus.ResourceComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UResourceComponent : UActorComponent {
	struct TArray<struct FResourceFlow> Resources; // 0xb0(0x10)
	struct TArray<float> PartialUnits; // 0xc0(0x10)

	bool WillCauseOverdraw(enum class EIcarusResourceType ResourceType, float FlowRate); // Function Icarus.ResourceComponent.WillCauseOverdraw // (Final|Native|Public|BlueprintCallable) // @ game+0x1828630
	void UpdateResourceFlow(struct UTraitComponent* TraitComponent, enum class EIcarusResourceType ResourceType, float FlowRate); // Function Icarus.ResourceComponent.UpdateResourceFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1828510
	void StopProducers(enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.StopProducers // (Final|Native|Public) // @ game+0x18280b0
	void StopConsumers(enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.StopConsumers // (Final|Native|Public) // @ game+0x1828030
	void ProcessResourceFlow(float DeltaTime); // Function Icarus.ResourceComponent.ProcessResourceFlow // (Final|Native|Public) // @ game+0x1827cf0
	float GetResourceFlowRate(enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.GetResourceFlowRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1826da0
	int32_t GetCurrentSourceFlow(struct UTraitComponent* TraitComponent, enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.GetCurrentSourceFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1826970
	void ClearResourceFlow(struct UTraitComponent* TraitComponent); // Function Icarus.ResourceComponent.ClearResourceFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1826480
};

// Class Icarus.ResourceDeposit
// Size: 0x2d0 (Inherited: 0x2b0)
struct AResourceDeposit : AIcarusActor {
	int32_t ResourceRemaining; // 0x2b0(0x04)
	struct FOreDepositRowHandle Type; // 0x2b4(0x18)
	char pad_2CC[0x4]; // 0x2cc(0x04)
};

// Class Icarus.ResourceDepositRecorderComponent
// Size: 0x170 (Inherited: 0x160)
struct UResourceDepositRecorderComponent : UActorStateRecorderComponent {
	int32_t ResourceRemaining; // 0x158(0x04)
	struct UE4::FName ResourceDTKey; // 0x15c(0x08)
	char pad_16C[0x4]; // 0x16c(0x04)
};

// Class Icarus.ResourceInteractionInterface
// Size: 0x28 (Inherited: 0x28)
struct UResourceInteractionInterface : UInterface {
};

// Class Icarus.ResourceNetwork
// Size: 0x320 (Inherited: 0x2b0)
struct AResourceNetwork : AIcarusActor {
	struct TMap<struct ADeployable*, int32_t> ActiveDevices; // 0x2b0(0x50)
	struct TArray<struct ADeployable*> LinkedDevices; // 0x300(0x10)
	int32_t ProviderSum; // 0x310(0x04)
	int32_t ConsumerSum; // 0x314(0x04)
	enum class EIcarusResourceType NetworkType; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)

	bool WillOverdraw(int32_t Rate); // Function Icarus.ResourceNetwork.WillOverdraw // (Final|Native|Public|BlueprintCallable) // @ game+0x182ef50
	bool UpdateDevice(struct ADeployable* Device, int32_t Rate); // Function Icarus.ResourceNetwork.UpdateDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x182ee80
	void RemoveLinkedDevice(struct ADeployable* Device); // Function Icarus.ResourceNetwork.RemoveLinkedDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x182e6c0
	bool IsActiveDevice(struct ADeployable* Device, int32_t Rate); // Function Icarus.ResourceNetwork.IsActiveDevice // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x182d870
	enum class EIcarusResourceType GetNetworkType(); // Function Icarus.ResourceNetwork.GetNetworkType // (Final|Native|Public|BlueprintCallable) // @ game+0x182cd10
	bool DeactivateDevice(struct ADeployable* Device); // Function Icarus.ResourceNetwork.DeactivateDevice // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x182c4e0
	bool ActivateDevice(struct ADeployable* Device, int32_t Rate); // Function Icarus.ResourceNetwork.ActivateDevice // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x182b8a0
};

// Class Icarus.ResourceNodeAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UResourceNodeAudioDataLibrary : URowLibrary {

	struct FResourceNodeAudioDataRowHandle StructToRowHandle(struct FResourceNodeAudioDataEnum EnumValue); // Function Icarus.ResourceNodeAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182ed20
	struct UE4::FName StructToName(struct FResourceNodeAudioDataEnum EnumValue); // Function Icarus.ResourceNodeAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182ebe0
	int32_t StructToInt(struct FResourceNodeAudioDataEnum EnumValue); // Function Icarus.ResourceNodeAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182eaa0
	struct FResourceNodeAudioDataEnum RowHandleToStruct(struct FResourceNodeAudioDataRowHandle RowHandle); // Function Icarus.ResourceNodeAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e850
	void RemoveRowFromResourceNodeAudioDataTable(struct UE4::FName Name); // Function Icarus.ResourceNodeAudioDataLibrary.RemoveRowFromResourceNodeAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x182e750
	void RefreshConstants(); // Function Icarus.ResourceNodeAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x182e680
	int32_t NumRows(); // Function Icarus.ResourceNodeAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e560
	bool NotEqual_EnumName(struct FResourceNodeAudioDataEnum A, struct UE4::FName B); // Function Icarus.ResourceNodeAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e380
	bool NotEqual_EnumEnum(struct FResourceNodeAudioDataEnum A, struct FResourceNodeAudioDataEnum B); // Function Icarus.ResourceNodeAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e1a0
	struct FResourceNodeAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ResourceNodeAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e080
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ResourceNodeAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x182df60
	struct FResourceNodeAudioDataRowHandle MakeResourceNodeAudioDataFromIndex(int32_t Index); // Function Icarus.ResourceNodeAudioDataLibrary.MakeResourceNodeAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182dd20
	struct FResourceNodeAudioDataEnum MakeResourceNodeAudioDataEnum(struct FResourceNodeAudioDataEnum Enum); // Function Icarus.ResourceNodeAudioDataLibrary.MakeResourceNodeAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182dca0
	struct FResourceNodeAudioDataRowHandle MakeResourceNodeAudioData(struct UE4::FName RowName); // Function Icarus.ResourceNodeAudioDataLibrary.MakeResourceNodeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182dc00
	struct FResourceNodeAudioDataRowHandle MakeLiteralResourceNodeAudioData(struct FResourceNodeAudioDataRowHandle RowHandle); // Function Icarus.ResourceNodeAudioDataLibrary.MakeLiteralResourceNodeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182da60
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ResourceNodeAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x182d940
	struct FResourceNodeAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.ResourceNodeAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182d750
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ResourceNodeAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x182d630
	void GetResourceNodeAudioDataStruct(struct FResourceNodeAudioDataRowHandle RowHandle, struct FResourceNodeAudioData& ResourceNodeAudioData, enum class EValid& Paths); // Function Icarus.ResourceNodeAudioDataLibrary.GetResourceNodeAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x182ced0
	bool EqualEqual_FResourceNodeAudioDataRowHandleFResourceNodeAudioDataRowHandle(struct FResourceNodeAudioDataRowHandle RowHandleA, struct FResourceNodeAudioDataRowHandle RowHandleB); // Function Icarus.ResourceNodeAudioDataLibrary.EqualEqual_FResourceNodeAudioDataRowHandleFResourceNodeAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182c810
	bool EqualEqual_EnumEnum(struct FResourceNodeAudioDataEnum A, struct FResourceNodeAudioDataEnum B); // Function Icarus.ResourceNodeAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182c630
	struct FResourceNodeAudioDataRowHandle CastToResourceNodeAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ResourceNodeAudioDataLibrary.CastToResourceNodeAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x182c1b0
	void BreakResourceNodeAudioDataEnum(struct FResourceNodeAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ResourceNodeAudioDataLibrary.BreakResourceNodeAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x182bef0
	void AddRowToResourceNodeAudioDataTable(struct UE4::FName Name, struct FResourceNodeAudioData Data, struct FResourceNodeAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ResourceNodeAudioDataLibrary.AddRowToResourceNodeAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x182b9a0
};

// Class Icarus.ResourceNodeAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UResourceNodeAudioDataTable : UIcarusDataTable {
};

// Class Icarus.RevisionsSubsystem
// Size: 0x80 (Inherited: 0x30)
struct URevisionsSubsystem : UGameInstanceSubsystem {
	struct TMap<struct FString, int32_t> RevisionsMap; // 0x30(0x50)

	int32_t GetRevisionFromPath(struct FString Path); // Function Icarus.RevisionsSubsystem.GetRevisionFromPath // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x182d140
	int32_t GetRevisionFromObject(struct TSoftObjectPtr<UObject>& Object); // Function Icarus.RevisionsSubsystem.GetRevisionFromObject // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x182d070
};

// Class Icarus.River
// Size: 0x2e0 (Inherited: 0x2e0)
struct ARiver : AWaterBody {

	void DisableOcclusionForSplineMeshComponent(struct USplineMeshComponent* SplineMeshComponent); // Function Icarus.River.DisableOcclusionForSplineMeshComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x182c5a0
};

// Class Icarus.RiverAudioComponent
// Size: 0x200 (Inherited: 0x200)
struct URiverAudioComponent : USceneComponent {
	enum class RiverAudioState State; // 0x1f8(0x01)

	float GetInfluenceOfInstancesInRadius(float Radius); // Function Icarus.RiverAudioComponent.GetInfluenceOfInstancesInRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x182cc70
};

// Class Icarus.RiverEdgeSplineGeneratorComponent
// Size: 0xb8 (Inherited: 0xb0)
struct URiverEdgeSplineGeneratorComponent : UActorComponent {
	float DistanceStepSize; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)

	void GenerateSplines(struct USplineComponent* RiverSpline, struct USplineComponent* LeftSpline, struct USplineComponent* RightSpline, float WaterfallCullHeight, float SplineMeshHeightOffset, float Scale); // Function Icarus.RiverEdgeSplineGeneratorComponent.GenerateSplines // (Final|Native|Protected|BlueprintCallable|Const) // @ game+0x182ca90
	void ClearSplines(struct USplineComponent* LeftSpline, struct USplineComponent* RightSpline); // Function Icarus.RiverEdgeSplineGeneratorComponent.ClearSplines // (Final|Native|Static|Protected|BlueprintCallable) // @ game+0x182c420
};

// Class Icarus.RockBase
// Size: 0x2d8 (Inherited: 0x2b0)
struct ARockBase : AIcarusActor {
	struct TArray<struct FItemConversion> TagsToClasses; // 0x2b0(0x10)
	struct FMulticastInlineDelegate OnRockReplaced; // 0x2c0(0x10)
	char pad_2D0[0x8]; // 0x2d0(0x08)
};

// Class Icarus.RocketableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct URocketableComponent : UTraitComponent {

	bool GetRocketableData(struct FRocketableData& OutData); // Function Icarus.RocketableComponent.GetRocketableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x182d200
};

// Class Icarus.RocketableLibrary
// Size: 0x28 (Inherited: 0x28)
struct URocketableLibrary : URowLibrary {

	struct FRocketableRowHandle StructToRowHandle(struct FRocketableEnum EnumValue); // Function Icarus.RocketableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182edd0
	struct UE4::FName StructToName(struct FRocketableEnum EnumValue); // Function Icarus.RocketableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182ec80
	int32_t StructToInt(struct FRocketableEnum EnumValue); // Function Icarus.RocketableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182eb40
	struct FRocketableEnum RowHandleToStruct(struct FRocketableRowHandle RowHandle); // Function Icarus.RocketableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e910
	void RemoveRowFromRocketableTable(struct UE4::FName Name); // Function Icarus.RocketableLibrary.RemoveRowFromRocketableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x182e7d0
	void RefreshConstants(); // Function Icarus.RocketableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x182e6a0
	int32_t NumRows(); // Function Icarus.RocketableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e590
	bool NotEqual_EnumName(struct FRocketableEnum A, struct UE4::FName B); // Function Icarus.RocketableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e470
	bool NotEqual_EnumEnum(struct FRocketableEnum A, struct FRocketableEnum B); // Function Icarus.RocketableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e290
	struct FRocketableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RocketableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182e110
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RocketableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x182dff0
	struct FRocketableRowHandle MakeRocketableFromIndex(int32_t Index); // Function Icarus.RocketableLibrary.MakeRocketableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182ded0
	struct FRocketableEnum MakeRocketableEnum(struct FRocketableEnum Enum); // Function Icarus.RocketableLibrary.MakeRocketableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182de50
	struct FRocketableRowHandle MakeRocketable(struct UE4::FName RowName); // Function Icarus.RocketableLibrary.MakeRocketable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182ddb0
	struct FRocketableRowHandle MakeLiteralRocketable(struct FRocketableRowHandle RowHandle); // Function Icarus.RocketableLibrary.MakeLiteralRocketable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182db30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RocketableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x182d9d0
	struct FRocketableEnum IntToStruct(int32_t IntValue); // Function Icarus.RocketableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182d7e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RocketableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x182d6c0
	void GetRocketableStruct(struct FRocketableRowHandle RowHandle, struct FRocketableData& Rocketable, enum class EValid& Paths); // Function Icarus.RocketableLibrary.GetRocketableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x182d410
	bool EqualEqual_FRocketableRowHandleFRocketableRowHandle(struct FRocketableRowHandle RowHandleA, struct FRocketableRowHandle RowHandleB); // Function Icarus.RocketableLibrary.EqualEqual_FRocketableRowHandleFRocketableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182c950
	bool EqualEqual_EnumEnum(struct FRocketableEnum A, struct FRocketableEnum B); // Function Icarus.RocketableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x182c720
	struct FRocketableRowHandle CastToRocketableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RocketableLibrary.CastToRocketableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x182c2d0
	void BreakRocketableEnum(struct FRocketableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RocketableLibrary.BreakRocketableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x182c050
	void AddRowToRocketableTable(struct UE4::FName Name, struct FRocketableData Data, struct FRocketableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RocketableLibrary.AddRowToRocketableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x182bbf0
};

// Class Icarus.RocketableTable
// Size: 0xb8 (Inherited: 0xb8)
struct URocketableTable : UIcarusDataTable {
};

// Class Icarus.RocketRecorderComponent
// Size: 0x190 (Inherited: 0x160)
struct URocketRecorderComponent : UActorStateRecorderComponent {
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x158(0x18)
	struct FVector SpawnLocation; // 0x170(0x0c)
	struct FVector DescentOrigin; // 0x17c(0x0c)
	bool DropshipPositionsSet; // 0x188(0x01)
	bool PlayerHasLeft; // 0x189(0x01)
	bool bStoredLoadout; // 0x18a(0x01)
	enum class ERocketState RocketState; // 0x18b(0x01)
};

// Class Icarus.IcarusRocketSpawnBase
// Size: 0x2e8 (Inherited: 0x2b0)
struct AIcarusRocketSpawnBase : AIcarusActor {
	struct TSoftClassPtr<UObject> SpawnDropshipClass; // 0x2b0(0x28)
	struct FString AssignedPlayerID; // 0x2d8(0x10)

	int32_t GetGroupIndex(); // Function Icarus.IcarusRocketSpawnBase.GetGroupIndex // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
};

// Class Icarus.RocketSpawnRecorderComponent
// Size: 0x170 (Inherited: 0x160)
struct URocketSpawnRecorderComponent : UActorStateRecorderComponent {
	struct FRocketSpawnStateRecord SpawnRecord; // 0x158(0x18)
};

// Class Icarus.RTXGIVolumesLibrary
// Size: 0x28 (Inherited: 0x28)
struct URTXGIVolumesLibrary : URowLibrary {

	struct FRTXGIVolumesRowHandle StructToRowHandle(struct FRTXGIVolumesEnum EnumValue); // Function Icarus.RTXGIVolumesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833f70
	struct UE4::FName StructToName(struct FRTXGIVolumesEnum EnumValue); // Function Icarus.RTXGIVolumesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833e30
	int32_t StructToInt(struct FRTXGIVolumesEnum EnumValue); // Function Icarus.RTXGIVolumesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833cf0
	struct FRTXGIVolumesEnum RowHandleToStruct(struct FRTXGIVolumesRowHandle RowHandle); // Function Icarus.RTXGIVolumesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833b70
	void RemoveRowFromRTXGIVolumesTable(struct UE4::FName Name); // Function Icarus.RTXGIVolumesLibrary.RemoveRowFromRTXGIVolumesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1833a70
	void RefreshConstants(); // Function Icarus.RTXGIVolumesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1833a30
	int32_t NumRows(); // Function Icarus.RTXGIVolumesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18339d0
	bool NotEqual_EnumName(struct FRTXGIVolumesEnum A, struct UE4::FName B); // Function Icarus.RTXGIVolumesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18337f0
	bool NotEqual_EnumEnum(struct FRTXGIVolumesEnum A, struct FRTXGIVolumesEnum B); // Function Icarus.RTXGIVolumesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833610
	struct FRTXGIVolumesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RTXGIVolumesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18334f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RTXGIVolumesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18333d0
	struct FRTXGIVolumesRowHandle MakeRTXGIVolumesFromIndex(int32_t Index); // Function Icarus.RTXGIVolumesLibrary.MakeRTXGIVolumesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18330f0
	struct FRTXGIVolumesEnum MakeRTXGIVolumesEnum(struct FRTXGIVolumesEnum Enum); // Function Icarus.RTXGIVolumesLibrary.MakeRTXGIVolumesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833070
	struct FRTXGIVolumesRowHandle MakeRTXGIVolumes(struct UE4::FName RowName); // Function Icarus.RTXGIVolumesLibrary.MakeRTXGIVolumes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1832fd0
	struct FRTXGIVolumesRowHandle MakeLiteralRTXGIVolumes(struct FRTXGIVolumesRowHandle RowHandle); // Function Icarus.RTXGIVolumesLibrary.MakeLiteralRTXGIVolumes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1832e30
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RTXGIVolumesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1832d10
	struct FRTXGIVolumesEnum IntToStruct(int32_t IntValue); // Function Icarus.RTXGIVolumesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1832bf0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RTXGIVolumesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1832ad0
	void GetRTXGIVolumesStruct(struct FRTXGIVolumesRowHandle RowHandle, struct FRTXGIVolumes& RTXGIVolumes, enum class EValid& Paths); // Function Icarus.RTXGIVolumesLibrary.GetRTXGIVolumesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1832650
	bool EqualEqual_FRTXGIVolumesRowHandleFRTXGIVolumesRowHandle(struct FRTXGIVolumesRowHandle RowHandleA, struct FRTXGIVolumesRowHandle RowHandleB); // Function Icarus.RTXGIVolumesLibrary.EqualEqual_FRTXGIVolumesRowHandleFRTXGIVolumesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18323d0
	bool EqualEqual_EnumEnum(struct FRTXGIVolumesEnum A, struct FRTXGIVolumesEnum B); // Function Icarus.RTXGIVolumesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18321f0
	struct FRTXGIVolumesRowHandle CastToRTXGIVolumesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RTXGIVolumesLibrary.CastToRTXGIVolumesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1831fb0
	void BreakRTXGIVolumesEnum(struct FRTXGIVolumesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RTXGIVolumesLibrary.BreakRTXGIVolumesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1831cf0
	void AddRowToRTXGIVolumesTable(struct UE4::FName Name, struct FRTXGIVolumes Data, struct FRTXGIVolumesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RTXGIVolumesLibrary.AddRowToRTXGIVolumesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18316a0
};

// Class Icarus.RTXGIVolumesTable
// Size: 0xb8 (Inherited: 0xb8)
struct URTXGIVolumesTable : UIcarusDataTable {
};

// Class Icarus.Ruleset
// Size: 0x48 (Inherited: 0x28)
struct URuleset : UObject {
	struct URulesetSubsystem* RulesetSubsystem; // 0x28(0x08)
	struct FRulesetsRowHandle RulesetRowHandle; // 0x30(0x18)

	void ReceiveOnRulesetCreated(); // Function Icarus.Ruleset.ReceiveOnRulesetCreated // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.RulesetFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URulesetFunctionLibrary : UBlueprintFunctionLibrary {
};

// Class Icarus.RulesetsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URulesetsLibrary : URowLibrary {

	struct FRulesetsRowHandle StructToRowHandle(struct FRulesetsEnum EnumValue); // Function Icarus.RulesetsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1834020
	struct UE4::FName StructToName(struct FRulesetsEnum EnumValue); // Function Icarus.RulesetsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833ed0
	int32_t StructToInt(struct FRulesetsEnum EnumValue); // Function Icarus.RulesetsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833d90
	struct FRulesetsEnum RowHandleToStruct(struct FRulesetsRowHandle RowHandle); // Function Icarus.RulesetsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833c30
	void RemoveRowFromRulesetsTable(struct UE4::FName Name); // Function Icarus.RulesetsLibrary.RemoveRowFromRulesetsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1833af0
	void RefreshConstants(); // Function Icarus.RulesetsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1833a50
	int32_t NumRows(); // Function Icarus.RulesetsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833a00
	bool NotEqual_EnumName(struct FRulesetsEnum A, struct UE4::FName B); // Function Icarus.RulesetsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18338e0
	bool NotEqual_EnumEnum(struct FRulesetsEnum A, struct FRulesetsEnum B); // Function Icarus.RulesetsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833700
	struct FRulesetsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.RulesetsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833580
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.RulesetsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1833460
	struct FRulesetsRowHandle MakeRulesetsRowFromRulesetClass(struct UObject* InRulesetClass); // Function Icarus.RulesetsLibrary.MakeRulesetsRowFromRulesetClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833330
	struct FRulesetsRowHandle MakeRulesetsFromIndex(int32_t Index); // Function Icarus.RulesetsLibrary.MakeRulesetsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18332a0
	struct FRulesetsEnum MakeRulesetsEnum(struct FRulesetsEnum Enum); // Function Icarus.RulesetsLibrary.MakeRulesetsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833220
	struct FRulesetsRowHandle MakeRulesets(struct UE4::FName RowName); // Function Icarus.RulesetsLibrary.MakeRulesets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1833180
	struct FRulesetsRowHandle MakeLiteralRulesets(struct FRulesetsRowHandle RowHandle); // Function Icarus.RulesetsLibrary.MakeLiteralRulesets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1832f00
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.RulesetsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1832da0
	struct FRulesetsEnum IntToStruct(int32_t IntValue); // Function Icarus.RulesetsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1832c80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.RulesetsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1832b60
	void GetRulesetsStruct(struct FRulesetsRowHandle RowHandle, struct FRulesetData& Rulesets, enum class EValid& Paths); // Function Icarus.RulesetsLibrary.GetRulesetsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18328a0
	bool EqualEqual_FRulesetsRowHandleFRulesetsRowHandle(struct FRulesetsRowHandle RowHandleA, struct FRulesetsRowHandle RowHandleB); // Function Icarus.RulesetsLibrary.EqualEqual_FRulesetsRowHandleFRulesetsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1832510
	bool EqualEqual_EnumEnum(struct FRulesetsEnum A, struct FRulesetsEnum B); // Function Icarus.RulesetsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18322e0
	struct FRulesetsRowHandle CastToRulesetsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.RulesetsLibrary.CastToRulesetsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18320d0
	void BreakRulesetsEnum(struct FRulesetsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.RulesetsLibrary.BreakRulesetsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1831e50
	void AddRowToRulesetsTable(struct UE4::FName Name, struct FRulesetData Data, struct FRulesetsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.RulesetsLibrary.AddRowToRulesetsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1831a10
};

// Class Icarus.RulesetsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URulesetsTable : UIcarusDataTable {
};

// Class Icarus.RulesetSubsystem
// Size: 0xa0 (Inherited: 0x30)
struct URulesetSubsystem : UWorldSubsystem {
	char pad_30[0x20]; // 0x30(0x20)
	struct TMap<struct FRulesetsRowHandle, struct URuleset*> Rulesets; // 0x50(0x50)

	void WorldStatsReady(); // Function Icarus.RulesetSubsystem.WorldStatsReady // (Final|Native|Protected) // @ game+0x18340d0
	bool HasRuleset(struct FRulesetsRowHandle& RulesetType); // Function Icarus.RulesetSubsystem.HasRuleset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1832a20
	struct URuleset* GetRuleset(struct FRulesetsRowHandle& RulesetType); // Function Icarus.RulesetSubsystem.GetRuleset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18327f0
	void AddRuleset(struct FRulesetsRowHandle& Ruleset); // Function Icarus.RulesetSubsystem.AddRuleset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1831c40
};

// Class Icarus.ScopedViewportBlocker
// Size: 0x40 (Inherited: 0x28)
struct UScopedViewportBlocker : UObject {
	bool bViewportBlockerIncremented; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct UE4::FName ViewportBlockerContext; // 0x2c(0x08)
	char pad_34[0xc]; // 0x34(0x0c)
};

// Class Icarus.ScriptedEvent
// Size: 0x270 (Inherited: 0x220)
struct AScriptedEvent : AActor {
	struct FBiomesRowHandle AssociatedBiome; // 0x220(0x18)
	enum class EIcarusProspectDifficulty ProspectDifficulty; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	float TimeoutInSeconds; // 0x23c(0x04)
	float TickFrequency; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct TArray<struct AActor*> TargetActors; // 0x248(0x10)
	struct FMulticastInlineDelegate OnScriptedEventFinished; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)

	bool ShouldAbortEvent(); // Function Icarus.ScriptedEvent.ShouldAbortEvent // (Native|Event|Public|BlueprintEvent) // @ game+0xe2a010
	bool IsEventCompleted(); // Function Icarus.ScriptedEvent.IsEventCompleted // (Native|Event|Public|BlueprintEvent) // @ game+0xe2a010
	void EventStart(); // Function Icarus.ScriptedEvent.EventStart // (Native|Event|Protected|BlueprintEvent) // @ game+0x88b920
	void EventEnd(enum class EEventEndReason EndReason); // Function Icarus.ScriptedEvent.EventEnd // (Native|Event|Protected|BlueprintEvent) // @ game+0x1837890
	struct TArray<struct AActor*> DetermineTargetActors(); // Function Icarus.ScriptedEvent.DetermineTargetActors // (Native|Event|Protected|BlueprintEvent) // @ game+0x1837330
	bool CanPerformEvent(); // Function Icarus.ScriptedEvent.CanPerformEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x174ac10
	void AbortScriptedEvent(); // Function Icarus.ScriptedEvent.AbortScriptedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x18365f0
};

// Class Icarus.ScriptedEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UScriptedEventsLibrary : URowLibrary {

	struct FScriptedEventsRowHandle StructToRowHandle(struct FScriptedEventsEnum EnumValue); // Function Icarus.ScriptedEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18398f0
	struct UE4::FName StructToName(struct FScriptedEventsEnum EnumValue); // Function Icarus.ScriptedEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18397b0
	int32_t StructToInt(struct FScriptedEventsEnum EnumValue); // Function Icarus.ScriptedEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1839670
	struct FScriptedEventsEnum RowHandleToStruct(struct FScriptedEventsRowHandle RowHandle); // Function Icarus.ScriptedEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1839360
	void RemoveRowFromScriptedEventsTable(struct UE4::FName Name); // Function Icarus.ScriptedEventsLibrary.RemoveRowFromScriptedEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1839260
	void RefreshConstants(); // Function Icarus.ScriptedEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1839220
	int32_t NumRows(); // Function Icarus.ScriptedEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18391c0
	bool NotEqual_EnumName(struct FScriptedEventsEnum A, struct UE4::FName B); // Function Icarus.ScriptedEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838fe0
	bool NotEqual_EnumEnum(struct FScriptedEventsEnum A, struct FScriptedEventsEnum B); // Function Icarus.ScriptedEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838e00
	struct FScriptedEventsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ScriptedEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838ce0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ScriptedEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1838bc0
	struct FScriptedEventsRowHandle MakeScriptedEventsFromIndex(int32_t Index); // Function Icarus.ScriptedEventsLibrary.MakeScriptedEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838750
	struct FScriptedEventsEnum MakeScriptedEventsEnum(struct FScriptedEventsEnum Enum); // Function Icarus.ScriptedEventsLibrary.MakeScriptedEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18386d0
	struct FScriptedEventsRowHandle MakeScriptedEvents(struct UE4::FName RowName); // Function Icarus.ScriptedEventsLibrary.MakeScriptedEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838630
	struct FScriptedEventsRowHandle MakeLiteralScriptedEvents(struct FScriptedEventsRowHandle RowHandle); // Function Icarus.ScriptedEventsLibrary.MakeLiteralScriptedEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838490
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ScriptedEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1838260
	struct FScriptedEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.ScriptedEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18380e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ScriptedEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1837fc0
	void GetScriptedEventsStruct(struct FScriptedEventsRowHandle RowHandle, struct FScriptedEventData& ScriptedEvents, enum class EValid& Paths); // Function Icarus.ScriptedEventsLibrary.GetScriptedEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1837ad0
	bool EqualEqual_FScriptedEventsRowHandleFScriptedEventsRowHandle(struct FScriptedEventsRowHandle RowHandleA, struct FScriptedEventsRowHandle RowHandleB); // Function Icarus.ScriptedEventsLibrary.EqualEqual_FScriptedEventsRowHandleFScriptedEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1837610
	bool EqualEqual_EnumEnum(struct FScriptedEventsEnum A, struct FScriptedEventsEnum B); // Function Icarus.ScriptedEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1837430
	struct FScriptedEventsRowHandle CastToScriptedEventsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ScriptedEventsLibrary.CastToScriptedEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1836f70
	void BreakScriptedEventsEnum(struct FScriptedEventsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ScriptedEventsLibrary.BreakScriptedEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1836c10
	void AddRowToScriptedEventsTable(struct UE4::FName Name, struct FScriptedEventData Data, struct FScriptedEventsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ScriptedEventsLibrary.AddRowToScriptedEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1836610
};

// Class Icarus.ScriptedEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UScriptedEventsTable : UIcarusDataTable {
};

// Class Icarus.SearchBox
// Size: 0xe30 (Inherited: 0x260)
struct USearchBox : UUserWidget {
	char pad_260[0x10]; // 0x260(0x10)
	struct FSearchBoxStyle Style; // 0x270(0xa90)
	struct FText HintText; // 0xd00(0x18)
	struct FText InitialText; // 0xd18(0x18)
	bool IsSearching; // 0xd30(0x01)
	char pad_D31[0x7]; // 0xd31(0x07)
	struct FMulticastInlineDelegate OnSearchTextChanged; // 0xd38(0x10)
	struct FMulticastInlineDelegate OnSearchTextCommitted; // 0xd48(0x10)
	struct FMulticastInlineDelegate OnSearchKeyDownHandler; // 0xd58(0x10)
	char pad_D68[0xb8]; // 0xd68(0xb8)
	bool SelectAllTextWhenFocused; // 0xe20(0x01)
	char pad_E21[0x3]; // 0xe21(0x03)
	float MinDesiredWidth; // 0xe24(0x04)
	bool DelayChangeNotificationsWhileTyping; // 0xe28(0x01)
	bool bCommitting; // 0xe29(0x01)
	char pad_E2A[0x6]; // 0xe2a(0x06)

	void SetText(struct FText Text); // Function Icarus.SearchBox.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x1839590
	void SelectAllText(); // Function Icarus.SearchBox.SelectAllText // (Final|Native|Public|BlueprintCallable) // @ game+0x18394e0
	void SearchBoxReply__DelegateSignature(struct FKeyEvent& KeyEvent); // DelegateFunction Icarus.SearchBox.SearchBoxReply__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x1be0000
	void OnSearchBoxCommittedEvent__DelegateSignature(struct FText& Text, enum class ETextCommit CommitMethod); // DelegateFunction Icarus.SearchBox.OnSearchBoxCommittedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x1be0000
	void OnSearchBoxChangedEvent__DelegateSignature(struct FText& Text); // DelegateFunction Icarus.SearchBox.OnSearchBoxChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x1be0000
	void KeyDownHandled(); // Function Icarus.SearchBox.KeyDownHandled // (Final|Native|Public|BlueprintCallable) // @ game+0x1838380
	struct FText GetText(); // Function Icarus.SearchBox.GetText // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1837f20
	struct FText GetSearchText(); // Function Icarus.SearchBox.GetSearchText // (Final|Native|Public|BlueprintCallable) // @ game+0x1837cc0
};

// Class Icarus.SeatBase
// Size: 0x2e0 (Inherited: 0x2b0)
struct ASeatBase : AIcarusActor {
	struct TWeakObjectPtr<struct AVehicleBase> AttachedToVehicle; // 0x2b0(0x08)
	struct TWeakObjectPtr<struct AIcarusPlayerCharacter> AttachedPlayer; // 0x2b8(0x08)
	struct UE4::FName AttachSocketName; // 0x2c0(0x08)
	float MinViewPitch; // 0x2c8(0x04)
	float MaxViewPitch; // 0x2cc(0x04)
	float MinViewYaw; // 0x2d0(0x04)
	float MaxViewYaw; // 0x2d4(0x04)
	bool bAllowCameraControl; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)

	void SetAttachedToVehicle(struct AVehicleBase* Vehicle); // Function Icarus.SeatBase.SetAttachedToVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x1839500
	void OnRep_AttachedToVehicle(); // Function Icarus.SeatBase.OnRep_AttachedToVehicle // (Native|Event|Protected|BlueprintEvent) // @ game+0x88bba0
	void OnRep_AttachedPlayer(); // Function Icarus.SeatBase.OnRep_AttachedPlayer // (Native|Event|Protected|BlueprintEvent) // @ game+0x16cf160
	void OnAttachedPlayerDestroyed(struct AActor* DestroyedAttachedPlayer); // Function Icarus.SeatBase.OnAttachedPlayerDestroyed // (Native|Event|Protected|BlueprintEvent) // @ game+0x16cd4d0
	void Multicast_DetachPlayerFromSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FVector ExitLocation, struct FRotator ExitRotation, bool bChangeSeat); // Function Icarus.SeatBase.Multicast_DetachPlayerFromSeat // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1838a60
	void Multicast_AttachPlayerToSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FRotator EnterRotation); // Function Icarus.SeatBase.Multicast_AttachPlayerToSeat // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1838990
	bool LeaveSeat(bool bChangeSeat, bool bForce); // Function Icarus.SeatBase.LeaveSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18383a0
	bool IsPossessTargetLocallyControlled(); // Function Icarus.SeatBase.IsPossessTargetLocallyControlled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1838230
	bool IsDriverSeat(); // Function Icarus.SeatBase.IsDriverSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1838200
	struct FRotator GetSeatedPlayerControlRotation(); // Function Icarus.SeatBase.GetSeatedPlayerControlRotation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1837d60
	struct AIcarusPlayerController* GetPossesTargetController(); // Function Icarus.SeatBase.GetPossesTargetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1837aa0
	struct APawn* GetPossesTarget(); // Function Icarus.SeatBase.GetPossesTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1837a70
	struct AVehicleBase* GetAttachedToVehicle(); // Function Icarus.SeatBase.GetAttachedToVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1837a40
	struct AIcarusPlayerCharacter* GetAttachedPlayer(); // Function Icarus.SeatBase.GetAttachedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1837a10
	bool FindExit(struct FVector& OutExitLocation, struct FRotator& OutExitRotation); // Function Icarus.SeatBase.FindExit // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1837910
	bool EnterSeat(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.SeatBase.EnterSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1837390
	void DetachPlayerFromSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FVector& ExitLocation, struct FRotator& ExitRotation, bool bChangeSeat); // Function Icarus.SeatBase.DetachPlayerFromSeat // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18371b0
	bool CanPlayerEnterSeat(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.SeatBase.CanPlayerEnterSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1836ed0
	void AttachPlayerToSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FRotator& EnterRotation); // Function Icarus.SeatBase.AttachPlayerToSeat // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1836b30
};

// Class Icarus.SessionFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct USessionFlagsLibrary : URowLibrary {

	struct FSessionFlagsRowHandle StructToRowHandle(struct FSessionFlagsEnum EnumValue); // Function Icarus.SessionFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18399a0
	struct UE4::FName StructToName(struct FSessionFlagsEnum EnumValue); // Function Icarus.SessionFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1839850
	int32_t StructToInt(struct FSessionFlagsEnum EnumValue); // Function Icarus.SessionFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1839710
	struct FSessionFlagsEnum RowHandleToStruct(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.SessionFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1839420
	void RemoveRowFromSessionFlagsTable(struct UE4::FName Name); // Function Icarus.SessionFlagsLibrary.RemoveRowFromSessionFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18392e0
	void RefreshConstants(); // Function Icarus.SessionFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1839240
	int32_t NumRows(); // Function Icarus.SessionFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18391f0
	bool NotEqual_EnumName(struct FSessionFlagsEnum A, struct UE4::FName B); // Function Icarus.SessionFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18390d0
	bool NotEqual_EnumEnum(struct FSessionFlagsEnum A, struct FSessionFlagsEnum B); // Function Icarus.SessionFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838ef0
	struct FSessionFlagsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.SessionFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838d70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.SessionFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1838c50
	struct FSessionFlagsRowHandle MakeSessionFlagsFromIndex(int32_t Index); // Function Icarus.SessionFlagsLibrary.MakeSessionFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838900
	struct FSessionFlagsEnum MakeSessionFlagsEnum(struct FSessionFlagsEnum Enum); // Function Icarus.SessionFlagsLibrary.MakeSessionFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838880
	struct FSessionFlagsRowHandle MakeSessionFlags(struct UE4::FName RowName); // Function Icarus.SessionFlagsLibrary.MakeSessionFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18387e0
	struct FSessionFlagsRowHandle MakeLiteralSessionFlags(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.SessionFlagsLibrary.MakeLiteralSessionFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838560
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.SessionFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18382f0
	struct FSessionFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.SessionFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1838170
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.SessionFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1838050
	void GetSessionFlagsStruct(struct FSessionFlagsRowHandle RowHandle, struct FSessionFlag& SessionFlags, enum class EValid& Paths); // Function Icarus.SessionFlagsLibrary.GetSessionFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1837da0
	bool EqualEqual_FSessionFlagsRowHandleFSessionFlagsRowHandle(struct FSessionFlagsRowHandle RowHandleA, struct FSessionFlagsRowHandle RowHandleB); // Function Icarus.SessionFlagsLibrary.EqualEqual_FSessionFlagsRowHandleFSessionFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1837750
	bool EqualEqual_EnumEnum(struct FSessionFlagsEnum A, struct FSessionFlagsEnum B); // Function Icarus.SessionFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1837520
	struct FSessionFlagsRowHandle CastToSessionFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.SessionFlagsLibrary.CastToSessionFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1837090
	void BreakSessionFlagsEnum(struct FSessionFlagsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.SessionFlagsLibrary.BreakSessionFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1836d70
	void AddRowToSessionFlagsTable(struct UE4::FName Name, struct FSessionFlag Data, struct FSessionFlagsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.SessionFlagsLibrary.AddRowToSessionFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1836920
};

// Class Icarus.SessionFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct USessionFlagsTable : UIcarusDataTable {
};

// Class Icarus.SessionFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct USessionFunctionLibrary : UBlueprintFunctionLibrary {

	bool ProspectInfoIsValid(struct FIcarusSession& IcarusSession, bool RequiresSession); // Function Icarus.SessionFunctionLibrary.ProspectInfoIsValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1840780
	struct TArray<struct FSessionPropertyKeyPair> MakeSessionExtraSettingsFromProspect(struct UObject* WorldContextObject, struct FProspectInfo& ProspectInfo); // Function Icarus.SessionFunctionLibrary.MakeSessionExtraSettingsFromProspect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183ff00
	struct FProspectInfo MakeProspectInfoFromExtraSettings(struct UObject* WorldContextObject, struct TArray<struct FSessionPropertyKeyPair>& ExtraSettings); // Function Icarus.SessionFunctionLibrary.MakeProspectInfoFromExtraSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183fd70
	bool HasJoinedProspect(struct FString UserID, struct TArray<struct FAssociatedMemberInfo> Members); // Function Icarus.SessionFunctionLibrary.HasJoinedProspect // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x183f970
	struct FString GetGatewayAddressFromExtraSettings(struct TArray<struct FSessionPropertyKeyPair>& ExtraSettings); // Function Icarus.SessionFunctionLibrary.GetGatewayAddressFromExtraSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183f5a0
	struct FString GetGameVersionFromExtraSettings(struct TArray<struct FSessionPropertyKeyPair>& ExtraSettings); // Function Icarus.SessionFunctionLibrary.GetGameVersionFromExtraSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183f490
	struct FString GenerateProspectSessionId(struct FString UserID, struct FProspectInfo& ProspectInfo); // Function Icarus.SessionFunctionLibrary.GenerateProspectSessionId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183f1d0
	struct FIcarusSession CreateIcarusSessionFromSession(struct UObject* WorldContextObject, struct FBlueprintSessionResult& Session); // Function Icarus.SessionFunctionLibrary.CreateIcarusSessionFromSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183ed40
};

// Class Icarus.SettingRowBorder
// Size: 0x288 (Inherited: 0x280)
struct USettingRowBorder : UIcarusWidget {
	struct USettingWidget* SettingWidget; // 0x280(0x08)

	void SetSettingWidget(struct USettingWidget* InSettingWidget); // Function Icarus.SettingRowBorder.SetSettingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1840b10
	void HideName(); // Function Icarus.SettingRowBorder.HideName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingsMenu
// Size: 0x280 (Inherited: 0x280)
struct USettingsMenu : UIcarusWidget {

	void Save(bool bForce); // Function Icarus.SettingsMenu.Save // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingsSection
// Size: 0x2e8 (Inherited: 0x260)
struct USettingsSection : UUserWidget {
	struct USettingsView* SettingsView; // 0x260(0x08)
	struct UE4::FName SettingCategory; // 0x268(0x08)
	struct UE4::FName SettingSection; // 0x270(0x08)
	struct TMap<int32_t, struct FText> Requirements; // 0x278(0x50)
	struct FText ConfirmMessage; // 0x2c8(0x18)
	bool bHasApply; // 0x2e0(0x01)
	bool bHasReset; // 0x2e1(0x01)
	bool bHasConfirm; // 0x2e2(0x01)
	char pad_2E3[0x5]; // 0x2e3(0x05)

	void SetSettingsView(struct USettingsView* View); // Function Icarus.SettingsSection.SetSettingsView // (Final|Native|Public|BlueprintCallable) // @ game+0x1840c30
	void SetDisplayName(struct FText& DisplayName); // Function Icarus.SettingsSection.SetDisplayName // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void RevertSettings(); // Function Icarus.SettingsSection.RevertSettings // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void PostSetup(); // Function Icarus.SettingsSection.PostSetup // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnRefresh(); // Function Icarus.SettingsSection.OnRefresh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void DirtySection(); // Function Icarus.SettingsSection.DirtySection // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void ConfirmSettings(); // Function Icarus.SettingsSection.ConfirmSettings // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void ApplySettings(); // Function Icarus.SettingsSection.ApplySettings // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void AddWidgetToSection(struct USettingWidget* Widget); // Function Icarus.SettingsSection.AddWidgetToSection // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingsView
// Size: 0x290 (Inherited: 0x280)
struct USettingsView : UIcarusWidget {
	struct UE4::FName SettingCategory; // 0x280(0x08)
	struct USettingsMenu* SettingsMenu; // 0x288(0x08)

	void SetSettingsMenu(struct USettingsMenu* Menu); // Function Icarus.SettingsView.SetSettingsMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1840ba0
	void PostSetup(); // Function Icarus.SettingsView.PostSetup // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnRefresh(); // Function Icarus.SettingsView.OnRefresh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void LoadApplySaveSettings(bool bLoadSettings, bool bApplySettings, bool bSaveSettings); // Function Icarus.SettingsView.LoadApplySaveSettings // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct USettingsSection* CreateNewSection(); // Function Icarus.SettingsView.CreateNewSection // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget
// Size: 0x380 (Inherited: 0x280)
struct USettingWidget : UIcarusWidget {
	char pad_280[0x10]; // 0x280(0x10)
	struct USettingRowBorder* RowBorder; // 0x290(0x08)
	struct UE4::FName SettingName; // 0x298(0x08)
	struct FText DisplayName; // 0x2a0(0x18)
	struct FText Description; // 0x2b8(0x18)
	struct TMap<int32_t, struct FText> Requirements; // 0x2d0(0x50)
	struct USettingsSection* Section; // 0x320(0x08)
	char pad_328[0x58]; // 0x328(0x58)

	void Setup(); // Function Icarus.SettingWidget.Setup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void Refresh(); // Function Icarus.SettingWidget.Refresh // (Final|Native|Public) // @ game+0x1840990
	void OnRefresh(); // Function Icarus.SettingWidget.OnRefresh // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void OnDirty(); // Function Icarus.SettingWidget.OnDirty // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void Change(); // Function Icarus.SettingWidget.Change // (Final|Native|Public|BlueprintCallable) // @ game+0x183ed20
	void Apply(); // Function Icarus.SettingWidget.Apply // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget_Combo
// Size: 0x380 (Inherited: 0x380)
struct USettingWidget_Combo : USettingWidget {

	void SetValueIndex(int32_t Index); // Function Icarus.SettingWidget_Combo.SetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetOptions(struct TArray<struct FText>& Options); // Function Icarus.SettingWidget_Combo.SetOptions // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetHideOptions(struct TArray<struct FText>& HideOptions); // Function Icarus.SettingWidget_Combo.SetHideOptions // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	int32_t GetValueIndex(); // Function Icarus.SettingWidget_Combo.GetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget_ContinuousRange
// Size: 0x380 (Inherited: 0x380)
struct USettingWidget_ContinuousRange : USettingWidget {

	void SetValue(float Value, bool bForceRefresh); // Function Icarus.SettingWidget_ContinuousRange.SetValue // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetStepSize(float StepSize); // Function Icarus.SettingWidget_ContinuousRange.SetStepSize // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void SetRange(float MinVal, float MaxVal); // Function Icarus.SettingWidget_ContinuousRange.SetRange // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void SetApplyDuringDrag(bool bApplyDuringDrag); // Function Icarus.SettingWidget_ContinuousRange.SetApplyDuringDrag // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget_DiscreteRange
// Size: 0x380 (Inherited: 0x380)
struct USettingWidget_DiscreteRange : USettingWidget {

	void SetValueIndex(int32_t Index, bool bForceRefresh); // Function Icarus.SettingWidget_DiscreteRange.SetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetOptions(struct TArray<struct FText>& Options); // Function Icarus.SettingWidget_DiscreteRange.SetOptions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget_Keybindings
// Size: 0x380 (Inherited: 0x380)
struct USettingWidget_Keybindings : USettingWidget {

	struct UKeybindingWidget* CreateKeybindingWidget(struct FKeybindingsRowHandle& Keybinding); // Function Icarus.SettingWidget_Keybindings.CreateKeybindingWidget // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void ClearKeybindingWidgets(); // Function Icarus.SettingWidget_Keybindings.ClearKeybindingWidgets // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget_Language
// Size: 0x390 (Inherited: 0x380)
struct USettingWidget_Language : USettingWidget {
	char pad_380[0x10]; // 0x380(0x10)

	void SetOptions(struct TArray<struct FText>& NewOptions); // Function Icarus.SettingWidget_Language.SetOptions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void SetLanguage(struct FString Language); // Function Icarus.SettingWidget_Language.SetLanguage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SettingWidget_Switch
// Size: 0x380 (Inherited: 0x380)
struct USettingWidget_Switch : USettingWidget {

	void SetValueIndex(int32_t Index); // Function Icarus.SettingWidget_Switch.SetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetLabels(struct TArray<struct FText>& Labels); // Function Icarus.SettingWidget_Switch.SetLabels // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.ShelteredComponent
// Size: 0x180 (Inherited: 0xd0)
struct UShelteredComponent : UTraitComponent {
	bool bDisableShelterTraces; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float ShelterTraceTimeInterval; // 0xd4(0x04)
	float ShelterTraceDistancePriorityScale; // 0xd8(0x04)
	float ShelterTraceStarvationPriorityScale; // 0xdc(0x04)
	float CurrentShelterValue; // 0xe0(0x04)
	bool Debug; // 0xe4(0x01)
	char pad_E5[0x3]; // 0xe5(0x03)
	int32_t DebugDrawTraces; // 0xe8(0x04)
	bool bDebugDrawModifiers; // 0xec(0x01)
	char pad_ED[0x3]; // 0xed(0x03)
	float LastShelterCheckTime; // 0xf0(0x04)
	bool bPerformingTraces; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	float ShelterTraceAccumulatedPriority; // 0xf8(0x04)
	char pad_FC[0x1c]; // 0xfc(0x1c)
	struct TSet<struct UShelteredModifierComponent*> PendingShelteredModifiers; // 0x118(0x50)
	struct TArray<struct FBox> PendingShelteredModifierBoxes; // 0x168(0x10)
	bool bRunningAsyncBeginTrace; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)

	void OnShelterTracesCompleted(int32_t NumPrimaryTraceSuccesses, int32_t NumPrimaryTraceFailures, int32_t NumSecondaryTraceSuccesses, int32_t NumSecondaryTraceFailures); // Function Icarus.ShelteredComponent.OnShelterTracesCompleted // (Native|Event|Public|BlueprintEvent) // @ game+0x1840630
	bool IsSheltered(); // Function Icarus.ShelteredComponent.IsSheltered // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	int32_t GetShelteredTemperatureEffect(int32_t CurrentExternalTemperature); // Function Icarus.ShelteredComponent.GetShelteredTemperatureEffect // (Native|Event|Public|BlueprintEvent) // @ game+0x183f6b0
	float GetCurrentExposureValue(); // Function Icarus.ShelteredComponent.GetCurrentExposureValue // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
};

// Class Icarus.ShelteredModifierComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UShelteredModifierComponent : UActorComponent {
	bool bDebugBounds; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FBox LastModifierBounds; // 0xb4(0x1c)

	void UpdateBounds(bool bForceUpdate); // Function Icarus.ShelteredModifierComponent.UpdateBounds // (Final|Native|Public|BlueprintCallable) // @ game+0x1840f80
};

// Class Icarus.ShelterSubsystem
// Size: 0xb0 (Inherited: 0x30)
struct UShelterSubsystem : UWorldSubsystem {
	char pad_30[0x50]; // 0x30(0x50)
	bool bDebugPrintStats; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct TArray<struct UShelteredComponent*> ShelteredComponents; // 0x88(0x10)
	bool bRunningAsyncPrioritization; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct TArray<struct UShelteredComponent*> PriorityOrderedShelteredComponents; // 0xa0(0x10)
};

// Class Icarus.SignRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct USignRecorderInterface : UInterface {

	void SetSignText(struct FText& Text); // Function Icarus.SignRecorderInterface.SetSignText // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1840cc0
	struct FText GetSignText(); // Function Icarus.SignRecorderInterface.GetSignText // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x183f750
};

// Class Icarus.SignRecorderComponent
// Size: 0x200 (Inherited: 0x1e0)
struct USignRecorderComponent : UDeployableRecorderComponent {
	struct FText SignTextRecord; // 0x1e0(0x18)
	char pad_1F8[0x8]; // 0x1f8(0x08)
};

// Class Icarus.SimpleCharacter
// Size: 0x4d0 (Inherited: 0x4c0)
struct ASimpleCharacter : ACharacter {
	char pad_4C0[0x8]; // 0x4c0(0x08)
	bool bForceMaxLODWhenNotRendered; // 0x4c8(0x01)
	char pad_4C9[0x7]; // 0x4c9(0x07)
};

// Class Icarus.SlotableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct USlotableComponent : UTraitComponent {

	struct AIcarusActor* GetActorInSlot(int32_t Index); // Function Icarus.SlotableComponent.GetActorInSlot // (Native|Event|Public|BlueprintEvent) // @ game+0x183f3f0
};

// Class Icarus.SlotableLibrary
// Size: 0x28 (Inherited: 0x28)
struct USlotableLibrary : URowLibrary {

	struct FSlotableRowHandle StructToRowHandle(struct FSlotableEnum EnumValue); // Function Icarus.SlotableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840ed0
	struct UE4::FName StructToName(struct FSlotableEnum EnumValue); // Function Icarus.SlotableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840e30
	int32_t StructToInt(struct FSlotableEnum EnumValue); // Function Icarus.SlotableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840d90
	struct FSlotableEnum RowHandleToStruct(struct FSlotableRowHandle RowHandle); // Function Icarus.SlotableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840a50
	void RemoveRowFromSlotableTable(struct UE4::FName Name); // Function Icarus.SlotableLibrary.RemoveRowFromSlotableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18409d0
	void RefreshConstants(); // Function Icarus.SlotableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18409b0
	int32_t NumRows(); // Function Icarus.SlotableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840600
	bool NotEqual_EnumName(struct FSlotableEnum A, struct UE4::FName B); // Function Icarus.SlotableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840510
	bool NotEqual_EnumEnum(struct FSlotableEnum A, struct FSlotableEnum B); // Function Icarus.SlotableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840420
	struct FSlotableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.SlotableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840390
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.SlotableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1840300
	struct FSlotableRowHandle MakeSlotableFromIndex(int32_t Index); // Function Icarus.SlotableLibrary.MakeSlotableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840270
	struct FSlotableEnum MakeSlotableEnum(struct FSlotableEnum Enum); // Function Icarus.SlotableLibrary.MakeSlotableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18401f0
	struct FSlotableRowHandle MakeSlotable(struct UE4::FName RowName); // Function Icarus.SlotableLibrary.MakeSlotable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1840150
	struct FSlotableRowHandle MakeLiteralSlotable(struct FSlotableRowHandle RowHandle); // Function Icarus.SlotableLibrary.MakeLiteralSlotable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x183fca0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.SlotableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x183fc10
	struct FSlotableEnum IntToStruct(int32_t IntValue); // Function Icarus.SlotableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x183fb80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.SlotableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x183faf0
	void GetSlotableStruct(struct FSlotableRowHandle RowHandle, struct FSlotableData& Slotable, enum class EValid& Paths); // Function Icarus.SlotableLibrary.GetSlotableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x183f7d0
	bool EqualEqual_FSlotableRowHandleFSlotableRowHandle(struct FSlotableRowHandle RowHandleA, struct FSlotableRowHandle RowHandleB); // Function Icarus.SlotableLibrary.EqualEqual_FSlotableRowHandleFSlotableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x183f090
	bool EqualEqual_EnumEnum(struct FSlotableEnum A, struct FSlotableEnum B); // Function Icarus.SlotableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x183efa0
	struct FSlotableRowHandle CastToSlotableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.SlotableLibrary.CastToSlotableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x183ec00
	void BreakSlotableEnum(struct FSlotableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.SlotableLibrary.BreakSlotableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x183eaa0
	void AddRowToSlotableTable(struct UE4::FName Name, struct FSlotableData Data, struct FSlotableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.SlotableLibrary.AddRowToSlotableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x183e8e0
};

// Class Icarus.SlotableTable
// Size: 0xb8 (Inherited: 0xb8)
struct USlotableTable : UIcarusDataTable {
};

// Class Icarus.SoloTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct USoloTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.SoloTalentModel
// Size: 0xe8 (Inherited: 0xe8)
struct USoloTalentModel : UTalentModelInterface {
};

// Class Icarus.SpawnableAI
// Size: 0x28 (Inherited: 0x28)
struct USpawnableAI : UInterface {

	void UpdateCreatureGrowthStats(); // Function Icarus.SpawnableAI.UpdateCreatureGrowthStats // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1846ff0
	void SetupAI(struct FAISetupRowHandle AISetupData, struct FEpicCreaturesRowHandle EpicCreatureSetup); // Function Icarus.SpawnableAI.SetupAI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1846ad0
	void SetEpicCreatureName(struct FText& NewName); // Function Icarus.SpawnableAI.SetEpicCreatureName // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1846a00
	struct FEpicCreaturesRowHandle GetEpicCreatureRowHandle(); // Function Icarus.SpawnableAI.GetEpicCreatureRowHandle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1845470
	struct FText GetEpicCreatureName(); // Function Icarus.SpawnableAI.GetEpicCreatureName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18453d0
	int32_t GetCurrentLevel(); // Function Icarus.SpawnableAI.GetCurrentLevel // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17cf510
	struct UIcarusStatContainer* GetAIStatContainer(); // Function Icarus.SpawnableAI.GetAIStatContainer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18453a0
	struct FAISetupRowHandle GetAISetupRowHandle(); // Function Icarus.SpawnableAI.GetAISetupRowHandle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1845360
	struct UActorState* GetAIActorState(); // Function Icarus.SpawnableAI.GetAIActorState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1845330
};

// Class Icarus.SplineActorBase
// Size: 0x230 (Inherited: 0x220)
struct ASplineActorBase : AActor {
	int32_t UniqueSplineID; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	struct USplineRecorderComponent* Recorder; // 0x228(0x08)

	struct FRecordedSplineActorStruct RecordSplineState(); // Function Icarus.SplineActorBase.RecordSplineState // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void ReconnectFromDatabase(struct FRecordedSplineActorStruct& FromDatabase); // Function Icarus.SplineActorBase.ReconnectFromDatabase // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void PostDatabaseSpawn(struct FRecordedSplineActorStruct& FromDatabase); // Function Icarus.SplineActorBase.PostDatabaseSpawn // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.SplineGripTargetComponent
// Size: 0x550 (Inherited: 0x540)
struct USplineGripTargetComponent : USplineComponent {
	struct UBodySetup* ShapeBodySetup; // 0x538(0x08)
	char pad_548[0x8]; // 0x548(0x08)

	struct FBox CalcBoundingBox(); // Function Icarus.SplineGripTargetComponent.CalcBoundingBox // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1844ba0
};

// Class Icarus.SplineRecorderComponent
// Size: 0x1e0 (Inherited: 0x160)
struct USplineRecorderComponent : UActorStateRecorderComponent {
	struct FRecordedSplineActorStruct Record; // 0x158(0x88)
};

// Class Icarus.SplineSubsystem
// Size: 0x40 (Inherited: 0x30)
struct USplineSubsystem : UWorldSubsystem {
	char pad_30[0x10]; // 0x30(0x10)

	void RegisterSplineActor(struct ASplineActorBase* SplineActor); // Function Icarus.SplineSubsystem.RegisterSplineActor // (Final|Native|Public|BlueprintCallable) // @ game+0x18466f0
	struct ASplineActorBase* FindSplineBySplineID(int32_t UniqueSplineID); // Function Icarus.SplineSubsystem.FindSplineBySplineID // (Final|Native|Public|BlueprintCallable) // @ game+0x1845290
};

// Class Icarus.StaminaActionCostsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStaminaActionCostsLibrary : URowLibrary {

	struct FStaminaActionCostsRowHandle StructToRowHandle(struct FStaminaActionCostsEnum EnumValue); // Function Icarus.StaminaActionCostsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846e90
	struct UE4::FName StructToName(struct FStaminaActionCostsEnum EnumValue); // Function Icarus.StaminaActionCostsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846d50
	int32_t StructToInt(struct FStaminaActionCostsEnum EnumValue); // Function Icarus.StaminaActionCostsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846c10
	struct FStaminaActionCostsEnum RowHandleToStruct(struct FStaminaActionCostsRowHandle RowHandle); // Function Icarus.StaminaActionCostsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846880
	void RemoveRowFromStaminaActionCostsTable(struct UE4::FName Name); // Function Icarus.StaminaActionCostsLibrary.RemoveRowFromStaminaActionCostsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1846780
	void RefreshConstants(); // Function Icarus.StaminaActionCostsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18466b0
	int32_t NumRows(); // Function Icarus.StaminaActionCostsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846650
	bool NotEqual_EnumName(struct FStaminaActionCostsEnum A, struct UE4::FName B); // Function Icarus.StaminaActionCostsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846470
	bool NotEqual_EnumEnum(struct FStaminaActionCostsEnum A, struct FStaminaActionCostsEnum B); // Function Icarus.StaminaActionCostsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846290
	struct FStaminaActionCostsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.StaminaActionCostsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846170
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.StaminaActionCostsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1846050
	struct FStaminaActionCostsRowHandle MakeStaminaActionCostsFromIndex(int32_t Index); // Function Icarus.StaminaActionCostsLibrary.MakeStaminaActionCostsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845e10
	struct FStaminaActionCostsEnum MakeStaminaActionCostsEnum(struct FStaminaActionCostsEnum Enum); // Function Icarus.StaminaActionCostsLibrary.MakeStaminaActionCostsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845d90
	struct FStaminaActionCostsRowHandle MakeStaminaActionCosts(struct UE4::FName RowName); // Function Icarus.StaminaActionCostsLibrary.MakeStaminaActionCosts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845cf0
	struct FStaminaActionCostsRowHandle MakeLiteralStaminaActionCosts(struct FStaminaActionCostsRowHandle RowHandle); // Function Icarus.StaminaActionCostsLibrary.MakeLiteralStaminaActionCosts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845b50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.StaminaActionCostsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1845a30
	struct FStaminaActionCostsEnum IntToStruct(int32_t IntValue); // Function Icarus.StaminaActionCostsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845910
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.StaminaActionCostsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18457f0
	void GetStaminaActionCostsStruct(struct FStaminaActionCostsRowHandle RowHandle, struct FStaminaCost& StaminaActionCosts, enum class EValid& Paths); // Function Icarus.StaminaActionCostsLibrary.GetStaminaActionCostsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18454b0
	bool EqualEqual_FStaminaActionCostsRowHandleFStaminaActionCostsRowHandle(struct FStaminaActionCostsRowHandle RowHandleA, struct FStaminaActionCostsRowHandle RowHandleB); // Function Icarus.StaminaActionCostsLibrary.EqualEqual_FStaminaActionCostsRowHandleFStaminaActionCostsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845010
	bool EqualEqual_EnumEnum(struct FStaminaActionCostsEnum A, struct FStaminaActionCostsEnum B); // Function Icarus.StaminaActionCostsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1844e30
	struct FStaminaActionCostsRowHandle CastToStaminaActionCostsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.StaminaActionCostsLibrary.CastToStaminaActionCostsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1844bf0
	void BreakStaminaActionCostsEnum(struct FStaminaActionCostsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.StaminaActionCostsLibrary.BreakStaminaActionCostsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18448e0
	void AddRowToStaminaActionCostsTable(struct UE4::FName Name, struct FStaminaCost Data, struct FStaminaActionCostsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.StaminaActionCostsLibrary.AddRowToStaminaActionCostsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1844410
};

// Class Icarus.StaminaActionCostsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStaminaActionCostsTable : UIcarusDataTable {
};

// Class Icarus.StatAfflictionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatAfflictionsLibrary : URowLibrary {

	struct FStatAfflictionsRowHandle StructToRowHandle(struct FStatAfflictionsEnum EnumValue); // Function Icarus.StatAfflictionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846f40
	struct UE4::FName StructToName(struct FStatAfflictionsEnum EnumValue); // Function Icarus.StatAfflictionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846df0
	int32_t StructToInt(struct FStatAfflictionsEnum EnumValue); // Function Icarus.StatAfflictionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846cb0
	struct FStatAfflictionsEnum RowHandleToStruct(struct FStatAfflictionsRowHandle RowHandle); // Function Icarus.StatAfflictionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846940
	void RemoveRowFromStatAfflictionsTable(struct UE4::FName Name); // Function Icarus.StatAfflictionsLibrary.RemoveRowFromStatAfflictionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1846800
	void RefreshConstants(); // Function Icarus.StatAfflictionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18466d0
	int32_t NumRows(); // Function Icarus.StatAfflictionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846680
	bool NotEqual_EnumName(struct FStatAfflictionsEnum A, struct UE4::FName B); // Function Icarus.StatAfflictionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846560
	bool NotEqual_EnumEnum(struct FStatAfflictionsEnum A, struct FStatAfflictionsEnum B); // Function Icarus.StatAfflictionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846380
	struct FStatAfflictionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.StatAfflictionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1846200
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.StatAfflictionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18460e0
	struct FStatAfflictionsRowHandle MakeStatAfflictionsFromIndex(int32_t Index); // Function Icarus.StatAfflictionsLibrary.MakeStatAfflictionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845fc0
	struct FStatAfflictionsEnum MakeStatAfflictionsEnum(struct FStatAfflictionsEnum Enum); // Function Icarus.StatAfflictionsLibrary.MakeStatAfflictionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845f40
	struct FStatAfflictionsRowHandle MakeStatAfflictions(struct UE4::FName RowName); // Function Icarus.StatAfflictionsLibrary.MakeStatAfflictions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845ea0
	struct FStatAfflictionsRowHandle MakeLiteralStatAfflictions(struct FStatAfflictionsRowHandle RowHandle); // Function Icarus.StatAfflictionsLibrary.MakeLiteralStatAfflictions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845c20
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.StatAfflictionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1845ac0
	struct FStatAfflictionsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatAfflictionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18459a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.StatAfflictionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1845880
	void GetStatAfflictionsStruct(struct FStatAfflictionsRowHandle RowHandle, struct FStatAfflictions& StatAfflictions, enum class EValid& Paths); // Function Icarus.StatAfflictionsLibrary.GetStatAfflictionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1845640
	bool EqualEqual_FStatAfflictionsRowHandleFStatAfflictionsRowHandle(struct FStatAfflictionsRowHandle RowHandleA, struct FStatAfflictionsRowHandle RowHandleB); // Function Icarus.StatAfflictionsLibrary.EqualEqual_FStatAfflictionsRowHandleFStatAfflictionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1845150
	bool EqualEqual_EnumEnum(struct FStatAfflictionsEnum A, struct FStatAfflictionsEnum B); // Function Icarus.StatAfflictionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1844f20
	struct FStatAfflictionsRowHandle CastToStatAfflictionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.StatAfflictionsLibrary.CastToStatAfflictionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1844d10
	void BreakStatAfflictionsEnum(struct FStatAfflictionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.StatAfflictionsLibrary.BreakStatAfflictionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1844a40
	void AddRowToStatAfflictionsTable(struct UE4::FName Name, struct FStatAfflictions Data, struct FStatAfflictionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.StatAfflictionsLibrary.AddRowToStatAfflictionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1844650
};

// Class Icarus.StatAfflictionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatAfflictionsTable : UIcarusDataTable {
};

// Class Icarus.StatCategoriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatCategoriesLibrary : URowLibrary {

	struct FStatCategoriesRowHandle StructToRowHandle(struct FStatCategoriesEnum EnumValue); // Function Icarus.StatCategoriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c950
	struct UE4::FName StructToName(struct FStatCategoriesEnum EnumValue); // Function Icarus.StatCategoriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c770
	int32_t StructToInt(struct FStatCategoriesEnum EnumValue); // Function Icarus.StatCategoriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c590
	struct FStatCategoriesEnum RowHandleToStruct(struct FStatCategoriesRowHandle RowHandle); // Function Icarus.StatCategoriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c350
	void RemoveRowFromStatCategoriesTable(struct UE4::FName Name); // Function Icarus.StatCategoriesLibrary.RemoveRowFromStatCategoriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x184c1d0
	void RefreshConstants(); // Function Icarus.StatCategoriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x184c170
	int32_t NumRows(); // Function Icarus.StatCategoriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c0e0
	bool NotEqual_EnumName(struct FStatCategoriesEnum A, struct UE4::FName B); // Function Icarus.StatCategoriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184be10
	bool NotEqual_EnumEnum(struct FStatCategoriesEnum A, struct FStatCategoriesEnum B); // Function Icarus.StatCategoriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184bb40
	struct FStatCategoriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.StatCategoriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b990
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.StatCategoriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x184b7e0
	struct FStatCategoriesRowHandle MakeStatCategoriesFromIndex(int32_t Index); // Function Icarus.StatCategoriesLibrary.MakeStatCategoriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b3f0
	struct FStatCategoriesEnum MakeStatCategoriesEnum(struct FStatCategoriesEnum Enum); // Function Icarus.StatCategoriesLibrary.MakeStatCategoriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b370
	struct FStatCategoriesRowHandle MakeStatCategories(struct UE4::FName RowName); // Function Icarus.StatCategoriesLibrary.MakeStatCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b2d0
	struct FStatCategoriesRowHandle MakeLiteralStatCategories(struct FStatCategoriesRowHandle RowHandle); // Function Icarus.StatCategoriesLibrary.MakeLiteralStatCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b060
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.StatCategoriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x184aeb0
	struct FStatCategoriesEnum IntToStruct(int32_t IntValue); // Function Icarus.StatCategoriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184ad00
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.StatCategoriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x184ab50
	void GetStatCategoriesStruct(struct FStatCategoriesRowHandle RowHandle, struct FStatCategory& StatCategories, enum class EValid& Paths); // Function Icarus.StatCategoriesLibrary.GetStatCategoriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184a650
	bool EqualEqual_FStatCategoriesRowHandleFStatCategoriesRowHandle(struct FStatCategoriesRowHandle RowHandleA, struct FStatCategoriesRowHandle RowHandleB); // Function Icarus.StatCategoriesLibrary.EqualEqual_FStatCategoriesRowHandleFStatCategoriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184a290
	bool EqualEqual_EnumEnum(struct FStatCategoriesEnum A, struct FStatCategoriesEnum B); // Function Icarus.StatCategoriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1849fc0
	struct FStatCategoriesRowHandle CastToStatCategoriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.StatCategoriesLibrary.CastToStatCategoriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1849c60
	void BreakStatCategoriesEnum(struct FStatCategoriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.StatCategoriesLibrary.BreakStatCategoriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1849840
	void AddRowToStatCategoriesTable(struct UE4::FName Name, struct FStatCategory Data, struct FStatCategoriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.StatCategoriesLibrary.AddRowToStatCategoriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1849130
};

// Class Icarus.StatCategoriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatCategoriesTable : UIcarusDataTable {
};

// Class Icarus.StatGameplayTagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatGameplayTagsLibrary : URowLibrary {

	struct FStatGameplayTagsRowHandle StructToRowHandle(struct FStatGameplayTagsEnum EnumValue); // Function Icarus.StatGameplayTagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184ca00
	struct UE4::FName StructToName(struct FStatGameplayTagsEnum EnumValue); // Function Icarus.StatGameplayTagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c810
	int32_t StructToInt(struct FStatGameplayTagsEnum EnumValue); // Function Icarus.StatGameplayTagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c630
	struct FStatGameplayTagsEnum RowHandleToStruct(struct FStatGameplayTagsRowHandle RowHandle); // Function Icarus.StatGameplayTagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c410
	void RemoveRowFromStatGameplayTagsTable(struct UE4::FName Name); // Function Icarus.StatGameplayTagsLibrary.RemoveRowFromStatGameplayTagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x184c250
	void RefreshConstants(); // Function Icarus.StatGameplayTagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x184c190
	int32_t NumRows(); // Function Icarus.StatGameplayTagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c110
	bool NotEqual_EnumName(struct FStatGameplayTagsEnum A, struct UE4::FName B); // Function Icarus.StatGameplayTagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184bf00
	bool NotEqual_EnumEnum(struct FStatGameplayTagsEnum A, struct FStatGameplayTagsEnum B); // Function Icarus.StatGameplayTagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184bc30
	struct FStatGameplayTagsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.StatGameplayTagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184ba20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.StatGameplayTagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x184b870
	struct FStatGameplayTagsRowHandle MakeStatGameplayTagsFromIndex(int32_t Index); // Function Icarus.StatGameplayTagsLibrary.MakeStatGameplayTagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b5a0
	struct FStatGameplayTagsEnum MakeStatGameplayTagsEnum(struct FStatGameplayTagsEnum Enum); // Function Icarus.StatGameplayTagsLibrary.MakeStatGameplayTagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b520
	struct FStatGameplayTagsRowHandle MakeStatGameplayTags(struct UE4::FName RowName); // Function Icarus.StatGameplayTagsLibrary.MakeStatGameplayTags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b480
	struct FStatGameplayTagsRowHandle MakeLiteralStatGameplayTags(struct FStatGameplayTagsRowHandle RowHandle); // Function Icarus.StatGameplayTagsLibrary.MakeLiteralStatGameplayTags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b130
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.StatGameplayTagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x184af40
	struct FStatGameplayTagsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatGameplayTagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184ad90
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.StatGameplayTagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x184abe0
	void GetStatGameplayTagsStruct(struct FStatGameplayTagsRowHandle RowHandle, struct FStatGameplayTag& StatGameplayTags, enum class EValid& Paths); // Function Icarus.StatGameplayTagsLibrary.GetStatGameplayTagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184a810
	bool EqualEqual_FStatGameplayTagsRowHandleFStatGameplayTagsRowHandle(struct FStatGameplayTagsRowHandle RowHandleA, struct FStatGameplayTagsRowHandle RowHandleB); // Function Icarus.StatGameplayTagsLibrary.EqualEqual_FStatGameplayTagsRowHandleFStatGameplayTagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184a3d0
	bool EqualEqual_EnumEnum(struct FStatGameplayTagsEnum A, struct FStatGameplayTagsEnum B); // Function Icarus.StatGameplayTagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184a0b0
	struct FStatGameplayTagsRowHandle CastToStatGameplayTagsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.StatGameplayTagsLibrary.CastToStatGameplayTagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1849d80
	void BreakStatGameplayTagsEnum(struct FStatGameplayTagsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.StatGameplayTagsLibrary.BreakStatGameplayTagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18499a0
	void AddRowToStatGameplayTagsTable(struct UE4::FName Name, struct FStatGameplayTag Data, struct FStatGameplayTagsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.StatGameplayTagsLibrary.AddRowToStatGameplayTagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18493a0
};

// Class Icarus.StatGameplayTagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatGameplayTagsTable : UIcarusDataTable {
};

// Class Icarus.StaticItem
// Size: 0x400 (Inherited: 0x3f0)
struct AStaticItem : AIcarusItem {
	struct UStaticMeshComponent* StaticMeshRoot; // 0x3f0(0x08)
	char pad_3F8[0x8]; // 0x3f8(0x08)
};

// Class Icarus.StatisticsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatisticsLibrary : URowLibrary {

	struct FStatisticsRowHandle StructToRowHandle(struct FStatisticsEnum EnumValue); // Function Icarus.StatisticsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184cab0
	struct UE4::FName StructToName(struct FStatisticsEnum EnumValue); // Function Icarus.StatisticsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c8b0
	int32_t StructToInt(struct FStatisticsEnum EnumValue); // Function Icarus.StatisticsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c6d0
	struct FStatisticsEnum RowHandleToStruct(struct FStatisticsRowHandle RowHandle); // Function Icarus.StatisticsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c4d0
	void RemoveRowFromStatisticsTable(struct UE4::FName Name); // Function Icarus.StatisticsLibrary.RemoveRowFromStatisticsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x184c2d0
	void RefreshConstants(); // Function Icarus.StatisticsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x184c1b0
	int32_t NumRows(); // Function Icarus.StatisticsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184c140
	bool NotEqual_EnumName(struct FStatisticsEnum A, struct UE4::FName B); // Function Icarus.StatisticsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184bff0
	bool NotEqual_EnumEnum(struct FStatisticsEnum A, struct FStatisticsEnum B); // Function Icarus.StatisticsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184bd20
	struct FStatisticsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.StatisticsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184bab0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.StatisticsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x184b900
	struct FStatisticsRowHandle MakeStatisticsFromIndex(int32_t Index); // Function Icarus.StatisticsLibrary.MakeStatisticsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b750
	struct FStatisticsEnum MakeStatisticsEnum(struct FStatisticsEnum Enum); // Function Icarus.StatisticsLibrary.MakeStatisticsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b6d0
	struct FStatisticsRowHandle MakeStatistics(struct UE4::FName RowName); // Function Icarus.StatisticsLibrary.MakeStatistics // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b630
	struct FStatisticsRowHandle MakeLiteralStatistics(struct FStatisticsRowHandle RowHandle); // Function Icarus.StatisticsLibrary.MakeLiteralStatistics // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184b200
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.StatisticsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x184afd0
	struct FStatisticsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatisticsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184ae20
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.StatisticsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x184ac70
	void GetStatisticsStruct(struct FStatisticsRowHandle RowHandle, struct FStatistic& Statistics, enum class EValid& Paths); // Function Icarus.StatisticsLibrary.GetStatisticsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184a990
	bool EqualEqual_FStatisticsRowHandleFStatisticsRowHandle(struct FStatisticsRowHandle RowHandleA, struct FStatisticsRowHandle RowHandleB); // Function Icarus.StatisticsLibrary.EqualEqual_FStatisticsRowHandleFStatisticsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184a510
	bool EqualEqual_EnumEnum(struct FStatisticsEnum A, struct FStatisticsEnum B); // Function Icarus.StatisticsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x184a1a0
	struct FStatisticsRowHandle CastToStatisticsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.StatisticsLibrary.CastToStatisticsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1849ea0
	void BreakStatisticsEnum(struct FStatisticsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.StatisticsLibrary.BreakStatisticsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1849b00
	void AddRowToStatisticsTable(struct UE4::FName Name, struct FStatistic Data, struct FStatisticsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.StatisticsLibrary.AddRowToStatisticsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18495d0
};

// Class Icarus.StatisticsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatisticsTable : UIcarusDataTable {
};

// Class Icarus.StatisticTrackerSubsystem
// Size: 0x80 (Inherited: 0x30)
struct UStatisticTrackerSubsystem : UWorldSubsystem {
	char pad_30[0x50]; // 0x30(0x50)

	bool SetStatisticValue(struct FString PlayerID, struct FStatisticsRowHandle StatisticRow, int32_t Value); // Function Icarus.StatisticTrackerSubsystem.SetStatisticValue // (Final|Native|Public|BlueprintCallable) // @ game+0x18529b0
	void OnTreeChopped(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnTreeChopped // (Final|Native|Private) // @ game+0x1852550
	void OnPlayerRevivedOtherPlayer(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnPlayerRevivedOtherPlayer // (Final|Native|Private) // @ game+0x1852480
	void OnPlayerRevived(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnPlayerRevived // (Final|Native|Private) // @ game+0x18523d0
	void OnPlayerDeath(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnPlayerDeath // (Final|Native|Private) // @ game+0x1852320
	bool IncrementStatistic(struct FString PlayerID, struct FStatisticsRowHandle StatisticRow); // Function Icarus.StatisticTrackerSubsystem.IncrementStatistic // (Final|Native|Public|BlueprintCallable) // @ game+0x18511d0
	struct FPlayerStatistics GetTrackedStatisticsForPlayer(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.GetTrackedStatisticsForPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1851030
	bool ClearTrackedStatisticsForPlayer(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.ClearTrackedStatisticsForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1850080
};

// Class Icarus.StatsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatsFunctionLibrary : UBlueprintFunctionLibrary {

	bool RollChanceStat(struct FStatsEnum Stat, struct UIcarusStatContainer* StatContainer); // Function Icarus.StatsFunctionLibrary.RollChanceStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1852740
	float ModifyValueByPlusPercent(int32_t Value, int32_t StatValue); // Function Icarus.StatsFunctionLibrary.ModifyValueByPlusPercent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851bf0
	bool HasStatDescription(struct FStatsEnum Stat); // Function Icarus.StatsFunctionLibrary.HasStatDescription // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1851130
	void GetStatTitleBP(struct FStatsEnum Stat, int32_t Value, struct FText& TitleDescription, enum class EFunctionOutcome& Outcome); // Function Icarus.StatsFunctionLibrary.GetStatTitleBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1850a50
	struct TMap<struct FStatCategoriesEnum, struct FStatCollection> GetStatDisplay(struct UIcarusStatContainer* StatContainer); // Function Icarus.StatsFunctionLibrary.GetStatDisplay // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1850910
	void GetStatDescriptionBP(struct FStatsEnum Stat, int32_t Value, struct FText& Description, enum class EFunctionOutcome& Outcome); // Function Icarus.StatsFunctionLibrary.GetStatDescriptionBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1850740
	int32_t GetStatAdjustedDurabilityLoss(struct AIcarusPlayerCharacter* Player, int32_t Durability); // Function Icarus.StatsFunctionLibrary.GetStatAdjustedDurabilityLoss // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1850670
	bool CheckStatComparison(struct FStatComparison& Comparison, struct UIcarusStatContainer* StatContainer); // Function Icarus.StatsFunctionLibrary.CheckStatComparison // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184ff90
};

// Class Icarus.StatsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatsTable : UIcarusDataTable {
};

// Class Icarus.StomachComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UStomachComponent : UActorComponent {
	struct TArray<struct FStomachContent> StomachContents; // 0xb0(0x10)
	struct FMulticastSparseDelegate StomachContentsUpdated; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)

	void OnRep_StomachContents(); // Function Icarus.StomachComponent.OnRep_StomachContents // (Final|Native|Public) // @ game+0x1852530
	struct TArray<struct FBarSegment> GetStomachBarSegments(); // Function Icarus.StomachComponent.GetStomachBarSegments // (Final|Native|Public|BlueprintCallable) // @ game+0x1850da0
	void FoodModifierRemoved(struct UModifierStateComponent* Component, bool bRemoved); // Function Icarus.StomachComponent.FoodModifierRemoved // (Final|Native|Public) // @ game+0x18505a0
};

// Class Icarus.SurfacesLibrary
// Size: 0x28 (Inherited: 0x28)
struct USurfacesLibrary : URowLibrary {

	struct FSurfacesRowHandle StructToRowHandle(struct FSurfacesEnum EnumValue); // Function Icarus.SurfacesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852e50
	struct UE4::FName StructToName(struct FSurfacesEnum EnumValue); // Function Icarus.SurfacesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852d00
	int32_t StructToInt(struct FSurfacesEnum EnumValue); // Function Icarus.SurfacesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1852bc0
	struct FSurfacesEnum RowHandleToStruct(struct FSurfacesRowHandle RowHandle); // Function Icarus.SurfacesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18528f0
	void RemoveRowFromSurfacesTable(struct UE4::FName Name); // Function Icarus.SurfacesLibrary.RemoveRowFromSurfacesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18526c0
	void RefreshConstants(); // Function Icarus.SurfacesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1852620
	int32_t NumRows(); // Function Icarus.SurfacesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18522f0
	bool NotEqual_EnumName(struct FSurfacesEnum A, struct UE4::FName B); // Function Icarus.SurfacesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18521d0
	bool NotEqual_EnumEnum(struct FSurfacesEnum A, struct FSurfacesEnum B); // Function Icarus.SurfacesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851ff0
	struct FSurfacesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.SurfacesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851e70
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.SurfacesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1851d50
	struct FSurfacesRowHandle MakeSurfacesRowFromSurfaceType(enum class EPhysicalSurface& InSurfaceType); // Function Icarus.SurfacesLibrary.MakeSurfacesRowFromSurfaceType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1851b50
	struct FSurfacesRowHandle MakeSurfacesFromIndex(int32_t Index); // Function Icarus.SurfacesLibrary.MakeSurfacesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851ac0
	struct FSurfacesEnum MakeSurfacesEnum(struct FSurfacesEnum Enum); // Function Icarus.SurfacesLibrary.MakeSurfacesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851a40
	struct FSurfacesRowHandle MakeSurfaces(struct UE4::FName RowName); // Function Icarus.SurfacesLibrary.MakeSurfaces // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18519a0
	struct FSurfacesRowHandle MakeLiteralSurfaces(struct FSurfacesRowHandle RowHandle); // Function Icarus.SurfacesLibrary.MakeLiteralSurfaces // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1851720
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.SurfacesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18515c0
	struct FSurfacesEnum IntToStruct(int32_t IntValue); // Function Icarus.SurfacesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18514a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.SurfacesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1851380
	void GetSurfacesStruct(struct FSurfacesRowHandle RowHandle, struct FSurfacesData& Surfaces, enum class EValid& Paths); // Function Icarus.SurfacesLibrary.GetSurfacesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1850e90
	bool EqualEqual_FSurfacesRowHandleFSurfacesRowHandle(struct FSurfacesRowHandle RowHandleA, struct FSurfacesRowHandle RowHandleB); // Function Icarus.SurfacesLibrary.EqualEqual_FSurfacesRowHandleFSurfacesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1850460
	bool EqualEqual_EnumEnum(struct FSurfacesEnum A, struct FSurfacesEnum B); // Function Icarus.SurfacesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1850230
	struct FSurfacesRowHandle CastToSurfacesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.SurfacesLibrary.CastToSurfacesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184fe70
	void BreakSurfacesEnum(struct FSurfacesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.SurfacesLibrary.BreakSurfacesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x184fbf0
	void AddRowToSurfacesTable(struct UE4::FName Name, struct FSurfacesData Data, struct FSurfacesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.SurfacesLibrary.AddRowToSurfacesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x184f8a0
};

// Class Icarus.SurfacesTable
// Size: 0xb8 (Inherited: 0xb8)
struct USurfacesTable : UIcarusDataTable {
};

// Class Icarus.SurvivalTriggersLibrary
// Size: 0x28 (Inherited: 0x28)
struct USurvivalTriggersLibrary : URowLibrary {

	struct FSurvivalTriggersRowHandle StructToRowHandle(struct FSurvivalTriggersEnum EnumValue); // Function Icarus.SurvivalTriggersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1859420
	struct UE4::FName StructToName(struct FSurvivalTriggersEnum EnumValue); // Function Icarus.SurvivalTriggersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1859240
	int32_t StructToInt(struct FSurvivalTriggersEnum EnumValue); // Function Icarus.SurvivalTriggersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1859060
	struct FSurvivalTriggersEnum RowHandleToStruct(struct FSurvivalTriggersRowHandle RowHandle); // Function Icarus.SurvivalTriggersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858e20
	void RemoveRowFromSurvivalTriggersTable(struct UE4::FName Name); // Function Icarus.SurvivalTriggersLibrary.RemoveRowFromSurvivalTriggersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1858ca0
	void RefreshConstants(); // Function Icarus.SurvivalTriggersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1858c40
	int32_t NumRows(); // Function Icarus.SurvivalTriggersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858bb0
	bool NotEqual_EnumName(struct FSurvivalTriggersEnum A, struct UE4::FName B); // Function Icarus.SurvivalTriggersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18588e0
	bool NotEqual_EnumEnum(struct FSurvivalTriggersEnum A, struct FSurvivalTriggersEnum B); // Function Icarus.SurvivalTriggersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858610
	struct FSurvivalTriggersEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.SurvivalTriggersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858460
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.SurvivalTriggersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18582b0
	struct FSurvivalTriggersRowHandle MakeSurvivalTriggersFromIndex(int32_t Index); // Function Icarus.SurvivalTriggersLibrary.MakeSurvivalTriggersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857dd0
	struct FSurvivalTriggersEnum MakeSurvivalTriggersEnum(struct FSurvivalTriggersEnum Enum); // Function Icarus.SurvivalTriggersLibrary.MakeSurvivalTriggersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857d50
	struct FSurvivalTriggersRowHandle MakeSurvivalTriggers(struct UE4::FName RowName); // Function Icarus.SurvivalTriggersLibrary.MakeSurvivalTriggers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857cb0
	struct FSurvivalTriggersRowHandle MakeLiteralSurvivalTriggers(struct FSurvivalTriggersRowHandle RowHandle); // Function Icarus.SurvivalTriggersLibrary.MakeLiteralSurvivalTriggers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857a40
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.SurvivalTriggersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1857890
	struct FSurvivalTriggersEnum IntToStruct(int32_t IntValue); // Function Icarus.SurvivalTriggersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18576e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.SurvivalTriggersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1857530
	void GetSurvivalTriggersStruct(struct FSurvivalTriggersRowHandle RowHandle, struct FSurvivalTriggers& SurvivalTriggers, enum class EValid& Paths); // Function Icarus.SurvivalTriggersLibrary.GetSurvivalTriggersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1856fe0
	bool EqualEqual_FSurvivalTriggersRowHandleFSurvivalTriggersRowHandle(struct FSurvivalTriggersRowHandle RowHandleA, struct FSurvivalTriggersRowHandle RowHandleB); // Function Icarus.SurvivalTriggersLibrary.EqualEqual_FSurvivalTriggersRowHandleFSurvivalTriggersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1856c20
	bool EqualEqual_EnumEnum(struct FSurvivalTriggersEnum A, struct FSurvivalTriggersEnum B); // Function Icarus.SurvivalTriggersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1856950
	struct FSurvivalTriggersRowHandle CastToSurvivalTriggersRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.SurvivalTriggersLibrary.CastToSurvivalTriggersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18565f0
	void BreakSurvivalTriggersEnum(struct FSurvivalTriggersEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.SurvivalTriggersLibrary.BreakSurvivalTriggersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18561d0
	void AddRowToSurvivalTriggersTable(struct UE4::FName Name, struct FSurvivalTriggers Data, struct FSurvivalTriggersRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.SurvivalTriggersLibrary.AddRowToSurvivalTriggersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1855a90
};

// Class Icarus.SurvivalTriggersTable
// Size: 0xb8 (Inherited: 0xb8)
struct USurvivalTriggersTable : UIcarusDataTable {
};

// Class Icarus.TagQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTagQueriesLibrary : URowLibrary {

	struct FTagQueriesRowHandle StructToRowHandle(struct FTagQueriesEnum EnumValue); // Function Icarus.TagQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18594d0
	struct UE4::FName StructToName(struct FTagQueriesEnum EnumValue); // Function Icarus.TagQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18592e0
	int32_t StructToInt(struct FTagQueriesEnum EnumValue); // Function Icarus.TagQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1859100
	struct FTagQueriesEnum RowHandleToStruct(struct FTagQueriesRowHandle RowHandle); // Function Icarus.TagQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858ee0
	void RemoveRowFromTagQueriesTable(struct UE4::FName Name); // Function Icarus.TagQueriesLibrary.RemoveRowFromTagQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1858d20
	void RefreshConstants(); // Function Icarus.TagQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1858c60
	int32_t NumRows(); // Function Icarus.TagQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858be0
	bool NotEqual_EnumName(struct FTagQueriesEnum A, struct UE4::FName B); // Function Icarus.TagQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18589d0
	bool NotEqual_EnumEnum(struct FTagQueriesEnum A, struct FTagQueriesEnum B); // Function Icarus.TagQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858700
	struct FTagQueriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TagQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18584f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TagQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1858340
	struct FTagQueriesRowHandle MakeTagQueriesFromIndex(int32_t Index); // Function Icarus.TagQueriesLibrary.MakeTagQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857f80
	struct FTagQueriesEnum MakeTagQueriesEnum(struct FTagQueriesEnum Enum); // Function Icarus.TagQueriesLibrary.MakeTagQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857f00
	struct FTagQueriesRowHandle MakeTagQueries(struct UE4::FName RowName); // Function Icarus.TagQueriesLibrary.MakeTagQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857e60
	struct FTagQueriesRowHandle MakeLiteralTagQueries(struct FTagQueriesRowHandle RowHandle); // Function Icarus.TagQueriesLibrary.MakeLiteralTagQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857b10
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TagQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1857920
	struct FTagQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.TagQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857770
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TagQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18575c0
	void GetTagQueriesStruct(struct FTagQueriesRowHandle RowHandle, struct FTagQueries& TagQueries, enum class EValid& Paths); // Function Icarus.TagQueriesLibrary.GetTagQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1857190
	bool EqualEqual_FTagQueriesRowHandleFTagQueriesRowHandle(struct FTagQueriesRowHandle RowHandleA, struct FTagQueriesRowHandle RowHandleB); // Function Icarus.TagQueriesLibrary.EqualEqual_FTagQueriesRowHandleFTagQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1856d60
	bool EqualEqual_EnumEnum(struct FTagQueriesEnum A, struct FTagQueriesEnum B); // Function Icarus.TagQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1856a40
	struct FTagQueriesRowHandle CastToTagQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TagQueriesLibrary.CastToTagQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1856710
	void BreakTagQueriesEnum(struct FTagQueriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TagQueriesLibrary.BreakTagQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1856330
	void AddRowToTagQueriesTable(struct UE4::FName Name, struct FTagQueries Data, struct FTagQueriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TagQueriesLibrary.AddRowToTagQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1855c90
};

// Class Icarus.TagQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTagQueriesTable : UIcarusDataTable {
};

// Class Icarus.TalentAccolade
// Size: 0x28 (Inherited: 0x28)
struct UTalentAccolade : UAccoladeImpl {
};

// Class Icarus.TalentArchetypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentArchetypesLibrary : URowLibrary {

	struct FTalentArchetypesRowHandle StructToRowHandle(struct FTalentArchetypesEnum EnumValue); // Function Icarus.TalentArchetypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1859580
	struct UE4::FName StructToName(struct FTalentArchetypesEnum EnumValue); // Function Icarus.TalentArchetypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1859380
	int32_t StructToInt(struct FTalentArchetypesEnum EnumValue); // Function Icarus.TalentArchetypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18591a0
	struct FTalentArchetypesEnum RowHandleToStruct(struct FTalentArchetypesRowHandle RowHandle); // Function Icarus.TalentArchetypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858fa0
	void RemoveRowFromTalentArchetypesTable(struct UE4::FName Name); // Function Icarus.TalentArchetypesLibrary.RemoveRowFromTalentArchetypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1858da0
	void RefreshConstants(); // Function Icarus.TalentArchetypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1858c80
	int32_t NumRows(); // Function Icarus.TalentArchetypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858c10
	bool NotEqual_EnumName(struct FTalentArchetypesEnum A, struct UE4::FName B); // Function Icarus.TalentArchetypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858ac0
	bool NotEqual_EnumEnum(struct FTalentArchetypesEnum A, struct FTalentArchetypesEnum B); // Function Icarus.TalentArchetypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18587f0
	struct FTalentArchetypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentArchetypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858580
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentArchetypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18583d0
	struct TArray<struct FTalentArchetypesRowHandle> MakeTalentArchetypesRowFromModel(struct FTalentModelsRowHandle& InModel); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypesRowFromModel // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18581c0
	struct FTalentArchetypesRowHandle MakeTalentArchetypesFromIndex(int32_t Index); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858130
	struct FTalentArchetypesEnum MakeTalentArchetypesEnum(struct FTalentArchetypesEnum Enum); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18580b0
	struct FTalentArchetypesRowHandle MakeTalentArchetypes(struct UE4::FName RowName); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1858010
	struct FTalentArchetypesRowHandle MakeLiteralTalentArchetypes(struct FTalentArchetypesRowHandle RowHandle); // Function Icarus.TalentArchetypesLibrary.MakeLiteralTalentArchetypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857be0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentArchetypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18579b0
	struct FTalentArchetypesEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentArchetypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1857800
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentArchetypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1857650
	void GetTalentArchetypesStruct(struct FTalentArchetypesRowHandle RowHandle, struct FTalentArchetype& TalentArchetypes, enum class EValid& Paths); // Function Icarus.TalentArchetypesLibrary.GetTalentArchetypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1857350
	bool EqualEqual_FTalentArchetypesRowHandleFTalentArchetypesRowHandle(struct FTalentArchetypesRowHandle RowHandleA, struct FTalentArchetypesRowHandle RowHandleB); // Function Icarus.TalentArchetypesLibrary.EqualEqual_FTalentArchetypesRowHandleFTalentArchetypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1856ea0
	bool EqualEqual_EnumEnum(struct FTalentArchetypesEnum A, struct FTalentArchetypesEnum B); // Function Icarus.TalentArchetypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1856b30
	struct FTalentArchetypesRowHandle CastToTalentArchetypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentArchetypesLibrary.CastToTalentArchetypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1856830
	void BreakTalentArchetypesEnum(struct FTalentArchetypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentArchetypesLibrary.BreakTalentArchetypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1856490
	void AddRowToTalentArchetypesTable(struct UE4::FName Name, struct FTalentArchetype Data, struct FTalentArchetypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentArchetypesLibrary.AddRowToTalentArchetypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1855f00
};

// Class Icarus.TalentArchetypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentArchetypesTable : UIcarusDataTable {
};

// Class Icarus.TalentControllerInterface
// Size: 0x28 (Inherited: 0x28)
struct UTalentControllerInterface : UInterface {

	bool UnlockNextTalentRank(struct FTalentsRowHandle Talent, bool bForceUnlock); // Function Icarus.TalentControllerInterface.UnlockNextTalentRank // (Native|Public|BlueprintCallable) // @ game+0x185ec40
	struct UTalentViewInterface* SetView(struct FTalentViewsRowHandle InView); // Function Icarus.TalentControllerInterface.SetView // (Native|Public|BlueprintCallable) // @ game+0x185e950
	void SetModelView(struct FTalentModelViewsRowHandle InModelView); // Function Icarus.TalentControllerInterface.SetModelView // (Native|Public|BlueprintCallable) // @ game+0x185e890
	struct UTalentModelInterface* SetModel(struct FTalentModelsRowHandle InModel); // Function Icarus.TalentControllerInterface.SetModel // (Native|Public|BlueprintCallable) // @ game+0x185e7d0
	void SetIsInteractionEnabled(bool IsEnabled); // Function Icarus.TalentControllerInterface.SetIsInteractionEnabled // (Native|Public|BlueprintCallable) // @ game+0x185e6b0
	bool RefundTalent(struct FTalentsRowHandle Talent); // Function Icarus.TalentControllerInterface.RefundTalent // (Native|Public|BlueprintCallable) // @ game+0x185e3f0
	bool IsInteractionEnabled(); // Function Icarus.TalentControllerInterface.IsInteractionEnabled // (Native|Public|BlueprintCallable) // @ game+0x185dbe0
	bool HasView(); // Function Icarus.TalentControllerInterface.HasView // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d990
	struct UTalentViewInterface* GetView(); // Function Icarus.TalentControllerInterface.GetView // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185d960
	struct FTalentModelViewsRowHandle GetModelViewData(); // Function Icarus.TalentControllerInterface.GetModelViewData // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x162a270
	struct UTalentModelInterface_Const* GetModel_Const(); // Function Icarus.TalentControllerInterface.GetModel_Const // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cda0
	struct UTalentModelInterface* GetModel(); // Function Icarus.TalentControllerInterface.GetModel // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x185cb40
	void ForceRefresh(); // Function Icarus.TalentControllerInterface.ForceRefresh // (Native|Public|BlueprintCallable) // @ game+0x185c910
	bool CanRefundTalent(struct FTalentsRowHandle Talent, enum class ERefundTalentResponse& SuccessOrFailureReason); // Function Icarus.TalentControllerInterface.CanRefundTalent // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x185c2f0
	bool AreAnyFlagsSet(struct TArray<struct FFlagsMultiRowHandle>& Flags); // Function Icarus.TalentControllerInterface.AreAnyFlagsSet // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x185bf20
	bool AreAllFlagsSet(struct TArray<struct FFlagsMultiRowHandle>& Flags); // Function Icarus.TalentControllerInterface.AreAllFlagsSet // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x185be40
};

// Class Icarus.TalentLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentLibrary : UBlueprintFunctionLibrary {

	struct FTalentTreesRowHandle GetTalentTree(struct FTalentsRowHandle Talent); // Function Icarus.TalentLibrary.GetTalentTree // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185d470
	struct TArray<struct FTalentsRowHandle> GetTalentsForTree(struct FTalentTreesRowHandle TalentTree); // Function Icarus.TalentLibrary.GetTalentsForTree // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185d780
	struct FProcessorRecipesRowHandle GetTalentRecipeSlow(struct FTalentsRowHandle Talent); // Function Icarus.TalentLibrary.GetTalentRecipeSlow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x185d280
	struct FTalentsRowHandle GetRequiredCharacterTalentForBlueprintUnlock(struct FTalentsRowHandle Talent); // Function Icarus.TalentLibrary.GetRequiredCharacterTalentForBlueprintUnlock // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185ce70
	struct FTalentModelViewsRowHandle GetModelView(struct FTalentModelsRowHandle Model); // Function Icarus.TalentLibrary.GetModelView // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185ccd0
	struct FTalentModelsRowHandle GetModel(struct FTalentArchetypesRowHandle Archetype); // Function Icarus.TalentLibrary.GetModel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185cb70
	struct FTalentArchetypesRowHandle GetArchetype(struct FTalentTreesRowHandle TalentTree); // Function Icarus.TalentLibrary.GetArchetype // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185c930
};

// Class Icarus.TalentGraphWidget
// Size: 0x298 (Inherited: 0x260)
struct UTalentGraphWidget : UUserWidget {
	struct FTalentArchetypesRowHandle TalentArchetype; // 0x260(0x18)
	struct UTalentViewInterface* TalentView; // 0x278(0x08)
	struct TArray<struct UTalentTreeWidget*> TalentTreeWidgets; // 0x280(0x10)
	int32_t Zoom; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)

	void PostSetup(); // Function Icarus.TalentGraphWidget.PostSetup // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
	void OnZoomChanged(int32_t Level, float Scale); // Function Icarus.TalentGraphWidget.OnZoomChanged // (Event|Protected|BlueprintEvent) // @ game+0x1be0000
	void InitializeGraph(struct UTalentViewInterface* View, struct FTalentArchetypesRowHandle Archetype); // Function Icarus.TalentGraphWidget.InitializeGraph // (Final|Native|Public|BlueprintCallable) // @ game+0x185d9c0
};

// Class Icarus.TalentMenuWidget
// Size: 0x260 (Inherited: 0x260)
struct UTalentMenuWidget : UUserWidget {
};

// Class Icarus.TalentModelDataStatics
// Size: 0x28 (Inherited: 0x28)
struct UTalentModelDataStatics : UObject {

	void BreakTalentModelData(struct FTalentModelData& ModelData, int32_t& Rank, int32_t& MaxRank, enum class ETalentState& State); // Function Icarus.TalentModelDataStatics.BreakTalentModelData // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x185c000
};

// Class Icarus.TalentModelsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentModelsLibrary : URowLibrary {

	struct FTalentModelsRowHandle StructToRowHandle(struct FTalentModelsEnum EnumValue); // Function Icarus.TalentModelsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185eb70
	struct UE4::FName StructToName(struct FTalentModelsEnum EnumValue); // Function Icarus.TalentModelsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185ead0
	int32_t StructToInt(struct FTalentModelsEnum EnumValue); // Function Icarus.TalentModelsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185ea30
	struct FTalentModelsEnum RowHandleToStruct(struct FTalentModelsRowHandle RowHandle); // Function Icarus.TalentModelsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185e550
	void RemoveRowFromTalentModelsTable(struct UE4::FName Name); // Function Icarus.TalentModelsLibrary.RemoveRowFromTalentModelsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x185e4b0
	void RefreshConstants(); // Function Icarus.TalentModelsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x185e3d0
	int32_t NumRows(); // Function Icarus.TalentModelsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185e360
	bool NotEqual_EnumName(struct FTalentModelsEnum A, struct UE4::FName B); // Function Icarus.TalentModelsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185e270
	bool NotEqual_EnumEnum(struct FTalentModelsEnum A, struct FTalentModelsEnum B); // Function Icarus.TalentModelsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185e180
	struct FTalentModelsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentModelsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185e060
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentModelsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x185dfd0
	struct FTalentModelsRowHandle MakeTalentModelsFromIndex(int32_t Index); // Function Icarus.TalentModelsLibrary.MakeTalentModelsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185df40
	struct FTalentModelsEnum MakeTalentModelsEnum(struct FTalentModelsEnum Enum); // Function Icarus.TalentModelsLibrary.MakeTalentModelsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185dec0
	struct FTalentModelsRowHandle MakeTalentModels(struct UE4::FName RowName); // Function Icarus.TalentModelsLibrary.MakeTalentModels // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185de20
	struct FTalentModelsRowHandle MakeLiteralTalentModels(struct FTalentModelsRowHandle RowHandle); // Function Icarus.TalentModelsLibrary.MakeLiteralTalentModels // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185dd50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentModelsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x185dcc0
	struct FTalentModelsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentModelsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185db50
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentModelsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x185dac0
	void GetTalentModelsStruct(struct FTalentModelsRowHandle RowHandle, struct FTalentModel& TalentModels, enum class EValid& Paths); // Function Icarus.TalentModelsLibrary.GetTalentModelsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x185d020
	bool EqualEqual_FTalentModelsRowHandleFTalentModelsRowHandle(struct FTalentModelsRowHandle RowHandleA, struct FTalentModelsRowHandle RowHandleB); // Function Icarus.TalentModelsLibrary.EqualEqual_FTalentModelsRowHandleFTalentModelsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185c7d0
	bool EqualEqual_EnumEnum(struct FTalentModelsEnum A, struct FTalentModelsEnum B); // Function Icarus.TalentModelsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x185c6e0
	struct FTalentModelsRowHandle CastToTalentModelsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentModelsLibrary.CastToTalentModelsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x185c510
	void BreakTalentModelsEnum(struct FTalentModelsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentModelsLibrary.BreakTalentModelsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x185c190
	void AddRowToTalentModelsTable(struct UE4::FName Name, struct FTalentModel Data, struct FTalentModelsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentModelsLibrary.AddRowToTalentModelsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x185bbb0
};

// Class Icarus.TalentModelsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentModelsTable : UIcarusDataTable {
};

// Class Icarus.TalentModelViewsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentModelViewsLibrary : URowLibrary {

	struct FTalentModelViewsRowHandle StructToRowHandle(struct FTalentModelViewsEnum EnumValue); // Function Icarus.TalentModelViewsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864cc0
	struct UE4::FName StructToName(struct FTalentModelViewsEnum EnumValue); // Function Icarus.TalentModelViewsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864ae0
	int32_t StructToInt(struct FTalentModelViewsEnum EnumValue); // Function Icarus.TalentModelViewsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864900
	struct FTalentModelViewsEnum RowHandleToStruct(struct FTalentModelViewsRowHandle RowHandle); // Function Icarus.TalentModelViewsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18646c0
	void RemoveRowFromTalentModelViewsTable(struct UE4::FName Name); // Function Icarus.TalentModelViewsLibrary.RemoveRowFromTalentModelViewsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1864540
	void RefreshConstants(); // Function Icarus.TalentModelViewsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18644e0
	int32_t NumRows(); // Function Icarus.TalentModelViewsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864450
	bool NotEqual_EnumName(struct FTalentModelViewsEnum A, struct UE4::FName B); // Function Icarus.TalentModelViewsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864180
	bool NotEqual_EnumEnum(struct FTalentModelViewsEnum A, struct FTalentModelViewsEnum B); // Function Icarus.TalentModelViewsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863eb0
	struct FTalentModelViewsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentModelViewsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863d00
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentModelViewsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1863b50
	struct FTalentModelViewsRowHandle MakeTalentModelViewsFromIndex(int32_t Index); // Function Icarus.TalentModelViewsLibrary.MakeTalentModelViewsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863670
	struct FTalentModelViewsEnum MakeTalentModelViewsEnum(struct FTalentModelViewsEnum Enum); // Function Icarus.TalentModelViewsLibrary.MakeTalentModelViewsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18635f0
	struct FTalentModelViewsRowHandle MakeTalentModelViews(struct UE4::FName RowName); // Function Icarus.TalentModelViewsLibrary.MakeTalentModelViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863550
	struct FTalentModelViewsRowHandle MakeLiteralTalentModelViews(struct FTalentModelViewsRowHandle RowHandle); // Function Icarus.TalentModelViewsLibrary.MakeLiteralTalentModelViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18632e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentModelViewsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1863130
	struct FTalentModelViewsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentModelViewsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1862f80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentModelViewsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1862dd0
	void GetTalentModelViewsStruct(struct FTalentModelViewsRowHandle RowHandle, struct FTalentModelView& TalentModelViews, enum class EValid& Paths); // Function Icarus.TalentModelViewsLibrary.GetTalentModelViewsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1862670
	bool EqualEqual_FTalentModelViewsRowHandleFTalentModelViewsRowHandle(struct FTalentModelViewsRowHandle RowHandleA, struct FTalentModelViewsRowHandle RowHandleB); // Function Icarus.TalentModelViewsLibrary.EqualEqual_FTalentModelViewsRowHandleFTalentModelViewsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18621e0
	bool EqualEqual_EnumEnum(struct FTalentModelViewsEnum A, struct FTalentModelViewsEnum B); // Function Icarus.TalentModelViewsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1861f10
	struct FTalentModelViewsRowHandle CastToTalentModelViewsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentModelViewsLibrary.CastToTalentModelViewsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1861bb0
	void BreakTalentModelViewsEnum(struct FTalentModelViewsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentModelViewsLibrary.BreakTalentModelViewsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1861790
	void AddRowToTalentModelViewsTable(struct UE4::FName Name, struct FTalentModelView Data, struct FTalentModelViewsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentModelViewsLibrary.AddRowToTalentModelViewsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18610a0
};

// Class Icarus.TalentModelViewsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentModelViewsTable : UIcarusDataTable {
};

// Class Icarus.TalentRanksFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentRanksFunctionLibrary : UBlueprintFunctionLibrary {

	struct FTalentRank GetTalentRank(struct FTalentRanksRowHandle Reference, int32_t Investment, enum class EValid& Paths); // Function Icarus.TalentRanksFunctionLibrary.GetTalentRank // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1862820
	struct FTalentRanksRowHandle FindRequiredTalentRank(struct FTalentsRowHandle Talent); // Function Icarus.TalentRanksFunctionLibrary.FindRequiredTalentRank // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18625a0
};

// Class Icarus.TalentRanksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentRanksLibrary : URowLibrary {

	struct FTalentRanksRowHandle StructToRowHandle(struct FTalentRanksEnum EnumValue); // Function Icarus.TalentRanksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864d70
	struct UE4::FName StructToName(struct FTalentRanksEnum EnumValue); // Function Icarus.TalentRanksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864b80
	int32_t StructToInt(struct FTalentRanksEnum EnumValue); // Function Icarus.TalentRanksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18649a0
	struct FTalentRanksEnum RowHandleToStruct(struct FTalentRanksRowHandle RowHandle); // Function Icarus.TalentRanksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864780
	void RemoveRowFromTalentRanksTable(struct UE4::FName Name); // Function Icarus.TalentRanksLibrary.RemoveRowFromTalentRanksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18645c0
	void RefreshConstants(); // Function Icarus.TalentRanksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1864500
	int32_t NumRows(); // Function Icarus.TalentRanksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864480
	bool NotEqual_EnumName(struct FTalentRanksEnum A, struct UE4::FName B); // Function Icarus.TalentRanksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864270
	bool NotEqual_EnumEnum(struct FTalentRanksEnum A, struct FTalentRanksEnum B); // Function Icarus.TalentRanksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863fa0
	struct FTalentRanksEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentRanksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863d90
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentRanksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1863be0
	struct FTalentRanksRowHandle MakeTalentRanksFromIndex(int32_t Index); // Function Icarus.TalentRanksLibrary.MakeTalentRanksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863820
	struct FTalentRanksEnum MakeTalentRanksEnum(struct FTalentRanksEnum Enum); // Function Icarus.TalentRanksLibrary.MakeTalentRanksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18637a0
	struct FTalentRanksRowHandle MakeTalentRanks(struct UE4::FName RowName); // Function Icarus.TalentRanksLibrary.MakeTalentRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863700
	struct FTalentRanksRowHandle MakeLiteralTalentRanks(struct FTalentRanksRowHandle RowHandle); // Function Icarus.TalentRanksLibrary.MakeLiteralTalentRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18633b0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentRanksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18631c0
	struct FTalentRanksEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentRanksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863010
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentRanksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1862e60
	void GetTalentRanksStruct(struct FTalentRanksRowHandle RowHandle, struct FTalentRank& TalentRanks, enum class EValid& Paths); // Function Icarus.TalentRanksLibrary.GetTalentRanksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1862a80
	bool EqualEqual_FTalentRanksRowHandleFTalentRanksRowHandle(struct FTalentRanksRowHandle RowHandleA, struct FTalentRanksRowHandle RowHandleB); // Function Icarus.TalentRanksLibrary.EqualEqual_FTalentRanksRowHandleFTalentRanksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1862320
	bool EqualEqual_EnumEnum(struct FTalentRanksEnum A, struct FTalentRanksEnum B); // Function Icarus.TalentRanksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1862000
	struct FTalentRanksRowHandle CastToTalentRanksRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentRanksLibrary.CastToTalentRanksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1861cd0
	void BreakTalentRanksEnum(struct FTalentRanksEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentRanksLibrary.BreakTalentRanksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18618f0
	void AddRowToTalentRanksTable(struct UE4::FName Name, struct FTalentRank Data, struct FTalentRanksRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentRanksLibrary.AddRowToTalentRanksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1861310
};

// Class Icarus.TalentRanksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentRanksTable : UIcarusDataTable {
};

// Class Icarus.TalentsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentsLibrary : URowLibrary {

	struct FTalentsRowHandle StructToRowHandle(struct FTalentsEnum EnumValue); // Function Icarus.TalentsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864e20
	struct UE4::FName StructToName(struct FTalentsEnum EnumValue); // Function Icarus.TalentsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864c20
	int32_t StructToInt(struct FTalentsEnum EnumValue); // Function Icarus.TalentsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864a40
	struct FTalentsEnum RowHandleToStruct(struct FTalentsRowHandle RowHandle); // Function Icarus.TalentsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864840
	void RemoveRowFromTalentsTable(struct UE4::FName Name); // Function Icarus.TalentsLibrary.RemoveRowFromTalentsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1864640
	void RefreshConstants(); // Function Icarus.TalentsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1864520
	int32_t NumRows(); // Function Icarus.TalentsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18644b0
	bool NotEqual_EnumName(struct FTalentsEnum A, struct UE4::FName B); // Function Icarus.TalentsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864360
	bool NotEqual_EnumEnum(struct FTalentsEnum A, struct FTalentsEnum B); // Function Icarus.TalentsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1864090
	struct FTalentsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863e20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1863c70
	struct TArray<struct FTalentsRowHandle> MakeTalentsRowFromTalentTree(struct FTalentTreesRowHandle& InTalentTree); // Function Icarus.TalentsLibrary.MakeTalentsRowFromTalentTree // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1863a60
	struct FTalentsRowHandle MakeTalentsFromIndex(int32_t Index); // Function Icarus.TalentsLibrary.MakeTalentsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18639d0
	struct FTalentsEnum MakeTalentsEnum(struct FTalentsEnum Enum); // Function Icarus.TalentsLibrary.MakeTalentsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863950
	struct FTalentsRowHandle MakeTalents(struct UE4::FName RowName); // Function Icarus.TalentsLibrary.MakeTalents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18638b0
	struct FTalentsRowHandle MakeLiteralTalents(struct FTalentsRowHandle RowHandle); // Function Icarus.TalentsLibrary.MakeLiteralTalents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1863480
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1863250
	struct FTalentsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18630a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1862ef0
	void GetTalentsStruct(struct FTalentsRowHandle RowHandle, struct FTalent& Talents, enum class EValid& Paths); // Function Icarus.TalentsLibrary.GetTalentsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1862c50
	bool EqualEqual_FTalentsRowHandleFTalentsRowHandle(struct FTalentsRowHandle RowHandleA, struct FTalentsRowHandle RowHandleB); // Function Icarus.TalentsLibrary.EqualEqual_FTalentsRowHandleFTalentsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1862460
	bool EqualEqual_EnumEnum(struct FTalentsEnum A, struct FTalentsEnum B); // Function Icarus.TalentsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18620f0
	struct FTalentsRowHandle CastToTalentsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentsLibrary.CastToTalentsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1861df0
	void BreakTalentsEnum(struct FTalentsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentsLibrary.BreakTalentsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1861a50
	void AddRowToTalentsTable(struct UE4::FName Name, struct FTalent Data, struct FTalentsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentsLibrary.AddRowToTalentsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18615c0
};

// Class Icarus.TalentsSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UTalentsSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnBlueprintTalentsUpdatedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayerTalentsUpdatedNotify; // 0x40(0x10)

	void BroadcastPlayerTalentsUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.TalentsSubsystem.BroadcastPlayerTalentsUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x17e82f0
	void BroadcastBlueprintTalentsUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.TalentsSubsystem.BroadcastBlueprintTalentsUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1868780
};

// Class Icarus.TalentsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentsTable : UIcarusDataTable {
};

// Class Icarus.TalentSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UTalentSubsystem : UGameInstanceSubsystem {
};

// Class Icarus.TalentTooltipWidget
// Size: 0x280 (Inherited: 0x260)
struct UTalentTooltipWidget : UUserWidget {
	struct UTalentModelInterface_Const* Model; // 0x260(0x08)
	struct FTalentsRowHandle Talent; // 0x268(0x18)

	void SetTalent(struct UTalentModelInterface_Const* InModel, struct FTalentsRowHandle InTalent); // Function Icarus.TalentTooltipWidget.SetTalent // (Final|Native|Public|BlueprintCallable) // @ game+0x186a780
	void OnTalentSet(); // Function Icarus.TalentTooltipWidget.OnTalentSet // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.TalentTreeCanvas
// Size: 0x2b0 (Inherited: 0x260)
struct UTalentTreeCanvas : UUserWidget {
	char pad_260[0x50]; // 0x260(0x50)

	void Reset(struct UTalentModelInterface_Const* Model); // Function Icarus.TalentTreeCanvas.Reset // (Final|Native|Public) // @ game+0x186a4d0
	void Refresh(struct UTalentModelInterface_Const* Model); // Function Icarus.TalentTreeCanvas.Refresh // (Final|Native|Public) // @ game+0x186a300
};

// Class Icarus.TalentTreesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentTreesLibrary : URowLibrary {

	struct FTalentTreesRowHandle StructToRowHandle(struct FTalentTreesEnum EnumValue); // Function Icarus.TalentTreesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186abf0
	struct UE4::FName StructToName(struct FTalentTreesEnum EnumValue); // Function Icarus.TalentTreesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186aab0
	int32_t StructToInt(struct FTalentTreesEnum EnumValue); // Function Icarus.TalentTreesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a970
	struct FTalentTreesEnum RowHandleToStruct(struct FTalentTreesRowHandle RowHandle); // Function Icarus.TalentTreesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a560
	void RemoveRowFromTalentTreesTable(struct UE4::FName Name); // Function Icarus.TalentTreesLibrary.RemoveRowFromTalentTreesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x186a3d0
	void RefreshConstants(); // Function Icarus.TalentTreesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x186a390
	int32_t NumRows(); // Function Icarus.TalentTreesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a210
	bool NotEqual_EnumName(struct FTalentTreesEnum A, struct UE4::FName B); // Function Icarus.TalentTreesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a030
	bool NotEqual_EnumEnum(struct FTalentTreesEnum A, struct FTalentTreesEnum B); // Function Icarus.TalentTreesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869e50
	struct FTalentTreesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentTreesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869d30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentTreesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1869c10
	struct TArray<struct FTalentTreesRowHandle> MakeTalentTreesRowFromArchetype(struct FTalentArchetypesRowHandle& InArchetype); // Function Icarus.TalentTreesLibrary.MakeTalentTreesRowFromArchetype // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1869970
	struct FTalentTreesRowHandle MakeTalentTreesFromIndex(int32_t Index); // Function Icarus.TalentTreesLibrary.MakeTalentTreesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18698e0
	struct FTalentTreesEnum MakeTalentTreesEnum(struct FTalentTreesEnum Enum); // Function Icarus.TalentTreesLibrary.MakeTalentTreesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869860
	struct FTalentTreesRowHandle MakeTalentTrees(struct UE4::FName RowName); // Function Icarus.TalentTreesLibrary.MakeTalentTrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18697c0
	struct FTalentTreesRowHandle MakeLiteralTalentTrees(struct FTalentTreesRowHandle RowHandle); // Function Icarus.TalentTreesLibrary.MakeLiteralTalentTrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869620
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentTreesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1869500
	struct FTalentTreesEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentTreesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18693e0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentTreesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18692c0
	void GetTalentTreesStruct(struct FTalentTreesRowHandle RowHandle, struct FTalentTree& TalentTrees, enum class EValid& Paths); // Function Icarus.TalentTreesLibrary.GetTalentTreesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1868f20
	bool EqualEqual_FTalentTreesRowHandleFTalentTreesRowHandle(struct FTalentTreesRowHandle RowHandleA, struct FTalentTreesRowHandle RowHandleB); // Function Icarus.TalentTreesLibrary.EqualEqual_FTalentTreesRowHandleFTalentTreesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1868c30
	bool EqualEqual_EnumEnum(struct FTalentTreesEnum A, struct FTalentTreesEnum B); // Function Icarus.TalentTreesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1868a50
	struct FTalentTreesRowHandle CastToTalentTreesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentTreesLibrary.CastToTalentTreesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1868810
	void BreakTalentTreesEnum(struct FTalentTreesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentTreesLibrary.BreakTalentTreesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18684c0
	void AddRowToTalentTreesTable(struct UE4::FName Name, struct FTalentTree Data, struct FTalentTreesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentTreesLibrary.AddRowToTalentTreesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1867fe0
};

// Class Icarus.TalentTreesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentTreesTable : UIcarusDataTable {
};

// Class Icarus.TalentTreeWidget
// Size: 0x2e0 (Inherited: 0x260)
struct UTalentTreeWidget : UUserWidget {
	struct UTalentViewInterface* TalentView; // 0x260(0x08)
	struct UTalentTreeCanvas* TalentTreeCanvas; // 0x268(0x08)
	struct FTalentTreesRowHandle TalentTree; // 0x270(0x18)
	struct TSet<struct FTalentsRowHandle> Talents; // 0x288(0x50)
	char pad_2D8[0x8]; // 0x2d8(0x08)

	void SetZoomLevel(int32_t Level, float Scale); // Function Icarus.TalentTreeWidget.SetZoomLevel // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	void SetTalentTree(struct UTalentViewInterface* View, struct FTalentTreesRowHandle& NewTalentTree); // Function Icarus.TalentTreeWidget.SetTalentTree // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x186a880
	void SetEditorCanvas(struct UUserWidget* EditorCanvas); // Function Icarus.TalentTreeWidget.SetEditorCanvas // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnTalentTreeCreated(); // Function Icarus.TalentTreeWidget.OnTalentTreeCreated // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void OnTalentRemoved(struct FTalentsRowHandle& Talent); // Function Icarus.TalentTreeWidget.OnTalentRemoved // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void OnTalentChanged(struct FTalentsRowHandle& Talent); // Function Icarus.TalentTreeWidget.OnTalentChanged // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void OnTalentAdded(struct FTalentsRowHandle& Talent); // Function Icarus.TalentTreeWidget.OnTalentAdded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void OnModelStateChanged(struct UTalentModelInterface_Const* Model); // Function Icarus.TalentTreeWidget.OnModelStateChanged // (Final|Native|Protected) // @ game+0x186a270
	struct FVector2D GetCanvasSize(); // Function Icarus.TalentTreeWidget.GetCanvasSize // (Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x1be0000
	struct FVector2D GetCanvasOffset(bool bAbsolute); // Function Icarus.TalentTreeWidget.GetCanvasOffset // (Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x1be0000
	void ClearTalentTree(); // Function Icarus.TalentTreeWidget.ClearTalentTree // (Event|Public|BlueprintEvent|Const) // @ game+0x1be0000
};

// Class Icarus.TalentViewInterface
// Size: 0x270 (Inherited: 0x260)
struct UTalentViewInterface : UUserWidget {
	char pad_260[0x10]; // 0x260(0x10)

	void SetController(struct TScriptInterface<ITalentControllerInterface>& InController); // Function Icarus.TalentViewInterface.SetController // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x186a6e0
	void OnModelViewChanged(struct UTalentModelInterface* InModel, struct UTalentViewInterface* InView); // Function Icarus.TalentViewInterface.OnModelViewChanged // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	struct FTalentViewsRowHandle GetViewData(); // Function Icarus.TalentViewInterface.GetViewData // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1869280
	struct TArray<struct UTalentTreeWidget*> GetTalentTreeWidgets(); // Function Icarus.TalentViewInterface.GetTalentTreeWidgets // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	struct UTalentModelInterface_Const* GetModel(); // Function Icarus.TalentViewInterface.GetModel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1868ef0
	struct UTalentGraphWidget* GetGraphWidget(); // Function Icarus.TalentViewInterface.GetGraphWidget // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1be0000
	struct TScriptInterface<ITalentControllerInterface> GetController(); // Function Icarus.TalentViewInterface.GetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1868eb0
};

// Class Icarus.TalentViewsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentViewsLibrary : URowLibrary {

	struct FTalentViewsRowHandle StructToRowHandle(struct FTalentViewsEnum EnumValue); // Function Icarus.TalentViewsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186aca0
	struct UE4::FName StructToName(struct FTalentViewsEnum EnumValue); // Function Icarus.TalentViewsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186ab50
	int32_t StructToInt(struct FTalentViewsEnum EnumValue); // Function Icarus.TalentViewsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186aa10
	struct FTalentViewsEnum RowHandleToStruct(struct FTalentViewsRowHandle RowHandle); // Function Icarus.TalentViewsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a620
	void RemoveRowFromTalentViewsTable(struct UE4::FName Name); // Function Icarus.TalentViewsLibrary.RemoveRowFromTalentViewsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x186a450
	void RefreshConstants(); // Function Icarus.TalentViewsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x186a3b0
	int32_t NumRows(); // Function Icarus.TalentViewsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a240
	bool NotEqual_EnumName(struct FTalentViewsEnum A, struct UE4::FName B); // Function Icarus.TalentViewsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186a120
	bool NotEqual_EnumEnum(struct FTalentViewsEnum A, struct FTalentViewsEnum B); // Function Icarus.TalentViewsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869f40
	struct FTalentViewsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TalentViewsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869dc0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TalentViewsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1869ca0
	struct FTalentViewsRowHandle MakeTalentViewsFromIndex(int32_t Index); // Function Icarus.TalentViewsLibrary.MakeTalentViewsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869b80
	struct FTalentViewsEnum MakeTalentViewsEnum(struct FTalentViewsEnum Enum); // Function Icarus.TalentViewsLibrary.MakeTalentViewsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869b00
	struct FTalentViewsRowHandle MakeTalentViews(struct UE4::FName RowName); // Function Icarus.TalentViewsLibrary.MakeTalentViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869a60
	struct FTalentViewsRowHandle MakeLiteralTalentViews(struct FTalentViewsRowHandle RowHandle); // Function Icarus.TalentViewsLibrary.MakeLiteralTalentViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18696f0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TalentViewsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1869590
	struct FTalentViewsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentViewsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1869470
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TalentViewsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1869350
	void GetTalentViewsStruct(struct FTalentViewsRowHandle RowHandle, struct FTalentView& TalentViews, enum class EValid& Paths); // Function Icarus.TalentViewsLibrary.GetTalentViewsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1869100
	bool EqualEqual_FTalentViewsRowHandleFTalentViewsRowHandle(struct FTalentViewsRowHandle RowHandleA, struct FTalentViewsRowHandle RowHandleB); // Function Icarus.TalentViewsLibrary.EqualEqual_FTalentViewsRowHandleFTalentViewsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1868d70
	bool EqualEqual_EnumEnum(struct FTalentViewsEnum A, struct FTalentViewsEnum B); // Function Icarus.TalentViewsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1868b40
	struct FTalentViewsRowHandle CastToTalentViewsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TalentViewsLibrary.CastToTalentViewsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1868930
	void BreakTalentViewsEnum(struct FTalentViewsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TalentViewsLibrary.BreakTalentViewsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1868620
	void AddRowToTalentViewsTable(struct UE4::FName Name, struct FTalentView Data, struct FTalentViewsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TalentViewsLibrary.AddRowToTalentViewsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18682d0
};

// Class Icarus.TalentViewsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentViewsTable : UIcarusDataTable {
};

// Class Icarus.TalentWidget
// Size: 0x278 (Inherited: 0x260)
struct UTalentWidget : UUserWidget {
	struct FTalentsRowHandle Talent; // 0x260(0x18)

	void SetTalent(struct FTalentsRowHandle InTalent); // Function Icarus.TalentWidget.SetTalent // (Final|Native|Public|BlueprintCallable) // @ game+0x186fe90
	void OnTalentSet(); // Function Icarus.TalentWidget.OnTalentSet // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.TemperatureSingleton
// Size: 0x38 (Inherited: 0x28)
struct UTemperatureSingleton : UObject {
	struct UCurveFloat* DefaultTempIncCurve; // 0x28(0x08)
	struct UCurveFloat* DefaultTempDecCurve; // 0x30(0x08)
};

// Class Icarus.TerrainAnchorComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTerrainAnchorComponent : UActorComponent {
	struct FMulticastSparseDelegate OnTerrainAchorStateChanged; // 0xb0(0x01)
	bool bAutoRegisterSubject; // 0xb1(0x01)
	bool bRegisterIfLoaded; // 0xb2(0x01)
	bool bIsRegisteredSubject; // 0xb3(0x01)
	enum class ETerrainAnchorState AnchorState; // 0xb4(0x01)
	bool bInitialised; // 0xb5(0x01)
	char pad_B6[0x2]; // 0xb6(0x02)

	void ReevaluateAnchorState(); // Function Icarus.TerrainAnchorComponent.ReevaluateAnchorState // (Final|Native|Public|BlueprintCallable) // @ game+0x186fbb0
	bool IsTerrainAnchorValid(); // Function Icarus.TerrainAnchorComponent.IsTerrainAnchorValid // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x186eea0
	struct FBox2D GetAnchorBounds(); // Function Icarus.TerrainAnchorComponent.GetAnchorBounds // (Native|Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x186e430
};

// Class Icarus.PlayerTerrainAnchorComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerTerrainAnchorComponent : UTerrainAnchorComponent {
};

// Class Icarus.TerrainAnchorSubsystem
// Size: 0xf8 (Inherited: 0x30)
struct UTerrainAnchorSubsystem : UWorldSubsystem {
	bool bDisabled; // 0x30(0x01)
	bool bDisableWithoutWorldData; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct TMap<struct ULevelStreamingBinding*, struct ULevelStreamingBinding*> HeightmapGeneratedMap; // 0x38(0x50)
	bool bInitialized; // 0x88(0x01)
	bool bAsyncRevaluateAnchorsRunning; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
	struct TMap<struct AActor*, struct UTerrainAnchorComponent*> RegisteredSubjects; // 0x90(0x50)
	struct TArray<struct ULevelStreamingBinding*> StreamingLevelBindings; // 0xe0(0x10)
	struct FTimerHandle TerrainAnchorsDirtyTimerHandle; // 0xf0(0x08)
};

// Class Icarus.LevelStreamingBinding
// Size: 0x50 (Inherited: 0x28)
struct ULevelStreamingBinding : UObject {
	struct ULevelStreaming* StreamingLevel; // 0x28(0x08)
	struct ALandscapeProxy* LevelLandscapeProxy; // 0x30(0x08)
	struct FBox2D LevelBounds; // 0x38(0x14)
	bool bLevelAnchorValid; // 0x4c(0x01)
	bool bIsGeneratedLevel; // 0x4d(0x01)
	char pad_4E[0x2]; // 0x4e(0x02)

	void OnStreamingLevelUnloaded(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelUnloaded // (Final|Native|Private) // @ game+0x186fb90
	void OnStreamingLevelShown(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelShown // (Final|Native|Private) // @ game+0x186fb70
	void OnStreamingLevelLoaded(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelLoaded // (Final|Native|Private) // @ game+0x186fb70
	void OnStreamingLevelHidden(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelHidden // (Final|Native|Private) // @ game+0x186fb50
};

// Class Icarus.TerrainsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTerrainsLibrary : URowLibrary {

	struct FTerrainsRowHandle StructToRowHandle(struct FTerrainsEnum EnumValue); // Function Icarus.TerrainsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18701c0
	struct UE4::FName StructToName(struct FTerrainsEnum EnumValue); // Function Icarus.TerrainsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1870080
	int32_t StructToInt(struct FTerrainsEnum EnumValue); // Function Icarus.TerrainsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186ff40
	struct FTerrainsEnum RowHandleToStruct(struct FTerrainsRowHandle RowHandle); // Function Icarus.TerrainsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186fd10
	void RemoveRowFromTerrainsTable(struct UE4::FName Name); // Function Icarus.TerrainsLibrary.RemoveRowFromTerrainsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x186fc10
	void RefreshConstants(); // Function Icarus.TerrainsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x186fbd0
	int32_t NumRows(); // Function Icarus.TerrainsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186faf0
	bool NotEqual_EnumName(struct FTerrainsEnum A, struct UE4::FName B); // Function Icarus.TerrainsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f910
	bool NotEqual_EnumEnum(struct FTerrainsEnum A, struct FTerrainsEnum B); // Function Icarus.TerrainsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f730
	struct FTerrainsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TerrainsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f610
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TerrainsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x186f4f0
	struct FTerrainsRowHandle MakeTerrainsFromIndex(int32_t Index); // Function Icarus.TerrainsLibrary.MakeTerrainsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f2b0
	struct FTerrainsEnum MakeTerrainsEnum(struct FTerrainsEnum Enum); // Function Icarus.TerrainsLibrary.MakeTerrainsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f230
	struct FTerrainsRowHandle MakeTerrains(struct UE4::FName RowName); // Function Icarus.TerrainsLibrary.MakeTerrains // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f190
	struct FTerrainsRowHandle MakeLiteralTerrains(struct FTerrainsRowHandle RowHandle); // Function Icarus.TerrainsLibrary.MakeLiteralTerrains // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186eff0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TerrainsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x186eed0
	struct FTerrainsEnum IntToStruct(int32_t IntValue); // Function Icarus.TerrainsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186ed80
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TerrainsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x186ec60
	void GetTerrainsStruct(struct FTerrainsRowHandle RowHandle, struct FIcarusTerrain& Terrains, enum class EValid& Paths); // Function Icarus.TerrainsLibrary.GetTerrainsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x186e750
	bool EqualEqual_FTerrainsRowHandleFTerrainsRowHandle(struct FTerrainsRowHandle RowHandleA, struct FTerrainsRowHandle RowHandleB); // Function Icarus.TerrainsLibrary.EqualEqual_FTerrainsRowHandleFTerrainsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186e1b0
	bool EqualEqual_EnumEnum(struct FTerrainsEnum A, struct FTerrainsEnum B); // Function Icarus.TerrainsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186dfd0
	struct FTerrainsRowHandle CastToTerrainsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TerrainsLibrary.CastToTerrainsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x186dd70
	void BreakTerrainsEnum(struct FTerrainsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TerrainsLibrary.BreakTerrainsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x186dab0
	void AddRowToTerrainsTable(struct UE4::FName Name, struct FIcarusTerrain Data, struct FTerrainsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TerrainsLibrary.AddRowToTerrainsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x186d670
};

// Class Icarus.TerrainsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTerrainsTable : UIcarusDataTable {
};

// Class Icarus.ThermalComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UThermalComponent : UTraitComponent {
	struct AIcarusGameStateSurvival* GameState; // 0xd0(0x08)
	struct USphereComponent* NavigationModifier; // 0xd8(0x08)

	bool GetThermalData(struct FThermalData& OutData); // Function Icarus.ThermalComponent.GetThermalData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x186e8d0
	int32_t GetTemperatureEffectAtLocation(struct FVector InLocation, bool& bIsAffecting, struct AActor* QueryActor, bool bDrawDebug, float DebugDrawDuration, int32_t DebugDrawTextOffset); // Function Icarus.ThermalComponent.GetTemperatureEffectAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x186e550
	void DestroyThermalComponent(); // Function Icarus.ThermalComponent.DestroyThermalComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x186dfb0
};

// Class Icarus.ThermalLibrary
// Size: 0x28 (Inherited: 0x28)
struct UThermalLibrary : URowLibrary {

	struct FThermalRowHandle StructToRowHandle(struct FThermalEnum EnumValue); // Function Icarus.ThermalLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1870270
	struct UE4::FName StructToName(struct FThermalEnum EnumValue); // Function Icarus.ThermalLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1870120
	int32_t StructToInt(struct FThermalEnum EnumValue); // Function Icarus.ThermalLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186ffe0
	struct FThermalEnum RowHandleToStruct(struct FThermalRowHandle RowHandle); // Function Icarus.ThermalLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186fdd0
	void RemoveRowFromThermalTable(struct UE4::FName Name); // Function Icarus.ThermalLibrary.RemoveRowFromThermalTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x186fc90
	void RefreshConstants(); // Function Icarus.ThermalLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x186fbf0
	int32_t NumRows(); // Function Icarus.ThermalLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186fb20
	bool NotEqual_EnumName(struct FThermalEnum A, struct UE4::FName B); // Function Icarus.ThermalLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186fa00
	bool NotEqual_EnumEnum(struct FThermalEnum A, struct FThermalEnum B); // Function Icarus.ThermalLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f820
	struct FThermalEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ThermalLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f6a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ThermalLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x186f580
	struct FThermalRowHandle MakeThermalFromIndex(int32_t Index); // Function Icarus.ThermalLibrary.MakeThermalFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f460
	struct FThermalEnum MakeThermalEnum(struct FThermalEnum Enum); // Function Icarus.ThermalLibrary.MakeThermalEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f3e0
	struct FThermalRowHandle MakeThermal(struct UE4::FName RowName); // Function Icarus.ThermalLibrary.MakeThermal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f340
	struct FThermalRowHandle MakeLiteralThermal(struct FThermalRowHandle RowHandle); // Function Icarus.ThermalLibrary.MakeLiteralThermal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186f0c0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ThermalLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x186ef60
	struct FThermalEnum IntToStruct(int32_t IntValue); // Function Icarus.ThermalLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186ee10
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ThermalLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x186ecf0
	void GetThermalStruct(struct FThermalRowHandle RowHandle, struct FThermalData& Thermal, enum class EValid& Paths); // Function Icarus.ThermalLibrary.GetThermalStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x186ea40
	bool EqualEqual_FThermalRowHandleFThermalRowHandle(struct FThermalRowHandle RowHandleA, struct FThermalRowHandle RowHandleB); // Function Icarus.ThermalLibrary.EqualEqual_FThermalRowHandleFThermalRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186e2f0
	bool EqualEqual_EnumEnum(struct FThermalEnum A, struct FThermalEnum B); // Function Icarus.ThermalLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x186e0c0
	struct FThermalRowHandle CastToThermalRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ThermalLibrary.CastToThermalRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x186de90
	void BreakThermalEnum(struct FThermalEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ThermalLibrary.BreakThermalEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x186dc10
	void AddRowToThermalTable(struct UE4::FName Name, struct FThermalData Data, struct FThermalRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ThermalLibrary.AddRowToThermalTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x186d830
};

// Class Icarus.ThermalTable
// Size: 0xb8 (Inherited: 0xb8)
struct UThermalTable : UIcarusDataTable {
};

// Class Icarus.ThreatAudioInterface
// Size: 0x28 (Inherited: 0x28)
struct UThreatAudioInterface : UInterface {

	float GetThreatToPlayer(struct AIcarusPlayerCharacter* TargetPlayer); // Function Icarus.ThreatAudioInterface.GetThreatToPlayer // (Native|Event|Public|BlueprintEvent) // @ game+0x186ebc0
	enum class EMusicConditionCombatState GetCombatMusicConditionOverride(struct AIcarusPlayerCharacter* TargetPlayer, float Threat); // Function Icarus.ThreatAudioInterface.GetCombatMusicConditionOverride // (Native|Event|Public|BlueprintEvent) // @ game+0x186e470
};

// Class Icarus.ThreatAudioSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UThreatAudioSubsystem : UWorldSubsystem {
	struct TArray<struct UObject*> TrackedObjects; // 0x30(0x10)

	void Remove(struct UObject* Target); // Function Icarus.ThreatAudioSubsystem.Remove // (Final|Native|Public|BlueprintCallable) // @ game+0x1876000
	struct FThreatAudioResult GetThreatLevel(struct AIcarusPlayerCharacter* Player); // Function Icarus.ThreatAudioSubsystem.GetThreatLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x18740d0
	void Add(struct UObject* Target); // Function Icarus.ThreatAudioSubsystem.Add // (Final|Native|Public|BlueprintCallable) // @ game+0x18728e0
};

// Class Icarus.TimelineRanksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTimelineRanksLibrary : URowLibrary {

	struct FTimelineRanksRowHandle StructToRowHandle(struct FTimelineRanksEnum EnumValue); // Function Icarus.TimelineRanksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876a50
	struct UE4::FName StructToName(struct FTimelineRanksEnum EnumValue); // Function Icarus.TimelineRanksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876860
	int32_t StructToInt(struct FTimelineRanksEnum EnumValue); // Function Icarus.TimelineRanksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876680
	struct FTimelineRanksEnum RowHandleToStruct(struct FTimelineRanksRowHandle RowHandle); // Function Icarus.TimelineRanksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18762d0
	void RemoveRowFromTimelineRanksTable(struct UE4::FName Name); // Function Icarus.TimelineRanksLibrary.RemoveRowFromTimelineRanksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1876110
	void RefreshConstants(); // Function Icarus.TimelineRanksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1875fc0
	int32_t NumRows(); // Function Icarus.TimelineRanksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875f20
	bool NotEqual_EnumName(struct FTimelineRanksEnum A, struct UE4::FName B); // Function Icarus.TimelineRanksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875d10
	bool NotEqual_EnumEnum(struct FTimelineRanksEnum A, struct FTimelineRanksEnum B); // Function Icarus.TimelineRanksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875a40
	struct FTimelineRanksEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TimelineRanksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875830
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TimelineRanksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1875680
	struct FTimelineRanksRowHandle MakeTimelineRanksFromIndex(int32_t Index); // Function Icarus.TimelineRanksLibrary.MakeTimelineRanksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18753b0
	struct FTimelineRanksEnum MakeTimelineRanksEnum(struct FTimelineRanksEnum Enum); // Function Icarus.TimelineRanksLibrary.MakeTimelineRanksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875330
	struct FTimelineRanksRowHandle MakeTimelineRanks(struct UE4::FName RowName); // Function Icarus.TimelineRanksLibrary.MakeTimelineRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875290
	struct FTimelineRanksRowHandle MakeLiteralTimelineRanks(struct FTimelineRanksRowHandle RowHandle); // Function Icarus.TimelineRanksLibrary.MakeLiteralTimelineRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1874f40
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TimelineRanksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1874d50
	struct FTimelineRanksEnum IntToStruct(int32_t IntValue); // Function Icarus.TimelineRanksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1874b00
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TimelineRanksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1874950
	void GetTimelineRanksStruct(struct FTimelineRanksRowHandle RowHandle, struct FTimelineRanks& TimelineRanks, enum class EValid& Paths); // Function Icarus.TimelineRanksLibrary.GetTimelineRanksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1874520
	bool EqualEqual_FTimelineRanksRowHandleFTimelineRanksRowHandle(struct FTimelineRanksRowHandle RowHandleA, struct FTimelineRanksRowHandle RowHandleB); // Function Icarus.TimelineRanksLibrary.EqualEqual_FTimelineRanksRowHandleFTimelineRanksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1873c60
	bool EqualEqual_EnumEnum(struct FTimelineRanksEnum A, struct FTimelineRanksEnum B); // Function Icarus.TimelineRanksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1873940
	struct FTimelineRanksRowHandle CastToTimelineRanksRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TimelineRanksLibrary.CastToTimelineRanksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1873610
	void BreakTimelineRanksEnum(struct FTimelineRanksEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TimelineRanksLibrary.BreakTimelineRanksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1873200
	void AddRowToTimelineRanksTable(struct UE4::FName Name, struct FTimelineRanks Data, struct FTimelineRanksRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TimelineRanksLibrary.AddRowToTimelineRanksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1872b90
};

// Class Icarus.TimelineRanksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTimelineRanksTable : UIcarusDataTable {
};

// Class Icarus.TimeOfDayLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTimeOfDayLibrary : URowLibrary {

	struct FTimeOfDayRowHandle StructToRowHandle(struct FTimeOfDayEnum EnumValue); // Function Icarus.TimeOfDayLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18769a0
	struct UE4::FName StructToName(struct FTimeOfDayEnum EnumValue); // Function Icarus.TimeOfDayLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18767c0
	int32_t StructToInt(struct FTimeOfDayEnum EnumValue); // Function Icarus.TimeOfDayLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18765e0
	struct FTimeOfDayEnum RowHandleToStruct(struct FTimeOfDayRowHandle RowHandle); // Function Icarus.TimeOfDayLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876210
	void RemoveRowFromTimeOfDayTable(struct UE4::FName Name); // Function Icarus.TimeOfDayLibrary.RemoveRowFromTimeOfDayTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1876090
	void RefreshConstants(); // Function Icarus.TimeOfDayLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1875fa0
	int32_t NumRows(); // Function Icarus.TimeOfDayLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875ef0
	bool NotEqual_EnumName(struct FTimeOfDayEnum A, struct UE4::FName B); // Function Icarus.TimeOfDayLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875c20
	bool NotEqual_EnumEnum(struct FTimeOfDayEnum A, struct FTimeOfDayEnum B); // Function Icarus.TimeOfDayLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875950
	struct FTimeOfDayEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TimeOfDayLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18757a0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TimeOfDayLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18755f0
	struct FTimeOfDayRowHandle MakeTimeOfDayFromIndex(int32_t Index); // Function Icarus.TimeOfDayLibrary.MakeTimeOfDayFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875200
	struct FTimeOfDayEnum MakeTimeOfDayEnum(struct FTimeOfDayEnum Enum); // Function Icarus.TimeOfDayLibrary.MakeTimeOfDayEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875180
	struct FTimeOfDayRowHandle MakeTimeOfDay(struct UE4::FName RowName); // Function Icarus.TimeOfDayLibrary.MakeTimeOfDay // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18750e0
	struct FTimeOfDayRowHandle MakeLiteralTimeOfDay(struct FTimeOfDayRowHandle RowHandle); // Function Icarus.TimeOfDayLibrary.MakeLiteralTimeOfDay // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1874e70
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TimeOfDayLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1874cc0
	struct FTimeOfDayEnum IntToStruct(int32_t IntValue); // Function Icarus.TimeOfDayLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1874a70
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TimeOfDayLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18748c0
	void GetTimeOfDayStruct(struct FTimeOfDayRowHandle RowHandle, struct FTimeOfDay& TimeOfDay, enum class EValid& Paths); // Function Icarus.TimeOfDayLibrary.GetTimeOfDayStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1874310
	bool EqualEqual_FTimeOfDayRowHandleFTimeOfDayRowHandle(struct FTimeOfDayRowHandle RowHandleA, struct FTimeOfDayRowHandle RowHandleB); // Function Icarus.TimeOfDayLibrary.EqualEqual_FTimeOfDayRowHandleFTimeOfDayRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1873b20
	bool EqualEqual_EnumEnum(struct FTimeOfDayEnum A, struct FTimeOfDayEnum B); // Function Icarus.TimeOfDayLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1873850
	struct FTimeOfDayRowHandle CastToTimeOfDayRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TimeOfDayLibrary.CastToTimeOfDayRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18734f0
	void BreakTimeOfDayEnum(struct FTimeOfDayEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TimeOfDayLibrary.BreakTimeOfDayEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18730a0
	void AddRowToTimeOfDayTable(struct UE4::FName Name, struct FTimeOfDay Data, struct FTimeOfDayRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TimeOfDayLibrary.AddRowToTimeOfDayTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1872970
};

// Class Icarus.TimeOfDaySubsystem
// Size: 0x78 (Inherited: 0x30)
struct UTimeOfDaySubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnPlayersSleptNotify; // 0x30(0x10)
	struct UCurveFloat* TimeScaleCurve; // 0x40(0x08)
	float TimeScale; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct AIcarusGameStateSurvival* CachedGameState; // 0x50(0x08)
	char pad_58[0x20]; // 0x58(0x20)

	bool TimeOfDayTick(float DeltaSeconds); // Function Icarus.TimeOfDaySubsystem.TimeOfDayTick // (Native|Protected) // @ game+0x1876bb0
	void SetTimeScale(float NewScale); // Function Icarus.TimeOfDaySubsystem.SetTimeScale // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1876560
	void SetTimeOfDayHour(int32_t Hour); // Function Icarus.TimeOfDaySubsystem.SetTimeOfDayHour // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x18764d0
	void SetTimeOfDay(float Total); // Function Icarus.TimeOfDaySubsystem.SetTimeOfDay // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1876450
	void ProspectInfoFetched(); // Function Icarus.TimeOfDaySubsystem.ProspectInfoFetched // (Final|Native|Protected) // @ game+0x1875f80
	bool IsSleeping(struct AIcarusPlayerCharacter* Player); // Function Icarus.TimeOfDaySubsystem.IsSleeping // (Final|Native|Public|BlueprintCallable) // @ game+0x1874c20
	bool HasRequiredSleepModifier(struct AIcarusPlayerCharacter* Player); // Function Icarus.TimeOfDaySubsystem.HasRequiredSleepModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x1874820
	float GetTimeTotal(); // Function Icarus.TimeOfDaySubsystem.GetTimeTotal // (Final|Native|Public|BlueprintCallable) // @ game+0x18744f0
	float GetTimeScale(); // Function Icarus.TimeOfDaySubsystem.GetTimeScale // (Final|Native|Public|BlueprintCallable) // @ game+0x18744c0
	float GetTimeRealtime(); // Function Icarus.TimeOfDaySubsystem.GetTimeRealtime // (Final|Native|Public|BlueprintCallable) // @ game+0x1874490
	struct FTimeOfDayEnum GetTimeOfDayEnum(); // Function Icarus.TimeOfDaySubsystem.GetTimeOfDayEnum // (Final|Native|Public|BlueprintCallable) // @ game+0x18742d0
	void GetTimeOfDay(float& Total, float& Normalized, float& Realtime); // Function Icarus.TimeOfDaySubsystem.GetTimeOfDay // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1874190
	float GetTimeNormalized(); // Function Icarus.TimeOfDaySubsystem.GetTimeNormalized // (Final|Native|Public|BlueprintCallable) // @ game+0x1874160
	struct TSet<struct FModifierStatesRowHandle> GetSleepAffectingModifiers(struct AIcarusPlayerCharacter* Player); // Function Icarus.TimeOfDaySubsystem.GetSleepAffectingModifiers // (Final|Native|Public|BlueprintCallable) // @ game+0x1873fb0
	struct TSet<struct FModifierStatesRowHandle> GetAllSleepAffectingModifiers(); // Function Icarus.TimeOfDaySubsystem.GetAllSleepAffectingModifiers // (Final|Native|Public|BlueprintCallable) // @ game+0x1873ee0
	enum class ESleepResult CanSleep(); // Function Icarus.TimeOfDaySubsystem.CanSleep // (Final|Native|Public|BlueprintCallable) // @ game+0x18734c0
	void AttemptToSleep(); // Function Icarus.TimeOfDaySubsystem.AttemptToSleep // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1873080
};

// Class Icarus.TimeOfDayTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTimeOfDayTable : UIcarusDataTable {
};

// Class Icarus.ToolDamageLibrary
// Size: 0x28 (Inherited: 0x28)
struct UToolDamageLibrary : URowLibrary {

	struct FToolDamageRowHandle StructToRowHandle(struct FToolDamageEnum EnumValue); // Function Icarus.ToolDamageLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876b00
	struct UE4::FName StructToName(struct FToolDamageEnum EnumValue); // Function Icarus.ToolDamageLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876900
	int32_t StructToInt(struct FToolDamageEnum EnumValue); // Function Icarus.ToolDamageLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876720
	struct FToolDamageEnum RowHandleToStruct(struct FToolDamageRowHandle RowHandle); // Function Icarus.ToolDamageLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1876390
	void RemoveRowFromToolDamageTable(struct UE4::FName Name); // Function Icarus.ToolDamageLibrary.RemoveRowFromToolDamageTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1876190
	void RefreshConstants(); // Function Icarus.ToolDamageLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1875fe0
	int32_t NumRows(); // Function Icarus.ToolDamageLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875f50
	bool NotEqual_EnumName(struct FToolDamageEnum A, struct UE4::FName B); // Function Icarus.ToolDamageLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875e00
	bool NotEqual_EnumEnum(struct FToolDamageEnum A, struct FToolDamageEnum B); // Function Icarus.ToolDamageLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875b30
	struct FToolDamageEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ToolDamageLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18758c0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ToolDamageLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1875710
	struct FToolDamageRowHandle MakeToolDamageFromIndex(int32_t Index); // Function Icarus.ToolDamageLibrary.MakeToolDamageFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875560
	struct FToolDamageEnum MakeToolDamageEnum(struct FToolDamageEnum Enum); // Function Icarus.ToolDamageLibrary.MakeToolDamageEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18754e0
	struct FToolDamageRowHandle MakeToolDamage(struct UE4::FName RowName); // Function Icarus.ToolDamageLibrary.MakeToolDamage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875440
	struct FToolDamageRowHandle MakeLiteralToolDamage(struct FToolDamageRowHandle RowHandle); // Function Icarus.ToolDamageLibrary.MakeLiteralToolDamage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1875010
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ToolDamageLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1874de0
	struct FToolDamageEnum IntToStruct(int32_t IntValue); // Function Icarus.ToolDamageLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1874b90
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ToolDamageLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18749e0
	void GetToolDamageStruct(struct FToolDamageRowHandle RowHandle, struct FToolDamage& ToolDamage, enum class EValid& Paths); // Function Icarus.ToolDamageLibrary.GetToolDamageStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18746a0
	bool EqualEqual_FToolDamageRowHandleFToolDamageRowHandle(struct FToolDamageRowHandle RowHandleA, struct FToolDamageRowHandle RowHandleB); // Function Icarus.ToolDamageLibrary.EqualEqual_FToolDamageRowHandleFToolDamageRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1873da0
	bool EqualEqual_EnumEnum(struct FToolDamageEnum A, struct FToolDamageEnum B); // Function Icarus.ToolDamageLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1873a30
	struct FToolDamageRowHandle CastToToolDamageRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ToolDamageLibrary.CastToToolDamageRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1873730
	void BreakToolDamageEnum(struct FToolDamageEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ToolDamageLibrary.BreakToolDamageEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1873360
	void AddRowToToolDamageTable(struct UE4::FName Name, struct FToolDamage Data, struct FToolDamageRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ToolDamageLibrary.AddRowToToolDamageTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1872e20
};

// Class Icarus.ToolDamageTable
// Size: 0xb8 (Inherited: 0xb8)
struct UToolDamageTable : UIcarusDataTable {
};

// Class Icarus.ToolTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UToolTypesLibrary : URowLibrary {

	struct FToolTypesRowHandle StructToRowHandle(struct FToolTypesEnum EnumValue); // Function Icarus.ToolTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c970
	struct UE4::FName StructToName(struct FToolTypesEnum EnumValue); // Function Icarus.ToolTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c830
	int32_t StructToInt(struct FToolTypesEnum EnumValue); // Function Icarus.ToolTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c6f0
	struct FToolTypesEnum RowHandleToStruct(struct FToolTypesRowHandle RowHandle); // Function Icarus.ToolTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c4e0
	void RemoveRowFromToolTypesTable(struct UE4::FName Name); // Function Icarus.ToolTypesLibrary.RemoveRowFromToolTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x187c3e0
	void RefreshConstants(); // Function Icarus.ToolTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x187c3a0
	int32_t NumRows(); // Function Icarus.ToolTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c1a0
	bool NotEqual_EnumName(struct FToolTypesEnum A, struct UE4::FName B); // Function Icarus.ToolTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187bfc0
	bool NotEqual_EnumEnum(struct FToolTypesEnum A, struct FToolTypesEnum B); // Function Icarus.ToolTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187bde0
	struct FToolTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ToolTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187bcc0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ToolTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x187bba0
	struct FToolTypesRowHandle MakeToolTypesFromIndex(int32_t Index); // Function Icarus.ToolTypesLibrary.MakeToolTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b960
	struct FToolTypesEnum MakeToolTypesEnum(struct FToolTypesEnum Enum); // Function Icarus.ToolTypesLibrary.MakeToolTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b8e0
	struct FToolTypesRowHandle MakeToolTypes(struct UE4::FName RowName); // Function Icarus.ToolTypesLibrary.MakeToolTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b840
	struct FToolTypesRowHandle MakeLiteralToolTypes(struct FToolTypesRowHandle RowHandle); // Function Icarus.ToolTypesLibrary.MakeLiteralToolTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b6a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ToolTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x187b580
	struct FToolTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ToolTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b460
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ToolTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x187b340
	void GetToolTypesStruct(struct FToolTypesRowHandle RowHandle, struct FIcarusToolType& ToolTypes, enum class EValid& Paths); // Function Icarus.ToolTypesLibrary.GetToolTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187ac00
	bool EqualEqual_FToolTypesRowHandleFToolTypesRowHandle(struct FToolTypesRowHandle RowHandleA, struct FToolTypesRowHandle RowHandleB); // Function Icarus.ToolTypesLibrary.EqualEqual_FToolTypesRowHandleFToolTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187a7f0
	bool EqualEqual_EnumEnum(struct FToolTypesEnum A, struct FToolTypesEnum B); // Function Icarus.ToolTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187a610
	struct FToolTypesRowHandle CastToToolTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ToolTypesLibrary.CastToToolTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187a330
	void BreakToolTypesEnum(struct FToolTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ToolTypesLibrary.BreakToolTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x187a070
	void AddRowToToolTypesTable(struct UE4::FName Name, struct FIcarusToolType Data, struct FToolTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ToolTypesLibrary.AddRowToToolTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1879b90
};

// Class Icarus.ToolTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UToolTypesTable : UIcarusDataTable {
};

// Class Icarus.TrackerAccolade
// Size: 0x28 (Inherited: 0x28)
struct UTrackerAccolade : UAccoladeImpl {
};

// Class Icarus.TraitFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTraitFunctionLibrary : UBlueprintFunctionLibrary {

	struct UTraitComponent* GetTrait(struct AActor* Actor, struct UTraitComponent* TraitClass, enum class EValid& Paths); // Function Icarus.TraitFunctionLibrary.GetTrait // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x187ad90
};

// Class Icarus.TransmutableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UTransmutableComponent : UTraitComponent {
	int32_t TransmutableUnits; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)

	void SetTransmutableUnits(int32_t NewUnits); // Function Icarus.TransmutableComponent.SetTransmutableUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x187c660
	bool GetTransmutableData(struct FTransmutableData& OutData); // Function Icarus.TransmutableComponent.GetTransmutableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x187af70
};

// Class Icarus.TransmutableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTransmutableLibrary : URowLibrary {

	struct FTransmutableRowHandle StructToRowHandle(struct FTransmutableEnum EnumValue); // Function Icarus.TransmutableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187ca20
	struct UE4::FName StructToName(struct FTransmutableEnum EnumValue); // Function Icarus.TransmutableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c8d0
	int32_t StructToInt(struct FTransmutableEnum EnumValue); // Function Icarus.TransmutableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c790
	struct FTransmutableEnum RowHandleToStruct(struct FTransmutableRowHandle RowHandle); // Function Icarus.TransmutableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c5a0
	void RemoveRowFromTransmutableTable(struct UE4::FName Name); // Function Icarus.TransmutableLibrary.RemoveRowFromTransmutableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x187c460
	void RefreshConstants(); // Function Icarus.TransmutableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x187c3c0
	int32_t NumRows(); // Function Icarus.TransmutableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c1d0
	bool NotEqual_EnumName(struct FTransmutableEnum A, struct UE4::FName B); // Function Icarus.TransmutableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187c0b0
	bool NotEqual_EnumEnum(struct FTransmutableEnum A, struct FTransmutableEnum B); // Function Icarus.TransmutableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187bed0
	struct FTransmutableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TransmutableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187bd50
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TransmutableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x187bc30
	struct FTransmutableRowHandle MakeTransmutableFromIndex(int32_t Index); // Function Icarus.TransmutableLibrary.MakeTransmutableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187bb10
	struct FTransmutableEnum MakeTransmutableEnum(struct FTransmutableEnum Enum); // Function Icarus.TransmutableLibrary.MakeTransmutableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187ba90
	struct FTransmutableRowHandle MakeTransmutable(struct UE4::FName RowName); // Function Icarus.TransmutableLibrary.MakeTransmutable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b9f0
	struct FTransmutableRowHandle MakeLiteralTransmutable(struct FTransmutableRowHandle RowHandle); // Function Icarus.TransmutableLibrary.MakeLiteralTransmutable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b770
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TransmutableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x187b610
	struct FTransmutableEnum IntToStruct(int32_t IntValue); // Function Icarus.TransmutableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187b4f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TransmutableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x187b3d0
	void GetTransmutableStruct(struct FTransmutableRowHandle RowHandle, struct FTransmutableData& Transmutable, enum class EValid& Paths); // Function Icarus.TransmutableLibrary.GetTransmutableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187b160
	bool EqualEqual_FTransmutableRowHandleFTransmutableRowHandle(struct FTransmutableRowHandle RowHandleA, struct FTransmutableRowHandle RowHandleB); // Function Icarus.TransmutableLibrary.EqualEqual_FTransmutableRowHandleFTransmutableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187a930
	bool EqualEqual_EnumEnum(struct FTransmutableEnum A, struct FTransmutableEnum B); // Function Icarus.TransmutableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187a700
	struct FTransmutableRowHandle CastToTransmutableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TransmutableLibrary.CastToTransmutableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187a450
	void BreakTransmutableEnum(struct FTransmutableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TransmutableLibrary.BreakTransmutableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x187a1d0
	void AddRowToTransmutableTable(struct UE4::FName Name, struct FTransmutableData Data, struct FTransmutableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TransmutableLibrary.AddRowToTransmutableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1879dc0
};

// Class Icarus.TransmutableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTransmutableTable : UIcarusDataTable {
};

// Class Icarus.TreeAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTreeAudioDataLibrary : URowLibrary {

	struct FTreeAudioDataRowHandle StructToRowHandle(struct FTreeAudioDataEnum EnumValue); // Function Icarus.TreeAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1881480
	struct UE4::FName StructToName(struct FTreeAudioDataEnum EnumValue); // Function Icarus.TreeAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18813e0
	int32_t StructToInt(struct FTreeAudioDataEnum EnumValue); // Function Icarus.TreeAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1881340
	struct FTreeAudioDataEnum RowHandleToStruct(struct FTreeAudioDataRowHandle RowHandle); // Function Icarus.TreeAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1880fe0
	void RemoveRowFromTreeAudioDataTable(struct UE4::FName Name); // Function Icarus.TreeAudioDataLibrary.RemoveRowFromTreeAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1880e20
	void RefreshConstants(); // Function Icarus.TreeAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1880e00
	int32_t NumRows(); // Function Icarus.TreeAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1880580
	bool NotEqual_EnumName(struct FTreeAudioDataEnum A, struct UE4::FName B); // Function Icarus.TreeAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1880490
	bool NotEqual_EnumEnum(struct FTreeAudioDataEnum A, struct FTreeAudioDataEnum B); // Function Icarus.TreeAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18803a0
	struct FTreeAudioDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.TreeAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1880310
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.TreeAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1880280
	struct FTreeAudioDataRowHandle MakeTreeAudioDataFromIndex(int32_t Index); // Function Icarus.TreeAudioDataLibrary.MakeTreeAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18801f0
	struct FTreeAudioDataEnum MakeTreeAudioDataEnum(struct FTreeAudioDataEnum Enum); // Function Icarus.TreeAudioDataLibrary.MakeTreeAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1880170
	struct FTreeAudioDataRowHandle MakeTreeAudioData(struct UE4::FName RowName); // Function Icarus.TreeAudioDataLibrary.MakeTreeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18800d0
	struct FTreeAudioDataRowHandle MakeLiteralTreeAudioData(struct FTreeAudioDataRowHandle RowHandle); // Function Icarus.TreeAudioDataLibrary.MakeLiteralTreeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1880000
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.TreeAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x187ff70
	struct FTreeAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.TreeAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187fee0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.TreeAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x187fe50
	void GetTreeAudioDataStruct(struct FTreeAudioDataRowHandle RowHandle, struct FTreeAudioData& TreeAudioData, enum class EValid& Paths); // Function Icarus.TreeAudioDataLibrary.GetTreeAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187fca0
	bool EqualEqual_FTreeAudioDataRowHandleFTreeAudioDataRowHandle(struct FTreeAudioDataRowHandle RowHandleA, struct FTreeAudioDataRowHandle RowHandleB); // Function Icarus.TreeAudioDataLibrary.EqualEqual_FTreeAudioDataRowHandleFTreeAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187f980
	bool EqualEqual_EnumEnum(struct FTreeAudioDataEnum A, struct FTreeAudioDataEnum B); // Function Icarus.TreeAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x187f890
	struct FTreeAudioDataRowHandle CastToTreeAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.TreeAudioDataLibrary.CastToTreeAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187f270
	void BreakTreeAudioDataEnum(struct FTreeAudioDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.TreeAudioDataLibrary.BreakTreeAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x187f0e0
	void AddRowToTreeAudioDataTable(struct UE4::FName Name, struct FTreeAudioData Data, struct FTreeAudioDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.TreeAudioDataLibrary.AddRowToTreeAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x187ee80
};

// Class Icarus.TreeAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTreeAudioDataTable : UIcarusDataTable {
};

// Class Icarus.TreeBase
// Size: 0x340 (Inherited: 0x2b0)
struct ATreeBase : AIcarusActor {
	bool bHasBeenConstructed; // 0x2b0(0x01)
	bool bHasSpawnArguments; // 0x2b1(0x01)
	bool bDefferTreeConstruction; // 0x2b2(0x01)
	bool bHasBeenModified; // 0x2b3(0x01)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct FMulticastInlineDelegate OnHasBeenModifiedUpdated; // 0x2b8(0x10)
	struct UTreePrimitiveComponent* RootPrimitive; // 0x2c8(0x08)
	struct TArray<struct UTreePrimitiveComponent*> TreePrimitives; // 0x2d0(0x10)
	struct UStaticMeshComponent* ProxyMeshComponent; // 0x2e0(0x08)
	struct FTreeRuntimeConstructArguments SpawnArguments; // 0x2e8(0x38)
	struct TArray<int32_t> RuntimeTreePrimitivesMask; // 0x320(0x10)
	struct UFLODActorComponent* FLODActorComponent; // 0x330(0x08)
	bool bIsResolvingTreeCollision; // 0x338(0x01)
	char pad_339[0x7]; // 0x339(0x07)

	bool TransferTreePrimitiveHierarchy(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext& DetachContext); // Function Icarus.TreeBase.TransferTreePrimitiveHierarchy // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1881530
	void TransferTreePrimitive(struct UTreePrimitiveComponent* Original, struct UTreePrimitiveComponent* New); // Function Icarus.TreeBase.TransferTreePrimitive // (Native|Event|Public|BlueprintEvent) // @ game+0x16cf1c0
	void SetRootPrimitive(struct UTreePrimitiveComponent* InRootPrimitive); // Function Icarus.TreeBase.SetRootPrimitive // (Final|Native|Public|BlueprintCallable) // @ game+0x1881130
	void SetHasBeenModified(bool Modified); // Function Icarus.TreeBase.SetHasBeenModified // (Final|Native|Protected|BlueprintCallable) // @ game+0x18810a0
	void ResolveTreeVisibility(); // Function Icarus.TreeBase.ResolveTreeVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x1880fc0
	void ResolveTreeCollision(); // Function Icarus.TreeBase.ResolveTreeCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x1880fa0
	bool OrphanTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext& DetachContext, bool& bDestroySelf); // Function Icarus.TreeBase.OrphanTreePrimitive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1880ca0
	void OnUpdateTreePrimitiveRuntimeMaskState(struct TArray<struct UTreePrimitiveComponent*>& RemovedTreePrimitives); // Function Icarus.TreeBase.OnUpdateTreePrimitiveRuntimeMaskState // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1880bf0
	void OnTransferTreePrimitiveHierarchy(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext& DetachContext, struct ATreeBase* NewTree); // Function Icarus.TreeBase.OnTransferTreePrimitiveHierarchy // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1880ac0
	void OnRep_SpawnArguments(); // Function Icarus.TreeBase.OnRep_SpawnArguments // (Final|Native|Protected) // @ game+0x1880aa0
	void OnRep_RuntimeTreePrimitivesMask(); // Function Icarus.TreeBase.OnRep_RuntimeTreePrimitivesMask // (Final|Native|Public) // @ game+0x1880a80
	void OnRep_HasBeenModified(); // Function Icarus.TreeBase.OnRep_HasBeenModified // (Final|Native|Protected) // @ game+0x1880a60
	void OnPreConstructedTreePrimitives(); // Function Icarus.TreeBase.OnPreConstructedTreePrimitives // (Native|Event|Public|BlueprintEvent) // @ game+0x1719b90
	void OnOrphanTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext& DetachContext, bool bDestroyingSelf, struct AIcarusItem* ReplacementItem); // Function Icarus.TreeBase.OnOrphanTreePrimitive // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18808c0
	void OnHitTree(struct UPrimitiveComponent* Primitive, struct AActor* DamageCauser, struct FVector HitLocation, struct FVector HitNormal); // Function Icarus.TreeBase.OnHitTree // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1880720
	void OnDetachTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext& DetachContext); // Function Icarus.TreeBase.OnDetachTreePrimitive // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1880640
	void OnConstructedTreePrimitives(); // Function Icarus.TreeBase.OnConstructedTreePrimitives // (Native|Event|Public|BlueprintEvent) // @ game+0x910a50
	struct ATreePrefab* GetTreePrefab(); // Function Icarus.TreeBase.GetTreePrefab // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x187fe20
	bool GetAttachedTreePrimitives(struct UTreePrimitiveComponent* SourceTreePrimitive, struct TArray<enum class ETreePrimitiveType>& Types, bool bIncludeSource, bool bIncludeAllDescendants, struct TArray<struct UTreePrimitiveComponent*>& OutTreePrimitives); // Function Icarus.TreeBase.GetAttachedTreePrimitives // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x187fac0
	bool DetachTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext& DetachContext); // Function Icarus.TreeBase.DetachTreePrimitive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x187f7a0
	void DebugLogHierarchy(); // Function Icarus.TreeBase.DebugLogHierarchy // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x187f780
	void ConsumeHit(struct FIcarusDamagePacket& DamagePacket); // Function Icarus.TreeBase.ConsumeHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x187f540
	void AddTreePrimitiveToRuntimeMask(struct UTreePrimitiveComponent* TreePrimitive); // Function Icarus.TreeBase.AddTreePrimitiveToRuntimeMask // (Final|Native|Protected|BlueprintCallable) // @ game+0x187f050
};

// Class Icarus.TreePrefab
// Size: 0x350 (Inherited: 0x220)
struct ATreePrefab : AActor {
	struct USceneComponent* RootScene; // 0x220(0x08)
	struct TMap<enum class ETreePrimitiveType, struct FItemRewardsRowHandle> TreePrimitiveTypesToItemRewards; // 0x228(0x50)
	struct ATreeBase* RuntimeTreeClass; // 0x278(0x08)
	struct UTreePrimitiveComponent* RuntimeTreePrimitiveClass; // 0x280(0x08)
	char pad_288[0xc8]; // 0x288(0xc8)

	void OnCreatedTreeRuntime(struct ATreeBase* TreeBase); // Function Icarus.TreePrefab.OnCreatedTreeRuntime // (Native|Event|Public|BlueprintEvent) // @ game+0x18805b0
	struct ATreeBase* CreateTreeRuntime(struct FTreeRuntimeCreateArguments& Args); // Function Icarus.TreePrefab.CreateTreeRuntime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x187f660
	bool ConstructTreePrimitives(struct ATreeBase* TreeRuntime, struct FTreeRuntimeConstructArguments& Args); // Function Icarus.TreePrefab.ConstructTreePrimitives // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x187f420
};

// Class Icarus.TreePrimitiveComponent
// Size: 0x510 (Inherited: 0x4d0)
struct UTreePrimitiveComponent : UStaticMeshComponent {
	float CalculatedMass; // 0x4d0(0x04)
	float CalculatedDescendantsMass; // 0x4d4(0x04)
	float CalculatedTotalConnectedMass; // 0x4d8(0x04)
	char pad_4DC[0x4]; // 0x4dc(0x04)
	struct TArray<struct FTreePrimitiveReplacementDescription> ReplacementDescriptions; // 0x4e0(0x10)
	bool bDestroyOnOrphan; // 0x4f0(0x01)
	char pad_4F1[0x3]; // 0x4f1(0x03)
	struct UE4::FName CollisionProfileWhenActive; // 0x4f4(0x08)
	struct FTreePrimitivePersistentData PersistentData; // 0x4fc(0x04)
	struct UE4::FName TreePrimitiveName; // 0x500(0x08)
	enum class ETreePrimitiveType TreePrimitiveType; // 0x508(0x01)
	char pad_509[0x7]; // 0x509(0x07)

	void Transfer(struct UTreePrimitiveComponent* Source); // Function Icarus.TreePrimitiveComponent.Transfer // (Native|Event|Public|BlueprintEvent) // @ game+0x1757c80
	bool ShouldTreePrimivieAffectNavigation(); // Function Icarus.TreePrimitiveComponent.ShouldTreePrimivieAffectNavigation // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1881310
	void SetVirtualTextureRenderPassType(enum class ERuntimeVirtualTextureMainPassType InType); // Function Icarus.TreePrimitiveComponent.SetVirtualTextureRenderPassType // (Final|Native|Public|BlueprintCallable) // @ game+0x18811c0
	void SetupCollisionProfile(bool bEnabled, bool bIsDynamic); // Function Icarus.TreePrimitiveComponent.SetupCollisionProfile // (Final|Native|Public|BlueprintCallable) // @ game+0x1881240
	bool ReplaceTreePrimitiveWithItem(struct FTreePrimitiveDetachContext& DetachContext, struct AIcarusItem*& OutItemActor); // Function Icarus.TreePrimitiveComponent.ReplaceTreePrimitiveWithItem // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1880ea0
	void RecalculateMass(); // Function Icarus.TreePrimitiveComponent.RecalculateMass // (Final|Native|Public|BlueprintCallable) // @ game+0x1880de0
	void InitializePostConstruction(); // Function Icarus.TreePrimitiveComponent.InitializePostConstruction // (Native|Event|Public|BlueprintEvent) // @ game+0x173acf0
	void Construct(struct UStaticMeshComponent* MeshComponent); // Function Icarus.TreePrimitiveComponent.Construct // (Native|Event|Public|BlueprintEvent) // @ game+0x187f390
	bool CanSupportTreeHierarchy(); // Function Icarus.TreePrimitiveComponent.CanSupportTreeHierarchy // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x187f240
};

// Class Icarus.TreeRecorderComponent
// Size: 0x180 (Inherited: 0x160)
struct UTreeRecorderComponent : UActorStateRecorderComponent {
	struct UE4::FName TreePrefabClassName; // 0x158(0x08)
	struct TArray<int32_t> TreePrimitiveMask; // 0x160(0x10)
	struct UE4::FName RootName; // 0x170(0x08)
	bool bIsPhysicsDynamic; // 0x178(0x01)
};

// Class Icarus.TreeSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UTreeSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnTreeFelledNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnTreeResourceCollectedNotify; // 0x40(0x10)

	void BroadcastTreeResourceCollectedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.TreeSubsystem.BroadcastTreeResourceCollectedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x18856f0
	void BroadcastTreeFelledDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.TreeSubsystem.BroadcastTreeFelledDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1868780
};

// Class Icarus.TutorialRuleset
// Size: 0x48 (Inherited: 0x48)
struct UTutorialRuleset : URuleset {
};

// Class Icarus.UMGFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUMGFunctionLibrary : UBlueprintFunctionLibrary {

	struct FString PasteFromClipboard(); // Function Icarus.UMGFunctionLibrary.PasteFromClipboard // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1888a20
	struct FText GetTextForKeybind(struct UObject* WorldContextObject, struct FKeybindingsRowHandle& Keybinding); // Function Icarus.UMGFunctionLibrary.GetTextForKeybind // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1886bb0
	struct TArray<struct FText> FormatTimeLengthDigital(int32_t Seconds); // Function Icarus.UMGFunctionLibrary.FormatTimeLengthDigital // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1886a20
	void CopyToClipboard(struct FString Text); // Function Icarus.UMGFunctionLibrary.CopyToClipboard // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18862f0
	bool AnyChildrenVisible(struct UPanelWidget* PanelWidget); // Function Icarus.UMGFunctionLibrary.AnyChildrenVisible // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1885240
};

// Class Icarus.UsableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UUsableComponent : UTraitComponent {

	bool GetUsableData(struct FUsableData& OutData); // Function Icarus.UsableComponent.GetUsableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1886d00
};

// Class Icarus.UsableItemLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUsableItemLibrary : UBlueprintFunctionLibrary {

	bool UseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct AIcarusPlayerCharacter* Target); // Function Icarus.UsableItemLibrary.UseItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1889490
	bool CanUseInventoryItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct AIcarusPlayerCharacter* Target); // Function Icarus.UsableItemLibrary.CanUseInventoryItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1885e30
	bool CanUse(struct FUseCondition UseCondition, struct AIcarusPlayerCharacter* Target); // Function Icarus.UsableItemLibrary.CanUse // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1885c30
};

// Class Icarus.UsableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUsableLibrary : URowLibrary {

	struct FUsableRowHandle StructToRowHandle(struct FUsableEnum EnumValue); // Function Icarus.UsableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1889280
	struct UE4::FName StructToName(struct FUsableEnum EnumValue); // Function Icarus.UsableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18890a0
	int32_t StructToInt(struct FUsableEnum EnumValue); // Function Icarus.UsableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888ec0
	struct FUsableEnum RowHandleToStruct(struct FUsableRowHandle RowHandle); // Function Icarus.UsableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888c80
	void RemoveRowFromUsableTable(struct UE4::FName Name); // Function Icarus.UsableLibrary.RemoveRowFromUsableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1888b00
	void RefreshConstants(); // Function Icarus.UsableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1888aa0
	int32_t NumRows(); // Function Icarus.UsableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888990
	bool NotEqual_EnumName(struct FUsableEnum A, struct UE4::FName B); // Function Icarus.UsableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18886c0
	bool NotEqual_EnumEnum(struct FUsableEnum A, struct FUsableEnum B); // Function Icarus.UsableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18883f0
	struct FUsableEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.UsableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888240
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.UsableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1888090
	struct FUsableRowHandle MakeUsableFromIndex(int32_t Index); // Function Icarus.UsableLibrary.MakeUsableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887ca0
	struct FUsableEnum MakeUsableEnum(struct FUsableEnum Enum); // Function Icarus.UsableLibrary.MakeUsableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887c20
	struct FUsableRowHandle MakeUsable(struct UE4::FName RowName); // Function Icarus.UsableLibrary.MakeUsable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887b80
	struct FUsableRowHandle MakeLiteralUsable(struct FUsableRowHandle RowHandle); // Function Icarus.UsableLibrary.MakeLiteralUsable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887910
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.UsableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1887760
	struct FUsableEnum IntToStruct(int32_t IntValue); // Function Icarus.UsableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18875b0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.UsableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1887400
	void GetUsableStruct(struct FUsableRowHandle RowHandle, struct FUsableData& Usable, enum class EValid& Paths); // Function Icarus.UsableLibrary.GetUsableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1886ed0
	bool EqualEqual_FUsableRowHandleFUsableRowHandle(struct FUsableRowHandle RowHandleA, struct FUsableRowHandle RowHandleB); // Function Icarus.UsableLibrary.EqualEqual_FUsableRowHandleFUsableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1886660
	bool EqualEqual_EnumEnum(struct FUsableEnum A, struct FUsableEnum B); // Function Icarus.UsableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1886390
	struct FUsableRowHandle CastToUsableRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.UsableLibrary.CastToUsableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1885f90
	void BreakUsableEnum(struct FUsableEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.UsableLibrary.BreakUsableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18852d0
	void AddRowToUsableTable(struct UE4::FName Name, struct FUsableData Data, struct FUsableRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.UsableLibrary.AddRowToUsableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1884ab0
};

// Class Icarus.UsableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UUsableTable : UIcarusDataTable {
};

// Class Icarus.UserInterfaceBase
// Size: 0x260 (Inherited: 0x260)
struct UUserInterfaceBase : UUserWidget {

	void WidgetFocusLost(struct UIcarusWidget* Widget); // Function Icarus.UserInterfaceBase.WidgetFocusLost // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void WidgetFocusGained(struct UIcarusWidget* Widget); // Function Icarus.UserInterfaceBase.WidgetFocusGained // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	struct UConfirmationPopupBase* GetConfirmationPopup(); // Function Icarus.UserInterfaceBase.GetConfirmationPopup // (Event|Public|BlueprintEvent) // @ game+0x1be0000
	void DisplayIcarusError(struct FErrorCodesEnum OutgoingError); // Function Icarus.UserInterfaceBase.DisplayIcarusError // (Event|Public|BlueprintEvent) // @ game+0x1be0000
};

// Class Icarus.UsesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUsesLibrary : URowLibrary {

	struct FUsesRowHandle StructToRowHandle(struct FUsesEnum EnumValue); // Function Icarus.UsesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1889330
	struct UE4::FName StructToName(struct FUsesEnum EnumValue); // Function Icarus.UsesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1889140
	int32_t StructToInt(struct FUsesEnum EnumValue); // Function Icarus.UsesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888f60
	struct FUsesEnum RowHandleToStruct(struct FUsesRowHandle RowHandle); // Function Icarus.UsesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888d40
	void RemoveRowFromUsesTable(struct UE4::FName Name); // Function Icarus.UsesLibrary.RemoveRowFromUsesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1888b80
	void RefreshConstants(); // Function Icarus.UsesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1888ac0
	int32_t NumRows(); // Function Icarus.UsesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18889c0
	bool NotEqual_EnumName(struct FUsesEnum A, struct UE4::FName B); // Function Icarus.UsesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18887b0
	bool NotEqual_EnumEnum(struct FUsesEnum A, struct FUsesEnum B); // Function Icarus.UsesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18884e0
	struct FUsesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.UsesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18882d0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.UsesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1888120
	struct FUsesRowHandle MakeUsesFromIndex(int32_t Index); // Function Icarus.UsesLibrary.MakeUsesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887e50
	struct FUsesEnum MakeUsesEnum(struct FUsesEnum Enum); // Function Icarus.UsesLibrary.MakeUsesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887dd0
	struct FUsesRowHandle MakeUses(struct UE4::FName RowName); // Function Icarus.UsesLibrary.MakeUses // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887d30
	struct FUsesRowHandle MakeLiteralUses(struct FUsesRowHandle RowHandle); // Function Icarus.UsesLibrary.MakeLiteralUses // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18879e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.UsesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18877f0
	struct FUsesEnum IntToStruct(int32_t IntValue); // Function Icarus.UsesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887640
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.UsesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1887490
	void GetUsesStruct(struct FUsesRowHandle RowHandle, struct FUses& Uses, enum class EValid& Paths); // Function Icarus.UsesLibrary.GetUsesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18870a0
	bool EqualEqual_FUsesRowHandleFUsesRowHandle(struct FUsesRowHandle RowHandleA, struct FUsesRowHandle RowHandleB); // Function Icarus.UsesLibrary.EqualEqual_FUsesRowHandleFUsesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18867a0
	bool EqualEqual_EnumEnum(struct FUsesEnum A, struct FUsesEnum B); // Function Icarus.UsesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1886480
	struct FUsesRowHandle CastToUsesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.UsesLibrary.CastToUsesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18860b0
	void BreakUsesEnum(struct FUsesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.UsesLibrary.BreakUsesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1885430
	void AddRowToUsesTable(struct UE4::FName Name, struct FUses Data, struct FUsesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.UsesLibrary.AddRowToUsesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1884d40
};

// Class Icarus.UsesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UUsesTable : UIcarusDataTable {
};

// Class Icarus.ValidHitQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UValidHitQueriesLibrary : URowLibrary {

	struct FValidHitQueriesRowHandle StructToRowHandle(struct FValidHitQueriesEnum EnumValue); // Function Icarus.ValidHitQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18893e0
	struct UE4::FName StructToName(struct FValidHitQueriesEnum EnumValue); // Function Icarus.ValidHitQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18891e0
	int32_t StructToInt(struct FValidHitQueriesEnum EnumValue); // Function Icarus.ValidHitQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1889000
	struct FValidHitQueriesEnum RowHandleToStruct(struct FValidHitQueriesRowHandle RowHandle); // Function Icarus.ValidHitQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888e00
	void RemoveRowFromValidHitQueriesTable(struct UE4::FName Name); // Function Icarus.ValidHitQueriesLibrary.RemoveRowFromValidHitQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1888c00
	void RefreshConstants(); // Function Icarus.ValidHitQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1888ae0
	int32_t NumRows(); // Function Icarus.ValidHitQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18889f0
	bool NotEqual_EnumName(struct FValidHitQueriesEnum A, struct UE4::FName B); // Function Icarus.ValidHitQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18888a0
	bool NotEqual_EnumEnum(struct FValidHitQueriesEnum A, struct FValidHitQueriesEnum B); // Function Icarus.ValidHitQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18885d0
	struct FValidHitQueriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ValidHitQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888360
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ValidHitQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18881b0
	struct FValidHitQueriesRowHandle MakeValidHitQueriesFromIndex(int32_t Index); // Function Icarus.ValidHitQueriesLibrary.MakeValidHitQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1888000
	struct FValidHitQueriesEnum MakeValidHitQueriesEnum(struct FValidHitQueriesEnum Enum); // Function Icarus.ValidHitQueriesLibrary.MakeValidHitQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887f80
	struct FValidHitQueriesRowHandle MakeValidHitQueries(struct UE4::FName RowName); // Function Icarus.ValidHitQueriesLibrary.MakeValidHitQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887ee0
	struct FValidHitQueriesRowHandle MakeLiteralValidHitQueries(struct FValidHitQueriesRowHandle RowHandle); // Function Icarus.ValidHitQueriesLibrary.MakeLiteralValidHitQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1887ab0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ValidHitQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1887880
	struct FValidHitQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.ValidHitQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18876d0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ValidHitQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1887520
	void GetValidHitQueriesStruct(struct FValidHitQueriesRowHandle RowHandle, struct FValidHitQuery& ValidHitQueries, enum class EValid& Paths); // Function Icarus.ValidHitQueriesLibrary.GetValidHitQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1887230
	bool EqualEqual_FValidHitQueriesRowHandleFValidHitQueriesRowHandle(struct FValidHitQueriesRowHandle RowHandleA, struct FValidHitQueriesRowHandle RowHandleB); // Function Icarus.ValidHitQueriesLibrary.EqualEqual_FValidHitQueriesRowHandleFValidHitQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18868e0
	bool EqualEqual_EnumEnum(struct FValidHitQueriesEnum A, struct FValidHitQueriesEnum B); // Function Icarus.ValidHitQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1886570
	struct FValidHitQueriesRowHandle CastToValidHitQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ValidHitQueriesLibrary.CastToValidHitQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18861d0
	void BreakValidHitQueriesEnum(struct FValidHitQueriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ValidHitQueriesLibrary.BreakValidHitQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1885590
	void AddRowToValidHitQueriesTable(struct UE4::FName Name, struct FValidHitQuery Data, struct FValidHitQueriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ValidHitQueriesLibrary.AddRowToValidHitQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1884f90
};

// Class Icarus.ValidHitQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UValidHitQueriesTable : UIcarusDataTable {
};

// Class Icarus.ValidHitTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UValidHitTypesLibrary : URowLibrary {

	struct FValidHitTypesRowHandle StructToRowHandle(struct FValidHitTypesEnum EnumValue); // Function Icarus.ValidHitTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e890
	struct UE4::FName StructToName(struct FValidHitTypesEnum EnumValue); // Function Icarus.ValidHitTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e750
	int32_t StructToInt(struct FValidHitTypesEnum EnumValue); // Function Icarus.ValidHitTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e610
	struct FValidHitTypesEnum RowHandleToStruct(struct FValidHitTypesRowHandle RowHandle); // Function Icarus.ValidHitTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e400
	void RemoveRowFromValidHitTypesTable(struct UE4::FName Name); // Function Icarus.ValidHitTypesLibrary.RemoveRowFromValidHitTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x188e1e0
	void RefreshConstants(); // Function Icarus.ValidHitTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x188e110
	int32_t NumRows(); // Function Icarus.ValidHitTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188ded0
	bool NotEqual_EnumName(struct FValidHitTypesEnum A, struct UE4::FName B); // Function Icarus.ValidHitTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188dcf0
	bool NotEqual_EnumEnum(struct FValidHitTypesEnum A, struct FValidHitTypesEnum B); // Function Icarus.ValidHitTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188db10
	struct FValidHitTypesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ValidHitTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d9f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ValidHitTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x188d8d0
	struct FValidHitTypesRowHandle MakeValidHitTypesFromIndex(int32_t Index); // Function Icarus.ValidHitTypesLibrary.MakeValidHitTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d690
	struct FValidHitTypesEnum MakeValidHitTypesEnum(struct FValidHitTypesEnum Enum); // Function Icarus.ValidHitTypesLibrary.MakeValidHitTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d610
	struct FValidHitTypesRowHandle MakeValidHitTypes(struct UE4::FName RowName); // Function Icarus.ValidHitTypesLibrary.MakeValidHitTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d570
	struct FValidHitTypesRowHandle MakeLiteralValidHitTypes(struct FValidHitTypesRowHandle RowHandle); // Function Icarus.ValidHitTypesLibrary.MakeLiteralValidHitTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d3d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ValidHitTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x188d2b0
	struct FValidHitTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ValidHitTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d190
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ValidHitTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x188d070
	void GetValidHitTypesStruct(struct FValidHitTypesRowHandle RowHandle, struct FValidHitType& ValidHitTypes, enum class EValid& Paths); // Function Icarus.ValidHitTypesLibrary.GetValidHitTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x188cd60
	bool EqualEqual_FValidHitTypesRowHandleFValidHitTypesRowHandle(struct FValidHitTypesRowHandle RowHandleA, struct FValidHitTypesRowHandle RowHandleB); // Function Icarus.ValidHitTypesLibrary.EqualEqual_FValidHitTypesRowHandleFValidHitTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188c710
	bool EqualEqual_EnumEnum(struct FValidHitTypesEnum A, struct FValidHitTypesEnum B); // Function Icarus.ValidHitTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188c530
	struct FValidHitTypesRowHandle CastToValidHitTypesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ValidHitTypesLibrary.CastToValidHitTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x188c2d0
	void BreakValidHitTypesEnum(struct FValidHitTypesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ValidHitTypesLibrary.BreakValidHitTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x188c010
	void AddRowToValidHitTypesTable(struct UE4::FName Name, struct FValidHitType Data, struct FValidHitTypesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ValidHitTypesLibrary.AddRowToValidHitTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x188bb90
};

// Class Icarus.ValidHitTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UValidHitTypesTable : UIcarusDataTable {
};

// Class Icarus.ValidInteractQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UValidInteractQueriesLibrary : URowLibrary {

	struct FValidInteractQueriesRowHandle StructToRowHandle(struct FValidInteractQueriesEnum EnumValue); // Function Icarus.ValidInteractQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e940
	struct UE4::FName StructToName(struct FValidInteractQueriesEnum EnumValue); // Function Icarus.ValidInteractQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e7f0
	int32_t StructToInt(struct FValidInteractQueriesEnum EnumValue); // Function Icarus.ValidInteractQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e6b0
	struct FValidInteractQueriesEnum RowHandleToStruct(struct FValidInteractQueriesRowHandle RowHandle); // Function Icarus.ValidInteractQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188e4c0
	void RemoveRowFromValidInteractQueriesTable(struct UE4::FName Name); // Function Icarus.ValidInteractQueriesLibrary.RemoveRowFromValidInteractQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x188e260
	void RefreshConstants(); // Function Icarus.ValidInteractQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x188e130
	int32_t NumRows(); // Function Icarus.ValidInteractQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188df00
	bool NotEqual_EnumName(struct FValidInteractQueriesEnum A, struct UE4::FName B); // Function Icarus.ValidInteractQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188dde0
	bool NotEqual_EnumEnum(struct FValidInteractQueriesEnum A, struct FValidInteractQueriesEnum B); // Function Icarus.ValidInteractQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188dc00
	struct FValidInteractQueriesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.ValidInteractQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188da80
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.ValidInteractQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x188d960
	struct FValidInteractQueriesRowHandle MakeValidInteractQueriesFromIndex(int32_t Index); // Function Icarus.ValidInteractQueriesLibrary.MakeValidInteractQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d840
	struct FValidInteractQueriesEnum MakeValidInteractQueriesEnum(struct FValidInteractQueriesEnum Enum); // Function Icarus.ValidInteractQueriesLibrary.MakeValidInteractQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d7c0
	struct FValidInteractQueriesRowHandle MakeValidInteractQueries(struct UE4::FName RowName); // Function Icarus.ValidInteractQueriesLibrary.MakeValidInteractQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d720
	struct FValidInteractQueriesRowHandle MakeLiteralValidInteractQueries(struct FValidInteractQueriesRowHandle RowHandle); // Function Icarus.ValidInteractQueriesLibrary.MakeLiteralValidInteractQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d4a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.ValidInteractQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x188d340
	struct FValidInteractQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.ValidInteractQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188d220
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.ValidInteractQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x188d100
	void GetValidInteractQueriesStruct(struct FValidInteractQueriesRowHandle RowHandle, struct FValidInteractQuery& ValidInteractQueries, enum class EValid& Paths); // Function Icarus.ValidInteractQueriesLibrary.GetValidInteractQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x188cee0
	bool EqualEqual_FValidInteractQueriesRowHandleFValidInteractQueriesRowHandle(struct FValidInteractQueriesRowHandle RowHandleA, struct FValidInteractQueriesRowHandle RowHandleB); // Function Icarus.ValidInteractQueriesLibrary.EqualEqual_FValidInteractQueriesRowHandleFValidInteractQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188c850
	bool EqualEqual_EnumEnum(struct FValidInteractQueriesEnum A, struct FValidInteractQueriesEnum B); // Function Icarus.ValidInteractQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x188c620
	struct FValidInteractQueriesRowHandle CastToValidInteractQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.ValidInteractQueriesLibrary.CastToValidInteractQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x188c3f0
	void BreakValidInteractQueriesEnum(struct FValidInteractQueriesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.ValidInteractQueriesLibrary.BreakValidInteractQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x188c170
	void AddRowToValidInteractQueriesTable(struct UE4::FName Name, struct FValidInteractQuery Data, struct FValidInteractQueriesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.ValidInteractQueriesLibrary.AddRowToValidInteractQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x188bda0
};

// Class Icarus.ValidInteractQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UValidInteractQueriesTable : UIcarusDataTable {
};

// Class Icarus.VehicleBase
// Size: 0x3b0 (Inherited: 0x290)
struct AVehicleBase : AWheeledVehicle {
	struct ASeatBase* DriverSeat; // 0x290(0x08)
	struct TArray<struct ASeatBase*> Seats; // 0x298(0x10)
	struct TArray<struct FVehicleSeatSetupData> SeatSetupData; // 0x2a8(0x10)
	float ClientAuthNetUpdates; // 0x2b8(0x04)
	char pad_2BC[0x9]; // 0x2bc(0x09)
	bool bClientAuth; // 0x2c5(0x01)
	char pad_2C6[0x2]; // 0x2c6(0x02)
	struct FRotator ReplicatedAimRotation; // 0x2c8(0x0c)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct USpringArmComponent* SpringArm; // 0x2d8(0x08)
	struct UCameraComponent* Camera; // 0x2e0(0x08)
	bool bUseVehicleSetupData; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	struct FVehicleSetupsRowHandle VehicleSetupData; // 0x2ec(0x18)
	char pad_304[0x4]; // 0x304(0x04)
	struct UInventoryComponent* VehicleInventory; // 0x308(0x08)
	struct UInventory* VehicleComponentInventory; // 0x310(0x08)
	struct TArray<struct FVehicleComponentSlot> VehicleComponentSlots; // 0x318(0x10)
	struct UVehicleComponentModel* VehicleComponentModel; // 0x328(0x08)
	struct TArray<struct AIcarusItem*> ReplicatedVehicleComponents; // 0x330(0x10)
	struct TMap<int32_t, struct UVehicularComponent*> VehicularComponents; // 0x340(0x50)
	bool bDebugOverrideVehicleComponentModel; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct TArray<struct FVehicleConstraintAttachment> VehicleConstraintAttachments; // 0x398(0x10)
	struct UVehicleRecorderComponent* VehicleRecorder; // 0x3a8(0x08)

	void SetAutonomousProxyState(bool bAutonomousProxy); // Function Icarus.VehicleBase.SetAutonomousProxyState // (Final|Native|Public|BlueprintCallable) // @ game+0x188e580
	void ReplicatePhysicsTargetToServer(struct FRepMovement Target); // Function Icarus.VehicleBase.ReplicatePhysicsTargetToServer // (Net|Native|Event|Protected|NetServer|NetValidate) // @ game+0x188e2e0
	void RemoveConstraintAttachment(struct UPhysicsConstraintComponent* PhysicsConstraint); // Function Icarus.VehicleBase.RemoveConstraintAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x188e150
	void OnVehicleInventoryItemRemoved(struct UInventory* Inventory, int32_t RemovedSlotIndex); // Function Icarus.VehicleBase.OnVehicleInventoryItemRemoved // (Final|Native|Protected) // @ game+0x188e040
	void OnVehicleInventoryItemAdded(struct UInventory* Inventory, int32_t AddedSlotIndex); // Function Icarus.VehicleBase.OnVehicleInventoryItemAdded // (Final|Native|Protected) // @ game+0x188df70
	void OnRep_VehicleConstraintAttachments(); // Function Icarus.VehicleBase.OnRep_VehicleConstraintAttachments // (Native|Event|Protected|BlueprintEvent) // @ game+0x188df50
	void OnRep_ReplicatedVehicleComponents(); // Function Icarus.VehicleBase.OnRep_ReplicatedVehicleComponents // (Final|Native|Protected) // @ game+0x188df30
	float GetThrottleInput(); // Function Icarus.VehicleBase.GetThrottleInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188cd30
	float GetOutputEnginePower(); // Function Icarus.VehicleBase.GetOutputEnginePower // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188cd00
	struct UCameraComponent* GetCamera(); // Function Icarus.VehicleBase.GetCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188cce0
	float GetBrakeInput(); // Function Icarus.VehicleBase.GetBrakeInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188ccb0
	struct USpringArmComponent* GeSpringArm(); // Function Icarus.VehicleBase.GeSpringArm // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188cc90
	int32_t FindConstraintAttachment(struct UPhysicsConstraintComponent* PhysicsConstraint, struct FVehicleConstraintAttachment& OutConstraintAttachment); // Function Icarus.VehicleBase.FindConstraintAttachment // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x188cbb0
	struct TArray<struct UVehicularComponent*> FindComponentsOfTypes(struct TArray<enum class EVehicleComponentType> Types); // Function Icarus.VehicleBase.FindComponentsOfTypes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188ca70
	struct TArray<struct UVehicularComponent*> FindComponentsOfType(enum class EVehicleComponentType Type); // Function Icarus.VehicleBase.FindComponentsOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x188c990
	void ClearAllInput(); // Function Icarus.VehicleBase.ClearAllInput // (Final|Native|Public|BlueprintCallable) // @ game+0x188c510
	void AddConstraintAttachment(struct UPrimitiveComponent* AttachParent, struct UPrimitiveComponent* AttachedChild, struct UPhysicsConstraintComponent* PhysicsConstraint); // Function Icarus.VehicleBase.AddConstraintAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x188ba80
};

// Class Icarus.VehicleComponentModel
// Size: 0x458 (Inherited: 0xb0)
struct UVehicleComponentModel : UActorComponent {
	struct FMulticastInlineDelegate OnVehicleMovementUpdatedEvent; // 0xb0(0x10)
	struct FVehicleMovementModel Model; // 0xc0(0x380)
	struct FTimerHandle ModelDirtyTimerHandle; // 0x440(0x08)
	struct FTimerHandle UpdateVehicleMovementTimerHandle; // 0x448(0x08)
	bool bIsInit; // 0x450(0x01)
	bool bModelDirty; // 0x451(0x01)
	char pad_452[0x6]; // 0x452(0x06)

	void SetModelDirty(bool bDelayUntilNextTick); // Function Icarus.VehicleComponentModel.SetModelDirty // (Final|Native|Public|BlueprintCallable) // @ game+0x18939b0
	void OnRep_Model(); // Function Icarus.VehicleComponentModel.OnRep_Model // (Final|Native|Protected) // @ game+0x18936d0
	struct AVehicleBase* GetVehicle(); // Function Icarus.VehicleComponentModel.GetVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1892310
};

// Class Icarus.VehicleRecorderComponent
// Size: 0x160 (Inherited: 0x160)
struct UVehicleRecorderComponent : UActorStateRecorderComponent {
};

// Class Icarus.VehicleSetupsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVehicleSetupsLibrary : URowLibrary {

	struct FVehicleSetupsRowHandle StructToRowHandle(struct FVehicleSetupsEnum EnumValue); // Function Icarus.VehicleSetupsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893cc0
	struct UE4::FName StructToName(struct FVehicleSetupsEnum EnumValue); // Function Icarus.VehicleSetupsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893b80
	int32_t StructToInt(struct FVehicleSetupsEnum EnumValue); // Function Icarus.VehicleSetupsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893a40
	struct FVehicleSetupsEnum RowHandleToStruct(struct FVehicleSetupsRowHandle RowHandle); // Function Icarus.VehicleSetupsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893830
	void RemoveRowFromVehicleSetupsTable(struct UE4::FName Name); // Function Icarus.VehicleSetupsLibrary.RemoveRowFromVehicleSetupsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1893730
	void RefreshConstants(); // Function Icarus.VehicleSetupsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18936f0
	int32_t NumRows(); // Function Icarus.VehicleSetupsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893650
	bool NotEqual_EnumName(struct FVehicleSetupsEnum A, struct UE4::FName B); // Function Icarus.VehicleSetupsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893470
	bool NotEqual_EnumEnum(struct FVehicleSetupsEnum A, struct FVehicleSetupsEnum B); // Function Icarus.VehicleSetupsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893290
	struct FVehicleSetupsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VehicleSetupsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893170
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VehicleSetupsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1893050
	struct FVehicleSetupsRowHandle MakeVehicleSetupsFromIndex(int32_t Index); // Function Icarus.VehicleSetupsLibrary.MakeVehicleSetupsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892e10
	struct FVehicleSetupsEnum MakeVehicleSetupsEnum(struct FVehicleSetupsEnum Enum); // Function Icarus.VehicleSetupsLibrary.MakeVehicleSetupsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892d90
	struct FVehicleSetupsRowHandle MakeVehicleSetups(struct UE4::FName RowName); // Function Icarus.VehicleSetupsLibrary.MakeVehicleSetups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892cf0
	struct FVehicleSetupsRowHandle MakeLiteralVehicleSetups(struct FVehicleSetupsRowHandle RowHandle); // Function Icarus.VehicleSetupsLibrary.MakeLiteralVehicleSetups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892b50
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VehicleSetupsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1892a30
	struct FVehicleSetupsEnum IntToStruct(int32_t IntValue); // Function Icarus.VehicleSetupsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892910
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VehicleSetupsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18927f0
	void GetVehicleSetupsStruct(struct FVehicleSetupsRowHandle RowHandle, struct FVehicleSetup& VehicleSetups, enum class EValid& Paths); // Function Icarus.VehicleSetupsLibrary.GetVehicleSetupsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1892340
	bool EqualEqual_FVehicleSetupsRowHandleFVehicleSetupsRowHandle(struct FVehicleSetupsRowHandle RowHandleA, struct FVehicleSetupsRowHandle RowHandleB); // Function Icarus.VehicleSetupsLibrary.EqualEqual_FVehicleSetupsRowHandleFVehicleSetupsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892060
	bool EqualEqual_EnumEnum(struct FVehicleSetupsEnum A, struct FVehicleSetupsEnum B); // Function Icarus.VehicleSetupsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1891e80
	struct FVehicleSetupsRowHandle CastToVehicleSetupsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VehicleSetupsLibrary.CastToVehicleSetupsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1891c40
	void BreakVehicleSetupsEnum(struct FVehicleSetupsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VehicleSetupsLibrary.BreakVehicleSetupsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1891980
	void AddRowToVehicleSetupsTable(struct UE4::FName Name, struct FVehicleSetup Data, struct FVehicleSetupsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VehicleSetupsLibrary.AddRowToVehicleSetupsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18915c0
};

// Class Icarus.VehicleSetupsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVehicleSetupsTable : UIcarusDataTable {
};

// Class Icarus.VehicularComponent
// Size: 0x140 (Inherited: 0xd0)
struct UVehicularComponent : UTraitComponent {
	int32_t AttachedComponentSlotIndex; // 0xd0(0x04)
	char pad_D4[0xc]; // 0xd4(0x0c)
	struct FVehicleComponentSlot AttachedComponentSlot; // 0xe0(0x60)

	void OnRep_AttachedComponentSlotIndex(); // Function Icarus.VehicularComponent.OnRep_AttachedComponentSlotIndex // (Final|Native|Protected) // @ game+0x18936b0
	bool IsFunctional(); // Function Icarus.VehicularComponent.IsFunctional // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1613120
	bool GetVehicularData(struct FVehicularData& OutData); // Function Icarus.VehicularComponent.GetVehicularData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x18924e0
	struct AVehicleBase* GetOwnerVehicle(); // Function Icarus.VehicularComponent.GetOwnerVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18922e0
};

// Class Icarus.VehicularLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVehicularLibrary : URowLibrary {

	struct FVehicularRowHandle StructToRowHandle(struct FVehicularEnum EnumValue); // Function Icarus.VehicularLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893d70
	struct UE4::FName StructToName(struct FVehicularEnum EnumValue); // Function Icarus.VehicularLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893c20
	int32_t StructToInt(struct FVehicularEnum EnumValue); // Function Icarus.VehicularLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893ae0
	struct FVehicularEnum RowHandleToStruct(struct FVehicularRowHandle RowHandle); // Function Icarus.VehicularLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18938f0
	void RemoveRowFromVehicularTable(struct UE4::FName Name); // Function Icarus.VehicularLibrary.RemoveRowFromVehicularTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18937b0
	void RefreshConstants(); // Function Icarus.VehicularLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1893710
	int32_t NumRows(); // Function Icarus.VehicularLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893680
	bool NotEqual_EnumName(struct FVehicularEnum A, struct UE4::FName B); // Function Icarus.VehicularLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893560
	bool NotEqual_EnumEnum(struct FVehicularEnum A, struct FVehicularEnum B); // Function Icarus.VehicularLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893380
	struct FVehicularEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VehicularLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1893200
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VehicularLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18930e0
	struct FVehicularRowHandle MakeVehicularFromIndex(int32_t Index); // Function Icarus.VehicularLibrary.MakeVehicularFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892fc0
	struct FVehicularEnum MakeVehicularEnum(struct FVehicularEnum Enum); // Function Icarus.VehicularLibrary.MakeVehicularEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892f40
	struct FVehicularRowHandle MakeVehicular(struct UE4::FName RowName); // Function Icarus.VehicularLibrary.MakeVehicular // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892ea0
	struct FVehicularRowHandle MakeLiteralVehicular(struct FVehicularRowHandle RowHandle); // Function Icarus.VehicularLibrary.MakeLiteralVehicular // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1892c20
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VehicularLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1892ac0
	struct FVehicularEnum IntToStruct(int32_t IntValue); // Function Icarus.VehicularLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18929a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VehicularLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1892880
	void GetVehicularStruct(struct FVehicularRowHandle RowHandle, struct FVehicularData& Vehicular, enum class EValid& Paths); // Function Icarus.VehicularLibrary.GetVehicularStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1892650
	bool EqualEqual_FVehicularRowHandleFVehicularRowHandle(struct FVehicularRowHandle RowHandleA, struct FVehicularRowHandle RowHandleB); // Function Icarus.VehicularLibrary.EqualEqual_FVehicularRowHandleFVehicularRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18921a0
	bool EqualEqual_EnumEnum(struct FVehicularEnum A, struct FVehicularEnum B); // Function Icarus.VehicularLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1891f70
	struct FVehicularRowHandle CastToVehicularRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VehicularLibrary.CastToVehicularRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1891d60
	void BreakVehicularEnum(struct FVehicularEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VehicularLibrary.BreakVehicularEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1891ae0
	void AddRowToVehicularTable(struct UE4::FName Name, struct FVehicularData Data, struct FVehicularRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VehicularLibrary.AddRowToVehicularTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18917a0
};

// Class Icarus.VehicularTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVehicularTable : UIcarusDataTable {
};

// Class Icarus.VersionSubsystem
// Size: 0x70 (Inherited: 0x30)
struct UVersionSubsystem : UGameInstanceSubsystem {
	struct FIcarusGameVersion IcarusVersion; // 0x30(0x30)
	struct FIcarusBackendVersion BackendVersion; // 0x60(0x0c)
	char pad_6C[0x4]; // 0x6c(0x04)

	struct FIcarusGameVersion GetIcarusVersion(); // Function Icarus.VersionSubsystem.GetIcarusVersion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1897c20
	struct FString GetFormattedVersionString(struct FIcarusGameVersion& Version, enum class EIcarusGameVersionFlags VersionMask); // Function Icarus.VersionSubsystem.GetFormattedVersionString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1897ad0
	struct FString GetFormattedVersion(enum class EIcarusGameVersionFlags VersionMask); // Function Icarus.VersionSubsystem.GetFormattedVersion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18979f0
	struct FIcarusBackendVersion GetBackendVersion(); // Function Icarus.VersionSubsystem.GetBackendVersion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1897980
};

// Class Icarus.VirtualStats
// Size: 0xb0 (Inherited: 0x28)
struct UVirtualStats : UObject {
	char pad_28[0x88]; // 0x28(0x88)
};

// Class Icarus.VirtualStatFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVirtualStatFunctionLibrary : UBlueprintFunctionLibrary {

	bool IsVirtualStat(struct FStatsEnum Stat); // Function Icarus.VirtualStatFunctionLibrary.IsVirtualStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18984a0
};

// Class Icarus.VirtualStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVirtualStatsLibrary : UStatsLibrary {

	struct FVirtualStatsEnum MakeVirtualStatsEnum(struct FVirtualStatsEnum Enum); // Function Icarus.VirtualStatsLibrary.MakeVirtualStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898710
	bool IsVirtualStatLogging(); // Function Icarus.VirtualStatsLibrary.IsVirtualStatLogging // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898540
	bool Filter(int32_t Index); // Function Icarus.VirtualStatsLibrary.Filter // (Final|Native|Static|Public) // @ game+0x18978f0
	void EnableVirtualStatsLogging(bool bEnable); // Function Icarus.VirtualStatsLibrary.EnableVirtualStatsLogging // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1897410
	void BreakVirtualStatsEnum(struct FVirtualStatsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VirtualStatsLibrary.BreakVirtualStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1896db0
};

// Class Icarus.VocalisationSettingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVocalisationSettingsLibrary : URowLibrary {

	struct FVocalisationSettingsRowHandle StructToRowHandle(struct FVocalisationSettingsEnum EnumValue); // Function Icarus.VocalisationSettingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18996c0
	struct UE4::FName StructToName(struct FVocalisationSettingsEnum EnumValue); // Function Icarus.VocalisationSettingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899580
	int32_t StructToInt(struct FVocalisationSettingsEnum EnumValue); // Function Icarus.VocalisationSettingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899440
	struct FVocalisationSettingsEnum RowHandleToStruct(struct FVocalisationSettingsRowHandle RowHandle); // Function Icarus.VocalisationSettingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18992c0
	void RemoveRowFromVocalisationSettingsTable(struct UE4::FName Name); // Function Icarus.VocalisationSettingsLibrary.RemoveRowFromVocalisationSettingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18991c0
	void RefreshConstants(); // Function Icarus.VocalisationSettingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1899180
	int32_t NumRows(); // Function Icarus.VocalisationSettingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899100
	bool NotEqual_EnumName(struct FVocalisationSettingsEnum A, struct UE4::FName B); // Function Icarus.VocalisationSettingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898f20
	bool NotEqual_EnumEnum(struct FVocalisationSettingsEnum A, struct FVocalisationSettingsEnum B); // Function Icarus.VocalisationSettingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898d40
	struct FVocalisationSettingsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VocalisationSettingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898c20
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VocalisationSettingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1898b00
	struct FVocalisationSettingsRowHandle MakeVocalisationSettingsFromIndex(int32_t Index); // Function Icarus.VocalisationSettingsLibrary.MakeVocalisationSettingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18988c0
	struct FVocalisationSettingsEnum MakeVocalisationSettingsEnum(struct FVocalisationSettingsEnum Enum); // Function Icarus.VocalisationSettingsLibrary.MakeVocalisationSettingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898840
	struct FVocalisationSettingsRowHandle MakeVocalisationSettings(struct UE4::FName RowName); // Function Icarus.VocalisationSettingsLibrary.MakeVocalisationSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18987a0
	struct FVocalisationSettingsRowHandle MakeLiteralVocalisationSettings(struct FVocalisationSettingsRowHandle RowHandle); // Function Icarus.VocalisationSettingsLibrary.MakeLiteralVocalisationSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898570
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VocalisationSettingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1898380
	struct FVocalisationSettingsEnum IntToStruct(int32_t IntValue); // Function Icarus.VocalisationSettingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898260
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VocalisationSettingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1898140
	void GetVocalisationSettingsStruct(struct FVocalisationSettingsRowHandle RowHandle, struct FVocalisationSetting& VocalisationSettings, enum class EValid& Paths); // Function Icarus.VocalisationSettingsLibrary.GetVocalisationSettingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1897d50
	bool EqualEqual_FVocalisationSettingsRowHandleFVocalisationSettingsRowHandle(struct FVocalisationSettingsRowHandle RowHandleA, struct FVocalisationSettingsRowHandle RowHandleB); // Function Icarus.VocalisationSettingsLibrary.EqualEqual_FVocalisationSettingsRowHandleFVocalisationSettingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1897670
	bool EqualEqual_EnumEnum(struct FVocalisationSettingsEnum A, struct FVocalisationSettingsEnum B); // Function Icarus.VocalisationSettingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1897490
	struct FVocalisationSettingsRowHandle CastToVocalisationSettingsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VocalisationSettingsLibrary.CastToVocalisationSettingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18971d0
	void BreakVocalisationSettingsEnum(struct FVocalisationSettingsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VocalisationSettingsLibrary.BreakVocalisationSettingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1896f10
	void AddRowToVocalisationSettingsTable(struct UE4::FName Name, struct FVocalisationSetting Data, struct FVocalisationSettingsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VocalisationSettingsLibrary.AddRowToVocalisationSettingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1896910
};

// Class Icarus.VocalisationSettingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVocalisationSettingsTable : UIcarusDataTable {
};

// Class Icarus.VocalisationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVocalisationsLibrary : URowLibrary {

	struct FVocalisationsRowHandle StructToRowHandle(struct FVocalisationsEnum EnumValue); // Function Icarus.VocalisationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899770
	struct UE4::FName StructToName(struct FVocalisationsEnum EnumValue); // Function Icarus.VocalisationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899620
	int32_t StructToInt(struct FVocalisationsEnum EnumValue); // Function Icarus.VocalisationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18994e0
	struct FVocalisationsEnum RowHandleToStruct(struct FVocalisationsRowHandle RowHandle); // Function Icarus.VocalisationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899380
	void RemoveRowFromVocalisationsTable(struct UE4::FName Name); // Function Icarus.VocalisationsLibrary.RemoveRowFromVocalisationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1899240
	void RefreshConstants(); // Function Icarus.VocalisationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18991a0
	int32_t NumRows(); // Function Icarus.VocalisationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899130
	bool NotEqual_EnumName(struct FVocalisationsEnum A, struct UE4::FName B); // Function Icarus.VocalisationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1899010
	bool NotEqual_EnumEnum(struct FVocalisationsEnum A, struct FVocalisationsEnum B); // Function Icarus.VocalisationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898e30
	struct FVocalisationsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VocalisationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898cb0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VocalisationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1898b90
	struct FVocalisationsRowHandle MakeVocalisationsFromIndex(int32_t Index); // Function Icarus.VocalisationsLibrary.MakeVocalisationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898a70
	struct FVocalisationsEnum MakeVocalisationsEnum(struct FVocalisationsEnum Enum); // Function Icarus.VocalisationsLibrary.MakeVocalisationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18989f0
	struct FVocalisationsRowHandle MakeVocalisations(struct UE4::FName RowName); // Function Icarus.VocalisationsLibrary.MakeVocalisations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898950
	struct FVocalisationsRowHandle MakeLiteralVocalisations(struct FVocalisationsRowHandle RowHandle); // Function Icarus.VocalisationsLibrary.MakeLiteralVocalisations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1898640
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VocalisationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1898410
	struct FVocalisationsEnum IntToStruct(int32_t IntValue); // Function Icarus.VocalisationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18982f0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VocalisationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18981d0
	void GetVocalisationsStruct(struct FVocalisationsRowHandle RowHandle, struct FVocalisationData& Vocalisations, enum class EValid& Paths); // Function Icarus.VocalisationsLibrary.GetVocalisationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1897ee0
	bool EqualEqual_FVocalisationsRowHandleFVocalisationsRowHandle(struct FVocalisationsRowHandle RowHandleA, struct FVocalisationsRowHandle RowHandleB); // Function Icarus.VocalisationsLibrary.EqualEqual_FVocalisationsRowHandleFVocalisationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18977b0
	bool EqualEqual_EnumEnum(struct FVocalisationsEnum A, struct FVocalisationsEnum B); // Function Icarus.VocalisationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1897580
	struct FVocalisationsRowHandle CastToVocalisationsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VocalisationsLibrary.CastToVocalisationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18972f0
	void BreakVocalisationsEnum(struct FVocalisationsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VocalisationsLibrary.BreakVocalisationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1897070
	void AddRowToVocalisationsTable(struct UE4::FName Name, struct FVocalisationData Data, struct FVocalisationsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VocalisationsLibrary.AddRowToVocalisationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1896b50
};

// Class Icarus.VocalisationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVocalisationsTable : UIcarusDataTable {
};

// Class Icarus.VoxelDistributionRegionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVoxelDistributionRegionLibrary : URowLibrary {

	struct FVoxelDistributionRegionRowHandle StructToRowHandle(struct FVoxelDistributionRegionEnum EnumValue); // Function Icarus.VoxelDistributionRegionLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e590
	struct UE4::FName StructToName(struct FVoxelDistributionRegionEnum EnumValue); // Function Icarus.VoxelDistributionRegionLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e450
	int32_t StructToInt(struct FVoxelDistributionRegionEnum EnumValue); // Function Icarus.VoxelDistributionRegionLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e310
	struct FVoxelDistributionRegionEnum RowHandleToStruct(struct FVoxelDistributionRegionRowHandle RowHandle); // Function Icarus.VoxelDistributionRegionLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e190
	void RemoveRowFromVoxelDistributionRegionTable(struct UE4::FName Name); // Function Icarus.VoxelDistributionRegionLibrary.RemoveRowFromVoxelDistributionRegionTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x189e090
	void RefreshConstants(); // Function Icarus.VoxelDistributionRegionLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x189e050
	int32_t NumRows(); // Function Icarus.VoxelDistributionRegionLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189de00
	bool NotEqual_EnumName(struct FVoxelDistributionRegionEnum A, struct UE4::FName B); // Function Icarus.VoxelDistributionRegionLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189dc20
	bool NotEqual_EnumEnum(struct FVoxelDistributionRegionEnum A, struct FVoxelDistributionRegionEnum B); // Function Icarus.VoxelDistributionRegionLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189da40
	struct FVoxelDistributionRegionEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VoxelDistributionRegionLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d920
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VoxelDistributionRegionLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x189d800
	struct FVoxelDistributionRegionRowHandle MakeVoxelDistributionRegionFromIndex(int32_t Index); // Function Icarus.VoxelDistributionRegionLibrary.MakeVoxelDistributionRegionFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d5c0
	struct FVoxelDistributionRegionEnum MakeVoxelDistributionRegionEnum(struct FVoxelDistributionRegionEnum Enum); // Function Icarus.VoxelDistributionRegionLibrary.MakeVoxelDistributionRegionEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d540
	struct FVoxelDistributionRegionRowHandle MakeVoxelDistributionRegion(struct UE4::FName RowName); // Function Icarus.VoxelDistributionRegionLibrary.MakeVoxelDistributionRegion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d4a0
	struct FVoxelDistributionRegionRowHandle MakeLiteralVoxelDistributionRegion(struct FVoxelDistributionRegionRowHandle RowHandle); // Function Icarus.VoxelDistributionRegionLibrary.MakeLiteralVoxelDistributionRegion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d300
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VoxelDistributionRegionLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x189d1e0
	struct FVoxelDistributionRegionEnum IntToStruct(int32_t IntValue); // Function Icarus.VoxelDistributionRegionLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d0c0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VoxelDistributionRegionLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x189cfa0
	void GetVoxelDistributionRegionStruct(struct FVoxelDistributionRegionRowHandle RowHandle, struct FVoxelDistributionRegion& VoxelDistributionRegion, enum class EValid& Paths); // Function Icarus.VoxelDistributionRegionLibrary.GetVoxelDistributionRegionStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x189cb50
	bool EqualEqual_FVoxelDistributionRegionRowHandleFVoxelDistributionRegionRowHandle(struct FVoxelDistributionRegionRowHandle RowHandleA, struct FVoxelDistributionRegionRowHandle RowHandleB); // Function Icarus.VoxelDistributionRegionLibrary.EqualEqual_FVoxelDistributionRegionRowHandleFVoxelDistributionRegionRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189c820
	bool EqualEqual_EnumEnum(struct FVoxelDistributionRegionEnum A, struct FVoxelDistributionRegionEnum B); // Function Icarus.VoxelDistributionRegionLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189c640
	struct FVoxelDistributionRegionRowHandle CastToVoxelDistributionRegionRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VoxelDistributionRegionLibrary.CastToVoxelDistributionRegionRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x189c370
	void BreakVoxelDistributionRegionEnum(struct FVoxelDistributionRegionEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VoxelDistributionRegionLibrary.BreakVoxelDistributionRegionEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x189c0b0
	void AddRowToVoxelDistributionRegionTable(struct UE4::FName Name, struct FVoxelDistributionRegion Data, struct FVoxelDistributionRegionRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VoxelDistributionRegionLibrary.AddRowToVoxelDistributionRegionTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x189ba80
};

// Class Icarus.VoxelDistributionRegionTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVoxelDistributionRegionTable : UIcarusDataTable {
};

// Class Icarus.VoxelMaterialMapLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVoxelMaterialMapLibrary : URowLibrary {

	struct FVoxelMaterialMapRowHandle StructToRowHandle(struct FVoxelMaterialMapEnum EnumValue); // Function Icarus.VoxelMaterialMapLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e640
	struct UE4::FName StructToName(struct FVoxelMaterialMapEnum EnumValue); // Function Icarus.VoxelMaterialMapLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e4f0
	int32_t StructToInt(struct FVoxelMaterialMapEnum EnumValue); // Function Icarus.VoxelMaterialMapLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e3b0
	struct FVoxelMaterialMapEnum RowHandleToStruct(struct FVoxelMaterialMapRowHandle RowHandle); // Function Icarus.VoxelMaterialMapLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189e250
	void RemoveRowFromVoxelMaterialMapTable(struct UE4::FName Name); // Function Icarus.VoxelMaterialMapLibrary.RemoveRowFromVoxelMaterialMapTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x189e110
	void RefreshConstants(); // Function Icarus.VoxelMaterialMapLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x189e070
	int32_t NumRows(); // Function Icarus.VoxelMaterialMapLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189de30
	bool NotEqual_EnumName(struct FVoxelMaterialMapEnum A, struct UE4::FName B); // Function Icarus.VoxelMaterialMapLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189dd10
	bool NotEqual_EnumEnum(struct FVoxelMaterialMapEnum A, struct FVoxelMaterialMapEnum B); // Function Icarus.VoxelMaterialMapLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189db30
	struct FVoxelMaterialMapEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VoxelMaterialMapLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d9b0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VoxelMaterialMapLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x189d890
	struct FVoxelMaterialMapRowHandle MakeVoxelMaterialMapFromIndex(int32_t Index); // Function Icarus.VoxelMaterialMapLibrary.MakeVoxelMaterialMapFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d770
	struct FVoxelMaterialMapEnum MakeVoxelMaterialMapEnum(struct FVoxelMaterialMapEnum Enum); // Function Icarus.VoxelMaterialMapLibrary.MakeVoxelMaterialMapEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d6f0
	struct FVoxelMaterialMapRowHandle MakeVoxelMaterialMap(struct UE4::FName RowName); // Function Icarus.VoxelMaterialMapLibrary.MakeVoxelMaterialMap // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d650
	struct FVoxelMaterialMapRowHandle MakeLiteralVoxelMaterialMap(struct FVoxelMaterialMapRowHandle RowHandle); // Function Icarus.VoxelMaterialMapLibrary.MakeLiteralVoxelMaterialMap // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d3d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VoxelMaterialMapLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x189d270
	struct FVoxelMaterialMapEnum IntToStruct(int32_t IntValue); // Function Icarus.VoxelMaterialMapLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189d150
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VoxelMaterialMapLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x189d030
	void GetVoxelMaterialMapStruct(struct FVoxelMaterialMapRowHandle RowHandle, struct FVoxelMaterialMap& VoxelMaterialMap, enum class EValid& Paths); // Function Icarus.VoxelMaterialMapLibrary.GetVoxelMaterialMapStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x189cd90
	bool EqualEqual_FVoxelMaterialMapRowHandleFVoxelMaterialMapRowHandle(struct FVoxelMaterialMapRowHandle RowHandleA, struct FVoxelMaterialMapRowHandle RowHandleB); // Function Icarus.VoxelMaterialMapLibrary.EqualEqual_FVoxelMaterialMapRowHandleFVoxelMaterialMapRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189c960
	bool EqualEqual_EnumEnum(struct FVoxelMaterialMapEnum A, struct FVoxelMaterialMapEnum B); // Function Icarus.VoxelMaterialMapLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x189c730
	struct FVoxelMaterialMapRowHandle CastToVoxelMaterialMapRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VoxelMaterialMapLibrary.CastToVoxelMaterialMapRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x189c490
	void BreakVoxelMaterialMapEnum(struct FVoxelMaterialMapEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VoxelMaterialMapLibrary.BreakVoxelMaterialMapEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x189c210
	void AddRowToVoxelMaterialMapTable(struct UE4::FName Name, struct FVoxelMaterialMap Data, struct FVoxelMaterialMapRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VoxelMaterialMapLibrary.AddRowToVoxelMaterialMapTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x189bdb0
};

// Class Icarus.VoxelMaterialMapTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVoxelMaterialMapTable : UIcarusDataTable {
};

// Class Icarus.VoxelRecorderComponent
// Size: 0x190 (Inherited: 0x160)
struct UVoxelRecorderComponent : UActorStateRecorderComponent {
	struct FVoxelSaveData VoxelSaveData; // 0x158(0x30)
};

// Class Icarus.SpawnedVoxelRecorderComponent
// Size: 0x190 (Inherited: 0x190)
struct USpawnedVoxelRecorderComponent : UVoxelRecorderComponent {
};

// Class Icarus.VoxelResource
// Size: 0x4d0 (Inherited: 0x2b0)
struct AVoxelResource : AIcarusActor {
	bool bSaveToDatabase; // 0x2b0(0x01)
	char pad_2B1[0x7]; // 0x2b1(0x07)
	struct UProceduralMeshComponent* GeneratedMeshComponent; // 0x2b8(0x08)
	struct USceneComponent* ReferenceMeshContainer; // 0x2c0(0x08)
	struct UStaticMeshComponent* NavmeshProxyComponent; // 0x2c8(0x08)
	char pad_2D0[0x14]; // 0x2d0(0x14)
	struct FVoxelDistributionRegionRowHandle ResourcePool; // 0x2e4(0x18)
	char pad_2FC[0x64]; // 0x2fc(0x64)
	struct FVoxelSetupDataRowHandle VoxelSetupRow; // 0x360(0x18)
	bool bUseMaterialFromRow; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	float VoxelSize; // 0x380(0x04)
	float VoxelSmoothing; // 0x384(0x04)
	float ExteriorNormalSmoothing; // 0x388(0x04)
	int32_t DebugInfoOutputMode; // 0x38c(0x04)
	int32_t VoxelLife; // 0x390(0x04)
	int32_t VoxelInstanceSeed; // 0x394(0x04)
	bool bUseVoxelCache; // 0x398(0x01)
	bool bUseComplexCache; // 0x399(0x01)
	char pad_39A[0x2]; // 0x39a(0x02)
	float AutoDestroyPercentage; // 0x39c(0x04)
	bool bWasMinedInstantly; // 0x3a0(0x01)
	bool bCanBeMinedInstantly; // 0x3a1(0x01)
	char pad_3A2[0xa]; // 0x3a2(0x0a)
	float ResourceVolume; // 0x3ac(0x04)
	float TotalResourceCount; // 0x3b0(0x04)
	char pad_3B4[0x4c]; // 0x3b4(0x4c)
	struct TArray<struct FMinedSphere> MinedSpheres; // 0x400(0x10)
	struct UMaterialInterface* MiningDecalMaterial; // 0x410(0x08)
	char pad_418[0x88]; // 0x418(0x88)
	bool bUseVertexColourMasks; // 0x4a0(0x01)
	char pad_4A1[0x3]; // 0x4a1(0x03)
	float UVProjectionIslandDetectionRadius; // 0x4a4(0x04)
	char pad_4A8[0x12]; // 0x4a8(0x12)
	bool bVoxelFullyMined; // 0x4ba(0x01)
	char pad_4BB[0x5]; // 0x4bb(0x05)
	struct UFLODActorComponent* FLODActorComponent; // 0x4c0(0x08)
	char pad_4C8[0x8]; // 0x4c8(0x08)

	void SetupResourceMaterials(struct TSoftObjectPtr<UMaterialInterface>& Material); // Function Icarus.VoxelResource.SetupResourceMaterials // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	void ResourcesMined(float ResourceMinedCount, struct AIcarusPlayerController* LastHitPlayerController); // Function Icarus.VoxelResource.ResourcesMined // (Native|Event|Public|BlueprintEvent) // @ game+0x1770b80
	void ReadOrGenerateVoxelCache(); // Function Icarus.VoxelResource.ReadOrGenerateVoxelCache // (Final|Native|Public|BlueprintCallable) // @ game+0x189e030
	void OnRep_MinedSphereAdded(); // Function Icarus.VoxelResource.OnRep_MinedSphereAdded // (Final|Native|Private) // @ game+0x189e010
	void OnActorDamaged(struct FIcarusDamagePacket DamagePacket); // Function Icarus.VoxelResource.OnActorDamaged // (Final|Native|Private) // @ game+0x189de60
	void Initialise(); // Function Icarus.VoxelResource.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x189cf80
	float GetRemainingResources(); // Function Icarus.VoxelResource.GetRemainingResources // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x189cb20
	struct TArray<struct FVoxelMinedSphere> GetMinedSpheres(); // Function Icarus.VoxelResource.GetMinedSpheres // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x189caa0
	void ChangeDebugCoordinate(struct FIntVector Coordinate); // Function Icarus.VoxelResource.ChangeDebugCoordinate // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x189c5b0
	void AddMinedSpheres(struct TArray<struct FVoxelMinedSphere>& Spheres); // Function Icarus.VoxelResource.AddMinedSpheres // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x189b9d0
};

// Class Icarus.VoxelResourceDistribution
// Size: 0xc0 (Inherited: 0xb0)
struct UVoxelResourceDistribution : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)

	void SetDistributionSeed(int32_t Seed); // Function Icarus.VoxelResourceDistribution.SetDistributionSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x18a48a0
};

// Class Icarus.VoxelSetupDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVoxelSetupDataLibrary : URowLibrary {

	struct FVoxelSetupDataRowHandle StructToRowHandle(struct FVoxelSetupDataEnum EnumValue); // Function Icarus.VoxelSetupDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4cf0
	struct UE4::FName StructToName(struct FVoxelSetupDataEnum EnumValue); // Function Icarus.VoxelSetupDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4b10
	int32_t StructToInt(struct FVoxelSetupDataEnum EnumValue); // Function Icarus.VoxelSetupDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4930
	struct FVoxelSetupDataEnum RowHandleToStruct(struct FVoxelSetupDataRowHandle RowHandle); // Function Icarus.VoxelSetupDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4660
	void RemoveRowFromVoxelSetupDataTable(struct UE4::FName Name); // Function Icarus.VoxelSetupDataLibrary.RemoveRowFromVoxelSetupDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18a44e0
	void RefreshConstants(); // Function Icarus.VoxelSetupDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18a4480
	int32_t NumRows(); // Function Icarus.VoxelSetupDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a43f0
	bool NotEqual_EnumName(struct FVoxelSetupDataEnum A, struct UE4::FName B); // Function Icarus.VoxelSetupDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4120
	bool NotEqual_EnumEnum(struct FVoxelSetupDataEnum A, struct FVoxelSetupDataEnum B); // Function Icarus.VoxelSetupDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3e50
	struct FVoxelSetupDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.VoxelSetupDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3ca0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.VoxelSetupDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18a3af0
	struct FVoxelSetupDataRowHandle MakeVoxelSetupDataFromIndex(int32_t Index); // Function Icarus.VoxelSetupDataLibrary.MakeVoxelSetupDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3700
	struct FVoxelSetupDataEnum MakeVoxelSetupDataEnum(struct FVoxelSetupDataEnum Enum); // Function Icarus.VoxelSetupDataLibrary.MakeVoxelSetupDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3680
	struct FVoxelSetupDataRowHandle MakeVoxelSetupData(struct UE4::FName RowName); // Function Icarus.VoxelSetupDataLibrary.MakeVoxelSetupData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a35e0
	struct FVoxelSetupDataRowHandle MakeLiteralVoxelSetupData(struct FVoxelSetupDataRowHandle RowHandle); // Function Icarus.VoxelSetupDataLibrary.MakeLiteralVoxelSetupData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3370
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.VoxelSetupDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18a31c0
	struct FVoxelSetupDataEnum IntToStruct(int32_t IntValue); // Function Icarus.VoxelSetupDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3010
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.VoxelSetupDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18a2e60
	void GetVoxelSetupDataStruct(struct FVoxelSetupDataRowHandle RowHandle, struct FVoxelSetupData& VoxelSetupData, enum class EValid& Paths); // Function Icarus.VoxelSetupDataLibrary.GetVoxelSetupDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a2800
	bool EqualEqual_FVoxelSetupDataRowHandleFVoxelSetupDataRowHandle(struct FVoxelSetupDataRowHandle RowHandleA, struct FVoxelSetupDataRowHandle RowHandleB); // Function Icarus.VoxelSetupDataLibrary.EqualEqual_FVoxelSetupDataRowHandleFVoxelSetupDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a2440
	bool EqualEqual_EnumEnum(struct FVoxelSetupDataEnum A, struct FVoxelSetupDataEnum B); // Function Icarus.VoxelSetupDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a2170
	struct FVoxelSetupDataRowHandle CastToVoxelSetupDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.VoxelSetupDataLibrary.CastToVoxelSetupDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a1e10
	void BreakVoxelSetupDataEnum(struct FVoxelSetupDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.VoxelSetupDataLibrary.BreakVoxelSetupDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18a19f0
	void AddRowToVoxelSetupDataTable(struct UE4::FName Name, struct FVoxelSetupData Data, struct FVoxelSetupDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.VoxelSetupDataLibrary.AddRowToVoxelSetupDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a1330
};

// Class Icarus.VoxelSetupDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVoxelSetupDataTable : UIcarusDataTable {
};

// Class Icarus.WaterComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UWaterComponent : UResourceNetworkComponent {

	bool GetWaterData(struct FWaterData& OutData); // Function Icarus.WaterComponent.GetWaterData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x18a2990
};

// Class Icarus.WaterLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWaterLibrary : URowLibrary {

	struct FWaterRowHandle StructToRowHandle(struct FWaterEnum EnumValue); // Function Icarus.WaterLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4da0
	struct UE4::FName StructToName(struct FWaterEnum EnumValue); // Function Icarus.WaterLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4bb0
	int32_t StructToInt(struct FWaterEnum EnumValue); // Function Icarus.WaterLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a49d0
	struct FWaterEnum RowHandleToStruct(struct FWaterRowHandle RowHandle); // Function Icarus.WaterLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4720
	void RemoveRowFromWaterTable(struct UE4::FName Name); // Function Icarus.WaterLibrary.RemoveRowFromWaterTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18a45e0
	void RefreshConstants(); // Function Icarus.WaterLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18a44a0
	int32_t NumRows(); // Function Icarus.WaterLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4420
	bool NotEqual_EnumName(struct FWaterEnum A, struct UE4::FName B); // Function Icarus.WaterLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4210
	bool NotEqual_EnumEnum(struct FWaterEnum A, struct FWaterEnum B); // Function Icarus.WaterLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3f40
	struct FWaterEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WaterLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3d30
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WaterLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18a3b80
	struct FWaterRowHandle MakeWaterFromIndex(int32_t Index); // Function Icarus.WaterLibrary.MakeWaterFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a38b0
	struct FWaterEnum MakeWaterEnum(struct FWaterEnum Enum); // Function Icarus.WaterLibrary.MakeWaterEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3830
	struct FWaterRowHandle MakeWater(struct UE4::FName RowName); // Function Icarus.WaterLibrary.MakeWater // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3790
	struct FWaterRowHandle MakeLiteralWater(struct FWaterRowHandle RowHandle); // Function Icarus.WaterLibrary.MakeLiteralWater // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3440
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WaterLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18a3250
	struct FWaterEnum IntToStruct(int32_t IntValue); // Function Icarus.WaterLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a30a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WaterLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18a2ef0
	void GetWaterStruct(struct FWaterRowHandle RowHandle, struct FWaterData& Water, enum class EValid& Paths); // Function Icarus.WaterLibrary.GetWaterStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a2ce0
	bool EqualEqual_FWaterRowHandleFWaterRowHandle(struct FWaterRowHandle RowHandleA, struct FWaterRowHandle RowHandleB); // Function Icarus.WaterLibrary.EqualEqual_FWaterRowHandleFWaterRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a2580
	bool EqualEqual_EnumEnum(struct FWaterEnum A, struct FWaterEnum B); // Function Icarus.WaterLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a2260
	struct FWaterRowHandle CastToWaterRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WaterLibrary.CastToWaterRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a1f30
	void BreakWaterEnum(struct FWaterEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WaterLibrary.BreakWaterEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18a1b50
	void AddRowToWaterTable(struct UE4::FName Name, struct FWaterData Data, struct FWaterRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WaterLibrary.AddRowToWaterTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a17c0
};

// Class Icarus.WaterSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWaterSetupLibrary : URowLibrary {

	struct FWaterSetupRowHandle StructToRowHandle(struct FWaterSetupEnum EnumValue); // Function Icarus.WaterSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4e50
	struct UE4::FName StructToName(struct FWaterSetupEnum EnumValue); // Function Icarus.WaterSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4c50
	int32_t StructToInt(struct FWaterSetupEnum EnumValue); // Function Icarus.WaterSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4a70
	struct FWaterSetupEnum RowHandleToStruct(struct FWaterSetupRowHandle RowHandle); // Function Icarus.WaterSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a47e0
	void RemoveRowFromWaterSetupTable(struct UE4::FName Name); // Function Icarus.WaterSetupLibrary.RemoveRowFromWaterSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18a4560
	void RefreshConstants(); // Function Icarus.WaterSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18a44c0
	int32_t NumRows(); // Function Icarus.WaterSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4450
	bool NotEqual_EnumName(struct FWaterSetupEnum A, struct UE4::FName B); // Function Icarus.WaterSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4300
	bool NotEqual_EnumEnum(struct FWaterSetupEnum A, struct FWaterSetupEnum B); // Function Icarus.WaterSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a4030
	struct FWaterSetupEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WaterSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3dc0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WaterSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18a3c10
	struct FWaterSetupRowHandle MakeWaterSetupFromIndex(int32_t Index); // Function Icarus.WaterSetupLibrary.MakeWaterSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3a60
	struct FWaterSetupEnum MakeWaterSetupEnum(struct FWaterSetupEnum Enum); // Function Icarus.WaterSetupLibrary.MakeWaterSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a39e0
	struct FWaterSetupRowHandle MakeWaterSetup(struct UE4::FName RowName); // Function Icarus.WaterSetupLibrary.MakeWaterSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3940
	struct FWaterSetupRowHandle MakeLiteralWaterSetup(struct FWaterSetupRowHandle RowHandle); // Function Icarus.WaterSetupLibrary.MakeLiteralWaterSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3510
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WaterSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18a32e0
	struct FWaterSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.WaterSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a3130
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WaterSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18a2f80
	void GetWaterSetupStruct(struct FWaterSetupRowHandle RowHandle, struct FWaterSetup& WaterSetup, enum class EValid& Paths); // Function Icarus.WaterSetupLibrary.GetWaterSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a2b20
	bool EqualEqual_FWaterSetupRowHandleFWaterSetupRowHandle(struct FWaterSetupRowHandle RowHandleA, struct FWaterSetupRowHandle RowHandleB); // Function Icarus.WaterSetupLibrary.EqualEqual_FWaterSetupRowHandleFWaterSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a26c0
	bool EqualEqual_EnumEnum(struct FWaterSetupEnum A, struct FWaterSetupEnum B); // Function Icarus.WaterSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a2350
	struct FWaterSetupRowHandle CastToWaterSetupRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WaterSetupLibrary.CastToWaterSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a2050
	void BreakWaterSetupEnum(struct FWaterSetupEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WaterSetupLibrary.BreakWaterSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18a1cb0
	void AddRowToWaterSetupTable(struct UE4::FName Name, struct FWaterSetup Data, struct FWaterSetupRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WaterSetupLibrary.AddRowToWaterSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a15d0
};

// Class Icarus.WaterSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWaterSetupTable : UIcarusDataTable {
};

// Class Icarus.WaterTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWaterTable : UIcarusDataTable {
};

// Class Icarus.WeaponSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UWeaponSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnProjectileFiredNotify; // 0x30(0x10)

	void BroadcastProjectileFiredDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusItem* Projectile); // Function Icarus.WeaponSubsystem.BroadcastProjectileFiredDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x165d580
};

// Class Icarus.WeatherActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherActionsLibrary : URowLibrary {

	struct FWeatherActionsRowHandle StructToRowHandle(struct FWeatherActionsEnum EnumValue); // Function Icarus.WeatherActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9bb0
	struct UE4::FName StructToName(struct FWeatherActionsEnum EnumValue); // Function Icarus.WeatherActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9a70
	int32_t StructToInt(struct FWeatherActionsEnum EnumValue); // Function Icarus.WeatherActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9930
	struct FWeatherActionsEnum RowHandleToStruct(struct FWeatherActionsRowHandle RowHandle); // Function Icarus.WeatherActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9790
	void RemoveRowFromWeatherActionsTable(struct UE4::FName Name); // Function Icarus.WeatherActionsLibrary.RemoveRowFromWeatherActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18a9690
	void RefreshConstants(); // Function Icarus.WeatherActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18a9560
	int32_t NumRows(); // Function Icarus.WeatherActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a94e0
	bool NotEqual_EnumName(struct FWeatherActionsEnum A, struct UE4::FName B); // Function Icarus.WeatherActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9300
	bool NotEqual_EnumEnum(struct FWeatherActionsEnum A, struct FWeatherActionsEnum B); // Function Icarus.WeatherActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9120
	struct FWeatherActionsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WeatherActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9000
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WeatherActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18a8ee0
	struct FWeatherActionsRowHandle MakeWeatherActionsFromIndex(int32_t Index); // Function Icarus.WeatherActionsLibrary.MakeWeatherActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8ca0
	struct FWeatherActionsEnum MakeWeatherActionsEnum(struct FWeatherActionsEnum Enum); // Function Icarus.WeatherActionsLibrary.MakeWeatherActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8c20
	struct FWeatherActionsRowHandle MakeWeatherActions(struct UE4::FName RowName); // Function Icarus.WeatherActionsLibrary.MakeWeatherActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8b80
	struct FWeatherActionsRowHandle MakeLiteralWeatherActions(struct FWeatherActionsRowHandle RowHandle); // Function Icarus.WeatherActionsLibrary.MakeLiteralWeatherActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a89e0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WeatherActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18a88c0
	struct FWeatherActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a87a0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WeatherActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18a8680
	void GetWeatherActionsStruct(struct FWeatherActionsRowHandle RowHandle, struct FIcarusWeatherActionData& WeatherActions, enum class EValid& Paths); // Function Icarus.WeatherActionsLibrary.GetWeatherActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a8170
	bool EqualEqual_FWeatherActionsRowHandleFWeatherActionsRowHandle(struct FWeatherActionsRowHandle RowHandleA, struct FWeatherActionsRowHandle RowHandleB); // Function Icarus.WeatherActionsLibrary.EqualEqual_FWeatherActionsRowHandleFWeatherActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a7d70
	bool EqualEqual_EnumEnum(struct FWeatherActionsEnum A, struct FWeatherActionsEnum B); // Function Icarus.WeatherActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a7b90
	struct FWeatherActionsRowHandle CastToWeatherActionsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WeatherActionsLibrary.CastToWeatherActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a7950
	void BreakWeatherActionsEnum(struct FWeatherActionsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WeatherActionsLibrary.BreakWeatherActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18a7690
	void AddRowToWeatherActionsTable(struct UE4::FName Name, struct FIcarusWeatherActionData Data, struct FWeatherActionsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WeatherActionsLibrary.AddRowToWeatherActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a70b0
};

// Class Icarus.WeatherActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherActionsTable : UIcarusDataTable {
};

// Class Icarus.WeatherAudioComponent
// Size: 0x200 (Inherited: 0x200)
struct UWeatherAudioComponent : USceneComponent {
};

// Class Icarus.WeatherBiomeGroupsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherBiomeGroupsLibrary : URowLibrary {

	struct FWeatherBiomeGroupsRowHandle StructToRowHandle(struct FWeatherBiomeGroupsEnum EnumValue); // Function Icarus.WeatherBiomeGroupsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9c60
	struct UE4::FName StructToName(struct FWeatherBiomeGroupsEnum EnumValue); // Function Icarus.WeatherBiomeGroupsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9b10
	int32_t StructToInt(struct FWeatherBiomeGroupsEnum EnumValue); // Function Icarus.WeatherBiomeGroupsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a99d0
	struct FWeatherBiomeGroupsEnum RowHandleToStruct(struct FWeatherBiomeGroupsRowHandle RowHandle); // Function Icarus.WeatherBiomeGroupsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9850
	void RemoveRowFromWeatherBiomeGroupsTable(struct UE4::FName Name); // Function Icarus.WeatherBiomeGroupsLibrary.RemoveRowFromWeatherBiomeGroupsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18a9710
	void RefreshConstants(); // Function Icarus.WeatherBiomeGroupsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18a9580
	int32_t NumRows(); // Function Icarus.WeatherBiomeGroupsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9510
	bool NotEqual_EnumName(struct FWeatherBiomeGroupsEnum A, struct UE4::FName B); // Function Icarus.WeatherBiomeGroupsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a93f0
	bool NotEqual_EnumEnum(struct FWeatherBiomeGroupsEnum A, struct FWeatherBiomeGroupsEnum B); // Function Icarus.WeatherBiomeGroupsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9210
	struct FWeatherBiomeGroupsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WeatherBiomeGroupsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a9090
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WeatherBiomeGroupsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18a8f70
	struct FWeatherBiomeGroupsRowHandle MakeWeatherBiomeGroupsFromIndex(int32_t Index); // Function Icarus.WeatherBiomeGroupsLibrary.MakeWeatherBiomeGroupsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8e50
	struct FWeatherBiomeGroupsEnum MakeWeatherBiomeGroupsEnum(struct FWeatherBiomeGroupsEnum Enum); // Function Icarus.WeatherBiomeGroupsLibrary.MakeWeatherBiomeGroupsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8dd0
	struct FWeatherBiomeGroupsRowHandle MakeWeatherBiomeGroups(struct UE4::FName RowName); // Function Icarus.WeatherBiomeGroupsLibrary.MakeWeatherBiomeGroups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8d30
	struct FWeatherBiomeGroupsRowHandle MakeLiteralWeatherBiomeGroups(struct FWeatherBiomeGroupsRowHandle RowHandle); // Function Icarus.WeatherBiomeGroupsLibrary.MakeLiteralWeatherBiomeGroups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8ab0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WeatherBiomeGroupsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18a8950
	struct FWeatherBiomeGroupsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherBiomeGroupsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a8830
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WeatherBiomeGroupsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18a8710
	void GetWeatherBiomeGroupsStruct(struct FWeatherBiomeGroupsRowHandle RowHandle, struct FIcarusWeatherBiomeGroup& WeatherBiomeGroups, enum class EValid& Paths); // Function Icarus.WeatherBiomeGroupsLibrary.GetWeatherBiomeGroupsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a8310
	bool EqualEqual_FWeatherBiomeGroupsRowHandleFWeatherBiomeGroupsRowHandle(struct FWeatherBiomeGroupsRowHandle RowHandleA, struct FWeatherBiomeGroupsRowHandle RowHandleB); // Function Icarus.WeatherBiomeGroupsLibrary.EqualEqual_FWeatherBiomeGroupsRowHandleFWeatherBiomeGroupsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a7eb0
	bool EqualEqual_EnumEnum(struct FWeatherBiomeGroupsEnum A, struct FWeatherBiomeGroupsEnum B); // Function Icarus.WeatherBiomeGroupsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18a7c80
	struct FWeatherBiomeGroupsRowHandle CastToWeatherBiomeGroupsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WeatherBiomeGroupsLibrary.CastToWeatherBiomeGroupsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a7a70
	void BreakWeatherBiomeGroupsEnum(struct FWeatherBiomeGroupsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WeatherBiomeGroupsLibrary.BreakWeatherBiomeGroupsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18a77f0
	void AddRowToWeatherBiomeGroupsTable(struct UE4::FName Name, struct FIcarusWeatherBiomeGroup Data, struct FWeatherBiomeGroupsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WeatherBiomeGroupsLibrary.AddRowToWeatherBiomeGroupsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18a7290
};

// Class Icarus.WeatherBiomeGroupsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherBiomeGroupsTable : UIcarusDataTable {
};

// Class Icarus.WeatherController
// Size: 0x320 (Inherited: 0x220)
struct AWeatherController : AInfo {
	struct FMulticastSparseDelegate WeatherUpdated; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	struct FMulticastInlineDelegate OnWeatherEventStarted; // 0x228(0x10)
	struct FMulticastInlineDelegate OnWeatherEventCompleted; // 0x238(0x10)
	float UpdateCycle; // 0x248(0x04)
	float CurrentUpdateTime; // 0x24c(0x04)
	struct TMap<struct FName, struct FActorCollection> BiomeToActor; // 0x250(0x50)
	struct TMap<struct FWeatherBiomeGroupsEnum, struct FWeatherBiomeGroupForecast> BiomeGroupForecast; // 0x2a0(0x50)
	struct TArray<struct FActiveWeatherInfo> CurrentWeather; // 0x2f0(0x10)
	struct TArray<struct FActiveWeatherInfo> WeatherToRemove; // 0x300(0x10)
	struct UWeatherControllerRecorderComponent* Recorder; // 0x310(0x08)
	struct UIcarusStatContainer* StatContainer; // 0x318(0x08)

	void WeatherEventCompleted(struct UIcarusWeatherAction* ActionComplete); // Function Icarus.WeatherController.WeatherEventCompleted // (Final|Native|Private) // @ game+0x18a9e80
	void UpdateWeather(float Delta); // Function Icarus.WeatherController.UpdateWeather // (Final|Native|Private) // @ game+0x18a9e00
	bool UnregisterActor(struct AIcarusActor* Actor, struct FBiomesRowHandle& Biome); // Function Icarus.WeatherController.UnregisterActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18a9d10
	void SetWorldStats(); // Function Icarus.WeatherController.SetWorldStats // (Final|Native|Protected) // @ game+0x18a9910
	void RestoreWeatherFromDatabase(struct FBiomesRowHandle& BiomeRow, struct FWeatherEventsRowHandle& WeatherRow, int32_t StartTime); // Function Icarus.WeatherController.RestoreWeatherFromDatabase // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1be0000
	bool RegisterActor(struct AIcarusActor* Actor, struct FBiomesRowHandle& Biome); // Function Icarus.WeatherController.RegisterActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18a95a0
	void OnRep_CurrentWeather(); // Function Icarus.WeatherController.OnRep_CurrentWeather // (Final|Native|Private) // @ game+0x18a9540
	bool HasActiveStorm(struct FBiomesRowHandle& BiomeRow); // Function Icarus.WeatherController.HasActiveStorm // (Final|Native|Public|HasOutParms) // @ game+0x18a85d0
	struct FWeatherEventsRowHandle GetWeatherEventForBiome(struct FBiomesRowHandle& Biome, bool& bHasWeatherEvent); // Function Icarus.WeatherController.GetWeatherEventForBiome // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18a84a0
	struct FActiveWeatherInfo GetActiveWeatherInfoForBiome(struct FBiomesRowHandle Biome, enum class EValid& OutValidity); // Function Icarus.WeatherController.GetActiveWeatherInfoForBiome // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18a7ff0
	bool AddWeatherEvent(struct FBiomesRowHandle& Biome, struct FWeatherEventsRowHandle& Event, int32_t StartTime); // Function Icarus.WeatherController.AddWeatherEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18a7500
};

// Class Icarus.WeatherControllerRecorderComponent
// Size: 0xe8 (Inherited: 0xd8)
struct UWeatherControllerRecorderComponent : UIcarusStateRecorderComponent {
	struct TArray<struct FRecordedWeatherEvent> LatestWeatherEvents; // 0xd8(0x10)
};

// Class Icarus.WeatherEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherEventsLibrary : URowLibrary {

	struct FWeatherEventsRowHandle StructToRowHandle(struct FWeatherEventsEnum EnumValue); // Function Icarus.WeatherEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b06d0
	struct UE4::FName StructToName(struct FWeatherEventsEnum EnumValue); // Function Icarus.WeatherEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b0590
	int32_t StructToInt(struct FWeatherEventsEnum EnumValue); // Function Icarus.WeatherEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b0450
	struct FWeatherEventsEnum RowHandleToStruct(struct FWeatherEventsRowHandle RowHandle); // Function Icarus.WeatherEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18af090
	void RemoveRowFromWeatherEventsTable(struct UE4::FName Name); // Function Icarus.WeatherEventsLibrary.RemoveRowFromWeatherEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18aef90
	void RefreshConstants(); // Function Icarus.WeatherEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18aef50
	int32_t NumRows(); // Function Icarus.WeatherEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aeed0
	bool NotEqual_EnumName(struct FWeatherEventsEnum A, struct UE4::FName B); // Function Icarus.WeatherEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aecf0
	bool NotEqual_EnumEnum(struct FWeatherEventsEnum A, struct FWeatherEventsEnum B); // Function Icarus.WeatherEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aeb10
	struct FWeatherEventsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WeatherEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae9f0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WeatherEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18ae8d0
	struct FWeatherEventsRowHandle MakeWeatherEventsFromIndex(int32_t Index); // Function Icarus.WeatherEventsLibrary.MakeWeatherEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae690
	struct FWeatherEventsEnum MakeWeatherEventsEnum(struct FWeatherEventsEnum Enum); // Function Icarus.WeatherEventsLibrary.MakeWeatherEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae610
	struct FWeatherEventsRowHandle MakeWeatherEvents(struct UE4::FName RowName); // Function Icarus.WeatherEventsLibrary.MakeWeatherEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae570
	struct FWeatherEventsRowHandle MakeLiteralWeatherEvents(struct FWeatherEventsRowHandle RowHandle); // Function Icarus.WeatherEventsLibrary.MakeLiteralWeatherEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae3d0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WeatherEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18ae2b0
	struct FWeatherEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae190
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WeatherEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18ae070
	void GetWeatherEventsStruct(struct FWeatherEventsRowHandle RowHandle, struct FIcarusWeatherEvent& WeatherEvents, enum class EValid& Paths); // Function Icarus.WeatherEventsLibrary.GetWeatherEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad7a0
	bool EqualEqual_FWeatherEventsRowHandleFWeatherEventsRowHandle(struct FWeatherEventsRowHandle RowHandleA, struct FWeatherEventsRowHandle RowHandleB); // Function Icarus.WeatherEventsLibrary.EqualEqual_FWeatherEventsRowHandleFWeatherEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18acd80
	bool EqualEqual_EnumEnum(struct FWeatherEventsEnum A, struct FWeatherEventsEnum B); // Function Icarus.WeatherEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18acba0
	struct FWeatherEventsRowHandle CastToWeatherEventsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WeatherEventsLibrary.CastToWeatherEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18ac960
	void BreakWeatherEventsEnum(struct FWeatherEventsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WeatherEventsLibrary.BreakWeatherEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18ac6a0
	void AddRowToWeatherEventsTable(struct UE4::FName Name, struct FIcarusWeatherEvent Data, struct FWeatherEventsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WeatherEventsLibrary.AddRowToWeatherEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18abc90
};

// Class Icarus.WeatherEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherEventsTable : UIcarusDataTable {
};

// Class Icarus.WeatherManagerComponent
// Size: 0x168 (Inherited: 0xb0)
struct UWeatherManagerComponent : UActorComponent {
	struct TArray<struct FWeatherGameplayData> GameplayWeatherArray; // 0xb0(0x10)
	char pad_C0[0xa0]; // 0xc0(0xa0)
	struct FMulticastSparseDelegate WeatherGameplayUpdated; // 0x160(0x01)
	struct FMulticastSparseDelegate WeatherVisualUpdated; // 0x161(0x01)
	char pad_162[0x6]; // 0x162(0x06)

	void SetWindStrength(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetWindStrength // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18b0360
	void SetWindSpeed(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetWindSpeed // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18b0270
	void SetWindGust(struct FBiomesEnum& Biome, float WindGust); // Function Icarus.WeatherManagerComponent.SetWindGust // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18b0180
	void SetWindForce(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetWindForce // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18b0090
	void SetWindDirection(struct FBiomesEnum& Biome, struct FVector Direction); // Function Icarus.WeatherManagerComponent.SetWindDirection // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x18aff90
	void SetWeatherWarningMessage(struct FBiomesEnum& Biome, struct FText Message); // Function Icarus.WeatherManagerComponent.SetWeatherWarningMessage // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18afe40
	void SetVisualWeather(struct FBiomesEnum& Biome, struct FWeatherVisualData VisualData); // Function Icarus.WeatherManagerComponent.SetVisualWeather // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18afd20
	void SetThunderAmount(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetThunderAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18afc30
	void SetTemperatureModifier(struct FBiomesEnum& Biome, int32_t Amount); // Function Icarus.WeatherManagerComponent.SetTemperatureModifier // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18afb40
	void SetSnowStormAmount(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetSnowStormAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18afa50
	void SetSnowAmount(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetSnowAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af960
	void SetSandAmount(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetSandAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af870
	void SetRainAmount(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetRainAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af780
	void SetGameplayWeather(struct FBiomesEnum& Biome, struct FWeatherGameplayData GameplayData); // Function Icarus.WeatherManagerComponent.SetGameplayWeather // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af5d0
	void SetFogExtinction(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetFogExtinction // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af4e0
	void SetFogDensity(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetFogDensity // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af3f0
	void SetDebris(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetDebris // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af300
	void SetCloudyAmount(struct FBiomesEnum& Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetCloudyAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18af210
	void OnRep_GameplayWeatherArray(); // Function Icarus.WeatherManagerComponent.OnRep_GameplayWeatherArray // (Final|Native|Protected) // @ game+0x18aef30
	float GetWindStrength(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetWindStrength // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18adfc0
	float GetWindSpeed(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetWindSpeed // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18adf10
	float GetWindGust(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetWindGust // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ade60
	float GetWindForce(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetWindForce // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18addb0
	struct FVector GetWindDirection(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetWindDirection // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x18adcf0
	struct FText GetWeatherWarningMessage(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetWeatherWarningMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18adbe0
	struct FWeatherVisualData GetVisualWeather(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetVisualWeather // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad6e0
	float GetThunderAmount(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetThunderAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad630
	int32_t GetTemperatureModifier(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetTemperatureModifier // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad580
	float GetSnowStormAmount(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetSnowStormAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad4d0
	float GetSnowAmount(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetSnowAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad420
	float GetSandAmount(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetSandAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad370
	float GetRainAmount(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetRainAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad2c0
	float GetFogExtinction(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetFogExtinction // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad210
	float GetFogDensity(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetFogDensity // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad160
	float GetDebris(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetDebris // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad0b0
	float GetCloudyAmount(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.GetCloudyAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ad000
	struct FWeatherGameplayData BP_GetGameplayWeather(struct FBiomesEnum& Biome); // Function Icarus.WeatherManagerComponent.BP_GetGameplayWeather // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ac570
};

// Class Icarus.WeatherPoolsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherPoolsLibrary : URowLibrary {

	struct FWeatherPoolsRowHandle StructToRowHandle(struct FWeatherPoolsEnum EnumValue); // Function Icarus.WeatherPoolsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b0780
	struct UE4::FName StructToName(struct FWeatherPoolsEnum EnumValue); // Function Icarus.WeatherPoolsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b0630
	int32_t StructToInt(struct FWeatherPoolsEnum EnumValue); // Function Icarus.WeatherPoolsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b04f0
	struct FWeatherPoolsEnum RowHandleToStruct(struct FWeatherPoolsRowHandle RowHandle); // Function Icarus.WeatherPoolsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18af150
	void RemoveRowFromWeatherPoolsTable(struct UE4::FName Name); // Function Icarus.WeatherPoolsLibrary.RemoveRowFromWeatherPoolsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18af010
	void RefreshConstants(); // Function Icarus.WeatherPoolsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18aef70
	int32_t NumRows(); // Function Icarus.WeatherPoolsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aef00
	bool NotEqual_EnumName(struct FWeatherPoolsEnum A, struct UE4::FName B); // Function Icarus.WeatherPoolsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aede0
	bool NotEqual_EnumEnum(struct FWeatherPoolsEnum A, struct FWeatherPoolsEnum B); // Function Icarus.WeatherPoolsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aec00
	struct FWeatherPoolsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WeatherPoolsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18aea80
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WeatherPoolsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18ae960
	struct FWeatherPoolsRowHandle MakeWeatherPoolsFromIndex(int32_t Index); // Function Icarus.WeatherPoolsLibrary.MakeWeatherPoolsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae840
	struct FWeatherPoolsEnum MakeWeatherPoolsEnum(struct FWeatherPoolsEnum Enum); // Function Icarus.WeatherPoolsLibrary.MakeWeatherPoolsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae7c0
	struct FWeatherPoolsRowHandle MakeWeatherPools(struct UE4::FName RowName); // Function Icarus.WeatherPoolsLibrary.MakeWeatherPools // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae720
	struct FWeatherPoolsRowHandle MakeLiteralWeatherPools(struct FWeatherPoolsRowHandle RowHandle); // Function Icarus.WeatherPoolsLibrary.MakeLiteralWeatherPools // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae4a0
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WeatherPoolsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18ae340
	struct FWeatherPoolsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherPoolsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18ae220
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WeatherPoolsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18ae100
	void GetWeatherPoolsStruct(struct FWeatherPoolsRowHandle RowHandle, struct FIcarusWeatherPoolData& WeatherPools, enum class EValid& Paths); // Function Icarus.WeatherPoolsLibrary.GetWeatherPoolsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18ada50
	bool EqualEqual_FWeatherPoolsRowHandleFWeatherPoolsRowHandle(struct FWeatherPoolsRowHandle RowHandleA, struct FWeatherPoolsRowHandle RowHandleB); // Function Icarus.WeatherPoolsLibrary.EqualEqual_FWeatherPoolsRowHandleFWeatherPoolsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18acec0
	bool EqualEqual_EnumEnum(struct FWeatherPoolsEnum A, struct FWeatherPoolsEnum B); // Function Icarus.WeatherPoolsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18acc90
	struct FWeatherPoolsRowHandle CastToWeatherPoolsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WeatherPoolsLibrary.CastToWeatherPoolsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18aca80
	void BreakWeatherPoolsEnum(struct FWeatherPoolsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WeatherPoolsLibrary.BreakWeatherPoolsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18ac800
	void AddRowToWeatherPoolsTable(struct UE4::FName Name, struct FIcarusWeatherPoolData Data, struct FWeatherPoolsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WeatherPoolsLibrary.AddRowToWeatherPoolsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18ac2e0
};

// Class Icarus.WeatherPoolsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherPoolsTable : UIcarusDataTable {
};

// Class Icarus.WeightComponent
// Size: 0xf0 (Inherited: 0xd0)
struct UWeightComponent : UTraitComponent {
	struct TArray<struct UShapeComponent*> WeightSpreadingShapes; // 0xd0(0x10)
	struct TArray<struct AActor*> AboveActors; // 0xe0(0x10)

	void Init(); // Function Icarus.WeightComponent.Init // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1be0000
	bool GetWeightData(struct FWeightData& OutData); // Function Icarus.WeightComponent.GetWeightData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x18b5640
};

// Class Icarus.WeightedListFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeightedListFunctionLibrary : UBlueprintFunctionLibrary {

	void Roll(int32_t UID, float NewAccumulated); // Function Icarus.WeightedListFunctionLibrary.Roll // (Final|Native|Static|Private) // @ game+0x18b7720
	bool RemoveList(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.RemoveList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b7510
	struct FRandomStream InitStream(); // Function Icarus.WeightedListFunctionLibrary.InitStream // (Final|Native|Static|Private|HasDefaults) // @ game+0x18b5e30
	struct TMap<int32_t, struct FStoredElement> InitListMap(); // Function Icarus.WeightedListFunctionLibrary.InitListMap // (Final|Native|Static|Private) // @ game+0x18b5d40
	struct FWeightedListElement GetSelectedElement(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.GetSelectedElement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b5530
	float GetRoll(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.GetRoll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b54a0
	int32_t CreateNewList(int32_t& Seed); // Function Icarus.WeightedListFunctionLibrary.CreateNewList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b4d80
	bool ClearList(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.ClearList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b4cf0
	bool AddElement(int32_t UID, struct FWeightedListElement NewElement); // Function Icarus.WeightedListFunctionLibrary.AddElement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b3c50
};

// Class Icarus.WeightLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeightLibrary : URowLibrary {

	struct FWeightRowHandle StructToRowHandle(struct FWeightEnum EnumValue); // Function Icarus.WeightLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7de0
	struct UE4::FName StructToName(struct FWeightEnum EnumValue); // Function Icarus.WeightLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7c00
	int32_t StructToInt(struct FWeightEnum EnumValue); // Function Icarus.WeightLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7a20
	struct FWeightEnum RowHandleToStruct(struct FWeightRowHandle RowHandle); // Function Icarus.WeightLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b77e0
	void RemoveRowFromWeightTable(struct UE4::FName Name); // Function Icarus.WeightLibrary.RemoveRowFromWeightTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b75a0
	void RefreshConstants(); // Function Icarus.WeightLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18b74b0
	int32_t NumRows(); // Function Icarus.WeightLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7400
	bool NotEqual_EnumName(struct FWeightEnum A, struct UE4::FName B); // Function Icarus.WeightLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7130
	bool NotEqual_EnumEnum(struct FWeightEnum A, struct FWeightEnum B); // Function Icarus.WeightLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6e60
	struct FWeightEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WeightLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6cb0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WeightLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18b6b00
	struct FWeightRowHandle MakeWeightFromIndex(int32_t Index); // Function Icarus.WeightLibrary.MakeWeightFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6710
	struct FWeightEnum MakeWeightEnum(struct FWeightEnum Enum); // Function Icarus.WeightLibrary.MakeWeightEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6690
	struct FWeightRowHandle MakeWeight(struct UE4::FName RowName); // Function Icarus.WeightLibrary.MakeWeight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b65f0
	struct FWeightRowHandle MakeLiteralWeight(struct FWeightRowHandle RowHandle); // Function Icarus.WeightLibrary.MakeLiteralWeight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6380
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WeightLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18b61d0
	struct FWeightEnum IntToStruct(int32_t IntValue); // Function Icarus.WeightLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6020
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WeightLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18b5e70
	void GetWeightStruct(struct FWeightRowHandle RowHandle, struct FWeightData& Weight, enum class EValid& Paths); // Function Icarus.WeightLibrary.GetWeightStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b57f0
	bool EqualEqual_FWeightRowHandleFWeightRowHandle(struct FWeightRowHandle RowHandleA, struct FWeightRowHandle RowHandleB); // Function Icarus.WeightLibrary.EqualEqual_FWeightRowHandleFWeightRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b50e0
	bool EqualEqual_EnumEnum(struct FWeightEnum A, struct FWeightEnum B); // Function Icarus.WeightLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b4e10
	struct FWeightRowHandle CastToWeightRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WeightLibrary.CastToWeightRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b4990
	void BreakWeightEnum(struct FWeightEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WeightLibrary.BreakWeightEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18b4570
	void AddRowToWeightTable(struct UE4::FName Name, struct FWeightData Data, struct FWeightRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WeightLibrary.AddRowToWeightTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b3d90
};

// Class Icarus.WeightTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeightTable : UIcarusDataTable {
};

// Class Icarus.WorkshopItemsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWorkshopItemsLibrary : URowLibrary {

	struct FWorkshopItemsRowHandle StructToRowHandle(struct FWorkshopItemsEnum EnumValue); // Function Icarus.WorkshopItemsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7e90
	struct UE4::FName StructToName(struct FWorkshopItemsEnum EnumValue); // Function Icarus.WorkshopItemsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7ca0
	int32_t StructToInt(struct FWorkshopItemsEnum EnumValue); // Function Icarus.WorkshopItemsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7ac0
	struct FWorkshopItemsEnum RowHandleToStruct(struct FWorkshopItemsRowHandle RowHandle); // Function Icarus.WorkshopItemsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b78a0
	void RemoveRowFromWorkshopItemsTable(struct UE4::FName Name); // Function Icarus.WorkshopItemsLibrary.RemoveRowFromWorkshopItemsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b7620
	void RefreshConstants(); // Function Icarus.WorkshopItemsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18b74d0
	int32_t NumRows(); // Function Icarus.WorkshopItemsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7430
	bool NotEqual_EnumName(struct FWorkshopItemsEnum A, struct UE4::FName B); // Function Icarus.WorkshopItemsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7220
	bool NotEqual_EnumEnum(struct FWorkshopItemsEnum A, struct FWorkshopItemsEnum B); // Function Icarus.WorkshopItemsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6f50
	struct FWorkshopItemsEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WorkshopItemsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6d40
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WorkshopItemsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18b6b90
	struct FWorkshopItemsRowHandle MakeWorkshopItemsFromIndex(int32_t Index); // Function Icarus.WorkshopItemsLibrary.MakeWorkshopItemsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b68c0
	struct FWorkshopItemsEnum MakeWorkshopItemsEnum(struct FWorkshopItemsEnum Enum); // Function Icarus.WorkshopItemsLibrary.MakeWorkshopItemsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6840
	struct FWorkshopItemsRowHandle MakeWorkshopItems(struct UE4::FName RowName); // Function Icarus.WorkshopItemsLibrary.MakeWorkshopItems // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b67a0
	struct FWorkshopItemsRowHandle MakeLiteralWorkshopItems(struct FWorkshopItemsRowHandle RowHandle); // Function Icarus.WorkshopItemsLibrary.MakeLiteralWorkshopItems // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6450
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WorkshopItemsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18b6260
	struct FWorkshopItemsEnum IntToStruct(int32_t IntValue); // Function Icarus.WorkshopItemsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b60b0
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WorkshopItemsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18b5f00
	void GetWorkshopItemsStruct(struct FWorkshopItemsRowHandle RowHandle, struct FWorkshopItem& WorkshopItems, enum class EValid& Paths); // Function Icarus.WorkshopItemsLibrary.GetWorkshopItemsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b5980
	bool EqualEqual_FWorkshopItemsRowHandleFWorkshopItemsRowHandle(struct FWorkshopItemsRowHandle RowHandleA, struct FWorkshopItemsRowHandle RowHandleB); // Function Icarus.WorkshopItemsLibrary.EqualEqual_FWorkshopItemsRowHandleFWorkshopItemsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b5220
	bool EqualEqual_EnumEnum(struct FWorkshopItemsEnum A, struct FWorkshopItemsEnum B); // Function Icarus.WorkshopItemsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b4f00
	struct FWorkshopItemsRowHandle CastToWorkshopItemsRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WorkshopItemsLibrary.CastToWorkshopItemsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b4ab0
	void BreakWorkshopItemsEnum(struct FWorkshopItemsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WorkshopItemsLibrary.BreakWorkshopItemsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18b46d0
	void AddRowToWorkshopItemsTable(struct UE4::FName Name, struct FWorkshopItem Data, struct FWorkshopItemsRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WorkshopItemsLibrary.AddRowToWorkshopItemsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b4000
};

// Class Icarus.WorkshopItemsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWorkshopItemsTable : UIcarusDataTable {
};

// Class Icarus.WorkshopTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UWorkshopTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.WorkshopTalentModel
// Size: 0xe8 (Inherited: 0xe8)
struct UWorkshopTalentModel : UTalentModelInterface {
};

// Class Icarus.WorldBossBehaviour
// Size: 0xb0 (Inherited: 0xb0)
struct UWorldBossBehaviour : UActorComponent {

	void OnAIBecomeRelevant(); // Function Icarus.WorldBossBehaviour.OnAIBecomeRelevant // (Native|Event|Public|BlueprintEvent) // @ game+0x18b7490
	void OnAIBecomeIrrelevant(); // Function Icarus.WorldBossBehaviour.OnAIBecomeIrrelevant // (Native|Event|Public|BlueprintEvent) // @ game+0x18b7490
	struct AActor* GetSpawnedBossActor(); // Function Icarus.WorldBossBehaviour.GetSpawnedBossActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18b5610
};

// Class Icarus.WorldBossesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWorldBossesLibrary : URowLibrary {

	struct FWorldBossesRowHandle StructToRowHandle(struct FWorldBossesEnum EnumValue); // Function Icarus.WorldBossesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7f40
	struct UE4::FName StructToName(struct FWorldBossesEnum EnumValue); // Function Icarus.WorldBossesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7d40
	int32_t StructToInt(struct FWorldBossesEnum EnumValue); // Function Icarus.WorldBossesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7b60
	struct FWorldBossesEnum RowHandleToStruct(struct FWorldBossesRowHandle RowHandle); // Function Icarus.WorldBossesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7960
	void RemoveRowFromWorldBossesTable(struct UE4::FName Name); // Function Icarus.WorldBossesLibrary.RemoveRowFromWorldBossesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18b76a0
	void RefreshConstants(); // Function Icarus.WorldBossesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18b74f0
	int32_t NumRows(); // Function Icarus.WorldBossesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7460
	bool NotEqual_EnumName(struct FWorldBossesEnum A, struct UE4::FName B); // Function Icarus.WorldBossesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7310
	bool NotEqual_EnumEnum(struct FWorldBossesEnum A, struct FWorldBossesEnum B); // Function Icarus.WorldBossesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b7040
	struct FWorldBossesEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WorldBossesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6dd0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WorldBossesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18b6c20
	struct FWorldBossesRowHandle MakeWorldBossesFromIndex(int32_t Index); // Function Icarus.WorldBossesLibrary.MakeWorldBossesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6a70
	struct FWorldBossesEnum MakeWorldBossesEnum(struct FWorldBossesEnum Enum); // Function Icarus.WorldBossesLibrary.MakeWorldBossesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b69f0
	struct FWorldBossesRowHandle MakeWorldBosses(struct UE4::FName RowName); // Function Icarus.WorldBossesLibrary.MakeWorldBosses // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6950
	struct FWorldBossesRowHandle MakeLiteralWorldBosses(struct FWorldBossesRowHandle RowHandle); // Function Icarus.WorldBossesLibrary.MakeLiteralWorldBosses // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6520
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WorldBossesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18b62f0
	struct FWorldBossesEnum IntToStruct(int32_t IntValue); // Function Icarus.WorldBossesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b6140
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WorldBossesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18b5f90
	void GetWorldBossesStruct(struct FWorldBossesRowHandle RowHandle, struct FWorldBossData& WorldBosses, enum class EValid& Paths); // Function Icarus.WorldBossesLibrary.GetWorldBossesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b5b60
	bool EqualEqual_FWorldBossesRowHandleFWorldBossesRowHandle(struct FWorldBossesRowHandle RowHandleA, struct FWorldBossesRowHandle RowHandleB); // Function Icarus.WorldBossesLibrary.EqualEqual_FWorldBossesRowHandleFWorldBossesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b5360
	bool EqualEqual_EnumEnum(struct FWorldBossesEnum A, struct FWorldBossesEnum B); // Function Icarus.WorldBossesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18b4ff0
	struct FWorldBossesRowHandle CastToWorldBossesRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WorldBossesLibrary.CastToWorldBossesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b4bd0
	void BreakWorldBossesEnum(struct FWorldBossesEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WorldBossesLibrary.BreakWorldBossesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18b4830
	void AddRowToWorldBossesTable(struct UE4::FName Name, struct FWorldBossData Data, struct FWorldBossesRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WorldBossesLibrary.AddRowToWorldBossesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18b4350
};

// Class Icarus.WorldBossesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWorldBossesTable : UIcarusDataTable {
};

// Class Icarus.WorldBossManager
// Size: 0x2c8 (Inherited: 0x2b0)
struct AWorldBossManager : AIcarusActor {
	struct TArray<struct FSpawnedWorldBossData> SpawnedBossConfig; // 0x2b0(0x10)
	char pad_2C0[0x8]; // 0x2c0(0x08)

	void SpawnRelevantBossObjects(); // Function Icarus.WorldBossManager.SpawnRelevantBossObjects // (Final|Native|Protected) // @ game+0x18bc380
	void SetupWorldBoss(struct FWorldBossData& BossData, struct FWorldBossesRowHandle& Handle); // Function Icarus.WorldBossManager.SetupWorldBoss // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18bc1b0
	void SetupBossManager(); // Function Icarus.WorldBossManager.SetupBossManager // (Final|Native|Protected) // @ game+0x18bc190
	void SetSpawnedBossData(struct TArray<struct FSpawnedWorldBossData> InData); // Function Icarus.WorldBossManager.SetSpawnedBossData // (Final|Native|Public) // @ game+0x18bc060
	void OnSpawnerTransformUpdated(struct AWorldBossSpawner* Spawner); // Function Icarus.WorldBossManager.OnSpawnerTransformUpdated // (Native|Event|Protected|BlueprintEvent) // @ game+0x18bbde0
	void OnSpawnedBossKilled(struct AWorldBossSpawner* Spawner); // Function Icarus.WorldBossManager.OnSpawnedBossKilled // (Native|Event|Protected|BlueprintEvent) // @ game+0x16cd4d0
	struct TArray<struct FSpawnedWorldBossData> GetSpawnedBossData(); // Function Icarus.WorldBossManager.GetSpawnedBossData // (Final|Native|Public) // @ game+0x18bb0f0
	void GenerateNewBossesToSpawn(); // Function Icarus.WorldBossManager.GenerateNewBossesToSpawn // (Final|Native|Protected) // @ game+0x18bb0b0
};

// Class Icarus.WorldBossManagerRecorderComponent
// Size: 0xf8 (Inherited: 0xd8)
struct UWorldBossManagerRecorderComponent : UIcarusStateRecorderComponent {
	struct TArray<struct FSpawnedWorldBossData> RecordedWorldBossData; // 0xd8(0x10)
	struct TArray<struct FName> RecordedWorldBossTableNames; // 0xe8(0x10)
};

// Class Icarus.WorldBossSpawner
// Size: 0x330 (Inherited: 0x2b0)
struct AWorldBossSpawner : AIcarusActor {
	struct FWorldBossesRowHandle WorldBoss; // 0x2b0(0x18)
	struct FMulticastInlineDelegate SpawnerBecomeRelevant; // 0x2c8(0x10)
	struct FMulticastInlineDelegate SpawnerBecomeIrrelevant; // 0x2d8(0x10)
	struct FMulticastInlineDelegate SpawnedBossKilled; // 0x2e8(0x10)
	struct FMulticastInlineDelegate SpawnerWorldTransformUpdated; // 0x2f8(0x10)
	bool bIsRelevant; // 0x308(0x01)
	bool bHasBossBeenKilled; // 0x309(0x01)
	char pad_30A[0x2]; // 0x30a(0x02)
	int32_t BossID; // 0x30c(0x04)
	struct UIcarusMapIconComponent* MapIconComponent; // 0x310(0x08)
	struct UWorldBossBehaviour* Behaviour; // 0x318(0x08)
	struct AActor* SpawnedBossActor; // 0x320(0x08)
	bool bKillBossAfterSpawn; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)

	void UpdateSpawnerTransform(struct FTransform NewTransform); // Function Icarus.WorldBossSpawner.UpdateSpawnerTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x18bc590
	struct AActor* SpawnBoss(); // Function Icarus.WorldBossSpawner.SpawnBoss // (Native|Event|Protected|BlueprintEvent) // @ game+0x18bc350
	void SetAIRelevant(bool bNewRelevancy); // Function Icarus.WorldBossSpawner.SetAIRelevant // (Final|Native|Protected) // @ game+0x18bbfd0
	void OnWorldBossDataUpdated(); // Function Icarus.WorldBossSpawner.OnWorldBossDataUpdated // (Native|Event|Protected|BlueprintEvent) // @ game+0x16cf160
	void OnRep_WorldBoss(); // Function Icarus.WorldBossSpawner.OnRep_WorldBoss // (Final|Native|Protected) // @ game+0x18bbd80
	void OnBossKilled(struct UActorState* BossActorState); // Function Icarus.WorldBossSpawner.OnBossKilled // (Native|Event|Protected|BlueprintEvent) // @ game+0x16cd4d0
	void InitialiseSpawner(struct FWorldBossesRowHandle& InWorldBoss, int32_t ID, bool bIsBossDead); // Function Icarus.WorldBossSpawner.InitialiseSpawner // (Final|Native|Public|HasOutParms) // @ game+0x18bb450
	struct AActor* GetSpawnedBossActor(); // Function Icarus.WorldBossSpawner.GetSpawnedBossActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18bb0d0
};

// Class Icarus.WorldDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWorldDataLibrary : URowLibrary {

	struct FWorldDataRowHandle StructToRowHandle(struct FWorldDataEnum EnumValue); // Function Icarus.WorldDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bc4e0
	struct UE4::FName StructToName(struct FWorldDataEnum EnumValue); // Function Icarus.WorldDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bc440
	int32_t StructToInt(struct FWorldDataEnum EnumValue); // Function Icarus.WorldDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bc3a0
	struct FWorldDataEnum RowHandleToStruct(struct FWorldDataRowHandle RowHandle); // Function Icarus.WorldDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bbf10
	void RemoveRowFromWorldDataTable(struct UE4::FName Name); // Function Icarus.WorldDataLibrary.RemoveRowFromWorldDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x18bbe90
	void RefreshConstants(); // Function Icarus.WorldDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x18bbe70
	int32_t NumRows(); // Function Icarus.WorldDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bbd50
	bool NotEqual_EnumName(struct FWorldDataEnum A, struct UE4::FName B); // Function Icarus.WorldDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bbc60
	bool NotEqual_EnumEnum(struct FWorldDataEnum A, struct FWorldDataEnum B); // Function Icarus.WorldDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bbb70
	struct FWorldDataEnum NameToStruct(struct UE4::FName NameValue); // Function Icarus.WorldDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bbae0
	int32_t NameToInt(struct UE4::FName NameValue); // Function Icarus.WorldDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x18bba50
	struct FWorldDataRowHandle MakeWorldDataFromIndex(int32_t Index); // Function Icarus.WorldDataLibrary.MakeWorldDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bb930
	struct FWorldDataEnum MakeWorldDataEnum(struct FWorldDataEnum Enum); // Function Icarus.WorldDataLibrary.MakeWorldDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bb8b0
	struct FWorldDataRowHandle MakeWorldData(struct UE4::FName RowName); // Function Icarus.WorldDataLibrary.MakeWorldData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bb810
	struct FWorldDataRowHandle MakeLiteralWorldData(struct FWorldDataRowHandle RowHandle); // Function Icarus.WorldDataLibrary.MakeLiteralWorldData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bb740
	bool IsValidName(struct UE4::FName NameValue); // Function Icarus.WorldDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x18bb6b0
	struct FWorldDataEnum IntToStruct(int32_t IntValue); // Function Icarus.WorldDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bb620
	struct UE4::FName IntToName(int32_t IntValue); // Function Icarus.WorldDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x18bb590
	void GetWorldDataStruct(struct FWorldDataRowHandle RowHandle, struct FWorldData& WorldData, enum class EValid& Paths); // Function Icarus.WorldDataLibrary.GetWorldDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18bb200
	bool EqualEqual_FWorldDataRowHandleFWorldDataRowHandle(struct FWorldDataRowHandle RowHandleA, struct FWorldDataRowHandle RowHandleB); // Function Icarus.WorldDataLibrary.EqualEqual_FWorldDataRowHandleFWorldDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18baee0
	bool EqualEqual_EnumEnum(struct FWorldDataEnum A, struct FWorldDataEnum B); // Function Icarus.WorldDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18badf0
	struct FWorldDataRowHandle CastToWorldDataRowHandle(struct FRowHandle RowHandle, enum class EValid& Paths); // Function Icarus.WorldDataLibrary.CastToWorldDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18bacd0
	void BreakWorldDataEnum(struct FWorldDataEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WorldDataLibrary.BreakWorldDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18baa10
	void AddRowToWorldDataTable(struct UE4::FName Name, struct FWorldData Data, struct FWorldDataRowHandle& NewRow, bool bOverrideExistingRow); // Function Icarus.WorldDataLibrary.AddRowToWorldDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x18ba750
};

// Class Icarus.WorldDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWorldDataTable : UIcarusDataTable {
};

// Class Icarus.WorldObserverSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UWorldObserverSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnTreeChopped; // 0x30(0x10)
	struct FMulticastInlineDelegate OnAnimalKilled; // 0x40(0x10)
};

// Class Icarus.WorldStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWorldStatsLibrary : UStatsLibrary {

	struct FWorldStatsEnum MakeWorldStatsEnum(struct FWorldStatsEnum Enum); // Function Icarus.WorldStatsLibrary.MakeWorldStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x18bb9c0
	bool Filter(int32_t Index); // Function Icarus.WorldStatsLibrary.Filter // (Final|Native|Static|Public) // @ game+0x18bb020
	void BreakWorldStatsEnum(struct FWorldStatsEnum Enum, struct FName& Name, int32_t& Index); // Function Icarus.WorldStatsLibrary.BreakWorldStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x18bab70
};

// Class Icarus.WorldStatsSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UWorldStatsSubsystem : UWorldSubsystem {
	char pad_30[0x10]; // 0x30(0x10)

	struct TMap<struct FStatsRowHandle, int32_t> GetWorldStats(); // Function Icarus.WorldStatsSubsystem.GetWorldStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x18bb380
	void AddWorldStats(struct FProspectListRowHandle& ProspectRowHandle, enum class EMissionDifficulty Difficulty); // Function Icarus.WorldStatsSubsystem.AddWorldStats // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x18ba920
};

